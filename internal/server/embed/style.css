/* TODO: outline basic paradigm we use for styling. TL;DR:
 *
 * - Pick color and size constants once, up front, and then style everything from
 *   that pallet.
 * - Use semantic constants for colors (which are themselves defined in terms of the pallet).
 * - Use BEM-style classes for selectors.
 */
:root {
	/*** Color Pallet ***/

	/** Primary Colors **/
	/* TODO: numbers, like below? */

	--sandstorm-purple: #762f87;
	--sandstorm-darkpurple: #65468e;

	/** Greys (1-9) **/
	--grey-1: hsl(0 0% 10%);
	--grey-2: hsl(0 0% 20%);
	--grey-3: hsl(0 0% 30%);
	--grey-4: hsl(0 0% 40%);
	--grey-5: hsl(0 0% 50%);
	--grey-6: hsl(0 0% 60%);
	--grey-7: hsl(0 0% 70%);
	--grey-8: hsl(0 0% 80%);
	--grey-9: hsl(0 0% 90%);

	/** Accents **/
	/* each of these will have shades 1-7, but I'm choosing them as I go. */
	--red-3: hsl(0 70% 50%);
	--red-6: hsl(0 13% 50%);

	--green-6: #ddffdd;

	--yellow-3: hsl(60 100% 24%);
	--yellow-6: hsl(60 100% 83.3%);


	/*** Symbolic Constants ***/

	/**** Light color profile: ****/
	--error-bgcolor: var(--red-3);
	--success-bgcolor: var(--green-3);
	--warning-bgcolor: var(--yellow-3);

	--sidebar-bgcolor: var(--grey-9);
	--sidebar-bgcolor-active: var(--grey-7);
	--sidebar-color: var(--grey-3);
	--sidebar-color-active: var(--grey-9);
	--sidebar-border-color: var(--grey-6);

	--default-content-bgcolor: var(--grey-8);
	--default-content-color: var(--grey-1);
}

@media(prefers-color-scheme: dark) {
	:root {
		--error-bgcolor: var(--red-6);
		--success-bgcolor: var(--green-6);
		--warning-bgcolor: var(--yellow-6);

		--sidebar-bgcolor: var(--grey-1);
		--sidebar-bgcolor-active: var(--grey-2);
		--sidebar-color: var(--grey-6);
		--sidebar-color-active: var(--grey-6);
		--sidebar-border-color: var(--grey-3);

		--default-content-bgcolor: var(--grey-2);
		--default-content-color: var(--grey-9);
	}
}

body {
	margin: 0px;
	padding: 0px;
}

.nav-links {
	list-style: none;
	padding-left: 0px;
}

.nav-link--focused {
	color: var(--sidebar-color-active);
	background-color: var(--sidebar-bgcolor-active);
}

.main-ui {
	display: flex;
	flex-direction: column;
	height: 100vh;
	width: 100vw;
}

.main-ui__main {
	display: flex;
	flex-direction: row;
	flex: 1;
}

.main-ui__sidebar {
	background-color: var(--sidebar-bgcolor);
	color: var(--sidebar-color);
}

.main-ui__content {
	flex: 1;
	height: 100%;
	border: none;
}
.grain-iframe {
	height: 100%;
	width: 100%;
	border: none;
}
.grain-iframe--inactive {
	display: none;
}

.dummy-node {
	display: none;
}

.error-notice {
	background-color: var(--error-bgcolor);
}

.close-button {
	color: transparent;
	background-color: transparent;
	background-image: url(icons/close.svg);
	height: 24px;
	width: 24px;
	border: 0px;
}
.close-button:hover {
	border: 1px solid var(--grey-9);
	border-radius: 2px;
}

/* vim: set ts=8 sw=8 noet : */
