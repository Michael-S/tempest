// Code generated by capnpc-go. DO NOT EDIT.

package backend

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	stream "capnproto.org/go/capnp/v3/std/capnp/stream"
	context "context"
	strconv "strconv"
	apisession "zenhack.net/go/sandstorm/capnp/apisession"
	grain "zenhack.net/go/sandstorm/capnp/grain"
	spk "zenhack.net/go/sandstorm/capnp/spk"
	supervisor "zenhack.net/go/sandstorm/capnp/supervisor"
	util "zenhack.net/go/sandstorm/capnp/util"
	websession "zenhack.net/go/sandstorm/capnp/websession"
)

type Backend capnp.Client

// Backend_TypeID is the unique identifier for the type Backend.
const Backend_TypeID = 0xc1b0e9713ac1ad4f

func (c Backend) StartGrain(ctx context.Context, params func(Backend_startGrain_Params) error) (Backend_startGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      0,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "startGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_startGrain_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_startGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) GetGrain(ctx context.Context, params func(Backend_getGrain_Params) error) (Backend_getGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      1,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_getGrain_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_getGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) DeleteGrain(ctx context.Context, params func(Backend_deleteGrain_Params) error) (Backend_deleteGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      2,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_deleteGrain_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_deleteGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) InstallPackage(ctx context.Context, params func(Backend_installPackage_Params) error) (Backend_installPackage_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      3,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "installPackage",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_installPackage_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_installPackage_Results_Future{Future: ans.Future()}, release
}
func (c Backend) TryGetPackage(ctx context.Context, params func(Backend_tryGetPackage_Params) error) (Backend_tryGetPackage_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      4,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "tryGetPackage",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_tryGetPackage_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_tryGetPackage_Results_Future{Future: ans.Future()}, release
}
func (c Backend) DeletePackage(ctx context.Context, params func(Backend_deletePackage_Params) error) (Backend_deletePackage_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      5,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deletePackage",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_deletePackage_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_deletePackage_Results_Future{Future: ans.Future()}, release
}
func (c Backend) BackupGrain(ctx context.Context, params func(Backend_backupGrain_Params) error) (Backend_backupGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      6,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "backupGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_backupGrain_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_backupGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) RestoreGrain(ctx context.Context, params func(Backend_restoreGrain_Params) error) (Backend_restoreGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      7,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "restoreGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_restoreGrain_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_restoreGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) UploadBackup(ctx context.Context, params func(Backend_uploadBackup_Params) error) (Backend_uploadBackup_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      8,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "uploadBackup",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_uploadBackup_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_uploadBackup_Results_Future{Future: ans.Future()}, release
}
func (c Backend) DownloadBackup(ctx context.Context, params func(Backend_downloadBackup_Params) error) (Backend_downloadBackup_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      9,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "downloadBackup",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_downloadBackup_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_downloadBackup_Results_Future{Future: ans.Future()}, release
}
func (c Backend) DeleteBackup(ctx context.Context, params func(Backend_deleteBackup_Params) error) (Backend_deleteBackup_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      10,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteBackup",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_deleteBackup_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_deleteBackup_Results_Future{Future: ans.Future()}, release
}
func (c Backend) GetUserStorageUsage(ctx context.Context, params func(Backend_getUserStorageUsage_Params) error) (Backend_getUserStorageUsage_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      11,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getUserStorageUsage",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_getUserStorageUsage_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_getUserStorageUsage_Results_Future{Future: ans.Future()}, release
}
func (c Backend) TransferGrain(ctx context.Context, params func(Backend_transferGrain_Params) error) (Backend_transferGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      12,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "transferGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_transferGrain_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_transferGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) DeleteUser(ctx context.Context, params func(Backend_deleteUser_Params) error) (Backend_deleteUser_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      13,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_deleteUser_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_deleteUser_Results_Future{Future: ans.Future()}, release
}
func (c Backend) Ping(ctx context.Context, params func(Backend_ping_Params) error) (Backend_ping_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      14,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "ping",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_ping_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_ping_Results_Future{Future: ans.Future()}, release
}
func (c Backend) GetGrainStorageUsage(ctx context.Context, params func(Backend_getGrainStorageUsage_Params) error) (Backend_getGrainStorageUsage_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      15,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getGrainStorageUsage",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_getGrainStorageUsage_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_getGrainStorageUsage_Results_Future{Future: ans.Future()}, release
}

func (c Backend) AddRef() Backend {
	return Backend(capnp.Client(c).AddRef())
}

func (c Backend) Release() {
	capnp.Client(c).Release()
}

func (c Backend) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (Backend) DecodeFromPtr(p capnp.Ptr) Backend {
	return Backend(capnp.Client{}.DecodeFromPtr(p))
}

func (c Backend) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// A Backend_Server is a Backend with a local implementation.
type Backend_Server interface {
	StartGrain(context.Context, Backend_startGrain) error

	GetGrain(context.Context, Backend_getGrain) error

	DeleteGrain(context.Context, Backend_deleteGrain) error

	InstallPackage(context.Context, Backend_installPackage) error

	TryGetPackage(context.Context, Backend_tryGetPackage) error

	DeletePackage(context.Context, Backend_deletePackage) error

	BackupGrain(context.Context, Backend_backupGrain) error

	RestoreGrain(context.Context, Backend_restoreGrain) error

	UploadBackup(context.Context, Backend_uploadBackup) error

	DownloadBackup(context.Context, Backend_downloadBackup) error

	DeleteBackup(context.Context, Backend_deleteBackup) error

	GetUserStorageUsage(context.Context, Backend_getUserStorageUsage) error

	TransferGrain(context.Context, Backend_transferGrain) error

	DeleteUser(context.Context, Backend_deleteUser) error

	Ping(context.Context, Backend_ping) error

	GetGrainStorageUsage(context.Context, Backend_getGrainStorageUsage) error
}

// Backend_NewServer creates a new Server from an implementation of Backend_Server.
func Backend_NewServer(s Backend_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Backend_Methods(nil, s), s, c)
}

// Backend_ServerToClient creates a new Client from an implementation of Backend_Server.
// The caller is responsible for calling Release on the returned Client.
func Backend_ServerToClient(s Backend_Server) Backend {
	return Backend(capnp.NewClient(Backend_NewServer(s)))
}

// Backend_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Backend_Methods(methods []server.Method, s Backend_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 16)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      0,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "startGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.StartGrain(ctx, Backend_startGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      1,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetGrain(ctx, Backend_getGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      2,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeleteGrain(ctx, Backend_deleteGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      3,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "installPackage",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.InstallPackage(ctx, Backend_installPackage{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      4,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "tryGetPackage",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.TryGetPackage(ctx, Backend_tryGetPackage{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      5,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deletePackage",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeletePackage(ctx, Backend_deletePackage{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      6,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "backupGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.BackupGrain(ctx, Backend_backupGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      7,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "restoreGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.RestoreGrain(ctx, Backend_restoreGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      8,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "uploadBackup",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.UploadBackup(ctx, Backend_uploadBackup{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      9,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "downloadBackup",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DownloadBackup(ctx, Backend_downloadBackup{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      10,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteBackup",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeleteBackup(ctx, Backend_deleteBackup{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      11,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getUserStorageUsage",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetUserStorageUsage(ctx, Backend_getUserStorageUsage{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      12,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "transferGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.TransferGrain(ctx, Backend_transferGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      13,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeleteUser(ctx, Backend_deleteUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      14,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "ping",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Ping(ctx, Backend_ping{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      15,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getGrainStorageUsage",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetGrainStorageUsage(ctx, Backend_getGrainStorageUsage{call})
		},
	})

	return methods
}

// Backend_startGrain holds the state for a server call to Backend.startGrain.
// See server.Call for documentation.
type Backend_startGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_startGrain) Args() Backend_startGrain_Params {
	return Backend_startGrain_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_startGrain) AllocResults() (Backend_startGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_startGrain_Results(r), err
}

// Backend_getGrain holds the state for a server call to Backend.getGrain.
// See server.Call for documentation.
type Backend_getGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_getGrain) Args() Backend_getGrain_Params {
	return Backend_getGrain_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_getGrain) AllocResults() (Backend_getGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_getGrain_Results(r), err
}

// Backend_deleteGrain holds the state for a server call to Backend.deleteGrain.
// See server.Call for documentation.
type Backend_deleteGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_deleteGrain) Args() Backend_deleteGrain_Params {
	return Backend_deleteGrain_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_deleteGrain) AllocResults() (Backend_deleteGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteGrain_Results(r), err
}

// Backend_installPackage holds the state for a server call to Backend.installPackage.
// See server.Call for documentation.
type Backend_installPackage struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_installPackage) Args() Backend_installPackage_Params {
	return Backend_installPackage_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_installPackage) AllocResults() (Backend_installPackage_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_installPackage_Results(r), err
}

// Backend_tryGetPackage holds the state for a server call to Backend.tryGetPackage.
// See server.Call for documentation.
type Backend_tryGetPackage struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_tryGetPackage) Args() Backend_tryGetPackage_Params {
	return Backend_tryGetPackage_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_tryGetPackage) AllocResults() (Backend_tryGetPackage_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_tryGetPackage_Results(r), err
}

// Backend_deletePackage holds the state for a server call to Backend.deletePackage.
// See server.Call for documentation.
type Backend_deletePackage struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_deletePackage) Args() Backend_deletePackage_Params {
	return Backend_deletePackage_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_deletePackage) AllocResults() (Backend_deletePackage_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deletePackage_Results(r), err
}

// Backend_backupGrain holds the state for a server call to Backend.backupGrain.
// See server.Call for documentation.
type Backend_backupGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_backupGrain) Args() Backend_backupGrain_Params {
	return Backend_backupGrain_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_backupGrain) AllocResults() (Backend_backupGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_backupGrain_Results(r), err
}

// Backend_restoreGrain holds the state for a server call to Backend.restoreGrain.
// See server.Call for documentation.
type Backend_restoreGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_restoreGrain) Args() Backend_restoreGrain_Params {
	return Backend_restoreGrain_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_restoreGrain) AllocResults() (Backend_restoreGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_restoreGrain_Results(r), err
}

// Backend_uploadBackup holds the state for a server call to Backend.uploadBackup.
// See server.Call for documentation.
type Backend_uploadBackup struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_uploadBackup) Args() Backend_uploadBackup_Params {
	return Backend_uploadBackup_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_uploadBackup) AllocResults() (Backend_uploadBackup_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_uploadBackup_Results(r), err
}

// Backend_downloadBackup holds the state for a server call to Backend.downloadBackup.
// See server.Call for documentation.
type Backend_downloadBackup struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_downloadBackup) Args() Backend_downloadBackup_Params {
	return Backend_downloadBackup_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_downloadBackup) AllocResults() (Backend_downloadBackup_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_downloadBackup_Results(r), err
}

// Backend_deleteBackup holds the state for a server call to Backend.deleteBackup.
// See server.Call for documentation.
type Backend_deleteBackup struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_deleteBackup) Args() Backend_deleteBackup_Params {
	return Backend_deleteBackup_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_deleteBackup) AllocResults() (Backend_deleteBackup_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteBackup_Results(r), err
}

// Backend_getUserStorageUsage holds the state for a server call to Backend.getUserStorageUsage.
// See server.Call for documentation.
type Backend_getUserStorageUsage struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_getUserStorageUsage) Args() Backend_getUserStorageUsage_Params {
	return Backend_getUserStorageUsage_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_getUserStorageUsage) AllocResults() (Backend_getUserStorageUsage_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getUserStorageUsage_Results(r), err
}

// Backend_transferGrain holds the state for a server call to Backend.transferGrain.
// See server.Call for documentation.
type Backend_transferGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_transferGrain) Args() Backend_transferGrain_Params {
	return Backend_transferGrain_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_transferGrain) AllocResults() (Backend_transferGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_transferGrain_Results(r), err
}

// Backend_deleteUser holds the state for a server call to Backend.deleteUser.
// See server.Call for documentation.
type Backend_deleteUser struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_deleteUser) Args() Backend_deleteUser_Params {
	return Backend_deleteUser_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_deleteUser) AllocResults() (Backend_deleteUser_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteUser_Results(r), err
}

// Backend_ping holds the state for a server call to Backend.ping.
// See server.Call for documentation.
type Backend_ping struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_ping) Args() Backend_ping_Params {
	return Backend_ping_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_ping) AllocResults() (Backend_ping_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_ping_Results(r), err
}

// Backend_getGrainStorageUsage holds the state for a server call to Backend.getGrainStorageUsage.
// See server.Call for documentation.
type Backend_getGrainStorageUsage struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_getGrainStorageUsage) Args() Backend_getGrainStorageUsage_Params {
	return Backend_getGrainStorageUsage_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_getGrainStorageUsage) AllocResults() (Backend_getGrainStorageUsage_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getGrainStorageUsage_Results(r), err
}

// Backend_List is a list of Backend.
type Backend_List = capnp.CapList[Backend]

// NewBackend creates a new list of Backend.
func NewBackend_List(s *capnp.Segment, sz int32) (Backend_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[Backend](l), err
}

type Backend_PackageUploadStream capnp.Client

// Backend_PackageUploadStream_TypeID is the unique identifier for the type Backend_PackageUploadStream.
const Backend_PackageUploadStream_TypeID = 0xb481d35d0da2713c

func (c Backend_PackageUploadStream) SaveAs(ctx context.Context, params func(Backend_PackageUploadStream_saveAs_Params) error) (Backend_PackageUploadStream_saveAs_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb481d35d0da2713c,
			MethodID:      0,
			InterfaceName: "backend.capnp:Backend.PackageUploadStream",
			MethodName:    "saveAs",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_PackageUploadStream_saveAs_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Backend_PackageUploadStream_saveAs_Results_Future{Future: ans.Future()}, release
}
func (c Backend_PackageUploadStream) Write(ctx context.Context, params func(util.ByteStream_write_Params) error) (stream.StreamResult_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      0,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "write",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(util.ByteStream_write_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return stream.StreamResult_Future{Future: ans.Future()}, release
}
func (c Backend_PackageUploadStream) Done(ctx context.Context, params func(util.ByteStream_done_Params) error) (util.ByteStream_done_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      1,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "done",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(util.ByteStream_done_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return util.ByteStream_done_Results_Future{Future: ans.Future()}, release
}
func (c Backend_PackageUploadStream) ExpectSize(ctx context.Context, params func(util.ByteStream_expectSize_Params) error) (util.ByteStream_expectSize_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      2,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "expectSize",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(util.ByteStream_expectSize_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return util.ByteStream_expectSize_Results_Future{Future: ans.Future()}, release
}

func (c Backend_PackageUploadStream) AddRef() Backend_PackageUploadStream {
	return Backend_PackageUploadStream(capnp.Client(c).AddRef())
}

func (c Backend_PackageUploadStream) Release() {
	capnp.Client(c).Release()
}

func (c Backend_PackageUploadStream) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (Backend_PackageUploadStream) DecodeFromPtr(p capnp.Ptr) Backend_PackageUploadStream {
	return Backend_PackageUploadStream(capnp.Client{}.DecodeFromPtr(p))
}

func (c Backend_PackageUploadStream) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// A Backend_PackageUploadStream_Server is a Backend_PackageUploadStream with a local implementation.
type Backend_PackageUploadStream_Server interface {
	SaveAs(context.Context, Backend_PackageUploadStream_saveAs) error

	Write(context.Context, util.ByteStream_write) error

	Done(context.Context, util.ByteStream_done) error

	ExpectSize(context.Context, util.ByteStream_expectSize) error
}

// Backend_PackageUploadStream_NewServer creates a new Server from an implementation of Backend_PackageUploadStream_Server.
func Backend_PackageUploadStream_NewServer(s Backend_PackageUploadStream_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Backend_PackageUploadStream_Methods(nil, s), s, c)
}

// Backend_PackageUploadStream_ServerToClient creates a new Client from an implementation of Backend_PackageUploadStream_Server.
// The caller is responsible for calling Release on the returned Client.
func Backend_PackageUploadStream_ServerToClient(s Backend_PackageUploadStream_Server) Backend_PackageUploadStream {
	return Backend_PackageUploadStream(capnp.NewClient(Backend_PackageUploadStream_NewServer(s)))
}

// Backend_PackageUploadStream_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Backend_PackageUploadStream_Methods(methods []server.Method, s Backend_PackageUploadStream_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 4)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb481d35d0da2713c,
			MethodID:      0,
			InterfaceName: "backend.capnp:Backend.PackageUploadStream",
			MethodName:    "saveAs",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SaveAs(ctx, Backend_PackageUploadStream_saveAs{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      0,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "write",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Write(ctx, util.ByteStream_write{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      1,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "done",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Done(ctx, util.ByteStream_done{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      2,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "expectSize",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ExpectSize(ctx, util.ByteStream_expectSize{call})
		},
	})

	return methods
}

// Backend_PackageUploadStream_saveAs holds the state for a server call to Backend_PackageUploadStream.saveAs.
// See server.Call for documentation.
type Backend_PackageUploadStream_saveAs struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_PackageUploadStream_saveAs) Args() Backend_PackageUploadStream_saveAs_Params {
	return Backend_PackageUploadStream_saveAs_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Backend_PackageUploadStream_saveAs) AllocResults() (Backend_PackageUploadStream_saveAs_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_PackageUploadStream_saveAs_Results(r), err
}

// Backend_PackageUploadStream_List is a list of Backend_PackageUploadStream.
type Backend_PackageUploadStream_List = capnp.CapList[Backend_PackageUploadStream]

// NewBackend_PackageUploadStream creates a new list of Backend_PackageUploadStream.
func NewBackend_PackageUploadStream_List(s *capnp.Segment, sz int32) (Backend_PackageUploadStream_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[Backend_PackageUploadStream](l), err
}

type Backend_PackageUploadStream_saveAs_Params capnp.Struct

// Backend_PackageUploadStream_saveAs_Params_TypeID is the unique identifier for the type Backend_PackageUploadStream_saveAs_Params.
const Backend_PackageUploadStream_saveAs_Params_TypeID = 0x86ca17d397d72d2b

func NewBackend_PackageUploadStream_saveAs_Params(s *capnp.Segment) (Backend_PackageUploadStream_saveAs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_PackageUploadStream_saveAs_Params(st), err
}

func NewRootBackend_PackageUploadStream_saveAs_Params(s *capnp.Segment) (Backend_PackageUploadStream_saveAs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_PackageUploadStream_saveAs_Params(st), err
}

func ReadRootBackend_PackageUploadStream_saveAs_Params(msg *capnp.Message) (Backend_PackageUploadStream_saveAs_Params, error) {
	root, err := msg.Root()
	return Backend_PackageUploadStream_saveAs_Params(root.Struct()), err
}

func (s Backend_PackageUploadStream_saveAs_Params) String() string {
	str, _ := text.Marshal(0x86ca17d397d72d2b, capnp.Struct(s))
	return str
}

func (s Backend_PackageUploadStream_saveAs_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_PackageUploadStream_saveAs_Params) DecodeFromPtr(p capnp.Ptr) Backend_PackageUploadStream_saveAs_Params {
	return Backend_PackageUploadStream_saveAs_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_PackageUploadStream_saveAs_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_PackageUploadStream_saveAs_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_PackageUploadStream_saveAs_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_PackageUploadStream_saveAs_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_PackageUploadStream_saveAs_Params) PackageId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_PackageUploadStream_saveAs_Params) HasPackageId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_PackageUploadStream_saveAs_Params) PackageIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_PackageUploadStream_saveAs_Params) SetPackageId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// Backend_PackageUploadStream_saveAs_Params_List is a list of Backend_PackageUploadStream_saveAs_Params.
type Backend_PackageUploadStream_saveAs_Params_List = capnp.StructList[Backend_PackageUploadStream_saveAs_Params]

// NewBackend_PackageUploadStream_saveAs_Params creates a new list of Backend_PackageUploadStream_saveAs_Params.
func NewBackend_PackageUploadStream_saveAs_Params_List(s *capnp.Segment, sz int32) (Backend_PackageUploadStream_saveAs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_PackageUploadStream_saveAs_Params](l), err
}

// Backend_PackageUploadStream_saveAs_Params_Future is a wrapper for a Backend_PackageUploadStream_saveAs_Params promised by a client call.
type Backend_PackageUploadStream_saveAs_Params_Future struct{ *capnp.Future }

func (p Backend_PackageUploadStream_saveAs_Params_Future) Struct() (Backend_PackageUploadStream_saveAs_Params, error) {
	s, err := p.Future.Struct()
	return Backend_PackageUploadStream_saveAs_Params(s), err
}

type Backend_PackageUploadStream_saveAs_Results capnp.Struct

// Backend_PackageUploadStream_saveAs_Results_TypeID is the unique identifier for the type Backend_PackageUploadStream_saveAs_Results.
const Backend_PackageUploadStream_saveAs_Results_TypeID = 0xa019dbe64a38e85d

func NewBackend_PackageUploadStream_saveAs_Results(s *capnp.Segment) (Backend_PackageUploadStream_saveAs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_PackageUploadStream_saveAs_Results(st), err
}

func NewRootBackend_PackageUploadStream_saveAs_Results(s *capnp.Segment) (Backend_PackageUploadStream_saveAs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_PackageUploadStream_saveAs_Results(st), err
}

func ReadRootBackend_PackageUploadStream_saveAs_Results(msg *capnp.Message) (Backend_PackageUploadStream_saveAs_Results, error) {
	root, err := msg.Root()
	return Backend_PackageUploadStream_saveAs_Results(root.Struct()), err
}

func (s Backend_PackageUploadStream_saveAs_Results) String() string {
	str, _ := text.Marshal(0xa019dbe64a38e85d, capnp.Struct(s))
	return str
}

func (s Backend_PackageUploadStream_saveAs_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_PackageUploadStream_saveAs_Results) DecodeFromPtr(p capnp.Ptr) Backend_PackageUploadStream_saveAs_Results {
	return Backend_PackageUploadStream_saveAs_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_PackageUploadStream_saveAs_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_PackageUploadStream_saveAs_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_PackageUploadStream_saveAs_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_PackageUploadStream_saveAs_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_PackageUploadStream_saveAs_Results) AppId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_PackageUploadStream_saveAs_Results) HasAppId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_PackageUploadStream_saveAs_Results) AppIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_PackageUploadStream_saveAs_Results) SetAppId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Backend_PackageUploadStream_saveAs_Results) Manifest() (spk.Manifest, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return spk.Manifest(p.Struct()), err
}

func (s Backend_PackageUploadStream_saveAs_Results) HasManifest() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Backend_PackageUploadStream_saveAs_Results) SetManifest(v spk.Manifest) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewManifest sets the manifest field to a newly
// allocated spk.Manifest struct, preferring placement in s's segment.
func (s Backend_PackageUploadStream_saveAs_Results) NewManifest() (spk.Manifest, error) {
	ss, err := spk.NewManifest(capnp.Struct(s).Segment())
	if err != nil {
		return spk.Manifest{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Backend_PackageUploadStream_saveAs_Results) AuthorPgpKeyFingerprint() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Backend_PackageUploadStream_saveAs_Results) HasAuthorPgpKeyFingerprint() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Backend_PackageUploadStream_saveAs_Results) AuthorPgpKeyFingerprintBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_PackageUploadStream_saveAs_Results) SetAuthorPgpKeyFingerprint(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

// Backend_PackageUploadStream_saveAs_Results_List is a list of Backend_PackageUploadStream_saveAs_Results.
type Backend_PackageUploadStream_saveAs_Results_List = capnp.StructList[Backend_PackageUploadStream_saveAs_Results]

// NewBackend_PackageUploadStream_saveAs_Results creates a new list of Backend_PackageUploadStream_saveAs_Results.
func NewBackend_PackageUploadStream_saveAs_Results_List(s *capnp.Segment, sz int32) (Backend_PackageUploadStream_saveAs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[Backend_PackageUploadStream_saveAs_Results](l), err
}

// Backend_PackageUploadStream_saveAs_Results_Future is a wrapper for a Backend_PackageUploadStream_saveAs_Results promised by a client call.
type Backend_PackageUploadStream_saveAs_Results_Future struct{ *capnp.Future }

func (p Backend_PackageUploadStream_saveAs_Results_Future) Struct() (Backend_PackageUploadStream_saveAs_Results, error) {
	s, err := p.Future.Struct()
	return Backend_PackageUploadStream_saveAs_Results(s), err
}

func (p Backend_PackageUploadStream_saveAs_Results_Future) Manifest() spk.Manifest_Future {
	return spk.Manifest_Future{Future: p.Future.Field(1, nil)}
}

type Backend_startGrain_Params capnp.Struct

// Backend_startGrain_Params_TypeID is the unique identifier for the type Backend_startGrain_Params.
const Backend_startGrain_Params_TypeID = 0xadfbf90ef9c01c9a

func NewBackend_startGrain_Params(s *capnp.Segment) (Backend_startGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Backend_startGrain_Params(st), err
}

func NewRootBackend_startGrain_Params(s *capnp.Segment) (Backend_startGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Backend_startGrain_Params(st), err
}

func ReadRootBackend_startGrain_Params(msg *capnp.Message) (Backend_startGrain_Params, error) {
	root, err := msg.Root()
	return Backend_startGrain_Params(root.Struct()), err
}

func (s Backend_startGrain_Params) String() string {
	str, _ := text.Marshal(0xadfbf90ef9c01c9a, capnp.Struct(s))
	return str
}

func (s Backend_startGrain_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_startGrain_Params) DecodeFromPtr(p capnp.Ptr) Backend_startGrain_Params {
	return Backend_startGrain_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_startGrain_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_startGrain_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_startGrain_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_startGrain_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_startGrain_Params) OwnerId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_startGrain_Params) HasOwnerId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_startGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_startGrain_Params) SetOwnerId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Backend_startGrain_Params) GrainId() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Backend_startGrain_Params) HasGrainId() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Backend_startGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_startGrain_Params) SetGrainId(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Backend_startGrain_Params) PackageId() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Backend_startGrain_Params) HasPackageId() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Backend_startGrain_Params) PackageIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_startGrain_Params) SetPackageId(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Backend_startGrain_Params) Command() (spk.Manifest_Command, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return spk.Manifest_Command(p.Struct()), err
}

func (s Backend_startGrain_Params) HasCommand() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Backend_startGrain_Params) SetCommand(v spk.Manifest_Command) error {
	return capnp.Struct(s).SetPtr(3, capnp.Struct(v).ToPtr())
}

// NewCommand sets the command field to a newly
// allocated spk.Manifest_Command struct, preferring placement in s's segment.
func (s Backend_startGrain_Params) NewCommand() (spk.Manifest_Command, error) {
	ss, err := spk.NewManifest_Command(capnp.Struct(s).Segment())
	if err != nil {
		return spk.Manifest_Command{}, err
	}
	err = capnp.Struct(s).SetPtr(3, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Backend_startGrain_Params) IsNew() bool {
	return capnp.Struct(s).Bit(0)
}

func (s Backend_startGrain_Params) SetIsNew(v bool) {
	capnp.Struct(s).SetBit(0, v)
}

func (s Backend_startGrain_Params) DevMode() bool {
	return capnp.Struct(s).Bit(1)
}

func (s Backend_startGrain_Params) SetDevMode(v bool) {
	capnp.Struct(s).SetBit(1, v)
}

func (s Backend_startGrain_Params) MountProc() bool {
	return capnp.Struct(s).Bit(2)
}

func (s Backend_startGrain_Params) SetMountProc(v bool) {
	capnp.Struct(s).SetBit(2, v)
}

// Backend_startGrain_Params_List is a list of Backend_startGrain_Params.
type Backend_startGrain_Params_List = capnp.StructList[Backend_startGrain_Params]

// NewBackend_startGrain_Params creates a new list of Backend_startGrain_Params.
func NewBackend_startGrain_Params_List(s *capnp.Segment, sz int32) (Backend_startGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return capnp.StructList[Backend_startGrain_Params](l), err
}

// Backend_startGrain_Params_Future is a wrapper for a Backend_startGrain_Params promised by a client call.
type Backend_startGrain_Params_Future struct{ *capnp.Future }

func (p Backend_startGrain_Params_Future) Struct() (Backend_startGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_startGrain_Params(s), err
}

func (p Backend_startGrain_Params_Future) Command() spk.Manifest_Command_Future {
	return spk.Manifest_Command_Future{Future: p.Future.Field(3, nil)}
}

type Backend_startGrain_Results capnp.Struct

// Backend_startGrain_Results_TypeID is the unique identifier for the type Backend_startGrain_Results.
const Backend_startGrain_Results_TypeID = 0xac9557813c4f78cf

func NewBackend_startGrain_Results(s *capnp.Segment) (Backend_startGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_startGrain_Results(st), err
}

func NewRootBackend_startGrain_Results(s *capnp.Segment) (Backend_startGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_startGrain_Results(st), err
}

func ReadRootBackend_startGrain_Results(msg *capnp.Message) (Backend_startGrain_Results, error) {
	root, err := msg.Root()
	return Backend_startGrain_Results(root.Struct()), err
}

func (s Backend_startGrain_Results) String() string {
	str, _ := text.Marshal(0xac9557813c4f78cf, capnp.Struct(s))
	return str
}

func (s Backend_startGrain_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_startGrain_Results) DecodeFromPtr(p capnp.Ptr) Backend_startGrain_Results {
	return Backend_startGrain_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_startGrain_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_startGrain_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_startGrain_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_startGrain_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_startGrain_Results) Supervisor() supervisor.Supervisor {
	p, _ := capnp.Struct(s).Ptr(0)
	return supervisor.Supervisor(p.Interface().Client())
}

func (s Backend_startGrain_Results) HasSupervisor() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_startGrain_Results) SetSupervisor(v supervisor.Supervisor) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// Backend_startGrain_Results_List is a list of Backend_startGrain_Results.
type Backend_startGrain_Results_List = capnp.StructList[Backend_startGrain_Results]

// NewBackend_startGrain_Results creates a new list of Backend_startGrain_Results.
func NewBackend_startGrain_Results_List(s *capnp.Segment, sz int32) (Backend_startGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_startGrain_Results](l), err
}

// Backend_startGrain_Results_Future is a wrapper for a Backend_startGrain_Results promised by a client call.
type Backend_startGrain_Results_Future struct{ *capnp.Future }

func (p Backend_startGrain_Results_Future) Struct() (Backend_startGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_startGrain_Results(s), err
}

func (p Backend_startGrain_Results_Future) Supervisor() supervisor.Supervisor {
	return supervisor.Supervisor(p.Future.Field(0, nil).Client())
}

type Backend_getGrain_Params capnp.Struct

// Backend_getGrain_Params_TypeID is the unique identifier for the type Backend_getGrain_Params.
const Backend_getGrain_Params_TypeID = 0xe4d3afafc9fe1acf

func NewBackend_getGrain_Params(s *capnp.Segment) (Backend_getGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_getGrain_Params(st), err
}

func NewRootBackend_getGrain_Params(s *capnp.Segment) (Backend_getGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_getGrain_Params(st), err
}

func ReadRootBackend_getGrain_Params(msg *capnp.Message) (Backend_getGrain_Params, error) {
	root, err := msg.Root()
	return Backend_getGrain_Params(root.Struct()), err
}

func (s Backend_getGrain_Params) String() string {
	str, _ := text.Marshal(0xe4d3afafc9fe1acf, capnp.Struct(s))
	return str
}

func (s Backend_getGrain_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_getGrain_Params) DecodeFromPtr(p capnp.Ptr) Backend_getGrain_Params {
	return Backend_getGrain_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_getGrain_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_getGrain_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_getGrain_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_getGrain_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_getGrain_Params) OwnerId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_getGrain_Params) HasOwnerId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_getGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_getGrain_Params) SetOwnerId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Backend_getGrain_Params) GrainId() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Backend_getGrain_Params) HasGrainId() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Backend_getGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_getGrain_Params) SetGrainId(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// Backend_getGrain_Params_List is a list of Backend_getGrain_Params.
type Backend_getGrain_Params_List = capnp.StructList[Backend_getGrain_Params]

// NewBackend_getGrain_Params creates a new list of Backend_getGrain_Params.
func NewBackend_getGrain_Params_List(s *capnp.Segment, sz int32) (Backend_getGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[Backend_getGrain_Params](l), err
}

// Backend_getGrain_Params_Future is a wrapper for a Backend_getGrain_Params promised by a client call.
type Backend_getGrain_Params_Future struct{ *capnp.Future }

func (p Backend_getGrain_Params_Future) Struct() (Backend_getGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_getGrain_Params(s), err
}

type Backend_getGrain_Results capnp.Struct

// Backend_getGrain_Results_TypeID is the unique identifier for the type Backend_getGrain_Results.
const Backend_getGrain_Results_TypeID = 0xea0b2836fb52aee9

func NewBackend_getGrain_Results(s *capnp.Segment) (Backend_getGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_getGrain_Results(st), err
}

func NewRootBackend_getGrain_Results(s *capnp.Segment) (Backend_getGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_getGrain_Results(st), err
}

func ReadRootBackend_getGrain_Results(msg *capnp.Message) (Backend_getGrain_Results, error) {
	root, err := msg.Root()
	return Backend_getGrain_Results(root.Struct()), err
}

func (s Backend_getGrain_Results) String() string {
	str, _ := text.Marshal(0xea0b2836fb52aee9, capnp.Struct(s))
	return str
}

func (s Backend_getGrain_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_getGrain_Results) DecodeFromPtr(p capnp.Ptr) Backend_getGrain_Results {
	return Backend_getGrain_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_getGrain_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_getGrain_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_getGrain_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_getGrain_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_getGrain_Results) Supervisor() supervisor.Supervisor {
	p, _ := capnp.Struct(s).Ptr(0)
	return supervisor.Supervisor(p.Interface().Client())
}

func (s Backend_getGrain_Results) HasSupervisor() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_getGrain_Results) SetSupervisor(v supervisor.Supervisor) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// Backend_getGrain_Results_List is a list of Backend_getGrain_Results.
type Backend_getGrain_Results_List = capnp.StructList[Backend_getGrain_Results]

// NewBackend_getGrain_Results creates a new list of Backend_getGrain_Results.
func NewBackend_getGrain_Results_List(s *capnp.Segment, sz int32) (Backend_getGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_getGrain_Results](l), err
}

// Backend_getGrain_Results_Future is a wrapper for a Backend_getGrain_Results promised by a client call.
type Backend_getGrain_Results_Future struct{ *capnp.Future }

func (p Backend_getGrain_Results_Future) Struct() (Backend_getGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_getGrain_Results(s), err
}

func (p Backend_getGrain_Results_Future) Supervisor() supervisor.Supervisor {
	return supervisor.Supervisor(p.Future.Field(0, nil).Client())
}

type Backend_deleteGrain_Params capnp.Struct

// Backend_deleteGrain_Params_TypeID is the unique identifier for the type Backend_deleteGrain_Params.
const Backend_deleteGrain_Params_TypeID = 0xd0669675481ed533

func NewBackend_deleteGrain_Params(s *capnp.Segment) (Backend_deleteGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_deleteGrain_Params(st), err
}

func NewRootBackend_deleteGrain_Params(s *capnp.Segment) (Backend_deleteGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_deleteGrain_Params(st), err
}

func ReadRootBackend_deleteGrain_Params(msg *capnp.Message) (Backend_deleteGrain_Params, error) {
	root, err := msg.Root()
	return Backend_deleteGrain_Params(root.Struct()), err
}

func (s Backend_deleteGrain_Params) String() string {
	str, _ := text.Marshal(0xd0669675481ed533, capnp.Struct(s))
	return str
}

func (s Backend_deleteGrain_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_deleteGrain_Params) DecodeFromPtr(p capnp.Ptr) Backend_deleteGrain_Params {
	return Backend_deleteGrain_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_deleteGrain_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_deleteGrain_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_deleteGrain_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_deleteGrain_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_deleteGrain_Params) OwnerId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_deleteGrain_Params) HasOwnerId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_deleteGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_deleteGrain_Params) SetOwnerId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Backend_deleteGrain_Params) GrainId() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Backend_deleteGrain_Params) HasGrainId() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Backend_deleteGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_deleteGrain_Params) SetGrainId(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// Backend_deleteGrain_Params_List is a list of Backend_deleteGrain_Params.
type Backend_deleteGrain_Params_List = capnp.StructList[Backend_deleteGrain_Params]

// NewBackend_deleteGrain_Params creates a new list of Backend_deleteGrain_Params.
func NewBackend_deleteGrain_Params_List(s *capnp.Segment, sz int32) (Backend_deleteGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[Backend_deleteGrain_Params](l), err
}

// Backend_deleteGrain_Params_Future is a wrapper for a Backend_deleteGrain_Params promised by a client call.
type Backend_deleteGrain_Params_Future struct{ *capnp.Future }

func (p Backend_deleteGrain_Params_Future) Struct() (Backend_deleteGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_deleteGrain_Params(s), err
}

type Backend_deleteGrain_Results capnp.Struct

// Backend_deleteGrain_Results_TypeID is the unique identifier for the type Backend_deleteGrain_Results.
const Backend_deleteGrain_Results_TypeID = 0x9aa99e08dd1161ff

func NewBackend_deleteGrain_Results(s *capnp.Segment) (Backend_deleteGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteGrain_Results(st), err
}

func NewRootBackend_deleteGrain_Results(s *capnp.Segment) (Backend_deleteGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteGrain_Results(st), err
}

func ReadRootBackend_deleteGrain_Results(msg *capnp.Message) (Backend_deleteGrain_Results, error) {
	root, err := msg.Root()
	return Backend_deleteGrain_Results(root.Struct()), err
}

func (s Backend_deleteGrain_Results) String() string {
	str, _ := text.Marshal(0x9aa99e08dd1161ff, capnp.Struct(s))
	return str
}

func (s Backend_deleteGrain_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_deleteGrain_Results) DecodeFromPtr(p capnp.Ptr) Backend_deleteGrain_Results {
	return Backend_deleteGrain_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_deleteGrain_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_deleteGrain_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_deleteGrain_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_deleteGrain_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Backend_deleteGrain_Results_List is a list of Backend_deleteGrain_Results.
type Backend_deleteGrain_Results_List = capnp.StructList[Backend_deleteGrain_Results]

// NewBackend_deleteGrain_Results creates a new list of Backend_deleteGrain_Results.
func NewBackend_deleteGrain_Results_List(s *capnp.Segment, sz int32) (Backend_deleteGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Backend_deleteGrain_Results](l), err
}

// Backend_deleteGrain_Results_Future is a wrapper for a Backend_deleteGrain_Results promised by a client call.
type Backend_deleteGrain_Results_Future struct{ *capnp.Future }

func (p Backend_deleteGrain_Results_Future) Struct() (Backend_deleteGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_deleteGrain_Results(s), err
}

type Backend_installPackage_Params capnp.Struct

// Backend_installPackage_Params_TypeID is the unique identifier for the type Backend_installPackage_Params.
const Backend_installPackage_Params_TypeID = 0xa98fd02dd93dd26b

func NewBackend_installPackage_Params(s *capnp.Segment) (Backend_installPackage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_installPackage_Params(st), err
}

func NewRootBackend_installPackage_Params(s *capnp.Segment) (Backend_installPackage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_installPackage_Params(st), err
}

func ReadRootBackend_installPackage_Params(msg *capnp.Message) (Backend_installPackage_Params, error) {
	root, err := msg.Root()
	return Backend_installPackage_Params(root.Struct()), err
}

func (s Backend_installPackage_Params) String() string {
	str, _ := text.Marshal(0xa98fd02dd93dd26b, capnp.Struct(s))
	return str
}

func (s Backend_installPackage_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_installPackage_Params) DecodeFromPtr(p capnp.Ptr) Backend_installPackage_Params {
	return Backend_installPackage_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_installPackage_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_installPackage_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_installPackage_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_installPackage_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Backend_installPackage_Params_List is a list of Backend_installPackage_Params.
type Backend_installPackage_Params_List = capnp.StructList[Backend_installPackage_Params]

// NewBackend_installPackage_Params creates a new list of Backend_installPackage_Params.
func NewBackend_installPackage_Params_List(s *capnp.Segment, sz int32) (Backend_installPackage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Backend_installPackage_Params](l), err
}

// Backend_installPackage_Params_Future is a wrapper for a Backend_installPackage_Params promised by a client call.
type Backend_installPackage_Params_Future struct{ *capnp.Future }

func (p Backend_installPackage_Params_Future) Struct() (Backend_installPackage_Params, error) {
	s, err := p.Future.Struct()
	return Backend_installPackage_Params(s), err
}

type Backend_installPackage_Results capnp.Struct

// Backend_installPackage_Results_TypeID is the unique identifier for the type Backend_installPackage_Results.
const Backend_installPackage_Results_TypeID = 0x8829b2e76d8325f1

func NewBackend_installPackage_Results(s *capnp.Segment) (Backend_installPackage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_installPackage_Results(st), err
}

func NewRootBackend_installPackage_Results(s *capnp.Segment) (Backend_installPackage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_installPackage_Results(st), err
}

func ReadRootBackend_installPackage_Results(msg *capnp.Message) (Backend_installPackage_Results, error) {
	root, err := msg.Root()
	return Backend_installPackage_Results(root.Struct()), err
}

func (s Backend_installPackage_Results) String() string {
	str, _ := text.Marshal(0x8829b2e76d8325f1, capnp.Struct(s))
	return str
}

func (s Backend_installPackage_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_installPackage_Results) DecodeFromPtr(p capnp.Ptr) Backend_installPackage_Results {
	return Backend_installPackage_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_installPackage_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_installPackage_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_installPackage_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_installPackage_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_installPackage_Results) Stream() Backend_PackageUploadStream {
	p, _ := capnp.Struct(s).Ptr(0)
	return Backend_PackageUploadStream(p.Interface().Client())
}

func (s Backend_installPackage_Results) HasStream() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_installPackage_Results) SetStream(v Backend_PackageUploadStream) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// Backend_installPackage_Results_List is a list of Backend_installPackage_Results.
type Backend_installPackage_Results_List = capnp.StructList[Backend_installPackage_Results]

// NewBackend_installPackage_Results creates a new list of Backend_installPackage_Results.
func NewBackend_installPackage_Results_List(s *capnp.Segment, sz int32) (Backend_installPackage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_installPackage_Results](l), err
}

// Backend_installPackage_Results_Future is a wrapper for a Backend_installPackage_Results promised by a client call.
type Backend_installPackage_Results_Future struct{ *capnp.Future }

func (p Backend_installPackage_Results_Future) Struct() (Backend_installPackage_Results, error) {
	s, err := p.Future.Struct()
	return Backend_installPackage_Results(s), err
}

func (p Backend_installPackage_Results_Future) Stream() Backend_PackageUploadStream {
	return Backend_PackageUploadStream(p.Future.Field(0, nil).Client())
}

type Backend_tryGetPackage_Params capnp.Struct

// Backend_tryGetPackage_Params_TypeID is the unique identifier for the type Backend_tryGetPackage_Params.
const Backend_tryGetPackage_Params_TypeID = 0xfb4cd9916f42104c

func NewBackend_tryGetPackage_Params(s *capnp.Segment) (Backend_tryGetPackage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_tryGetPackage_Params(st), err
}

func NewRootBackend_tryGetPackage_Params(s *capnp.Segment) (Backend_tryGetPackage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_tryGetPackage_Params(st), err
}

func ReadRootBackend_tryGetPackage_Params(msg *capnp.Message) (Backend_tryGetPackage_Params, error) {
	root, err := msg.Root()
	return Backend_tryGetPackage_Params(root.Struct()), err
}

func (s Backend_tryGetPackage_Params) String() string {
	str, _ := text.Marshal(0xfb4cd9916f42104c, capnp.Struct(s))
	return str
}

func (s Backend_tryGetPackage_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_tryGetPackage_Params) DecodeFromPtr(p capnp.Ptr) Backend_tryGetPackage_Params {
	return Backend_tryGetPackage_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_tryGetPackage_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_tryGetPackage_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_tryGetPackage_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_tryGetPackage_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_tryGetPackage_Params) PackageId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_tryGetPackage_Params) HasPackageId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_tryGetPackage_Params) PackageIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_tryGetPackage_Params) SetPackageId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// Backend_tryGetPackage_Params_List is a list of Backend_tryGetPackage_Params.
type Backend_tryGetPackage_Params_List = capnp.StructList[Backend_tryGetPackage_Params]

// NewBackend_tryGetPackage_Params creates a new list of Backend_tryGetPackage_Params.
func NewBackend_tryGetPackage_Params_List(s *capnp.Segment, sz int32) (Backend_tryGetPackage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_tryGetPackage_Params](l), err
}

// Backend_tryGetPackage_Params_Future is a wrapper for a Backend_tryGetPackage_Params promised by a client call.
type Backend_tryGetPackage_Params_Future struct{ *capnp.Future }

func (p Backend_tryGetPackage_Params_Future) Struct() (Backend_tryGetPackage_Params, error) {
	s, err := p.Future.Struct()
	return Backend_tryGetPackage_Params(s), err
}

type Backend_tryGetPackage_Results capnp.Struct

// Backend_tryGetPackage_Results_TypeID is the unique identifier for the type Backend_tryGetPackage_Results.
const Backend_tryGetPackage_Results_TypeID = 0xef241fd6058030cf

func NewBackend_tryGetPackage_Results(s *capnp.Segment) (Backend_tryGetPackage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_tryGetPackage_Results(st), err
}

func NewRootBackend_tryGetPackage_Results(s *capnp.Segment) (Backend_tryGetPackage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_tryGetPackage_Results(st), err
}

func ReadRootBackend_tryGetPackage_Results(msg *capnp.Message) (Backend_tryGetPackage_Results, error) {
	root, err := msg.Root()
	return Backend_tryGetPackage_Results(root.Struct()), err
}

func (s Backend_tryGetPackage_Results) String() string {
	str, _ := text.Marshal(0xef241fd6058030cf, capnp.Struct(s))
	return str
}

func (s Backend_tryGetPackage_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_tryGetPackage_Results) DecodeFromPtr(p capnp.Ptr) Backend_tryGetPackage_Results {
	return Backend_tryGetPackage_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_tryGetPackage_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_tryGetPackage_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_tryGetPackage_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_tryGetPackage_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_tryGetPackage_Results) AppId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_tryGetPackage_Results) HasAppId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_tryGetPackage_Results) AppIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_tryGetPackage_Results) SetAppId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Backend_tryGetPackage_Results) Manifest() (spk.Manifest, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return spk.Manifest(p.Struct()), err
}

func (s Backend_tryGetPackage_Results) HasManifest() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Backend_tryGetPackage_Results) SetManifest(v spk.Manifest) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewManifest sets the manifest field to a newly
// allocated spk.Manifest struct, preferring placement in s's segment.
func (s Backend_tryGetPackage_Results) NewManifest() (spk.Manifest, error) {
	ss, err := spk.NewManifest(capnp.Struct(s).Segment())
	if err != nil {
		return spk.Manifest{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Backend_tryGetPackage_Results) AuthorPgpKeyFingerprint() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Backend_tryGetPackage_Results) HasAuthorPgpKeyFingerprint() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Backend_tryGetPackage_Results) AuthorPgpKeyFingerprintBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_tryGetPackage_Results) SetAuthorPgpKeyFingerprint(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

// Backend_tryGetPackage_Results_List is a list of Backend_tryGetPackage_Results.
type Backend_tryGetPackage_Results_List = capnp.StructList[Backend_tryGetPackage_Results]

// NewBackend_tryGetPackage_Results creates a new list of Backend_tryGetPackage_Results.
func NewBackend_tryGetPackage_Results_List(s *capnp.Segment, sz int32) (Backend_tryGetPackage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[Backend_tryGetPackage_Results](l), err
}

// Backend_tryGetPackage_Results_Future is a wrapper for a Backend_tryGetPackage_Results promised by a client call.
type Backend_tryGetPackage_Results_Future struct{ *capnp.Future }

func (p Backend_tryGetPackage_Results_Future) Struct() (Backend_tryGetPackage_Results, error) {
	s, err := p.Future.Struct()
	return Backend_tryGetPackage_Results(s), err
}

func (p Backend_tryGetPackage_Results_Future) Manifest() spk.Manifest_Future {
	return spk.Manifest_Future{Future: p.Future.Field(1, nil)}
}

type Backend_deletePackage_Params capnp.Struct

// Backend_deletePackage_Params_TypeID is the unique identifier for the type Backend_deletePackage_Params.
const Backend_deletePackage_Params_TypeID = 0xb61fc18674ca994f

func NewBackend_deletePackage_Params(s *capnp.Segment) (Backend_deletePackage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deletePackage_Params(st), err
}

func NewRootBackend_deletePackage_Params(s *capnp.Segment) (Backend_deletePackage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deletePackage_Params(st), err
}

func ReadRootBackend_deletePackage_Params(msg *capnp.Message) (Backend_deletePackage_Params, error) {
	root, err := msg.Root()
	return Backend_deletePackage_Params(root.Struct()), err
}

func (s Backend_deletePackage_Params) String() string {
	str, _ := text.Marshal(0xb61fc18674ca994f, capnp.Struct(s))
	return str
}

func (s Backend_deletePackage_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_deletePackage_Params) DecodeFromPtr(p capnp.Ptr) Backend_deletePackage_Params {
	return Backend_deletePackage_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_deletePackage_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_deletePackage_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_deletePackage_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_deletePackage_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_deletePackage_Params) PackageId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_deletePackage_Params) HasPackageId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_deletePackage_Params) PackageIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_deletePackage_Params) SetPackageId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// Backend_deletePackage_Params_List is a list of Backend_deletePackage_Params.
type Backend_deletePackage_Params_List = capnp.StructList[Backend_deletePackage_Params]

// NewBackend_deletePackage_Params creates a new list of Backend_deletePackage_Params.
func NewBackend_deletePackage_Params_List(s *capnp.Segment, sz int32) (Backend_deletePackage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_deletePackage_Params](l), err
}

// Backend_deletePackage_Params_Future is a wrapper for a Backend_deletePackage_Params promised by a client call.
type Backend_deletePackage_Params_Future struct{ *capnp.Future }

func (p Backend_deletePackage_Params_Future) Struct() (Backend_deletePackage_Params, error) {
	s, err := p.Future.Struct()
	return Backend_deletePackage_Params(s), err
}

type Backend_deletePackage_Results capnp.Struct

// Backend_deletePackage_Results_TypeID is the unique identifier for the type Backend_deletePackage_Results.
const Backend_deletePackage_Results_TypeID = 0xea9f82a07e11b6d7

func NewBackend_deletePackage_Results(s *capnp.Segment) (Backend_deletePackage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deletePackage_Results(st), err
}

func NewRootBackend_deletePackage_Results(s *capnp.Segment) (Backend_deletePackage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deletePackage_Results(st), err
}

func ReadRootBackend_deletePackage_Results(msg *capnp.Message) (Backend_deletePackage_Results, error) {
	root, err := msg.Root()
	return Backend_deletePackage_Results(root.Struct()), err
}

func (s Backend_deletePackage_Results) String() string {
	str, _ := text.Marshal(0xea9f82a07e11b6d7, capnp.Struct(s))
	return str
}

func (s Backend_deletePackage_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_deletePackage_Results) DecodeFromPtr(p capnp.Ptr) Backend_deletePackage_Results {
	return Backend_deletePackage_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_deletePackage_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_deletePackage_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_deletePackage_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_deletePackage_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Backend_deletePackage_Results_List is a list of Backend_deletePackage_Results.
type Backend_deletePackage_Results_List = capnp.StructList[Backend_deletePackage_Results]

// NewBackend_deletePackage_Results creates a new list of Backend_deletePackage_Results.
func NewBackend_deletePackage_Results_List(s *capnp.Segment, sz int32) (Backend_deletePackage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Backend_deletePackage_Results](l), err
}

// Backend_deletePackage_Results_Future is a wrapper for a Backend_deletePackage_Results promised by a client call.
type Backend_deletePackage_Results_Future struct{ *capnp.Future }

func (p Backend_deletePackage_Results_Future) Struct() (Backend_deletePackage_Results, error) {
	s, err := p.Future.Struct()
	return Backend_deletePackage_Results(s), err
}

type Backend_backupGrain_Params capnp.Struct

// Backend_backupGrain_Params_TypeID is the unique identifier for the type Backend_backupGrain_Params.
const Backend_backupGrain_Params_TypeID = 0x87a6a96b0a4edd21

func NewBackend_backupGrain_Params(s *capnp.Segment) (Backend_backupGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Backend_backupGrain_Params(st), err
}

func NewRootBackend_backupGrain_Params(s *capnp.Segment) (Backend_backupGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Backend_backupGrain_Params(st), err
}

func ReadRootBackend_backupGrain_Params(msg *capnp.Message) (Backend_backupGrain_Params, error) {
	root, err := msg.Root()
	return Backend_backupGrain_Params(root.Struct()), err
}

func (s Backend_backupGrain_Params) String() string {
	str, _ := text.Marshal(0x87a6a96b0a4edd21, capnp.Struct(s))
	return str
}

func (s Backend_backupGrain_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_backupGrain_Params) DecodeFromPtr(p capnp.Ptr) Backend_backupGrain_Params {
	return Backend_backupGrain_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_backupGrain_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_backupGrain_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_backupGrain_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_backupGrain_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_backupGrain_Params) BackupId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_backupGrain_Params) HasBackupId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_backupGrain_Params) BackupIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_backupGrain_Params) SetBackupId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Backend_backupGrain_Params) OwnerId() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Backend_backupGrain_Params) HasOwnerId() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Backend_backupGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_backupGrain_Params) SetOwnerId(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Backend_backupGrain_Params) GrainId() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Backend_backupGrain_Params) HasGrainId() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Backend_backupGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_backupGrain_Params) SetGrainId(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Backend_backupGrain_Params) Info() (grain.GrainInfo, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return grain.GrainInfo(p.Struct()), err
}

func (s Backend_backupGrain_Params) HasInfo() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Backend_backupGrain_Params) SetInfo(v grain.GrainInfo) error {
	return capnp.Struct(s).SetPtr(3, capnp.Struct(v).ToPtr())
}

// NewInfo sets the info field to a newly
// allocated grain.GrainInfo struct, preferring placement in s's segment.
func (s Backend_backupGrain_Params) NewInfo() (grain.GrainInfo, error) {
	ss, err := grain.NewGrainInfo(capnp.Struct(s).Segment())
	if err != nil {
		return grain.GrainInfo{}, err
	}
	err = capnp.Struct(s).SetPtr(3, capnp.Struct(ss).ToPtr())
	return ss, err
}

// Backend_backupGrain_Params_List is a list of Backend_backupGrain_Params.
type Backend_backupGrain_Params_List = capnp.StructList[Backend_backupGrain_Params]

// NewBackend_backupGrain_Params creates a new list of Backend_backupGrain_Params.
func NewBackend_backupGrain_Params_List(s *capnp.Segment, sz int32) (Backend_backupGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return capnp.StructList[Backend_backupGrain_Params](l), err
}

// Backend_backupGrain_Params_Future is a wrapper for a Backend_backupGrain_Params promised by a client call.
type Backend_backupGrain_Params_Future struct{ *capnp.Future }

func (p Backend_backupGrain_Params_Future) Struct() (Backend_backupGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_backupGrain_Params(s), err
}

func (p Backend_backupGrain_Params_Future) Info() grain.GrainInfo_Future {
	return grain.GrainInfo_Future{Future: p.Future.Field(3, nil)}
}

type Backend_backupGrain_Results capnp.Struct

// Backend_backupGrain_Results_TypeID is the unique identifier for the type Backend_backupGrain_Results.
const Backend_backupGrain_Results_TypeID = 0xcd9c9fab5f637827

func NewBackend_backupGrain_Results(s *capnp.Segment) (Backend_backupGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_backupGrain_Results(st), err
}

func NewRootBackend_backupGrain_Results(s *capnp.Segment) (Backend_backupGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_backupGrain_Results(st), err
}

func ReadRootBackend_backupGrain_Results(msg *capnp.Message) (Backend_backupGrain_Results, error) {
	root, err := msg.Root()
	return Backend_backupGrain_Results(root.Struct()), err
}

func (s Backend_backupGrain_Results) String() string {
	str, _ := text.Marshal(0xcd9c9fab5f637827, capnp.Struct(s))
	return str
}

func (s Backend_backupGrain_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_backupGrain_Results) DecodeFromPtr(p capnp.Ptr) Backend_backupGrain_Results {
	return Backend_backupGrain_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_backupGrain_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_backupGrain_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_backupGrain_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_backupGrain_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Backend_backupGrain_Results_List is a list of Backend_backupGrain_Results.
type Backend_backupGrain_Results_List = capnp.StructList[Backend_backupGrain_Results]

// NewBackend_backupGrain_Results creates a new list of Backend_backupGrain_Results.
func NewBackend_backupGrain_Results_List(s *capnp.Segment, sz int32) (Backend_backupGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Backend_backupGrain_Results](l), err
}

// Backend_backupGrain_Results_Future is a wrapper for a Backend_backupGrain_Results promised by a client call.
type Backend_backupGrain_Results_Future struct{ *capnp.Future }

func (p Backend_backupGrain_Results_Future) Struct() (Backend_backupGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_backupGrain_Results(s), err
}

type Backend_restoreGrain_Params capnp.Struct

// Backend_restoreGrain_Params_TypeID is the unique identifier for the type Backend_restoreGrain_Params.
const Backend_restoreGrain_Params_TypeID = 0x9d88f29f0318d4bb

func NewBackend_restoreGrain_Params(s *capnp.Segment) (Backend_restoreGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_restoreGrain_Params(st), err
}

func NewRootBackend_restoreGrain_Params(s *capnp.Segment) (Backend_restoreGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_restoreGrain_Params(st), err
}

func ReadRootBackend_restoreGrain_Params(msg *capnp.Message) (Backend_restoreGrain_Params, error) {
	root, err := msg.Root()
	return Backend_restoreGrain_Params(root.Struct()), err
}

func (s Backend_restoreGrain_Params) String() string {
	str, _ := text.Marshal(0x9d88f29f0318d4bb, capnp.Struct(s))
	return str
}

func (s Backend_restoreGrain_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_restoreGrain_Params) DecodeFromPtr(p capnp.Ptr) Backend_restoreGrain_Params {
	return Backend_restoreGrain_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_restoreGrain_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_restoreGrain_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_restoreGrain_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_restoreGrain_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_restoreGrain_Params) BackupId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_restoreGrain_Params) HasBackupId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_restoreGrain_Params) BackupIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_restoreGrain_Params) SetBackupId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Backend_restoreGrain_Params) OwnerId() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Backend_restoreGrain_Params) HasOwnerId() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Backend_restoreGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_restoreGrain_Params) SetOwnerId(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Backend_restoreGrain_Params) GrainId() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Backend_restoreGrain_Params) HasGrainId() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Backend_restoreGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_restoreGrain_Params) SetGrainId(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

// Backend_restoreGrain_Params_List is a list of Backend_restoreGrain_Params.
type Backend_restoreGrain_Params_List = capnp.StructList[Backend_restoreGrain_Params]

// NewBackend_restoreGrain_Params creates a new list of Backend_restoreGrain_Params.
func NewBackend_restoreGrain_Params_List(s *capnp.Segment, sz int32) (Backend_restoreGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[Backend_restoreGrain_Params](l), err
}

// Backend_restoreGrain_Params_Future is a wrapper for a Backend_restoreGrain_Params promised by a client call.
type Backend_restoreGrain_Params_Future struct{ *capnp.Future }

func (p Backend_restoreGrain_Params_Future) Struct() (Backend_restoreGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_restoreGrain_Params(s), err
}

type Backend_restoreGrain_Results capnp.Struct

// Backend_restoreGrain_Results_TypeID is the unique identifier for the type Backend_restoreGrain_Results.
const Backend_restoreGrain_Results_TypeID = 0x8b790707193ea7ff

func NewBackend_restoreGrain_Results(s *capnp.Segment) (Backend_restoreGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_restoreGrain_Results(st), err
}

func NewRootBackend_restoreGrain_Results(s *capnp.Segment) (Backend_restoreGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_restoreGrain_Results(st), err
}

func ReadRootBackend_restoreGrain_Results(msg *capnp.Message) (Backend_restoreGrain_Results, error) {
	root, err := msg.Root()
	return Backend_restoreGrain_Results(root.Struct()), err
}

func (s Backend_restoreGrain_Results) String() string {
	str, _ := text.Marshal(0x8b790707193ea7ff, capnp.Struct(s))
	return str
}

func (s Backend_restoreGrain_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_restoreGrain_Results) DecodeFromPtr(p capnp.Ptr) Backend_restoreGrain_Results {
	return Backend_restoreGrain_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_restoreGrain_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_restoreGrain_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_restoreGrain_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_restoreGrain_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_restoreGrain_Results) Info() (grain.GrainInfo, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return grain.GrainInfo(p.Struct()), err
}

func (s Backend_restoreGrain_Results) HasInfo() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_restoreGrain_Results) SetInfo(v grain.GrainInfo) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewInfo sets the info field to a newly
// allocated grain.GrainInfo struct, preferring placement in s's segment.
func (s Backend_restoreGrain_Results) NewInfo() (grain.GrainInfo, error) {
	ss, err := grain.NewGrainInfo(capnp.Struct(s).Segment())
	if err != nil {
		return grain.GrainInfo{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// Backend_restoreGrain_Results_List is a list of Backend_restoreGrain_Results.
type Backend_restoreGrain_Results_List = capnp.StructList[Backend_restoreGrain_Results]

// NewBackend_restoreGrain_Results creates a new list of Backend_restoreGrain_Results.
func NewBackend_restoreGrain_Results_List(s *capnp.Segment, sz int32) (Backend_restoreGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_restoreGrain_Results](l), err
}

// Backend_restoreGrain_Results_Future is a wrapper for a Backend_restoreGrain_Results promised by a client call.
type Backend_restoreGrain_Results_Future struct{ *capnp.Future }

func (p Backend_restoreGrain_Results_Future) Struct() (Backend_restoreGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_restoreGrain_Results(s), err
}

func (p Backend_restoreGrain_Results_Future) Info() grain.GrainInfo_Future {
	return grain.GrainInfo_Future{Future: p.Future.Field(0, nil)}
}

type Backend_uploadBackup_Params capnp.Struct

// Backend_uploadBackup_Params_TypeID is the unique identifier for the type Backend_uploadBackup_Params.
const Backend_uploadBackup_Params_TypeID = 0xf2ccecff0178227b

func NewBackend_uploadBackup_Params(s *capnp.Segment) (Backend_uploadBackup_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_uploadBackup_Params(st), err
}

func NewRootBackend_uploadBackup_Params(s *capnp.Segment) (Backend_uploadBackup_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_uploadBackup_Params(st), err
}

func ReadRootBackend_uploadBackup_Params(msg *capnp.Message) (Backend_uploadBackup_Params, error) {
	root, err := msg.Root()
	return Backend_uploadBackup_Params(root.Struct()), err
}

func (s Backend_uploadBackup_Params) String() string {
	str, _ := text.Marshal(0xf2ccecff0178227b, capnp.Struct(s))
	return str
}

func (s Backend_uploadBackup_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_uploadBackup_Params) DecodeFromPtr(p capnp.Ptr) Backend_uploadBackup_Params {
	return Backend_uploadBackup_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_uploadBackup_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_uploadBackup_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_uploadBackup_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_uploadBackup_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_uploadBackup_Params) BackupId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_uploadBackup_Params) HasBackupId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_uploadBackup_Params) BackupIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_uploadBackup_Params) SetBackupId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// Backend_uploadBackup_Params_List is a list of Backend_uploadBackup_Params.
type Backend_uploadBackup_Params_List = capnp.StructList[Backend_uploadBackup_Params]

// NewBackend_uploadBackup_Params creates a new list of Backend_uploadBackup_Params.
func NewBackend_uploadBackup_Params_List(s *capnp.Segment, sz int32) (Backend_uploadBackup_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_uploadBackup_Params](l), err
}

// Backend_uploadBackup_Params_Future is a wrapper for a Backend_uploadBackup_Params promised by a client call.
type Backend_uploadBackup_Params_Future struct{ *capnp.Future }

func (p Backend_uploadBackup_Params_Future) Struct() (Backend_uploadBackup_Params, error) {
	s, err := p.Future.Struct()
	return Backend_uploadBackup_Params(s), err
}

type Backend_uploadBackup_Results capnp.Struct

// Backend_uploadBackup_Results_TypeID is the unique identifier for the type Backend_uploadBackup_Results.
const Backend_uploadBackup_Results_TypeID = 0xbc51d6bc865a8fcf

func NewBackend_uploadBackup_Results(s *capnp.Segment) (Backend_uploadBackup_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_uploadBackup_Results(st), err
}

func NewRootBackend_uploadBackup_Results(s *capnp.Segment) (Backend_uploadBackup_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_uploadBackup_Results(st), err
}

func ReadRootBackend_uploadBackup_Results(msg *capnp.Message) (Backend_uploadBackup_Results, error) {
	root, err := msg.Root()
	return Backend_uploadBackup_Results(root.Struct()), err
}

func (s Backend_uploadBackup_Results) String() string {
	str, _ := text.Marshal(0xbc51d6bc865a8fcf, capnp.Struct(s))
	return str
}

func (s Backend_uploadBackup_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_uploadBackup_Results) DecodeFromPtr(p capnp.Ptr) Backend_uploadBackup_Results {
	return Backend_uploadBackup_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_uploadBackup_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_uploadBackup_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_uploadBackup_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_uploadBackup_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_uploadBackup_Results) Stream() util.ByteStream {
	p, _ := capnp.Struct(s).Ptr(0)
	return util.ByteStream(p.Interface().Client())
}

func (s Backend_uploadBackup_Results) HasStream() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_uploadBackup_Results) SetStream(v util.ByteStream) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// Backend_uploadBackup_Results_List is a list of Backend_uploadBackup_Results.
type Backend_uploadBackup_Results_List = capnp.StructList[Backend_uploadBackup_Results]

// NewBackend_uploadBackup_Results creates a new list of Backend_uploadBackup_Results.
func NewBackend_uploadBackup_Results_List(s *capnp.Segment, sz int32) (Backend_uploadBackup_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_uploadBackup_Results](l), err
}

// Backend_uploadBackup_Results_Future is a wrapper for a Backend_uploadBackup_Results promised by a client call.
type Backend_uploadBackup_Results_Future struct{ *capnp.Future }

func (p Backend_uploadBackup_Results_Future) Struct() (Backend_uploadBackup_Results, error) {
	s, err := p.Future.Struct()
	return Backend_uploadBackup_Results(s), err
}

func (p Backend_uploadBackup_Results_Future) Stream() util.ByteStream {
	return util.ByteStream(p.Future.Field(0, nil).Client())
}

type Backend_downloadBackup_Params capnp.Struct

// Backend_downloadBackup_Params_TypeID is the unique identifier for the type Backend_downloadBackup_Params.
const Backend_downloadBackup_Params_TypeID = 0x916d32f140971035

func NewBackend_downloadBackup_Params(s *capnp.Segment) (Backend_downloadBackup_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_downloadBackup_Params(st), err
}

func NewRootBackend_downloadBackup_Params(s *capnp.Segment) (Backend_downloadBackup_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_downloadBackup_Params(st), err
}

func ReadRootBackend_downloadBackup_Params(msg *capnp.Message) (Backend_downloadBackup_Params, error) {
	root, err := msg.Root()
	return Backend_downloadBackup_Params(root.Struct()), err
}

func (s Backend_downloadBackup_Params) String() string {
	str, _ := text.Marshal(0x916d32f140971035, capnp.Struct(s))
	return str
}

func (s Backend_downloadBackup_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_downloadBackup_Params) DecodeFromPtr(p capnp.Ptr) Backend_downloadBackup_Params {
	return Backend_downloadBackup_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_downloadBackup_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_downloadBackup_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_downloadBackup_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_downloadBackup_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_downloadBackup_Params) BackupId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_downloadBackup_Params) HasBackupId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_downloadBackup_Params) BackupIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_downloadBackup_Params) SetBackupId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Backend_downloadBackup_Params) Stream() util.ByteStream {
	p, _ := capnp.Struct(s).Ptr(1)
	return util.ByteStream(p.Interface().Client())
}

func (s Backend_downloadBackup_Params) HasStream() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Backend_downloadBackup_Params) SetStream(v util.ByteStream) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(1, in.ToPtr())
}

// Backend_downloadBackup_Params_List is a list of Backend_downloadBackup_Params.
type Backend_downloadBackup_Params_List = capnp.StructList[Backend_downloadBackup_Params]

// NewBackend_downloadBackup_Params creates a new list of Backend_downloadBackup_Params.
func NewBackend_downloadBackup_Params_List(s *capnp.Segment, sz int32) (Backend_downloadBackup_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[Backend_downloadBackup_Params](l), err
}

// Backend_downloadBackup_Params_Future is a wrapper for a Backend_downloadBackup_Params promised by a client call.
type Backend_downloadBackup_Params_Future struct{ *capnp.Future }

func (p Backend_downloadBackup_Params_Future) Struct() (Backend_downloadBackup_Params, error) {
	s, err := p.Future.Struct()
	return Backend_downloadBackup_Params(s), err
}

func (p Backend_downloadBackup_Params_Future) Stream() util.ByteStream {
	return util.ByteStream(p.Future.Field(1, nil).Client())
}

type Backend_downloadBackup_Results capnp.Struct

// Backend_downloadBackup_Results_TypeID is the unique identifier for the type Backend_downloadBackup_Results.
const Backend_downloadBackup_Results_TypeID = 0x9e90498484bab87d

func NewBackend_downloadBackup_Results(s *capnp.Segment) (Backend_downloadBackup_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_downloadBackup_Results(st), err
}

func NewRootBackend_downloadBackup_Results(s *capnp.Segment) (Backend_downloadBackup_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_downloadBackup_Results(st), err
}

func ReadRootBackend_downloadBackup_Results(msg *capnp.Message) (Backend_downloadBackup_Results, error) {
	root, err := msg.Root()
	return Backend_downloadBackup_Results(root.Struct()), err
}

func (s Backend_downloadBackup_Results) String() string {
	str, _ := text.Marshal(0x9e90498484bab87d, capnp.Struct(s))
	return str
}

func (s Backend_downloadBackup_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_downloadBackup_Results) DecodeFromPtr(p capnp.Ptr) Backend_downloadBackup_Results {
	return Backend_downloadBackup_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_downloadBackup_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_downloadBackup_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_downloadBackup_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_downloadBackup_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Backend_downloadBackup_Results_List is a list of Backend_downloadBackup_Results.
type Backend_downloadBackup_Results_List = capnp.StructList[Backend_downloadBackup_Results]

// NewBackend_downloadBackup_Results creates a new list of Backend_downloadBackup_Results.
func NewBackend_downloadBackup_Results_List(s *capnp.Segment, sz int32) (Backend_downloadBackup_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Backend_downloadBackup_Results](l), err
}

// Backend_downloadBackup_Results_Future is a wrapper for a Backend_downloadBackup_Results promised by a client call.
type Backend_downloadBackup_Results_Future struct{ *capnp.Future }

func (p Backend_downloadBackup_Results_Future) Struct() (Backend_downloadBackup_Results, error) {
	s, err := p.Future.Struct()
	return Backend_downloadBackup_Results(s), err
}

type Backend_deleteBackup_Params capnp.Struct

// Backend_deleteBackup_Params_TypeID is the unique identifier for the type Backend_deleteBackup_Params.
const Backend_deleteBackup_Params_TypeID = 0xd0d6ed6a5ed70e62

func NewBackend_deleteBackup_Params(s *capnp.Segment) (Backend_deleteBackup_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deleteBackup_Params(st), err
}

func NewRootBackend_deleteBackup_Params(s *capnp.Segment) (Backend_deleteBackup_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deleteBackup_Params(st), err
}

func ReadRootBackend_deleteBackup_Params(msg *capnp.Message) (Backend_deleteBackup_Params, error) {
	root, err := msg.Root()
	return Backend_deleteBackup_Params(root.Struct()), err
}

func (s Backend_deleteBackup_Params) String() string {
	str, _ := text.Marshal(0xd0d6ed6a5ed70e62, capnp.Struct(s))
	return str
}

func (s Backend_deleteBackup_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_deleteBackup_Params) DecodeFromPtr(p capnp.Ptr) Backend_deleteBackup_Params {
	return Backend_deleteBackup_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_deleteBackup_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_deleteBackup_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_deleteBackup_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_deleteBackup_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_deleteBackup_Params) BackupId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_deleteBackup_Params) HasBackupId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_deleteBackup_Params) BackupIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_deleteBackup_Params) SetBackupId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// Backend_deleteBackup_Params_List is a list of Backend_deleteBackup_Params.
type Backend_deleteBackup_Params_List = capnp.StructList[Backend_deleteBackup_Params]

// NewBackend_deleteBackup_Params creates a new list of Backend_deleteBackup_Params.
func NewBackend_deleteBackup_Params_List(s *capnp.Segment, sz int32) (Backend_deleteBackup_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_deleteBackup_Params](l), err
}

// Backend_deleteBackup_Params_Future is a wrapper for a Backend_deleteBackup_Params promised by a client call.
type Backend_deleteBackup_Params_Future struct{ *capnp.Future }

func (p Backend_deleteBackup_Params_Future) Struct() (Backend_deleteBackup_Params, error) {
	s, err := p.Future.Struct()
	return Backend_deleteBackup_Params(s), err
}

type Backend_deleteBackup_Results capnp.Struct

// Backend_deleteBackup_Results_TypeID is the unique identifier for the type Backend_deleteBackup_Results.
const Backend_deleteBackup_Results_TypeID = 0xaf88ad00c801b00d

func NewBackend_deleteBackup_Results(s *capnp.Segment) (Backend_deleteBackup_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteBackup_Results(st), err
}

func NewRootBackend_deleteBackup_Results(s *capnp.Segment) (Backend_deleteBackup_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteBackup_Results(st), err
}

func ReadRootBackend_deleteBackup_Results(msg *capnp.Message) (Backend_deleteBackup_Results, error) {
	root, err := msg.Root()
	return Backend_deleteBackup_Results(root.Struct()), err
}

func (s Backend_deleteBackup_Results) String() string {
	str, _ := text.Marshal(0xaf88ad00c801b00d, capnp.Struct(s))
	return str
}

func (s Backend_deleteBackup_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_deleteBackup_Results) DecodeFromPtr(p capnp.Ptr) Backend_deleteBackup_Results {
	return Backend_deleteBackup_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_deleteBackup_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_deleteBackup_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_deleteBackup_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_deleteBackup_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Backend_deleteBackup_Results_List is a list of Backend_deleteBackup_Results.
type Backend_deleteBackup_Results_List = capnp.StructList[Backend_deleteBackup_Results]

// NewBackend_deleteBackup_Results creates a new list of Backend_deleteBackup_Results.
func NewBackend_deleteBackup_Results_List(s *capnp.Segment, sz int32) (Backend_deleteBackup_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Backend_deleteBackup_Results](l), err
}

// Backend_deleteBackup_Results_Future is a wrapper for a Backend_deleteBackup_Results promised by a client call.
type Backend_deleteBackup_Results_Future struct{ *capnp.Future }

func (p Backend_deleteBackup_Results_Future) Struct() (Backend_deleteBackup_Results, error) {
	s, err := p.Future.Struct()
	return Backend_deleteBackup_Results(s), err
}

type Backend_getUserStorageUsage_Params capnp.Struct

// Backend_getUserStorageUsage_Params_TypeID is the unique identifier for the type Backend_getUserStorageUsage_Params.
const Backend_getUserStorageUsage_Params_TypeID = 0xaaef1f8c301b865d

func NewBackend_getUserStorageUsage_Params(s *capnp.Segment) (Backend_getUserStorageUsage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_getUserStorageUsage_Params(st), err
}

func NewRootBackend_getUserStorageUsage_Params(s *capnp.Segment) (Backend_getUserStorageUsage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_getUserStorageUsage_Params(st), err
}

func ReadRootBackend_getUserStorageUsage_Params(msg *capnp.Message) (Backend_getUserStorageUsage_Params, error) {
	root, err := msg.Root()
	return Backend_getUserStorageUsage_Params(root.Struct()), err
}

func (s Backend_getUserStorageUsage_Params) String() string {
	str, _ := text.Marshal(0xaaef1f8c301b865d, capnp.Struct(s))
	return str
}

func (s Backend_getUserStorageUsage_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_getUserStorageUsage_Params) DecodeFromPtr(p capnp.Ptr) Backend_getUserStorageUsage_Params {
	return Backend_getUserStorageUsage_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_getUserStorageUsage_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_getUserStorageUsage_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_getUserStorageUsage_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_getUserStorageUsage_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_getUserStorageUsage_Params) UserId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_getUserStorageUsage_Params) HasUserId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_getUserStorageUsage_Params) UserIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_getUserStorageUsage_Params) SetUserId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// Backend_getUserStorageUsage_Params_List is a list of Backend_getUserStorageUsage_Params.
type Backend_getUserStorageUsage_Params_List = capnp.StructList[Backend_getUserStorageUsage_Params]

// NewBackend_getUserStorageUsage_Params creates a new list of Backend_getUserStorageUsage_Params.
func NewBackend_getUserStorageUsage_Params_List(s *capnp.Segment, sz int32) (Backend_getUserStorageUsage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_getUserStorageUsage_Params](l), err
}

// Backend_getUserStorageUsage_Params_Future is a wrapper for a Backend_getUserStorageUsage_Params promised by a client call.
type Backend_getUserStorageUsage_Params_Future struct{ *capnp.Future }

func (p Backend_getUserStorageUsage_Params_Future) Struct() (Backend_getUserStorageUsage_Params, error) {
	s, err := p.Future.Struct()
	return Backend_getUserStorageUsage_Params(s), err
}

type Backend_getUserStorageUsage_Results capnp.Struct

// Backend_getUserStorageUsage_Results_TypeID is the unique identifier for the type Backend_getUserStorageUsage_Results.
const Backend_getUserStorageUsage_Results_TypeID = 0xa1c73384bc38ab4b

func NewBackend_getUserStorageUsage_Results(s *capnp.Segment) (Backend_getUserStorageUsage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getUserStorageUsage_Results(st), err
}

func NewRootBackend_getUserStorageUsage_Results(s *capnp.Segment) (Backend_getUserStorageUsage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getUserStorageUsage_Results(st), err
}

func ReadRootBackend_getUserStorageUsage_Results(msg *capnp.Message) (Backend_getUserStorageUsage_Results, error) {
	root, err := msg.Root()
	return Backend_getUserStorageUsage_Results(root.Struct()), err
}

func (s Backend_getUserStorageUsage_Results) String() string {
	str, _ := text.Marshal(0xa1c73384bc38ab4b, capnp.Struct(s))
	return str
}

func (s Backend_getUserStorageUsage_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_getUserStorageUsage_Results) DecodeFromPtr(p capnp.Ptr) Backend_getUserStorageUsage_Results {
	return Backend_getUserStorageUsage_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_getUserStorageUsage_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_getUserStorageUsage_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_getUserStorageUsage_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_getUserStorageUsage_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_getUserStorageUsage_Results) Size() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Backend_getUserStorageUsage_Results) SetSize(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

// Backend_getUserStorageUsage_Results_List is a list of Backend_getUserStorageUsage_Results.
type Backend_getUserStorageUsage_Results_List = capnp.StructList[Backend_getUserStorageUsage_Results]

// NewBackend_getUserStorageUsage_Results creates a new list of Backend_getUserStorageUsage_Results.
func NewBackend_getUserStorageUsage_Results_List(s *capnp.Segment, sz int32) (Backend_getUserStorageUsage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Backend_getUserStorageUsage_Results](l), err
}

// Backend_getUserStorageUsage_Results_Future is a wrapper for a Backend_getUserStorageUsage_Results promised by a client call.
type Backend_getUserStorageUsage_Results_Future struct{ *capnp.Future }

func (p Backend_getUserStorageUsage_Results_Future) Struct() (Backend_getUserStorageUsage_Results, error) {
	s, err := p.Future.Struct()
	return Backend_getUserStorageUsage_Results(s), err
}

type Backend_transferGrain_Params capnp.Struct

// Backend_transferGrain_Params_TypeID is the unique identifier for the type Backend_transferGrain_Params.
const Backend_transferGrain_Params_TypeID = 0xcce40aee6005d381

func NewBackend_transferGrain_Params(s *capnp.Segment) (Backend_transferGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_transferGrain_Params(st), err
}

func NewRootBackend_transferGrain_Params(s *capnp.Segment) (Backend_transferGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_transferGrain_Params(st), err
}

func ReadRootBackend_transferGrain_Params(msg *capnp.Message) (Backend_transferGrain_Params, error) {
	root, err := msg.Root()
	return Backend_transferGrain_Params(root.Struct()), err
}

func (s Backend_transferGrain_Params) String() string {
	str, _ := text.Marshal(0xcce40aee6005d381, capnp.Struct(s))
	return str
}

func (s Backend_transferGrain_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_transferGrain_Params) DecodeFromPtr(p capnp.Ptr) Backend_transferGrain_Params {
	return Backend_transferGrain_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_transferGrain_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_transferGrain_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_transferGrain_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_transferGrain_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_transferGrain_Params) OwnerId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_transferGrain_Params) HasOwnerId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_transferGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_transferGrain_Params) SetOwnerId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Backend_transferGrain_Params) GrainId() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Backend_transferGrain_Params) HasGrainId() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Backend_transferGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_transferGrain_Params) SetGrainId(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Backend_transferGrain_Params) NewOwnerId() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Backend_transferGrain_Params) HasNewOwnerId() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Backend_transferGrain_Params) NewOwnerIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_transferGrain_Params) SetNewOwnerId(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

// Backend_transferGrain_Params_List is a list of Backend_transferGrain_Params.
type Backend_transferGrain_Params_List = capnp.StructList[Backend_transferGrain_Params]

// NewBackend_transferGrain_Params creates a new list of Backend_transferGrain_Params.
func NewBackend_transferGrain_Params_List(s *capnp.Segment, sz int32) (Backend_transferGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[Backend_transferGrain_Params](l), err
}

// Backend_transferGrain_Params_Future is a wrapper for a Backend_transferGrain_Params promised by a client call.
type Backend_transferGrain_Params_Future struct{ *capnp.Future }

func (p Backend_transferGrain_Params_Future) Struct() (Backend_transferGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_transferGrain_Params(s), err
}

type Backend_transferGrain_Results capnp.Struct

// Backend_transferGrain_Results_TypeID is the unique identifier for the type Backend_transferGrain_Results.
const Backend_transferGrain_Results_TypeID = 0x86362c69f5c42997

func NewBackend_transferGrain_Results(s *capnp.Segment) (Backend_transferGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_transferGrain_Results(st), err
}

func NewRootBackend_transferGrain_Results(s *capnp.Segment) (Backend_transferGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_transferGrain_Results(st), err
}

func ReadRootBackend_transferGrain_Results(msg *capnp.Message) (Backend_transferGrain_Results, error) {
	root, err := msg.Root()
	return Backend_transferGrain_Results(root.Struct()), err
}

func (s Backend_transferGrain_Results) String() string {
	str, _ := text.Marshal(0x86362c69f5c42997, capnp.Struct(s))
	return str
}

func (s Backend_transferGrain_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_transferGrain_Results) DecodeFromPtr(p capnp.Ptr) Backend_transferGrain_Results {
	return Backend_transferGrain_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_transferGrain_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_transferGrain_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_transferGrain_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_transferGrain_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Backend_transferGrain_Results_List is a list of Backend_transferGrain_Results.
type Backend_transferGrain_Results_List = capnp.StructList[Backend_transferGrain_Results]

// NewBackend_transferGrain_Results creates a new list of Backend_transferGrain_Results.
func NewBackend_transferGrain_Results_List(s *capnp.Segment, sz int32) (Backend_transferGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Backend_transferGrain_Results](l), err
}

// Backend_transferGrain_Results_Future is a wrapper for a Backend_transferGrain_Results promised by a client call.
type Backend_transferGrain_Results_Future struct{ *capnp.Future }

func (p Backend_transferGrain_Results_Future) Struct() (Backend_transferGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_transferGrain_Results(s), err
}

type Backend_deleteUser_Params capnp.Struct

// Backend_deleteUser_Params_TypeID is the unique identifier for the type Backend_deleteUser_Params.
const Backend_deleteUser_Params_TypeID = 0xfa7238e0a9345914

func NewBackend_deleteUser_Params(s *capnp.Segment) (Backend_deleteUser_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deleteUser_Params(st), err
}

func NewRootBackend_deleteUser_Params(s *capnp.Segment) (Backend_deleteUser_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deleteUser_Params(st), err
}

func ReadRootBackend_deleteUser_Params(msg *capnp.Message) (Backend_deleteUser_Params, error) {
	root, err := msg.Root()
	return Backend_deleteUser_Params(root.Struct()), err
}

func (s Backend_deleteUser_Params) String() string {
	str, _ := text.Marshal(0xfa7238e0a9345914, capnp.Struct(s))
	return str
}

func (s Backend_deleteUser_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_deleteUser_Params) DecodeFromPtr(p capnp.Ptr) Backend_deleteUser_Params {
	return Backend_deleteUser_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_deleteUser_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_deleteUser_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_deleteUser_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_deleteUser_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_deleteUser_Params) UserId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_deleteUser_Params) HasUserId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_deleteUser_Params) UserIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_deleteUser_Params) SetUserId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// Backend_deleteUser_Params_List is a list of Backend_deleteUser_Params.
type Backend_deleteUser_Params_List = capnp.StructList[Backend_deleteUser_Params]

// NewBackend_deleteUser_Params creates a new list of Backend_deleteUser_Params.
func NewBackend_deleteUser_Params_List(s *capnp.Segment, sz int32) (Backend_deleteUser_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Backend_deleteUser_Params](l), err
}

// Backend_deleteUser_Params_Future is a wrapper for a Backend_deleteUser_Params promised by a client call.
type Backend_deleteUser_Params_Future struct{ *capnp.Future }

func (p Backend_deleteUser_Params_Future) Struct() (Backend_deleteUser_Params, error) {
	s, err := p.Future.Struct()
	return Backend_deleteUser_Params(s), err
}

type Backend_deleteUser_Results capnp.Struct

// Backend_deleteUser_Results_TypeID is the unique identifier for the type Backend_deleteUser_Results.
const Backend_deleteUser_Results_TypeID = 0x9145c7ea308343d9

func NewBackend_deleteUser_Results(s *capnp.Segment) (Backend_deleteUser_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteUser_Results(st), err
}

func NewRootBackend_deleteUser_Results(s *capnp.Segment) (Backend_deleteUser_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteUser_Results(st), err
}

func ReadRootBackend_deleteUser_Results(msg *capnp.Message) (Backend_deleteUser_Results, error) {
	root, err := msg.Root()
	return Backend_deleteUser_Results(root.Struct()), err
}

func (s Backend_deleteUser_Results) String() string {
	str, _ := text.Marshal(0x9145c7ea308343d9, capnp.Struct(s))
	return str
}

func (s Backend_deleteUser_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_deleteUser_Results) DecodeFromPtr(p capnp.Ptr) Backend_deleteUser_Results {
	return Backend_deleteUser_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_deleteUser_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_deleteUser_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_deleteUser_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_deleteUser_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Backend_deleteUser_Results_List is a list of Backend_deleteUser_Results.
type Backend_deleteUser_Results_List = capnp.StructList[Backend_deleteUser_Results]

// NewBackend_deleteUser_Results creates a new list of Backend_deleteUser_Results.
func NewBackend_deleteUser_Results_List(s *capnp.Segment, sz int32) (Backend_deleteUser_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Backend_deleteUser_Results](l), err
}

// Backend_deleteUser_Results_Future is a wrapper for a Backend_deleteUser_Results promised by a client call.
type Backend_deleteUser_Results_Future struct{ *capnp.Future }

func (p Backend_deleteUser_Results_Future) Struct() (Backend_deleteUser_Results, error) {
	s, err := p.Future.Struct()
	return Backend_deleteUser_Results(s), err
}

type Backend_ping_Params capnp.Struct

// Backend_ping_Params_TypeID is the unique identifier for the type Backend_ping_Params.
const Backend_ping_Params_TypeID = 0xcb56f444d1311800

func NewBackend_ping_Params(s *capnp.Segment) (Backend_ping_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_ping_Params(st), err
}

func NewRootBackend_ping_Params(s *capnp.Segment) (Backend_ping_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_ping_Params(st), err
}

func ReadRootBackend_ping_Params(msg *capnp.Message) (Backend_ping_Params, error) {
	root, err := msg.Root()
	return Backend_ping_Params(root.Struct()), err
}

func (s Backend_ping_Params) String() string {
	str, _ := text.Marshal(0xcb56f444d1311800, capnp.Struct(s))
	return str
}

func (s Backend_ping_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_ping_Params) DecodeFromPtr(p capnp.Ptr) Backend_ping_Params {
	return Backend_ping_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_ping_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_ping_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_ping_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_ping_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Backend_ping_Params_List is a list of Backend_ping_Params.
type Backend_ping_Params_List = capnp.StructList[Backend_ping_Params]

// NewBackend_ping_Params creates a new list of Backend_ping_Params.
func NewBackend_ping_Params_List(s *capnp.Segment, sz int32) (Backend_ping_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Backend_ping_Params](l), err
}

// Backend_ping_Params_Future is a wrapper for a Backend_ping_Params promised by a client call.
type Backend_ping_Params_Future struct{ *capnp.Future }

func (p Backend_ping_Params_Future) Struct() (Backend_ping_Params, error) {
	s, err := p.Future.Struct()
	return Backend_ping_Params(s), err
}

type Backend_ping_Results capnp.Struct

// Backend_ping_Results_TypeID is the unique identifier for the type Backend_ping_Results.
const Backend_ping_Results_TypeID = 0xe3a9cebde9177d60

func NewBackend_ping_Results(s *capnp.Segment) (Backend_ping_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_ping_Results(st), err
}

func NewRootBackend_ping_Results(s *capnp.Segment) (Backend_ping_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_ping_Results(st), err
}

func ReadRootBackend_ping_Results(msg *capnp.Message) (Backend_ping_Results, error) {
	root, err := msg.Root()
	return Backend_ping_Results(root.Struct()), err
}

func (s Backend_ping_Results) String() string {
	str, _ := text.Marshal(0xe3a9cebde9177d60, capnp.Struct(s))
	return str
}

func (s Backend_ping_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_ping_Results) DecodeFromPtr(p capnp.Ptr) Backend_ping_Results {
	return Backend_ping_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_ping_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_ping_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_ping_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_ping_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Backend_ping_Results_List is a list of Backend_ping_Results.
type Backend_ping_Results_List = capnp.StructList[Backend_ping_Results]

// NewBackend_ping_Results creates a new list of Backend_ping_Results.
func NewBackend_ping_Results_List(s *capnp.Segment, sz int32) (Backend_ping_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Backend_ping_Results](l), err
}

// Backend_ping_Results_Future is a wrapper for a Backend_ping_Results promised by a client call.
type Backend_ping_Results_Future struct{ *capnp.Future }

func (p Backend_ping_Results_Future) Struct() (Backend_ping_Results, error) {
	s, err := p.Future.Struct()
	return Backend_ping_Results(s), err
}

type Backend_getGrainStorageUsage_Params capnp.Struct

// Backend_getGrainStorageUsage_Params_TypeID is the unique identifier for the type Backend_getGrainStorageUsage_Params.
const Backend_getGrainStorageUsage_Params_TypeID = 0xe06fe4e0d4e93178

func NewBackend_getGrainStorageUsage_Params(s *capnp.Segment) (Backend_getGrainStorageUsage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_getGrainStorageUsage_Params(st), err
}

func NewRootBackend_getGrainStorageUsage_Params(s *capnp.Segment) (Backend_getGrainStorageUsage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_getGrainStorageUsage_Params(st), err
}

func ReadRootBackend_getGrainStorageUsage_Params(msg *capnp.Message) (Backend_getGrainStorageUsage_Params, error) {
	root, err := msg.Root()
	return Backend_getGrainStorageUsage_Params(root.Struct()), err
}

func (s Backend_getGrainStorageUsage_Params) String() string {
	str, _ := text.Marshal(0xe06fe4e0d4e93178, capnp.Struct(s))
	return str
}

func (s Backend_getGrainStorageUsage_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_getGrainStorageUsage_Params) DecodeFromPtr(p capnp.Ptr) Backend_getGrainStorageUsage_Params {
	return Backend_getGrainStorageUsage_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_getGrainStorageUsage_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_getGrainStorageUsage_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_getGrainStorageUsage_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_getGrainStorageUsage_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_getGrainStorageUsage_Params) OwnerId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Backend_getGrainStorageUsage_Params) HasOwnerId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Backend_getGrainStorageUsage_Params) OwnerIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_getGrainStorageUsage_Params) SetOwnerId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Backend_getGrainStorageUsage_Params) GrainId() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Backend_getGrainStorageUsage_Params) HasGrainId() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Backend_getGrainStorageUsage_Params) GrainIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_getGrainStorageUsage_Params) SetGrainId(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// Backend_getGrainStorageUsage_Params_List is a list of Backend_getGrainStorageUsage_Params.
type Backend_getGrainStorageUsage_Params_List = capnp.StructList[Backend_getGrainStorageUsage_Params]

// NewBackend_getGrainStorageUsage_Params creates a new list of Backend_getGrainStorageUsage_Params.
func NewBackend_getGrainStorageUsage_Params_List(s *capnp.Segment, sz int32) (Backend_getGrainStorageUsage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[Backend_getGrainStorageUsage_Params](l), err
}

// Backend_getGrainStorageUsage_Params_Future is a wrapper for a Backend_getGrainStorageUsage_Params promised by a client call.
type Backend_getGrainStorageUsage_Params_Future struct{ *capnp.Future }

func (p Backend_getGrainStorageUsage_Params_Future) Struct() (Backend_getGrainStorageUsage_Params, error) {
	s, err := p.Future.Struct()
	return Backend_getGrainStorageUsage_Params(s), err
}

type Backend_getGrainStorageUsage_Results capnp.Struct

// Backend_getGrainStorageUsage_Results_TypeID is the unique identifier for the type Backend_getGrainStorageUsage_Results.
const Backend_getGrainStorageUsage_Results_TypeID = 0x809d3d6d45c4c37d

func NewBackend_getGrainStorageUsage_Results(s *capnp.Segment) (Backend_getGrainStorageUsage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getGrainStorageUsage_Results(st), err
}

func NewRootBackend_getGrainStorageUsage_Results(s *capnp.Segment) (Backend_getGrainStorageUsage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getGrainStorageUsage_Results(st), err
}

func ReadRootBackend_getGrainStorageUsage_Results(msg *capnp.Message) (Backend_getGrainStorageUsage_Results, error) {
	root, err := msg.Root()
	return Backend_getGrainStorageUsage_Results(root.Struct()), err
}

func (s Backend_getGrainStorageUsage_Results) String() string {
	str, _ := text.Marshal(0x809d3d6d45c4c37d, capnp.Struct(s))
	return str
}

func (s Backend_getGrainStorageUsage_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Backend_getGrainStorageUsage_Results) DecodeFromPtr(p capnp.Ptr) Backend_getGrainStorageUsage_Results {
	return Backend_getGrainStorageUsage_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Backend_getGrainStorageUsage_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Backend_getGrainStorageUsage_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Backend_getGrainStorageUsage_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Backend_getGrainStorageUsage_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Backend_getGrainStorageUsage_Results) Size() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Backend_getGrainStorageUsage_Results) SetSize(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

// Backend_getGrainStorageUsage_Results_List is a list of Backend_getGrainStorageUsage_Results.
type Backend_getGrainStorageUsage_Results_List = capnp.StructList[Backend_getGrainStorageUsage_Results]

// NewBackend_getGrainStorageUsage_Results creates a new list of Backend_getGrainStorageUsage_Results.
func NewBackend_getGrainStorageUsage_Results_List(s *capnp.Segment, sz int32) (Backend_getGrainStorageUsage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Backend_getGrainStorageUsage_Results](l), err
}

// Backend_getGrainStorageUsage_Results_Future is a wrapper for a Backend_getGrainStorageUsage_Results promised by a client call.
type Backend_getGrainStorageUsage_Results_Future struct{ *capnp.Future }

func (p Backend_getGrainStorageUsage_Results_Future) Struct() (Backend_getGrainStorageUsage_Results, error) {
	s, err := p.Future.Struct()
	return Backend_getGrainStorageUsage_Results(s), err
}

type GatewayRouter capnp.Client

// GatewayRouter_TypeID is the unique identifier for the type GatewayRouter.
const GatewayRouter_TypeID = 0xc3a9d72077d3a1da

func (c GatewayRouter) OpenUiSession(ctx context.Context, params func(GatewayRouter_openUiSession_Params) error) (GatewayRouter_openUiSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      0,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "openUiSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_openUiSession_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return GatewayRouter_openUiSession_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) OpenApiSession(ctx context.Context, params func(GatewayRouter_openApiSession_Params) error) (GatewayRouter_openApiSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      1,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "openApiSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_openApiSession_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return GatewayRouter_openApiSession_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) GetStaticAsset(ctx context.Context, params func(GatewayRouter_getStaticAsset_Params) error) (GatewayRouter_getStaticAsset_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      2,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getStaticAsset",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_getStaticAsset_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return GatewayRouter_getStaticAsset_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) GetStaticPublishingHost(ctx context.Context, params func(GatewayRouter_getStaticPublishingHost_Params) error) (GatewayRouter_getStaticPublishingHost_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      3,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getStaticPublishingHost",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_getStaticPublishingHost_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return GatewayRouter_getStaticPublishingHost_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) RouteForeignHostname(ctx context.Context, params func(GatewayRouter_routeForeignHostname_Params) error) (GatewayRouter_routeForeignHostname_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      4,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "routeForeignHostname",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_routeForeignHostname_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return GatewayRouter_routeForeignHostname_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) SubscribeTlsKeys(ctx context.Context, params func(GatewayRouter_subscribeTlsKeys_Params) error) (GatewayRouter_subscribeTlsKeys_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      5,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "subscribeTlsKeys",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_subscribeTlsKeys_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return GatewayRouter_subscribeTlsKeys_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) GetApiHostOptions(ctx context.Context, params func(GatewayRouter_getApiHostOptions_Params) error) (GatewayRouter_getApiHostOptions_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      6,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getApiHostOptions",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_getApiHostOptions_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return GatewayRouter_getApiHostOptions_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) GetApiHostResource(ctx context.Context, params func(GatewayRouter_getApiHostResource_Params) error) (GatewayRouter_getApiHostResource_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      7,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getApiHostResource",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_getApiHostResource_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return GatewayRouter_getApiHostResource_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) KeepaliveApiToken(ctx context.Context, params func(GatewayRouter_keepaliveApiToken_Params) error) (GatewayRouter_keepaliveApiToken_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      8,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "keepaliveApiToken",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_keepaliveApiToken_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return GatewayRouter_keepaliveApiToken_Results_Future{Future: ans.Future()}, release
}

func (c GatewayRouter) AddRef() GatewayRouter {
	return GatewayRouter(capnp.Client(c).AddRef())
}

func (c GatewayRouter) Release() {
	capnp.Client(c).Release()
}

func (c GatewayRouter) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (GatewayRouter) DecodeFromPtr(p capnp.Ptr) GatewayRouter {
	return GatewayRouter(capnp.Client{}.DecodeFromPtr(p))
}

func (c GatewayRouter) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// A GatewayRouter_Server is a GatewayRouter with a local implementation.
type GatewayRouter_Server interface {
	OpenUiSession(context.Context, GatewayRouter_openUiSession) error

	OpenApiSession(context.Context, GatewayRouter_openApiSession) error

	GetStaticAsset(context.Context, GatewayRouter_getStaticAsset) error

	GetStaticPublishingHost(context.Context, GatewayRouter_getStaticPublishingHost) error

	RouteForeignHostname(context.Context, GatewayRouter_routeForeignHostname) error

	SubscribeTlsKeys(context.Context, GatewayRouter_subscribeTlsKeys) error

	GetApiHostOptions(context.Context, GatewayRouter_getApiHostOptions) error

	GetApiHostResource(context.Context, GatewayRouter_getApiHostResource) error

	KeepaliveApiToken(context.Context, GatewayRouter_keepaliveApiToken) error
}

// GatewayRouter_NewServer creates a new Server from an implementation of GatewayRouter_Server.
func GatewayRouter_NewServer(s GatewayRouter_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(GatewayRouter_Methods(nil, s), s, c)
}

// GatewayRouter_ServerToClient creates a new Client from an implementation of GatewayRouter_Server.
// The caller is responsible for calling Release on the returned Client.
func GatewayRouter_ServerToClient(s GatewayRouter_Server) GatewayRouter {
	return GatewayRouter(capnp.NewClient(GatewayRouter_NewServer(s)))
}

// GatewayRouter_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func GatewayRouter_Methods(methods []server.Method, s GatewayRouter_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 9)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      0,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "openUiSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OpenUiSession(ctx, GatewayRouter_openUiSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      1,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "openApiSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OpenApiSession(ctx, GatewayRouter_openApiSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      2,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getStaticAsset",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetStaticAsset(ctx, GatewayRouter_getStaticAsset{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      3,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getStaticPublishingHost",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetStaticPublishingHost(ctx, GatewayRouter_getStaticPublishingHost{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      4,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "routeForeignHostname",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.RouteForeignHostname(ctx, GatewayRouter_routeForeignHostname{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      5,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "subscribeTlsKeys",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SubscribeTlsKeys(ctx, GatewayRouter_subscribeTlsKeys{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      6,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getApiHostOptions",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetApiHostOptions(ctx, GatewayRouter_getApiHostOptions{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      7,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getApiHostResource",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetApiHostResource(ctx, GatewayRouter_getApiHostResource{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      8,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "keepaliveApiToken",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.KeepaliveApiToken(ctx, GatewayRouter_keepaliveApiToken{call})
		},
	})

	return methods
}

// GatewayRouter_openUiSession holds the state for a server call to GatewayRouter.openUiSession.
// See server.Call for documentation.
type GatewayRouter_openUiSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_openUiSession) Args() GatewayRouter_openUiSession_Params {
	return GatewayRouter_openUiSession_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c GatewayRouter_openUiSession) AllocResults() (GatewayRouter_openUiSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GatewayRouter_openUiSession_Results(r), err
}

// GatewayRouter_openApiSession holds the state for a server call to GatewayRouter.openApiSession.
// See server.Call for documentation.
type GatewayRouter_openApiSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_openApiSession) Args() GatewayRouter_openApiSession_Params {
	return GatewayRouter_openApiSession_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c GatewayRouter_openApiSession) AllocResults() (GatewayRouter_openApiSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_openApiSession_Results(r), err
}

// GatewayRouter_getStaticAsset holds the state for a server call to GatewayRouter.getStaticAsset.
// See server.Call for documentation.
type GatewayRouter_getStaticAsset struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_getStaticAsset) Args() GatewayRouter_getStaticAsset_Params {
	return GatewayRouter_getStaticAsset_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c GatewayRouter_getStaticAsset) AllocResults() (GatewayRouter_getStaticAsset_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GatewayRouter_getStaticAsset_Results(r), err
}

// GatewayRouter_getStaticPublishingHost holds the state for a server call to GatewayRouter.getStaticPublishingHost.
// See server.Call for documentation.
type GatewayRouter_getStaticPublishingHost struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_getStaticPublishingHost) Args() GatewayRouter_getStaticPublishingHost_Params {
	return GatewayRouter_getStaticPublishingHost_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c GatewayRouter_getStaticPublishingHost) AllocResults() (GatewayRouter_getStaticPublishingHost_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticPublishingHost_Results(r), err
}

// GatewayRouter_routeForeignHostname holds the state for a server call to GatewayRouter.routeForeignHostname.
// See server.Call for documentation.
type GatewayRouter_routeForeignHostname struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_routeForeignHostname) Args() GatewayRouter_routeForeignHostname_Params {
	return GatewayRouter_routeForeignHostname_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c GatewayRouter_routeForeignHostname) AllocResults() (GatewayRouter_routeForeignHostname_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_routeForeignHostname_Results(r), err
}

// GatewayRouter_subscribeTlsKeys holds the state for a server call to GatewayRouter.subscribeTlsKeys.
// See server.Call for documentation.
type GatewayRouter_subscribeTlsKeys struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_subscribeTlsKeys) Args() GatewayRouter_subscribeTlsKeys_Params {
	return GatewayRouter_subscribeTlsKeys_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c GatewayRouter_subscribeTlsKeys) AllocResults() (GatewayRouter_subscribeTlsKeys_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_subscribeTlsKeys_Results(r), err
}

// GatewayRouter_getApiHostOptions holds the state for a server call to GatewayRouter.getApiHostOptions.
// See server.Call for documentation.
type GatewayRouter_getApiHostOptions struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_getApiHostOptions) Args() GatewayRouter_getApiHostOptions_Params {
	return GatewayRouter_getApiHostOptions_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c GatewayRouter_getApiHostOptions) AllocResults() (GatewayRouter_getApiHostOptions_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getApiHostOptions_Results(r), err
}

// GatewayRouter_getApiHostResource holds the state for a server call to GatewayRouter.getApiHostResource.
// See server.Call for documentation.
type GatewayRouter_getApiHostResource struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_getApiHostResource) Args() GatewayRouter_getApiHostResource_Params {
	return GatewayRouter_getApiHostResource_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c GatewayRouter_getApiHostResource) AllocResults() (GatewayRouter_getApiHostResource_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getApiHostResource_Results(r), err
}

// GatewayRouter_keepaliveApiToken holds the state for a server call to GatewayRouter.keepaliveApiToken.
// See server.Call for documentation.
type GatewayRouter_keepaliveApiToken struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_keepaliveApiToken) Args() GatewayRouter_keepaliveApiToken_Params {
	return GatewayRouter_keepaliveApiToken_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c GatewayRouter_keepaliveApiToken) AllocResults() (GatewayRouter_keepaliveApiToken_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_keepaliveApiToken_Results(r), err
}

// GatewayRouter_List is a list of GatewayRouter.
type GatewayRouter_List = capnp.CapList[GatewayRouter]

// NewGatewayRouter creates a new list of GatewayRouter.
func NewGatewayRouter_List(s *capnp.Segment, sz int32) (GatewayRouter_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[GatewayRouter](l), err
}

type GatewayRouter_StaticResource capnp.Struct

// GatewayRouter_StaticResource_TypeID is the unique identifier for the type GatewayRouter_StaticResource.
const GatewayRouter_StaticResource_TypeID = 0xb78d8adc5c13b1b9

func NewGatewayRouter_StaticResource(s *capnp.Segment) (GatewayRouter_StaticResource, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return GatewayRouter_StaticResource(st), err
}

func NewRootGatewayRouter_StaticResource(s *capnp.Segment) (GatewayRouter_StaticResource, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return GatewayRouter_StaticResource(st), err
}

func ReadRootGatewayRouter_StaticResource(msg *capnp.Message) (GatewayRouter_StaticResource, error) {
	root, err := msg.Root()
	return GatewayRouter_StaticResource(root.Struct()), err
}

func (s GatewayRouter_StaticResource) String() string {
	str, _ := text.Marshal(0xb78d8adc5c13b1b9, capnp.Struct(s))
	return str
}

func (s GatewayRouter_StaticResource) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_StaticResource) DecodeFromPtr(p capnp.Ptr) GatewayRouter_StaticResource {
	return GatewayRouter_StaticResource(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_StaticResource) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_StaticResource) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_StaticResource) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_StaticResource) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_StaticResource) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_StaticResource) HasType() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_StaticResource) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_StaticResource) SetType(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s GatewayRouter_StaticResource) Language() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s GatewayRouter_StaticResource) HasLanguage() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s GatewayRouter_StaticResource) LanguageBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s GatewayRouter_StaticResource) SetLanguage(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s GatewayRouter_StaticResource) Encoding() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s GatewayRouter_StaticResource) HasEncoding() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s GatewayRouter_StaticResource) EncodingBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s GatewayRouter_StaticResource) SetEncoding(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s GatewayRouter_StaticResource) Body() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return []byte(p.Data()), err
}

func (s GatewayRouter_StaticResource) HasBody() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s GatewayRouter_StaticResource) SetBody(v []byte) error {
	return capnp.Struct(s).SetData(3, v)
}

// GatewayRouter_StaticResource_List is a list of GatewayRouter_StaticResource.
type GatewayRouter_StaticResource_List = capnp.StructList[GatewayRouter_StaticResource]

// NewGatewayRouter_StaticResource creates a new list of GatewayRouter_StaticResource.
func NewGatewayRouter_StaticResource_List(s *capnp.Segment, sz int32) (GatewayRouter_StaticResource_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return capnp.StructList[GatewayRouter_StaticResource](l), err
}

// GatewayRouter_StaticResource_Future is a wrapper for a GatewayRouter_StaticResource promised by a client call.
type GatewayRouter_StaticResource_Future struct{ *capnp.Future }

func (p GatewayRouter_StaticResource_Future) Struct() (GatewayRouter_StaticResource, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_StaticResource(s), err
}

type GatewayRouter_ForeignHostnameInfo capnp.Struct
type GatewayRouter_ForeignHostnameInfo_Which uint16

const (
	GatewayRouter_ForeignHostnameInfo_Which_unknown          GatewayRouter_ForeignHostnameInfo_Which = 0
	GatewayRouter_ForeignHostnameInfo_Which_staticPublishing GatewayRouter_ForeignHostnameInfo_Which = 1
	GatewayRouter_ForeignHostnameInfo_Which_standalone       GatewayRouter_ForeignHostnameInfo_Which = 2
)

func (w GatewayRouter_ForeignHostnameInfo_Which) String() string {
	const s = "unknownstaticPublishingstandalone"
	switch w {
	case GatewayRouter_ForeignHostnameInfo_Which_unknown:
		return s[0:7]
	case GatewayRouter_ForeignHostnameInfo_Which_staticPublishing:
		return s[7:23]
	case GatewayRouter_ForeignHostnameInfo_Which_standalone:
		return s[23:33]

	}
	return "GatewayRouter_ForeignHostnameInfo_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// GatewayRouter_ForeignHostnameInfo_TypeID is the unique identifier for the type GatewayRouter_ForeignHostnameInfo.
const GatewayRouter_ForeignHostnameInfo_TypeID = 0xc70587321bf0dd8b

func NewGatewayRouter_ForeignHostnameInfo(s *capnp.Segment) (GatewayRouter_ForeignHostnameInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GatewayRouter_ForeignHostnameInfo(st), err
}

func NewRootGatewayRouter_ForeignHostnameInfo(s *capnp.Segment) (GatewayRouter_ForeignHostnameInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GatewayRouter_ForeignHostnameInfo(st), err
}

func ReadRootGatewayRouter_ForeignHostnameInfo(msg *capnp.Message) (GatewayRouter_ForeignHostnameInfo, error) {
	root, err := msg.Root()
	return GatewayRouter_ForeignHostnameInfo(root.Struct()), err
}

func (s GatewayRouter_ForeignHostnameInfo) String() string {
	str, _ := text.Marshal(0xc70587321bf0dd8b, capnp.Struct(s))
	return str
}

func (s GatewayRouter_ForeignHostnameInfo) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_ForeignHostnameInfo) DecodeFromPtr(p capnp.Ptr) GatewayRouter_ForeignHostnameInfo {
	return GatewayRouter_ForeignHostnameInfo(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_ForeignHostnameInfo) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}

func (s GatewayRouter_ForeignHostnameInfo) Which() GatewayRouter_ForeignHostnameInfo_Which {
	return GatewayRouter_ForeignHostnameInfo_Which(capnp.Struct(s).Uint16(0))
}
func (s GatewayRouter_ForeignHostnameInfo) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_ForeignHostnameInfo) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_ForeignHostnameInfo) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_ForeignHostnameInfo) SetUnknown() {
	capnp.Struct(s).SetUint16(0, 0)

}

func (s GatewayRouter_ForeignHostnameInfo) StaticPublishing() (string, error) {
	if capnp.Struct(s).Uint16(0) != 1 {
		panic("Which() != staticPublishing")
	}
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_ForeignHostnameInfo) HasStaticPublishing() bool {
	if capnp.Struct(s).Uint16(0) != 1 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_ForeignHostnameInfo) StaticPublishingBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_ForeignHostnameInfo) SetStaticPublishing(v string) error {
	capnp.Struct(s).SetUint16(0, 1)
	return capnp.Struct(s).SetText(0, v)
}

func (s GatewayRouter_ForeignHostnameInfo) SetStandalone() {
	capnp.Struct(s).SetUint16(0, 2)

}

func (s GatewayRouter_ForeignHostnameInfo) TtlSeconds() uint32 {
	return capnp.Struct(s).Uint32(4)
}

func (s GatewayRouter_ForeignHostnameInfo) SetTtlSeconds(v uint32) {
	capnp.Struct(s).SetUint32(4, v)
}

// GatewayRouter_ForeignHostnameInfo_List is a list of GatewayRouter_ForeignHostnameInfo.
type GatewayRouter_ForeignHostnameInfo_List = capnp.StructList[GatewayRouter_ForeignHostnameInfo]

// NewGatewayRouter_ForeignHostnameInfo creates a new list of GatewayRouter_ForeignHostnameInfo.
func NewGatewayRouter_ForeignHostnameInfo_List(s *capnp.Segment, sz int32) (GatewayRouter_ForeignHostnameInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_ForeignHostnameInfo](l), err
}

// GatewayRouter_ForeignHostnameInfo_Future is a wrapper for a GatewayRouter_ForeignHostnameInfo promised by a client call.
type GatewayRouter_ForeignHostnameInfo_Future struct{ *capnp.Future }

func (p GatewayRouter_ForeignHostnameInfo_Future) Struct() (GatewayRouter_ForeignHostnameInfo, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_ForeignHostnameInfo(s), err
}

type GatewayRouter_TlsKeyCallback capnp.Client

// GatewayRouter_TlsKeyCallback_TypeID is the unique identifier for the type GatewayRouter_TlsKeyCallback.
const GatewayRouter_TlsKeyCallback_TypeID = 0xa37265bba0f4c58f

func (c GatewayRouter_TlsKeyCallback) SetKeys(ctx context.Context, params func(GatewayRouter_TlsKeyCallback_setKeys_Params) error) (GatewayRouter_TlsKeyCallback_setKeys_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xa37265bba0f4c58f,
			MethodID:      0,
			InterfaceName: "backend.capnp:GatewayRouter.TlsKeyCallback",
			MethodName:    "setKeys",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_TlsKeyCallback_setKeys_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return GatewayRouter_TlsKeyCallback_setKeys_Results_Future{Future: ans.Future()}, release
}

func (c GatewayRouter_TlsKeyCallback) AddRef() GatewayRouter_TlsKeyCallback {
	return GatewayRouter_TlsKeyCallback(capnp.Client(c).AddRef())
}

func (c GatewayRouter_TlsKeyCallback) Release() {
	capnp.Client(c).Release()
}

func (c GatewayRouter_TlsKeyCallback) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (GatewayRouter_TlsKeyCallback) DecodeFromPtr(p capnp.Ptr) GatewayRouter_TlsKeyCallback {
	return GatewayRouter_TlsKeyCallback(capnp.Client{}.DecodeFromPtr(p))
}

func (c GatewayRouter_TlsKeyCallback) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// A GatewayRouter_TlsKeyCallback_Server is a GatewayRouter_TlsKeyCallback with a local implementation.
type GatewayRouter_TlsKeyCallback_Server interface {
	SetKeys(context.Context, GatewayRouter_TlsKeyCallback_setKeys) error
}

// GatewayRouter_TlsKeyCallback_NewServer creates a new Server from an implementation of GatewayRouter_TlsKeyCallback_Server.
func GatewayRouter_TlsKeyCallback_NewServer(s GatewayRouter_TlsKeyCallback_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(GatewayRouter_TlsKeyCallback_Methods(nil, s), s, c)
}

// GatewayRouter_TlsKeyCallback_ServerToClient creates a new Client from an implementation of GatewayRouter_TlsKeyCallback_Server.
// The caller is responsible for calling Release on the returned Client.
func GatewayRouter_TlsKeyCallback_ServerToClient(s GatewayRouter_TlsKeyCallback_Server) GatewayRouter_TlsKeyCallback {
	return GatewayRouter_TlsKeyCallback(capnp.NewClient(GatewayRouter_TlsKeyCallback_NewServer(s)))
}

// GatewayRouter_TlsKeyCallback_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func GatewayRouter_TlsKeyCallback_Methods(methods []server.Method, s GatewayRouter_TlsKeyCallback_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa37265bba0f4c58f,
			MethodID:      0,
			InterfaceName: "backend.capnp:GatewayRouter.TlsKeyCallback",
			MethodName:    "setKeys",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SetKeys(ctx, GatewayRouter_TlsKeyCallback_setKeys{call})
		},
	})

	return methods
}

// GatewayRouter_TlsKeyCallback_setKeys holds the state for a server call to GatewayRouter_TlsKeyCallback.setKeys.
// See server.Call for documentation.
type GatewayRouter_TlsKeyCallback_setKeys struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_TlsKeyCallback_setKeys) Args() GatewayRouter_TlsKeyCallback_setKeys_Params {
	return GatewayRouter_TlsKeyCallback_setKeys_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c GatewayRouter_TlsKeyCallback_setKeys) AllocResults() (GatewayRouter_TlsKeyCallback_setKeys_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_TlsKeyCallback_setKeys_Results(r), err
}

// GatewayRouter_TlsKeyCallback_List is a list of GatewayRouter_TlsKeyCallback.
type GatewayRouter_TlsKeyCallback_List = capnp.CapList[GatewayRouter_TlsKeyCallback]

// NewGatewayRouter_TlsKeyCallback creates a new list of GatewayRouter_TlsKeyCallback.
func NewGatewayRouter_TlsKeyCallback_List(s *capnp.Segment, sz int32) (GatewayRouter_TlsKeyCallback_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[GatewayRouter_TlsKeyCallback](l), err
}

type GatewayRouter_TlsKeyCallback_setKeys_Params capnp.Struct

// GatewayRouter_TlsKeyCallback_setKeys_Params_TypeID is the unique identifier for the type GatewayRouter_TlsKeyCallback_setKeys_Params.
const GatewayRouter_TlsKeyCallback_setKeys_Params_TypeID = 0xbb33202722933fa6

func NewGatewayRouter_TlsKeyCallback_setKeys_Params(s *capnp.Segment) (GatewayRouter_TlsKeyCallback_setKeys_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_TlsKeyCallback_setKeys_Params(st), err
}

func NewRootGatewayRouter_TlsKeyCallback_setKeys_Params(s *capnp.Segment) (GatewayRouter_TlsKeyCallback_setKeys_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_TlsKeyCallback_setKeys_Params(st), err
}

func ReadRootGatewayRouter_TlsKeyCallback_setKeys_Params(msg *capnp.Message) (GatewayRouter_TlsKeyCallback_setKeys_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_TlsKeyCallback_setKeys_Params(root.Struct()), err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) String() string {
	str, _ := text.Marshal(0xbb33202722933fa6, capnp.Struct(s))
	return str
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_TlsKeyCallback_setKeys_Params) DecodeFromPtr(p capnp.Ptr) GatewayRouter_TlsKeyCallback_setKeys_Params {
	return GatewayRouter_TlsKeyCallback_setKeys_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_TlsKeyCallback_setKeys_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_TlsKeyCallback_setKeys_Params) Key() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) HasKey() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) KeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) SetKey(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) CertChain() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) HasCertChain() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) CertChainBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) SetCertChain(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// GatewayRouter_TlsKeyCallback_setKeys_Params_List is a list of GatewayRouter_TlsKeyCallback_setKeys_Params.
type GatewayRouter_TlsKeyCallback_setKeys_Params_List = capnp.StructList[GatewayRouter_TlsKeyCallback_setKeys_Params]

// NewGatewayRouter_TlsKeyCallback_setKeys_Params creates a new list of GatewayRouter_TlsKeyCallback_setKeys_Params.
func NewGatewayRouter_TlsKeyCallback_setKeys_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_TlsKeyCallback_setKeys_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[GatewayRouter_TlsKeyCallback_setKeys_Params](l), err
}

// GatewayRouter_TlsKeyCallback_setKeys_Params_Future is a wrapper for a GatewayRouter_TlsKeyCallback_setKeys_Params promised by a client call.
type GatewayRouter_TlsKeyCallback_setKeys_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_TlsKeyCallback_setKeys_Params_Future) Struct() (GatewayRouter_TlsKeyCallback_setKeys_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_TlsKeyCallback_setKeys_Params(s), err
}

type GatewayRouter_TlsKeyCallback_setKeys_Results capnp.Struct

// GatewayRouter_TlsKeyCallback_setKeys_Results_TypeID is the unique identifier for the type GatewayRouter_TlsKeyCallback_setKeys_Results.
const GatewayRouter_TlsKeyCallback_setKeys_Results_TypeID = 0xd3961c234a15cdf1

func NewGatewayRouter_TlsKeyCallback_setKeys_Results(s *capnp.Segment) (GatewayRouter_TlsKeyCallback_setKeys_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_TlsKeyCallback_setKeys_Results(st), err
}

func NewRootGatewayRouter_TlsKeyCallback_setKeys_Results(s *capnp.Segment) (GatewayRouter_TlsKeyCallback_setKeys_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_TlsKeyCallback_setKeys_Results(st), err
}

func ReadRootGatewayRouter_TlsKeyCallback_setKeys_Results(msg *capnp.Message) (GatewayRouter_TlsKeyCallback_setKeys_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_TlsKeyCallback_setKeys_Results(root.Struct()), err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Results) String() string {
	str, _ := text.Marshal(0xd3961c234a15cdf1, capnp.Struct(s))
	return str
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_TlsKeyCallback_setKeys_Results) DecodeFromPtr(p capnp.Ptr) GatewayRouter_TlsKeyCallback_setKeys_Results {
	return GatewayRouter_TlsKeyCallback_setKeys_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_TlsKeyCallback_setKeys_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// GatewayRouter_TlsKeyCallback_setKeys_Results_List is a list of GatewayRouter_TlsKeyCallback_setKeys_Results.
type GatewayRouter_TlsKeyCallback_setKeys_Results_List = capnp.StructList[GatewayRouter_TlsKeyCallback_setKeys_Results]

// NewGatewayRouter_TlsKeyCallback_setKeys_Results creates a new list of GatewayRouter_TlsKeyCallback_setKeys_Results.
func NewGatewayRouter_TlsKeyCallback_setKeys_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_TlsKeyCallback_setKeys_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[GatewayRouter_TlsKeyCallback_setKeys_Results](l), err
}

// GatewayRouter_TlsKeyCallback_setKeys_Results_Future is a wrapper for a GatewayRouter_TlsKeyCallback_setKeys_Results promised by a client call.
type GatewayRouter_TlsKeyCallback_setKeys_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_TlsKeyCallback_setKeys_Results_Future) Struct() (GatewayRouter_TlsKeyCallback_setKeys_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_TlsKeyCallback_setKeys_Results(s), err
}

type GatewayRouter_openUiSession_Params capnp.Struct

// GatewayRouter_openUiSession_Params_TypeID is the unique identifier for the type GatewayRouter_openUiSession_Params.
const GatewayRouter_openUiSession_Params_TypeID = 0x83ffc259cf8da847

func NewGatewayRouter_openUiSession_Params(s *capnp.Segment) (GatewayRouter_openUiSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_openUiSession_Params(st), err
}

func NewRootGatewayRouter_openUiSession_Params(s *capnp.Segment) (GatewayRouter_openUiSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_openUiSession_Params(st), err
}

func ReadRootGatewayRouter_openUiSession_Params(msg *capnp.Message) (GatewayRouter_openUiSession_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_openUiSession_Params(root.Struct()), err
}

func (s GatewayRouter_openUiSession_Params) String() string {
	str, _ := text.Marshal(0x83ffc259cf8da847, capnp.Struct(s))
	return str
}

func (s GatewayRouter_openUiSession_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_openUiSession_Params) DecodeFromPtr(p capnp.Ptr) GatewayRouter_openUiSession_Params {
	return GatewayRouter_openUiSession_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_openUiSession_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_openUiSession_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_openUiSession_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_openUiSession_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_openUiSession_Params) SessionCookie() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_openUiSession_Params) HasSessionCookie() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_openUiSession_Params) SessionCookieBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_openUiSession_Params) SetSessionCookie(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s GatewayRouter_openUiSession_Params) Params() (websession.WebSession_Params, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return websession.WebSession_Params(p.Struct()), err
}

func (s GatewayRouter_openUiSession_Params) HasParams() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s GatewayRouter_openUiSession_Params) SetParams(v websession.WebSession_Params) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewParams sets the params field to a newly
// allocated websession.WebSession_Params struct, preferring placement in s's segment.
func (s GatewayRouter_openUiSession_Params) NewParams() (websession.WebSession_Params, error) {
	ss, err := websession.NewWebSession_Params(capnp.Struct(s).Segment())
	if err != nil {
		return websession.WebSession_Params{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

// GatewayRouter_openUiSession_Params_List is a list of GatewayRouter_openUiSession_Params.
type GatewayRouter_openUiSession_Params_List = capnp.StructList[GatewayRouter_openUiSession_Params]

// NewGatewayRouter_openUiSession_Params creates a new list of GatewayRouter_openUiSession_Params.
func NewGatewayRouter_openUiSession_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_openUiSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[GatewayRouter_openUiSession_Params](l), err
}

// GatewayRouter_openUiSession_Params_Future is a wrapper for a GatewayRouter_openUiSession_Params promised by a client call.
type GatewayRouter_openUiSession_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_openUiSession_Params_Future) Struct() (GatewayRouter_openUiSession_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_openUiSession_Params(s), err
}

func (p GatewayRouter_openUiSession_Params_Future) Params() websession.WebSession_Params_Future {
	return websession.WebSession_Params_Future{Future: p.Future.Field(1, nil)}
}

type GatewayRouter_openUiSession_Results capnp.Struct

// GatewayRouter_openUiSession_Results_TypeID is the unique identifier for the type GatewayRouter_openUiSession_Results.
const GatewayRouter_openUiSession_Results_TypeID = 0xbd05d1a434a60c2a

func NewGatewayRouter_openUiSession_Results(s *capnp.Segment) (GatewayRouter_openUiSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GatewayRouter_openUiSession_Results(st), err
}

func NewRootGatewayRouter_openUiSession_Results(s *capnp.Segment) (GatewayRouter_openUiSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GatewayRouter_openUiSession_Results(st), err
}

func ReadRootGatewayRouter_openUiSession_Results(msg *capnp.Message) (GatewayRouter_openUiSession_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_openUiSession_Results(root.Struct()), err
}

func (s GatewayRouter_openUiSession_Results) String() string {
	str, _ := text.Marshal(0xbd05d1a434a60c2a, capnp.Struct(s))
	return str
}

func (s GatewayRouter_openUiSession_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_openUiSession_Results) DecodeFromPtr(p capnp.Ptr) GatewayRouter_openUiSession_Results {
	return GatewayRouter_openUiSession_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_openUiSession_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_openUiSession_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_openUiSession_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_openUiSession_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_openUiSession_Results) Session() websession.WebSession {
	p, _ := capnp.Struct(s).Ptr(0)
	return websession.WebSession(p.Interface().Client())
}

func (s GatewayRouter_openUiSession_Results) HasSession() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_openUiSession_Results) SetSession(v websession.WebSession) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

func (s GatewayRouter_openUiSession_Results) LoadingIndicator() util.Handle {
	p, _ := capnp.Struct(s).Ptr(1)
	return util.Handle(p.Interface().Client())
}

func (s GatewayRouter_openUiSession_Results) HasLoadingIndicator() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s GatewayRouter_openUiSession_Results) SetLoadingIndicator(v util.Handle) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(1, in.ToPtr())
}

func (s GatewayRouter_openUiSession_Results) ParentOrigin() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s GatewayRouter_openUiSession_Results) HasParentOrigin() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s GatewayRouter_openUiSession_Results) ParentOriginBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s GatewayRouter_openUiSession_Results) SetParentOrigin(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

// GatewayRouter_openUiSession_Results_List is a list of GatewayRouter_openUiSession_Results.
type GatewayRouter_openUiSession_Results_List = capnp.StructList[GatewayRouter_openUiSession_Results]

// NewGatewayRouter_openUiSession_Results creates a new list of GatewayRouter_openUiSession_Results.
func NewGatewayRouter_openUiSession_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_openUiSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[GatewayRouter_openUiSession_Results](l), err
}

// GatewayRouter_openUiSession_Results_Future is a wrapper for a GatewayRouter_openUiSession_Results promised by a client call.
type GatewayRouter_openUiSession_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_openUiSession_Results_Future) Struct() (GatewayRouter_openUiSession_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_openUiSession_Results(s), err
}

func (p GatewayRouter_openUiSession_Results_Future) Session() websession.WebSession {
	return websession.WebSession(p.Future.Field(0, nil).Client())
}

func (p GatewayRouter_openUiSession_Results_Future) LoadingIndicator() util.Handle {
	return util.Handle(p.Future.Field(1, nil).Client())
}

type GatewayRouter_openApiSession_Params capnp.Struct

// GatewayRouter_openApiSession_Params_TypeID is the unique identifier for the type GatewayRouter_openApiSession_Params.
const GatewayRouter_openApiSession_Params_TypeID = 0x9a5778b8e7e9745a

func NewGatewayRouter_openApiSession_Params(s *capnp.Segment) (GatewayRouter_openApiSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_openApiSession_Params(st), err
}

func NewRootGatewayRouter_openApiSession_Params(s *capnp.Segment) (GatewayRouter_openApiSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_openApiSession_Params(st), err
}

func ReadRootGatewayRouter_openApiSession_Params(msg *capnp.Message) (GatewayRouter_openApiSession_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_openApiSession_Params(root.Struct()), err
}

func (s GatewayRouter_openApiSession_Params) String() string {
	str, _ := text.Marshal(0x9a5778b8e7e9745a, capnp.Struct(s))
	return str
}

func (s GatewayRouter_openApiSession_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_openApiSession_Params) DecodeFromPtr(p capnp.Ptr) GatewayRouter_openApiSession_Params {
	return GatewayRouter_openApiSession_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_openApiSession_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_openApiSession_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_openApiSession_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_openApiSession_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_openApiSession_Params) ApiToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_openApiSession_Params) HasApiToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_openApiSession_Params) ApiTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_openApiSession_Params) SetApiToken(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s GatewayRouter_openApiSession_Params) Params() (apisession.ApiSession_Params, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return apisession.ApiSession_Params(p.Struct()), err
}

func (s GatewayRouter_openApiSession_Params) HasParams() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s GatewayRouter_openApiSession_Params) SetParams(v apisession.ApiSession_Params) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewParams sets the params field to a newly
// allocated apisession.ApiSession_Params struct, preferring placement in s's segment.
func (s GatewayRouter_openApiSession_Params) NewParams() (apisession.ApiSession_Params, error) {
	ss, err := apisession.NewApiSession_Params(capnp.Struct(s).Segment())
	if err != nil {
		return apisession.ApiSession_Params{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

// GatewayRouter_openApiSession_Params_List is a list of GatewayRouter_openApiSession_Params.
type GatewayRouter_openApiSession_Params_List = capnp.StructList[GatewayRouter_openApiSession_Params]

// NewGatewayRouter_openApiSession_Params creates a new list of GatewayRouter_openApiSession_Params.
func NewGatewayRouter_openApiSession_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_openApiSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[GatewayRouter_openApiSession_Params](l), err
}

// GatewayRouter_openApiSession_Params_Future is a wrapper for a GatewayRouter_openApiSession_Params promised by a client call.
type GatewayRouter_openApiSession_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_openApiSession_Params_Future) Struct() (GatewayRouter_openApiSession_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_openApiSession_Params(s), err
}

func (p GatewayRouter_openApiSession_Params_Future) Params() apisession.ApiSession_Params_Future {
	return apisession.ApiSession_Params_Future{Future: p.Future.Field(1, nil)}
}

type GatewayRouter_openApiSession_Results capnp.Struct

// GatewayRouter_openApiSession_Results_TypeID is the unique identifier for the type GatewayRouter_openApiSession_Results.
const GatewayRouter_openApiSession_Results_TypeID = 0xcc8a20b16569f588

func NewGatewayRouter_openApiSession_Results(s *capnp.Segment) (GatewayRouter_openApiSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_openApiSession_Results(st), err
}

func NewRootGatewayRouter_openApiSession_Results(s *capnp.Segment) (GatewayRouter_openApiSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_openApiSession_Results(st), err
}

func ReadRootGatewayRouter_openApiSession_Results(msg *capnp.Message) (GatewayRouter_openApiSession_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_openApiSession_Results(root.Struct()), err
}

func (s GatewayRouter_openApiSession_Results) String() string {
	str, _ := text.Marshal(0xcc8a20b16569f588, capnp.Struct(s))
	return str
}

func (s GatewayRouter_openApiSession_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_openApiSession_Results) DecodeFromPtr(p capnp.Ptr) GatewayRouter_openApiSession_Results {
	return GatewayRouter_openApiSession_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_openApiSession_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_openApiSession_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_openApiSession_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_openApiSession_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_openApiSession_Results) Session() apisession.ApiSession {
	p, _ := capnp.Struct(s).Ptr(0)
	return apisession.ApiSession(p.Interface().Client())
}

func (s GatewayRouter_openApiSession_Results) HasSession() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_openApiSession_Results) SetSession(v apisession.ApiSession) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// GatewayRouter_openApiSession_Results_List is a list of GatewayRouter_openApiSession_Results.
type GatewayRouter_openApiSession_Results_List = capnp.StructList[GatewayRouter_openApiSession_Results]

// NewGatewayRouter_openApiSession_Results creates a new list of GatewayRouter_openApiSession_Results.
func NewGatewayRouter_openApiSession_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_openApiSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_openApiSession_Results](l), err
}

// GatewayRouter_openApiSession_Results_Future is a wrapper for a GatewayRouter_openApiSession_Results promised by a client call.
type GatewayRouter_openApiSession_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_openApiSession_Results_Future) Struct() (GatewayRouter_openApiSession_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_openApiSession_Results(s), err
}

func (p GatewayRouter_openApiSession_Results_Future) Session() apisession.ApiSession {
	return apisession.ApiSession(p.Future.Field(0, nil).Client())
}

type GatewayRouter_getStaticAsset_Params capnp.Struct

// GatewayRouter_getStaticAsset_Params_TypeID is the unique identifier for the type GatewayRouter_getStaticAsset_Params.
const GatewayRouter_getStaticAsset_Params_TypeID = 0xe4d0899af24786be

func NewGatewayRouter_getStaticAsset_Params(s *capnp.Segment) (GatewayRouter_getStaticAsset_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticAsset_Params(st), err
}

func NewRootGatewayRouter_getStaticAsset_Params(s *capnp.Segment) (GatewayRouter_getStaticAsset_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticAsset_Params(st), err
}

func ReadRootGatewayRouter_getStaticAsset_Params(msg *capnp.Message) (GatewayRouter_getStaticAsset_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_getStaticAsset_Params(root.Struct()), err
}

func (s GatewayRouter_getStaticAsset_Params) String() string {
	str, _ := text.Marshal(0xe4d0899af24786be, capnp.Struct(s))
	return str
}

func (s GatewayRouter_getStaticAsset_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_getStaticAsset_Params) DecodeFromPtr(p capnp.Ptr) GatewayRouter_getStaticAsset_Params {
	return GatewayRouter_getStaticAsset_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_getStaticAsset_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_getStaticAsset_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_getStaticAsset_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_getStaticAsset_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_getStaticAsset_Params) Id() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_getStaticAsset_Params) HasId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_getStaticAsset_Params) IdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_getStaticAsset_Params) SetId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// GatewayRouter_getStaticAsset_Params_List is a list of GatewayRouter_getStaticAsset_Params.
type GatewayRouter_getStaticAsset_Params_List = capnp.StructList[GatewayRouter_getStaticAsset_Params]

// NewGatewayRouter_getStaticAsset_Params creates a new list of GatewayRouter_getStaticAsset_Params.
func NewGatewayRouter_getStaticAsset_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_getStaticAsset_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_getStaticAsset_Params](l), err
}

// GatewayRouter_getStaticAsset_Params_Future is a wrapper for a GatewayRouter_getStaticAsset_Params promised by a client call.
type GatewayRouter_getStaticAsset_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_getStaticAsset_Params_Future) Struct() (GatewayRouter_getStaticAsset_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getStaticAsset_Params(s), err
}

type GatewayRouter_getStaticAsset_Results capnp.Struct

// GatewayRouter_getStaticAsset_Results_TypeID is the unique identifier for the type GatewayRouter_getStaticAsset_Results.
const GatewayRouter_getStaticAsset_Results_TypeID = 0xfd22e2b5cb138bb2

func NewGatewayRouter_getStaticAsset_Results(s *capnp.Segment) (GatewayRouter_getStaticAsset_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GatewayRouter_getStaticAsset_Results(st), err
}

func NewRootGatewayRouter_getStaticAsset_Results(s *capnp.Segment) (GatewayRouter_getStaticAsset_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GatewayRouter_getStaticAsset_Results(st), err
}

func ReadRootGatewayRouter_getStaticAsset_Results(msg *capnp.Message) (GatewayRouter_getStaticAsset_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_getStaticAsset_Results(root.Struct()), err
}

func (s GatewayRouter_getStaticAsset_Results) String() string {
	str, _ := text.Marshal(0xfd22e2b5cb138bb2, capnp.Struct(s))
	return str
}

func (s GatewayRouter_getStaticAsset_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_getStaticAsset_Results) DecodeFromPtr(p capnp.Ptr) GatewayRouter_getStaticAsset_Results {
	return GatewayRouter_getStaticAsset_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_getStaticAsset_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_getStaticAsset_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_getStaticAsset_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_getStaticAsset_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_getStaticAsset_Results) Content() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s GatewayRouter_getStaticAsset_Results) HasContent() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_getStaticAsset_Results) SetContent(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

func (s GatewayRouter_getStaticAsset_Results) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s GatewayRouter_getStaticAsset_Results) HasType() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s GatewayRouter_getStaticAsset_Results) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s GatewayRouter_getStaticAsset_Results) SetType(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s GatewayRouter_getStaticAsset_Results) Encoding() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s GatewayRouter_getStaticAsset_Results) HasEncoding() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s GatewayRouter_getStaticAsset_Results) EncodingBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s GatewayRouter_getStaticAsset_Results) SetEncoding(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

// GatewayRouter_getStaticAsset_Results_List is a list of GatewayRouter_getStaticAsset_Results.
type GatewayRouter_getStaticAsset_Results_List = capnp.StructList[GatewayRouter_getStaticAsset_Results]

// NewGatewayRouter_getStaticAsset_Results creates a new list of GatewayRouter_getStaticAsset_Results.
func NewGatewayRouter_getStaticAsset_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_getStaticAsset_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[GatewayRouter_getStaticAsset_Results](l), err
}

// GatewayRouter_getStaticAsset_Results_Future is a wrapper for a GatewayRouter_getStaticAsset_Results promised by a client call.
type GatewayRouter_getStaticAsset_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_getStaticAsset_Results_Future) Struct() (GatewayRouter_getStaticAsset_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getStaticAsset_Results(s), err
}

type GatewayRouter_getStaticPublishingHost_Params capnp.Struct

// GatewayRouter_getStaticPublishingHost_Params_TypeID is the unique identifier for the type GatewayRouter_getStaticPublishingHost_Params.
const GatewayRouter_getStaticPublishingHost_Params_TypeID = 0xf92f4e3c080d2237

func NewGatewayRouter_getStaticPublishingHost_Params(s *capnp.Segment) (GatewayRouter_getStaticPublishingHost_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticPublishingHost_Params(st), err
}

func NewRootGatewayRouter_getStaticPublishingHost_Params(s *capnp.Segment) (GatewayRouter_getStaticPublishingHost_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticPublishingHost_Params(st), err
}

func ReadRootGatewayRouter_getStaticPublishingHost_Params(msg *capnp.Message) (GatewayRouter_getStaticPublishingHost_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_getStaticPublishingHost_Params(root.Struct()), err
}

func (s GatewayRouter_getStaticPublishingHost_Params) String() string {
	str, _ := text.Marshal(0xf92f4e3c080d2237, capnp.Struct(s))
	return str
}

func (s GatewayRouter_getStaticPublishingHost_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_getStaticPublishingHost_Params) DecodeFromPtr(p capnp.Ptr) GatewayRouter_getStaticPublishingHost_Params {
	return GatewayRouter_getStaticPublishingHost_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_getStaticPublishingHost_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_getStaticPublishingHost_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_getStaticPublishingHost_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_getStaticPublishingHost_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_getStaticPublishingHost_Params) PublicId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_getStaticPublishingHost_Params) HasPublicId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_getStaticPublishingHost_Params) PublicIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_getStaticPublishingHost_Params) SetPublicId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// GatewayRouter_getStaticPublishingHost_Params_List is a list of GatewayRouter_getStaticPublishingHost_Params.
type GatewayRouter_getStaticPublishingHost_Params_List = capnp.StructList[GatewayRouter_getStaticPublishingHost_Params]

// NewGatewayRouter_getStaticPublishingHost_Params creates a new list of GatewayRouter_getStaticPublishingHost_Params.
func NewGatewayRouter_getStaticPublishingHost_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_getStaticPublishingHost_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_getStaticPublishingHost_Params](l), err
}

// GatewayRouter_getStaticPublishingHost_Params_Future is a wrapper for a GatewayRouter_getStaticPublishingHost_Params promised by a client call.
type GatewayRouter_getStaticPublishingHost_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_getStaticPublishingHost_Params_Future) Struct() (GatewayRouter_getStaticPublishingHost_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getStaticPublishingHost_Params(s), err
}

type GatewayRouter_getStaticPublishingHost_Results capnp.Struct

// GatewayRouter_getStaticPublishingHost_Results_TypeID is the unique identifier for the type GatewayRouter_getStaticPublishingHost_Results.
const GatewayRouter_getStaticPublishingHost_Results_TypeID = 0xe0f162f7d6b6e614

func NewGatewayRouter_getStaticPublishingHost_Results(s *capnp.Segment) (GatewayRouter_getStaticPublishingHost_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticPublishingHost_Results(st), err
}

func NewRootGatewayRouter_getStaticPublishingHost_Results(s *capnp.Segment) (GatewayRouter_getStaticPublishingHost_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticPublishingHost_Results(st), err
}

func ReadRootGatewayRouter_getStaticPublishingHost_Results(msg *capnp.Message) (GatewayRouter_getStaticPublishingHost_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_getStaticPublishingHost_Results(root.Struct()), err
}

func (s GatewayRouter_getStaticPublishingHost_Results) String() string {
	str, _ := text.Marshal(0xe0f162f7d6b6e614, capnp.Struct(s))
	return str
}

func (s GatewayRouter_getStaticPublishingHost_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_getStaticPublishingHost_Results) DecodeFromPtr(p capnp.Ptr) GatewayRouter_getStaticPublishingHost_Results {
	return GatewayRouter_getStaticPublishingHost_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_getStaticPublishingHost_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_getStaticPublishingHost_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_getStaticPublishingHost_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_getStaticPublishingHost_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_getStaticPublishingHost_Results) Supervisor() supervisor.Supervisor {
	p, _ := capnp.Struct(s).Ptr(0)
	return supervisor.Supervisor(p.Interface().Client())
}

func (s GatewayRouter_getStaticPublishingHost_Results) HasSupervisor() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_getStaticPublishingHost_Results) SetSupervisor(v supervisor.Supervisor) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// GatewayRouter_getStaticPublishingHost_Results_List is a list of GatewayRouter_getStaticPublishingHost_Results.
type GatewayRouter_getStaticPublishingHost_Results_List = capnp.StructList[GatewayRouter_getStaticPublishingHost_Results]

// NewGatewayRouter_getStaticPublishingHost_Results creates a new list of GatewayRouter_getStaticPublishingHost_Results.
func NewGatewayRouter_getStaticPublishingHost_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_getStaticPublishingHost_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_getStaticPublishingHost_Results](l), err
}

// GatewayRouter_getStaticPublishingHost_Results_Future is a wrapper for a GatewayRouter_getStaticPublishingHost_Results promised by a client call.
type GatewayRouter_getStaticPublishingHost_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_getStaticPublishingHost_Results_Future) Struct() (GatewayRouter_getStaticPublishingHost_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getStaticPublishingHost_Results(s), err
}

func (p GatewayRouter_getStaticPublishingHost_Results_Future) Supervisor() supervisor.Supervisor {
	return supervisor.Supervisor(p.Future.Field(0, nil).Client())
}

type GatewayRouter_routeForeignHostname_Params capnp.Struct

// GatewayRouter_routeForeignHostname_Params_TypeID is the unique identifier for the type GatewayRouter_routeForeignHostname_Params.
const GatewayRouter_routeForeignHostname_Params_TypeID = 0x94ff7bf84a8553ee

func NewGatewayRouter_routeForeignHostname_Params(s *capnp.Segment) (GatewayRouter_routeForeignHostname_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_routeForeignHostname_Params(st), err
}

func NewRootGatewayRouter_routeForeignHostname_Params(s *capnp.Segment) (GatewayRouter_routeForeignHostname_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_routeForeignHostname_Params(st), err
}

func ReadRootGatewayRouter_routeForeignHostname_Params(msg *capnp.Message) (GatewayRouter_routeForeignHostname_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_routeForeignHostname_Params(root.Struct()), err
}

func (s GatewayRouter_routeForeignHostname_Params) String() string {
	str, _ := text.Marshal(0x94ff7bf84a8553ee, capnp.Struct(s))
	return str
}

func (s GatewayRouter_routeForeignHostname_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_routeForeignHostname_Params) DecodeFromPtr(p capnp.Ptr) GatewayRouter_routeForeignHostname_Params {
	return GatewayRouter_routeForeignHostname_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_routeForeignHostname_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_routeForeignHostname_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_routeForeignHostname_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_routeForeignHostname_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_routeForeignHostname_Params) Hostname() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_routeForeignHostname_Params) HasHostname() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_routeForeignHostname_Params) HostnameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_routeForeignHostname_Params) SetHostname(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// GatewayRouter_routeForeignHostname_Params_List is a list of GatewayRouter_routeForeignHostname_Params.
type GatewayRouter_routeForeignHostname_Params_List = capnp.StructList[GatewayRouter_routeForeignHostname_Params]

// NewGatewayRouter_routeForeignHostname_Params creates a new list of GatewayRouter_routeForeignHostname_Params.
func NewGatewayRouter_routeForeignHostname_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_routeForeignHostname_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_routeForeignHostname_Params](l), err
}

// GatewayRouter_routeForeignHostname_Params_Future is a wrapper for a GatewayRouter_routeForeignHostname_Params promised by a client call.
type GatewayRouter_routeForeignHostname_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_routeForeignHostname_Params_Future) Struct() (GatewayRouter_routeForeignHostname_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_routeForeignHostname_Params(s), err
}

type GatewayRouter_routeForeignHostname_Results capnp.Struct

// GatewayRouter_routeForeignHostname_Results_TypeID is the unique identifier for the type GatewayRouter_routeForeignHostname_Results.
const GatewayRouter_routeForeignHostname_Results_TypeID = 0xce6a3dd4342110d2

func NewGatewayRouter_routeForeignHostname_Results(s *capnp.Segment) (GatewayRouter_routeForeignHostname_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_routeForeignHostname_Results(st), err
}

func NewRootGatewayRouter_routeForeignHostname_Results(s *capnp.Segment) (GatewayRouter_routeForeignHostname_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_routeForeignHostname_Results(st), err
}

func ReadRootGatewayRouter_routeForeignHostname_Results(msg *capnp.Message) (GatewayRouter_routeForeignHostname_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_routeForeignHostname_Results(root.Struct()), err
}

func (s GatewayRouter_routeForeignHostname_Results) String() string {
	str, _ := text.Marshal(0xce6a3dd4342110d2, capnp.Struct(s))
	return str
}

func (s GatewayRouter_routeForeignHostname_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_routeForeignHostname_Results) DecodeFromPtr(p capnp.Ptr) GatewayRouter_routeForeignHostname_Results {
	return GatewayRouter_routeForeignHostname_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_routeForeignHostname_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_routeForeignHostname_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_routeForeignHostname_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_routeForeignHostname_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_routeForeignHostname_Results) Info() (GatewayRouter_ForeignHostnameInfo, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return GatewayRouter_ForeignHostnameInfo(p.Struct()), err
}

func (s GatewayRouter_routeForeignHostname_Results) HasInfo() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_routeForeignHostname_Results) SetInfo(v GatewayRouter_ForeignHostnameInfo) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewInfo sets the info field to a newly
// allocated GatewayRouter_ForeignHostnameInfo struct, preferring placement in s's segment.
func (s GatewayRouter_routeForeignHostname_Results) NewInfo() (GatewayRouter_ForeignHostnameInfo, error) {
	ss, err := NewGatewayRouter_ForeignHostnameInfo(capnp.Struct(s).Segment())
	if err != nil {
		return GatewayRouter_ForeignHostnameInfo{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// GatewayRouter_routeForeignHostname_Results_List is a list of GatewayRouter_routeForeignHostname_Results.
type GatewayRouter_routeForeignHostname_Results_List = capnp.StructList[GatewayRouter_routeForeignHostname_Results]

// NewGatewayRouter_routeForeignHostname_Results creates a new list of GatewayRouter_routeForeignHostname_Results.
func NewGatewayRouter_routeForeignHostname_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_routeForeignHostname_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_routeForeignHostname_Results](l), err
}

// GatewayRouter_routeForeignHostname_Results_Future is a wrapper for a GatewayRouter_routeForeignHostname_Results promised by a client call.
type GatewayRouter_routeForeignHostname_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_routeForeignHostname_Results_Future) Struct() (GatewayRouter_routeForeignHostname_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_routeForeignHostname_Results(s), err
}

func (p GatewayRouter_routeForeignHostname_Results_Future) Info() GatewayRouter_ForeignHostnameInfo_Future {
	return GatewayRouter_ForeignHostnameInfo_Future{Future: p.Future.Field(0, nil)}
}

type GatewayRouter_subscribeTlsKeys_Params capnp.Struct

// GatewayRouter_subscribeTlsKeys_Params_TypeID is the unique identifier for the type GatewayRouter_subscribeTlsKeys_Params.
const GatewayRouter_subscribeTlsKeys_Params_TypeID = 0xc44a2ee5cb2413d8

func NewGatewayRouter_subscribeTlsKeys_Params(s *capnp.Segment) (GatewayRouter_subscribeTlsKeys_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_subscribeTlsKeys_Params(st), err
}

func NewRootGatewayRouter_subscribeTlsKeys_Params(s *capnp.Segment) (GatewayRouter_subscribeTlsKeys_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_subscribeTlsKeys_Params(st), err
}

func ReadRootGatewayRouter_subscribeTlsKeys_Params(msg *capnp.Message) (GatewayRouter_subscribeTlsKeys_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_subscribeTlsKeys_Params(root.Struct()), err
}

func (s GatewayRouter_subscribeTlsKeys_Params) String() string {
	str, _ := text.Marshal(0xc44a2ee5cb2413d8, capnp.Struct(s))
	return str
}

func (s GatewayRouter_subscribeTlsKeys_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_subscribeTlsKeys_Params) DecodeFromPtr(p capnp.Ptr) GatewayRouter_subscribeTlsKeys_Params {
	return GatewayRouter_subscribeTlsKeys_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_subscribeTlsKeys_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_subscribeTlsKeys_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_subscribeTlsKeys_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_subscribeTlsKeys_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_subscribeTlsKeys_Params) Callback() GatewayRouter_TlsKeyCallback {
	p, _ := capnp.Struct(s).Ptr(0)
	return GatewayRouter_TlsKeyCallback(p.Interface().Client())
}

func (s GatewayRouter_subscribeTlsKeys_Params) HasCallback() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_subscribeTlsKeys_Params) SetCallback(v GatewayRouter_TlsKeyCallback) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// GatewayRouter_subscribeTlsKeys_Params_List is a list of GatewayRouter_subscribeTlsKeys_Params.
type GatewayRouter_subscribeTlsKeys_Params_List = capnp.StructList[GatewayRouter_subscribeTlsKeys_Params]

// NewGatewayRouter_subscribeTlsKeys_Params creates a new list of GatewayRouter_subscribeTlsKeys_Params.
func NewGatewayRouter_subscribeTlsKeys_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_subscribeTlsKeys_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_subscribeTlsKeys_Params](l), err
}

// GatewayRouter_subscribeTlsKeys_Params_Future is a wrapper for a GatewayRouter_subscribeTlsKeys_Params promised by a client call.
type GatewayRouter_subscribeTlsKeys_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_subscribeTlsKeys_Params_Future) Struct() (GatewayRouter_subscribeTlsKeys_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_subscribeTlsKeys_Params(s), err
}

func (p GatewayRouter_subscribeTlsKeys_Params_Future) Callback() GatewayRouter_TlsKeyCallback {
	return GatewayRouter_TlsKeyCallback(p.Future.Field(0, nil).Client())
}

type GatewayRouter_subscribeTlsKeys_Results capnp.Struct

// GatewayRouter_subscribeTlsKeys_Results_TypeID is the unique identifier for the type GatewayRouter_subscribeTlsKeys_Results.
const GatewayRouter_subscribeTlsKeys_Results_TypeID = 0x96e1c35b28d92f83

func NewGatewayRouter_subscribeTlsKeys_Results(s *capnp.Segment) (GatewayRouter_subscribeTlsKeys_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_subscribeTlsKeys_Results(st), err
}

func NewRootGatewayRouter_subscribeTlsKeys_Results(s *capnp.Segment) (GatewayRouter_subscribeTlsKeys_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_subscribeTlsKeys_Results(st), err
}

func ReadRootGatewayRouter_subscribeTlsKeys_Results(msg *capnp.Message) (GatewayRouter_subscribeTlsKeys_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_subscribeTlsKeys_Results(root.Struct()), err
}

func (s GatewayRouter_subscribeTlsKeys_Results) String() string {
	str, _ := text.Marshal(0x96e1c35b28d92f83, capnp.Struct(s))
	return str
}

func (s GatewayRouter_subscribeTlsKeys_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_subscribeTlsKeys_Results) DecodeFromPtr(p capnp.Ptr) GatewayRouter_subscribeTlsKeys_Results {
	return GatewayRouter_subscribeTlsKeys_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_subscribeTlsKeys_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_subscribeTlsKeys_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_subscribeTlsKeys_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_subscribeTlsKeys_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// GatewayRouter_subscribeTlsKeys_Results_List is a list of GatewayRouter_subscribeTlsKeys_Results.
type GatewayRouter_subscribeTlsKeys_Results_List = capnp.StructList[GatewayRouter_subscribeTlsKeys_Results]

// NewGatewayRouter_subscribeTlsKeys_Results creates a new list of GatewayRouter_subscribeTlsKeys_Results.
func NewGatewayRouter_subscribeTlsKeys_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_subscribeTlsKeys_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[GatewayRouter_subscribeTlsKeys_Results](l), err
}

// GatewayRouter_subscribeTlsKeys_Results_Future is a wrapper for a GatewayRouter_subscribeTlsKeys_Results promised by a client call.
type GatewayRouter_subscribeTlsKeys_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_subscribeTlsKeys_Results_Future) Struct() (GatewayRouter_subscribeTlsKeys_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_subscribeTlsKeys_Results(s), err
}

type GatewayRouter_getApiHostOptions_Params capnp.Struct

// GatewayRouter_getApiHostOptions_Params_TypeID is the unique identifier for the type GatewayRouter_getApiHostOptions_Params.
const GatewayRouter_getApiHostOptions_Params_TypeID = 0xe29212b1cf072afc

func NewGatewayRouter_getApiHostOptions_Params(s *capnp.Segment) (GatewayRouter_getApiHostOptions_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getApiHostOptions_Params(st), err
}

func NewRootGatewayRouter_getApiHostOptions_Params(s *capnp.Segment) (GatewayRouter_getApiHostOptions_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getApiHostOptions_Params(st), err
}

func ReadRootGatewayRouter_getApiHostOptions_Params(msg *capnp.Message) (GatewayRouter_getApiHostOptions_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_getApiHostOptions_Params(root.Struct()), err
}

func (s GatewayRouter_getApiHostOptions_Params) String() string {
	str, _ := text.Marshal(0xe29212b1cf072afc, capnp.Struct(s))
	return str
}

func (s GatewayRouter_getApiHostOptions_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_getApiHostOptions_Params) DecodeFromPtr(p capnp.Ptr) GatewayRouter_getApiHostOptions_Params {
	return GatewayRouter_getApiHostOptions_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_getApiHostOptions_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_getApiHostOptions_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_getApiHostOptions_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_getApiHostOptions_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_getApiHostOptions_Params) HostId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_getApiHostOptions_Params) HasHostId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_getApiHostOptions_Params) HostIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_getApiHostOptions_Params) SetHostId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// GatewayRouter_getApiHostOptions_Params_List is a list of GatewayRouter_getApiHostOptions_Params.
type GatewayRouter_getApiHostOptions_Params_List = capnp.StructList[GatewayRouter_getApiHostOptions_Params]

// NewGatewayRouter_getApiHostOptions_Params creates a new list of GatewayRouter_getApiHostOptions_Params.
func NewGatewayRouter_getApiHostOptions_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_getApiHostOptions_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_getApiHostOptions_Params](l), err
}

// GatewayRouter_getApiHostOptions_Params_Future is a wrapper for a GatewayRouter_getApiHostOptions_Params promised by a client call.
type GatewayRouter_getApiHostOptions_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_getApiHostOptions_Params_Future) Struct() (GatewayRouter_getApiHostOptions_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getApiHostOptions_Params(s), err
}

type GatewayRouter_getApiHostOptions_Results capnp.Struct

// GatewayRouter_getApiHostOptions_Results_TypeID is the unique identifier for the type GatewayRouter_getApiHostOptions_Results.
const GatewayRouter_getApiHostOptions_Results_TypeID = 0xc537e92b2708501c

func NewGatewayRouter_getApiHostOptions_Results(s *capnp.Segment) (GatewayRouter_getApiHostOptions_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getApiHostOptions_Results(st), err
}

func NewRootGatewayRouter_getApiHostOptions_Results(s *capnp.Segment) (GatewayRouter_getApiHostOptions_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getApiHostOptions_Results(st), err
}

func ReadRootGatewayRouter_getApiHostOptions_Results(msg *capnp.Message) (GatewayRouter_getApiHostOptions_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_getApiHostOptions_Results(root.Struct()), err
}

func (s GatewayRouter_getApiHostOptions_Results) String() string {
	str, _ := text.Marshal(0xc537e92b2708501c, capnp.Struct(s))
	return str
}

func (s GatewayRouter_getApiHostOptions_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_getApiHostOptions_Results) DecodeFromPtr(p capnp.Ptr) GatewayRouter_getApiHostOptions_Results {
	return GatewayRouter_getApiHostOptions_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_getApiHostOptions_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_getApiHostOptions_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_getApiHostOptions_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_getApiHostOptions_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_getApiHostOptions_Results) Dav() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return capnp.TextList(p.List()), err
}

func (s GatewayRouter_getApiHostOptions_Results) HasDav() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_getApiHostOptions_Results) SetDav(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewDav sets the dav field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s GatewayRouter_getApiHostOptions_Results) NewDav(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// GatewayRouter_getApiHostOptions_Results_List is a list of GatewayRouter_getApiHostOptions_Results.
type GatewayRouter_getApiHostOptions_Results_List = capnp.StructList[GatewayRouter_getApiHostOptions_Results]

// NewGatewayRouter_getApiHostOptions_Results creates a new list of GatewayRouter_getApiHostOptions_Results.
func NewGatewayRouter_getApiHostOptions_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_getApiHostOptions_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_getApiHostOptions_Results](l), err
}

// GatewayRouter_getApiHostOptions_Results_Future is a wrapper for a GatewayRouter_getApiHostOptions_Results promised by a client call.
type GatewayRouter_getApiHostOptions_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_getApiHostOptions_Results_Future) Struct() (GatewayRouter_getApiHostOptions_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getApiHostOptions_Results(s), err
}

type GatewayRouter_getApiHostResource_Params capnp.Struct

// GatewayRouter_getApiHostResource_Params_TypeID is the unique identifier for the type GatewayRouter_getApiHostResource_Params.
const GatewayRouter_getApiHostResource_Params_TypeID = 0x88751049aa34129f

func NewGatewayRouter_getApiHostResource_Params(s *capnp.Segment) (GatewayRouter_getApiHostResource_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_getApiHostResource_Params(st), err
}

func NewRootGatewayRouter_getApiHostResource_Params(s *capnp.Segment) (GatewayRouter_getApiHostResource_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_getApiHostResource_Params(st), err
}

func ReadRootGatewayRouter_getApiHostResource_Params(msg *capnp.Message) (GatewayRouter_getApiHostResource_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_getApiHostResource_Params(root.Struct()), err
}

func (s GatewayRouter_getApiHostResource_Params) String() string {
	str, _ := text.Marshal(0x88751049aa34129f, capnp.Struct(s))
	return str
}

func (s GatewayRouter_getApiHostResource_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_getApiHostResource_Params) DecodeFromPtr(p capnp.Ptr) GatewayRouter_getApiHostResource_Params {
	return GatewayRouter_getApiHostResource_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_getApiHostResource_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_getApiHostResource_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_getApiHostResource_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_getApiHostResource_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_getApiHostResource_Params) HostId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_getApiHostResource_Params) HasHostId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_getApiHostResource_Params) HostIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_getApiHostResource_Params) SetHostId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s GatewayRouter_getApiHostResource_Params) Path() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s GatewayRouter_getApiHostResource_Params) HasPath() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s GatewayRouter_getApiHostResource_Params) PathBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s GatewayRouter_getApiHostResource_Params) SetPath(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// GatewayRouter_getApiHostResource_Params_List is a list of GatewayRouter_getApiHostResource_Params.
type GatewayRouter_getApiHostResource_Params_List = capnp.StructList[GatewayRouter_getApiHostResource_Params]

// NewGatewayRouter_getApiHostResource_Params creates a new list of GatewayRouter_getApiHostResource_Params.
func NewGatewayRouter_getApiHostResource_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_getApiHostResource_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[GatewayRouter_getApiHostResource_Params](l), err
}

// GatewayRouter_getApiHostResource_Params_Future is a wrapper for a GatewayRouter_getApiHostResource_Params promised by a client call.
type GatewayRouter_getApiHostResource_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_getApiHostResource_Params_Future) Struct() (GatewayRouter_getApiHostResource_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getApiHostResource_Params(s), err
}

type GatewayRouter_getApiHostResource_Results capnp.Struct

// GatewayRouter_getApiHostResource_Results_TypeID is the unique identifier for the type GatewayRouter_getApiHostResource_Results.
const GatewayRouter_getApiHostResource_Results_TypeID = 0xca94bf70a6be91b7

func NewGatewayRouter_getApiHostResource_Results(s *capnp.Segment) (GatewayRouter_getApiHostResource_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getApiHostResource_Results(st), err
}

func NewRootGatewayRouter_getApiHostResource_Results(s *capnp.Segment) (GatewayRouter_getApiHostResource_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getApiHostResource_Results(st), err
}

func ReadRootGatewayRouter_getApiHostResource_Results(msg *capnp.Message) (GatewayRouter_getApiHostResource_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_getApiHostResource_Results(root.Struct()), err
}

func (s GatewayRouter_getApiHostResource_Results) String() string {
	str, _ := text.Marshal(0xca94bf70a6be91b7, capnp.Struct(s))
	return str
}

func (s GatewayRouter_getApiHostResource_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_getApiHostResource_Results) DecodeFromPtr(p capnp.Ptr) GatewayRouter_getApiHostResource_Results {
	return GatewayRouter_getApiHostResource_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_getApiHostResource_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_getApiHostResource_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_getApiHostResource_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_getApiHostResource_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_getApiHostResource_Results) Resource() (GatewayRouter_StaticResource, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return GatewayRouter_StaticResource(p.Struct()), err
}

func (s GatewayRouter_getApiHostResource_Results) HasResource() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_getApiHostResource_Results) SetResource(v GatewayRouter_StaticResource) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewResource sets the resource field to a newly
// allocated GatewayRouter_StaticResource struct, preferring placement in s's segment.
func (s GatewayRouter_getApiHostResource_Results) NewResource() (GatewayRouter_StaticResource, error) {
	ss, err := NewGatewayRouter_StaticResource(capnp.Struct(s).Segment())
	if err != nil {
		return GatewayRouter_StaticResource{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// GatewayRouter_getApiHostResource_Results_List is a list of GatewayRouter_getApiHostResource_Results.
type GatewayRouter_getApiHostResource_Results_List = capnp.StructList[GatewayRouter_getApiHostResource_Results]

// NewGatewayRouter_getApiHostResource_Results creates a new list of GatewayRouter_getApiHostResource_Results.
func NewGatewayRouter_getApiHostResource_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_getApiHostResource_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_getApiHostResource_Results](l), err
}

// GatewayRouter_getApiHostResource_Results_Future is a wrapper for a GatewayRouter_getApiHostResource_Results promised by a client call.
type GatewayRouter_getApiHostResource_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_getApiHostResource_Results_Future) Struct() (GatewayRouter_getApiHostResource_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getApiHostResource_Results(s), err
}

func (p GatewayRouter_getApiHostResource_Results_Future) Resource() GatewayRouter_StaticResource_Future {
	return GatewayRouter_StaticResource_Future{Future: p.Future.Field(0, nil)}
}

type GatewayRouter_keepaliveApiToken_Params capnp.Struct

// GatewayRouter_keepaliveApiToken_Params_TypeID is the unique identifier for the type GatewayRouter_keepaliveApiToken_Params.
const GatewayRouter_keepaliveApiToken_Params_TypeID = 0xf716a4e3f32b4130

func NewGatewayRouter_keepaliveApiToken_Params(s *capnp.Segment) (GatewayRouter_keepaliveApiToken_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GatewayRouter_keepaliveApiToken_Params(st), err
}

func NewRootGatewayRouter_keepaliveApiToken_Params(s *capnp.Segment) (GatewayRouter_keepaliveApiToken_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GatewayRouter_keepaliveApiToken_Params(st), err
}

func ReadRootGatewayRouter_keepaliveApiToken_Params(msg *capnp.Message) (GatewayRouter_keepaliveApiToken_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_keepaliveApiToken_Params(root.Struct()), err
}

func (s GatewayRouter_keepaliveApiToken_Params) String() string {
	str, _ := text.Marshal(0xf716a4e3f32b4130, capnp.Struct(s))
	return str
}

func (s GatewayRouter_keepaliveApiToken_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_keepaliveApiToken_Params) DecodeFromPtr(p capnp.Ptr) GatewayRouter_keepaliveApiToken_Params {
	return GatewayRouter_keepaliveApiToken_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_keepaliveApiToken_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_keepaliveApiToken_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_keepaliveApiToken_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_keepaliveApiToken_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GatewayRouter_keepaliveApiToken_Params) ApiToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_keepaliveApiToken_Params) HasApiToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GatewayRouter_keepaliveApiToken_Params) ApiTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_keepaliveApiToken_Params) SetApiToken(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s GatewayRouter_keepaliveApiToken_Params) DurationMs() uint32 {
	return capnp.Struct(s).Uint32(0)
}

func (s GatewayRouter_keepaliveApiToken_Params) SetDurationMs(v uint32) {
	capnp.Struct(s).SetUint32(0, v)
}

// GatewayRouter_keepaliveApiToken_Params_List is a list of GatewayRouter_keepaliveApiToken_Params.
type GatewayRouter_keepaliveApiToken_Params_List = capnp.StructList[GatewayRouter_keepaliveApiToken_Params]

// NewGatewayRouter_keepaliveApiToken_Params creates a new list of GatewayRouter_keepaliveApiToken_Params.
func NewGatewayRouter_keepaliveApiToken_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_keepaliveApiToken_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[GatewayRouter_keepaliveApiToken_Params](l), err
}

// GatewayRouter_keepaliveApiToken_Params_Future is a wrapper for a GatewayRouter_keepaliveApiToken_Params promised by a client call.
type GatewayRouter_keepaliveApiToken_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_keepaliveApiToken_Params_Future) Struct() (GatewayRouter_keepaliveApiToken_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_keepaliveApiToken_Params(s), err
}

type GatewayRouter_keepaliveApiToken_Results capnp.Struct

// GatewayRouter_keepaliveApiToken_Results_TypeID is the unique identifier for the type GatewayRouter_keepaliveApiToken_Results.
const GatewayRouter_keepaliveApiToken_Results_TypeID = 0xd285f754a2dafae2

func NewGatewayRouter_keepaliveApiToken_Results(s *capnp.Segment) (GatewayRouter_keepaliveApiToken_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_keepaliveApiToken_Results(st), err
}

func NewRootGatewayRouter_keepaliveApiToken_Results(s *capnp.Segment) (GatewayRouter_keepaliveApiToken_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_keepaliveApiToken_Results(st), err
}

func ReadRootGatewayRouter_keepaliveApiToken_Results(msg *capnp.Message) (GatewayRouter_keepaliveApiToken_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_keepaliveApiToken_Results(root.Struct()), err
}

func (s GatewayRouter_keepaliveApiToken_Results) String() string {
	str, _ := text.Marshal(0xd285f754a2dafae2, capnp.Struct(s))
	return str
}

func (s GatewayRouter_keepaliveApiToken_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GatewayRouter_keepaliveApiToken_Results) DecodeFromPtr(p capnp.Ptr) GatewayRouter_keepaliveApiToken_Results {
	return GatewayRouter_keepaliveApiToken_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GatewayRouter_keepaliveApiToken_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GatewayRouter_keepaliveApiToken_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GatewayRouter_keepaliveApiToken_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GatewayRouter_keepaliveApiToken_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// GatewayRouter_keepaliveApiToken_Results_List is a list of GatewayRouter_keepaliveApiToken_Results.
type GatewayRouter_keepaliveApiToken_Results_List = capnp.StructList[GatewayRouter_keepaliveApiToken_Results]

// NewGatewayRouter_keepaliveApiToken_Results creates a new list of GatewayRouter_keepaliveApiToken_Results.
func NewGatewayRouter_keepaliveApiToken_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_keepaliveApiToken_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[GatewayRouter_keepaliveApiToken_Results](l), err
}

// GatewayRouter_keepaliveApiToken_Results_Future is a wrapper for a GatewayRouter_keepaliveApiToken_Results promised by a client call.
type GatewayRouter_keepaliveApiToken_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_keepaliveApiToken_Results_Future) Struct() (GatewayRouter_keepaliveApiToken_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_keepaliveApiToken_Results(s), err
}

type ShellCli capnp.Client

// ShellCli_TypeID is the unique identifier for the type ShellCli.
const ShellCli_TypeID = 0xdd2b1e18de9ed1b8

func (c ShellCli) CreateAcmeAccount(ctx context.Context, params func(ShellCli_createAcmeAccount_Params) error) (ShellCli_createAcmeAccount_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdd2b1e18de9ed1b8,
			MethodID:      0,
			InterfaceName: "backend.capnp:ShellCli",
			MethodName:    "createAcmeAccount",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(ShellCli_createAcmeAccount_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return ShellCli_createAcmeAccount_Results_Future{Future: ans.Future()}, release
}
func (c ShellCli) SetAcmeChallenge(ctx context.Context, params func(ShellCli_setAcmeChallenge_Params) error) (ShellCli_setAcmeChallenge_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdd2b1e18de9ed1b8,
			MethodID:      1,
			InterfaceName: "backend.capnp:ShellCli",
			MethodName:    "setAcmeChallenge",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(ShellCli_setAcmeChallenge_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return ShellCli_setAcmeChallenge_Results_Future{Future: ans.Future()}, release
}
func (c ShellCli) RenewCertificateNow(ctx context.Context, params func(ShellCli_renewCertificateNow_Params) error) (ShellCli_renewCertificateNow_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdd2b1e18de9ed1b8,
			MethodID:      2,
			InterfaceName: "backend.capnp:ShellCli",
			MethodName:    "renewCertificateNow",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(ShellCli_renewCertificateNow_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return ShellCli_renewCertificateNow_Results_Future{Future: ans.Future()}, release
}

func (c ShellCli) AddRef() ShellCli {
	return ShellCli(capnp.Client(c).AddRef())
}

func (c ShellCli) Release() {
	capnp.Client(c).Release()
}

func (c ShellCli) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (ShellCli) DecodeFromPtr(p capnp.Ptr) ShellCli {
	return ShellCli(capnp.Client{}.DecodeFromPtr(p))
}

func (c ShellCli) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// A ShellCli_Server is a ShellCli with a local implementation.
type ShellCli_Server interface {
	CreateAcmeAccount(context.Context, ShellCli_createAcmeAccount) error

	SetAcmeChallenge(context.Context, ShellCli_setAcmeChallenge) error

	RenewCertificateNow(context.Context, ShellCli_renewCertificateNow) error
}

// ShellCli_NewServer creates a new Server from an implementation of ShellCli_Server.
func ShellCli_NewServer(s ShellCli_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(ShellCli_Methods(nil, s), s, c)
}

// ShellCli_ServerToClient creates a new Client from an implementation of ShellCli_Server.
// The caller is responsible for calling Release on the returned Client.
func ShellCli_ServerToClient(s ShellCli_Server) ShellCli {
	return ShellCli(capnp.NewClient(ShellCli_NewServer(s)))
}

// ShellCli_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func ShellCli_Methods(methods []server.Method, s ShellCli_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdd2b1e18de9ed1b8,
			MethodID:      0,
			InterfaceName: "backend.capnp:ShellCli",
			MethodName:    "createAcmeAccount",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.CreateAcmeAccount(ctx, ShellCli_createAcmeAccount{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdd2b1e18de9ed1b8,
			MethodID:      1,
			InterfaceName: "backend.capnp:ShellCli",
			MethodName:    "setAcmeChallenge",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SetAcmeChallenge(ctx, ShellCli_setAcmeChallenge{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdd2b1e18de9ed1b8,
			MethodID:      2,
			InterfaceName: "backend.capnp:ShellCli",
			MethodName:    "renewCertificateNow",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.RenewCertificateNow(ctx, ShellCli_renewCertificateNow{call})
		},
	})

	return methods
}

// ShellCli_createAcmeAccount holds the state for a server call to ShellCli.createAcmeAccount.
// See server.Call for documentation.
type ShellCli_createAcmeAccount struct {
	*server.Call
}

// Args returns the call's arguments.
func (c ShellCli_createAcmeAccount) Args() ShellCli_createAcmeAccount_Params {
	return ShellCli_createAcmeAccount_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c ShellCli_createAcmeAccount) AllocResults() (ShellCli_createAcmeAccount_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ShellCli_createAcmeAccount_Results(r), err
}

// ShellCli_setAcmeChallenge holds the state for a server call to ShellCli.setAcmeChallenge.
// See server.Call for documentation.
type ShellCli_setAcmeChallenge struct {
	*server.Call
}

// Args returns the call's arguments.
func (c ShellCli_setAcmeChallenge) Args() ShellCli_setAcmeChallenge_Params {
	return ShellCli_setAcmeChallenge_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c ShellCli_setAcmeChallenge) AllocResults() (ShellCli_setAcmeChallenge_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ShellCli_setAcmeChallenge_Results(r), err
}

// ShellCli_renewCertificateNow holds the state for a server call to ShellCli.renewCertificateNow.
// See server.Call for documentation.
type ShellCli_renewCertificateNow struct {
	*server.Call
}

// Args returns the call's arguments.
func (c ShellCli_renewCertificateNow) Args() ShellCli_renewCertificateNow_Params {
	return ShellCli_renewCertificateNow_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c ShellCli_renewCertificateNow) AllocResults() (ShellCli_renewCertificateNow_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ShellCli_renewCertificateNow_Results(r), err
}

// ShellCli_List is a list of ShellCli.
type ShellCli_List = capnp.CapList[ShellCli]

// NewShellCli creates a new list of ShellCli.
func NewShellCli_List(s *capnp.Segment, sz int32) (ShellCli_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[ShellCli](l), err
}

type ShellCli_createAcmeAccount_Params capnp.Struct

// ShellCli_createAcmeAccount_Params_TypeID is the unique identifier for the type ShellCli_createAcmeAccount_Params.
const ShellCli_createAcmeAccount_Params_TypeID = 0x8ca64856a439e754

func NewShellCli_createAcmeAccount_Params(s *capnp.Segment) (ShellCli_createAcmeAccount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return ShellCli_createAcmeAccount_Params(st), err
}

func NewRootShellCli_createAcmeAccount_Params(s *capnp.Segment) (ShellCli_createAcmeAccount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return ShellCli_createAcmeAccount_Params(st), err
}

func ReadRootShellCli_createAcmeAccount_Params(msg *capnp.Message) (ShellCli_createAcmeAccount_Params, error) {
	root, err := msg.Root()
	return ShellCli_createAcmeAccount_Params(root.Struct()), err
}

func (s ShellCli_createAcmeAccount_Params) String() string {
	str, _ := text.Marshal(0x8ca64856a439e754, capnp.Struct(s))
	return str
}

func (s ShellCli_createAcmeAccount_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ShellCli_createAcmeAccount_Params) DecodeFromPtr(p capnp.Ptr) ShellCli_createAcmeAccount_Params {
	return ShellCli_createAcmeAccount_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ShellCli_createAcmeAccount_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ShellCli_createAcmeAccount_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ShellCli_createAcmeAccount_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ShellCli_createAcmeAccount_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ShellCli_createAcmeAccount_Params) Directory() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s ShellCli_createAcmeAccount_Params) HasDirectory() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ShellCli_createAcmeAccount_Params) DirectoryBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s ShellCli_createAcmeAccount_Params) SetDirectory(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s ShellCli_createAcmeAccount_Params) Email() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s ShellCli_createAcmeAccount_Params) HasEmail() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s ShellCli_createAcmeAccount_Params) EmailBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s ShellCli_createAcmeAccount_Params) SetEmail(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s ShellCli_createAcmeAccount_Params) AgreeToTerms() bool {
	return capnp.Struct(s).Bit(0)
}

func (s ShellCli_createAcmeAccount_Params) SetAgreeToTerms(v bool) {
	capnp.Struct(s).SetBit(0, v)
}

// ShellCli_createAcmeAccount_Params_List is a list of ShellCli_createAcmeAccount_Params.
type ShellCli_createAcmeAccount_Params_List = capnp.StructList[ShellCli_createAcmeAccount_Params]

// NewShellCli_createAcmeAccount_Params creates a new list of ShellCli_createAcmeAccount_Params.
func NewShellCli_createAcmeAccount_Params_List(s *capnp.Segment, sz int32) (ShellCli_createAcmeAccount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return capnp.StructList[ShellCli_createAcmeAccount_Params](l), err
}

// ShellCli_createAcmeAccount_Params_Future is a wrapper for a ShellCli_createAcmeAccount_Params promised by a client call.
type ShellCli_createAcmeAccount_Params_Future struct{ *capnp.Future }

func (p ShellCli_createAcmeAccount_Params_Future) Struct() (ShellCli_createAcmeAccount_Params, error) {
	s, err := p.Future.Struct()
	return ShellCli_createAcmeAccount_Params(s), err
}

type ShellCli_createAcmeAccount_Results capnp.Struct

// ShellCli_createAcmeAccount_Results_TypeID is the unique identifier for the type ShellCli_createAcmeAccount_Results.
const ShellCli_createAcmeAccount_Results_TypeID = 0xf153e1cffe8f580a

func NewShellCli_createAcmeAccount_Results(s *capnp.Segment) (ShellCli_createAcmeAccount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ShellCli_createAcmeAccount_Results(st), err
}

func NewRootShellCli_createAcmeAccount_Results(s *capnp.Segment) (ShellCli_createAcmeAccount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ShellCli_createAcmeAccount_Results(st), err
}

func ReadRootShellCli_createAcmeAccount_Results(msg *capnp.Message) (ShellCli_createAcmeAccount_Results, error) {
	root, err := msg.Root()
	return ShellCli_createAcmeAccount_Results(root.Struct()), err
}

func (s ShellCli_createAcmeAccount_Results) String() string {
	str, _ := text.Marshal(0xf153e1cffe8f580a, capnp.Struct(s))
	return str
}

func (s ShellCli_createAcmeAccount_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ShellCli_createAcmeAccount_Results) DecodeFromPtr(p capnp.Ptr) ShellCli_createAcmeAccount_Results {
	return ShellCli_createAcmeAccount_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ShellCli_createAcmeAccount_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ShellCli_createAcmeAccount_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ShellCli_createAcmeAccount_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ShellCli_createAcmeAccount_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// ShellCli_createAcmeAccount_Results_List is a list of ShellCli_createAcmeAccount_Results.
type ShellCli_createAcmeAccount_Results_List = capnp.StructList[ShellCli_createAcmeAccount_Results]

// NewShellCli_createAcmeAccount_Results creates a new list of ShellCli_createAcmeAccount_Results.
func NewShellCli_createAcmeAccount_Results_List(s *capnp.Segment, sz int32) (ShellCli_createAcmeAccount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[ShellCli_createAcmeAccount_Results](l), err
}

// ShellCli_createAcmeAccount_Results_Future is a wrapper for a ShellCli_createAcmeAccount_Results promised by a client call.
type ShellCli_createAcmeAccount_Results_Future struct{ *capnp.Future }

func (p ShellCli_createAcmeAccount_Results_Future) Struct() (ShellCli_createAcmeAccount_Results, error) {
	s, err := p.Future.Struct()
	return ShellCli_createAcmeAccount_Results(s), err
}

type ShellCli_setAcmeChallenge_Params capnp.Struct

// ShellCli_setAcmeChallenge_Params_TypeID is the unique identifier for the type ShellCli_setAcmeChallenge_Params.
const ShellCli_setAcmeChallenge_Params_TypeID = 0xbf2816cab7a3b8d9

func NewShellCli_setAcmeChallenge_Params(s *capnp.Segment) (ShellCli_setAcmeChallenge_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ShellCli_setAcmeChallenge_Params(st), err
}

func NewRootShellCli_setAcmeChallenge_Params(s *capnp.Segment) (ShellCli_setAcmeChallenge_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ShellCli_setAcmeChallenge_Params(st), err
}

func ReadRootShellCli_setAcmeChallenge_Params(msg *capnp.Message) (ShellCli_setAcmeChallenge_Params, error) {
	root, err := msg.Root()
	return ShellCli_setAcmeChallenge_Params(root.Struct()), err
}

func (s ShellCli_setAcmeChallenge_Params) String() string {
	str, _ := text.Marshal(0xbf2816cab7a3b8d9, capnp.Struct(s))
	return str
}

func (s ShellCli_setAcmeChallenge_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ShellCli_setAcmeChallenge_Params) DecodeFromPtr(p capnp.Ptr) ShellCli_setAcmeChallenge_Params {
	return ShellCli_setAcmeChallenge_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ShellCli_setAcmeChallenge_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ShellCli_setAcmeChallenge_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ShellCli_setAcmeChallenge_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ShellCli_setAcmeChallenge_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ShellCli_setAcmeChallenge_Params) Module() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s ShellCli_setAcmeChallenge_Params) HasModule() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ShellCli_setAcmeChallenge_Params) ModuleBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s ShellCli_setAcmeChallenge_Params) SetModule(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s ShellCli_setAcmeChallenge_Params) Options() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s ShellCli_setAcmeChallenge_Params) HasOptions() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s ShellCli_setAcmeChallenge_Params) OptionsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s ShellCli_setAcmeChallenge_Params) SetOptions(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// ShellCli_setAcmeChallenge_Params_List is a list of ShellCli_setAcmeChallenge_Params.
type ShellCli_setAcmeChallenge_Params_List = capnp.StructList[ShellCli_setAcmeChallenge_Params]

// NewShellCli_setAcmeChallenge_Params creates a new list of ShellCli_setAcmeChallenge_Params.
func NewShellCli_setAcmeChallenge_Params_List(s *capnp.Segment, sz int32) (ShellCli_setAcmeChallenge_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[ShellCli_setAcmeChallenge_Params](l), err
}

// ShellCli_setAcmeChallenge_Params_Future is a wrapper for a ShellCli_setAcmeChallenge_Params promised by a client call.
type ShellCli_setAcmeChallenge_Params_Future struct{ *capnp.Future }

func (p ShellCli_setAcmeChallenge_Params_Future) Struct() (ShellCli_setAcmeChallenge_Params, error) {
	s, err := p.Future.Struct()
	return ShellCli_setAcmeChallenge_Params(s), err
}

type ShellCli_setAcmeChallenge_Results capnp.Struct

// ShellCli_setAcmeChallenge_Results_TypeID is the unique identifier for the type ShellCli_setAcmeChallenge_Results.
const ShellCli_setAcmeChallenge_Results_TypeID = 0xe60c482f4f0d4d90

func NewShellCli_setAcmeChallenge_Results(s *capnp.Segment) (ShellCli_setAcmeChallenge_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ShellCli_setAcmeChallenge_Results(st), err
}

func NewRootShellCli_setAcmeChallenge_Results(s *capnp.Segment) (ShellCli_setAcmeChallenge_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ShellCli_setAcmeChallenge_Results(st), err
}

func ReadRootShellCli_setAcmeChallenge_Results(msg *capnp.Message) (ShellCli_setAcmeChallenge_Results, error) {
	root, err := msg.Root()
	return ShellCli_setAcmeChallenge_Results(root.Struct()), err
}

func (s ShellCli_setAcmeChallenge_Results) String() string {
	str, _ := text.Marshal(0xe60c482f4f0d4d90, capnp.Struct(s))
	return str
}

func (s ShellCli_setAcmeChallenge_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ShellCli_setAcmeChallenge_Results) DecodeFromPtr(p capnp.Ptr) ShellCli_setAcmeChallenge_Results {
	return ShellCli_setAcmeChallenge_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ShellCli_setAcmeChallenge_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ShellCli_setAcmeChallenge_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ShellCli_setAcmeChallenge_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ShellCli_setAcmeChallenge_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// ShellCli_setAcmeChallenge_Results_List is a list of ShellCli_setAcmeChallenge_Results.
type ShellCli_setAcmeChallenge_Results_List = capnp.StructList[ShellCli_setAcmeChallenge_Results]

// NewShellCli_setAcmeChallenge_Results creates a new list of ShellCli_setAcmeChallenge_Results.
func NewShellCli_setAcmeChallenge_Results_List(s *capnp.Segment, sz int32) (ShellCli_setAcmeChallenge_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[ShellCli_setAcmeChallenge_Results](l), err
}

// ShellCli_setAcmeChallenge_Results_Future is a wrapper for a ShellCli_setAcmeChallenge_Results promised by a client call.
type ShellCli_setAcmeChallenge_Results_Future struct{ *capnp.Future }

func (p ShellCli_setAcmeChallenge_Results_Future) Struct() (ShellCli_setAcmeChallenge_Results, error) {
	s, err := p.Future.Struct()
	return ShellCli_setAcmeChallenge_Results(s), err
}

type ShellCli_renewCertificateNow_Params capnp.Struct

// ShellCli_renewCertificateNow_Params_TypeID is the unique identifier for the type ShellCli_renewCertificateNow_Params.
const ShellCli_renewCertificateNow_Params_TypeID = 0xad91bb3785f964f9

func NewShellCli_renewCertificateNow_Params(s *capnp.Segment) (ShellCli_renewCertificateNow_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ShellCli_renewCertificateNow_Params(st), err
}

func NewRootShellCli_renewCertificateNow_Params(s *capnp.Segment) (ShellCli_renewCertificateNow_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ShellCli_renewCertificateNow_Params(st), err
}

func ReadRootShellCli_renewCertificateNow_Params(msg *capnp.Message) (ShellCli_renewCertificateNow_Params, error) {
	root, err := msg.Root()
	return ShellCli_renewCertificateNow_Params(root.Struct()), err
}

func (s ShellCli_renewCertificateNow_Params) String() string {
	str, _ := text.Marshal(0xad91bb3785f964f9, capnp.Struct(s))
	return str
}

func (s ShellCli_renewCertificateNow_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ShellCli_renewCertificateNow_Params) DecodeFromPtr(p capnp.Ptr) ShellCli_renewCertificateNow_Params {
	return ShellCli_renewCertificateNow_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ShellCli_renewCertificateNow_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ShellCli_renewCertificateNow_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ShellCli_renewCertificateNow_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ShellCli_renewCertificateNow_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// ShellCli_renewCertificateNow_Params_List is a list of ShellCli_renewCertificateNow_Params.
type ShellCli_renewCertificateNow_Params_List = capnp.StructList[ShellCli_renewCertificateNow_Params]

// NewShellCli_renewCertificateNow_Params creates a new list of ShellCli_renewCertificateNow_Params.
func NewShellCli_renewCertificateNow_Params_List(s *capnp.Segment, sz int32) (ShellCli_renewCertificateNow_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[ShellCli_renewCertificateNow_Params](l), err
}

// ShellCli_renewCertificateNow_Params_Future is a wrapper for a ShellCli_renewCertificateNow_Params promised by a client call.
type ShellCli_renewCertificateNow_Params_Future struct{ *capnp.Future }

func (p ShellCli_renewCertificateNow_Params_Future) Struct() (ShellCli_renewCertificateNow_Params, error) {
	s, err := p.Future.Struct()
	return ShellCli_renewCertificateNow_Params(s), err
}

type ShellCli_renewCertificateNow_Results capnp.Struct

// ShellCli_renewCertificateNow_Results_TypeID is the unique identifier for the type ShellCli_renewCertificateNow_Results.
const ShellCli_renewCertificateNow_Results_TypeID = 0xf3e0d28b0ad162be

func NewShellCli_renewCertificateNow_Results(s *capnp.Segment) (ShellCli_renewCertificateNow_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ShellCli_renewCertificateNow_Results(st), err
}

func NewRootShellCli_renewCertificateNow_Results(s *capnp.Segment) (ShellCli_renewCertificateNow_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ShellCli_renewCertificateNow_Results(st), err
}

func ReadRootShellCli_renewCertificateNow_Results(msg *capnp.Message) (ShellCli_renewCertificateNow_Results, error) {
	root, err := msg.Root()
	return ShellCli_renewCertificateNow_Results(root.Struct()), err
}

func (s ShellCli_renewCertificateNow_Results) String() string {
	str, _ := text.Marshal(0xf3e0d28b0ad162be, capnp.Struct(s))
	return str
}

func (s ShellCli_renewCertificateNow_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ShellCli_renewCertificateNow_Results) DecodeFromPtr(p capnp.Ptr) ShellCli_renewCertificateNow_Results {
	return ShellCli_renewCertificateNow_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ShellCli_renewCertificateNow_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ShellCli_renewCertificateNow_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ShellCli_renewCertificateNow_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ShellCli_renewCertificateNow_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// ShellCli_renewCertificateNow_Results_List is a list of ShellCli_renewCertificateNow_Results.
type ShellCli_renewCertificateNow_Results_List = capnp.StructList[ShellCli_renewCertificateNow_Results]

// NewShellCli_renewCertificateNow_Results creates a new list of ShellCli_renewCertificateNow_Results.
func NewShellCli_renewCertificateNow_Results_List(s *capnp.Segment, sz int32) (ShellCli_renewCertificateNow_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[ShellCli_renewCertificateNow_Results](l), err
}

// ShellCli_renewCertificateNow_Results_Future is a wrapper for a ShellCli_renewCertificateNow_Results promised by a client call.
type ShellCli_renewCertificateNow_Results_Future struct{ *capnp.Future }

func (p ShellCli_renewCertificateNow_Results_Future) Struct() (ShellCli_renewCertificateNow_Results, error) {
	s, err := p.Future.Struct()
	return ShellCli_renewCertificateNow_Results(s), err
}

type SandstormCoreFactory capnp.Client

// SandstormCoreFactory_TypeID is the unique identifier for the type SandstormCoreFactory.
const SandstormCoreFactory_TypeID = 0xf0832c3f66256d2b

func (c SandstormCoreFactory) GetSandstormCore(ctx context.Context, params func(SandstormCoreFactory_getSandstormCore_Params) error) (SandstormCoreFactory_getSandstormCore_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xf0832c3f66256d2b,
			MethodID:      0,
			InterfaceName: "backend.capnp:SandstormCoreFactory",
			MethodName:    "getSandstormCore",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCoreFactory_getSandstormCore_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCoreFactory_getSandstormCore_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCoreFactory) GetGatewayRouter(ctx context.Context, params func(SandstormCoreFactory_getGatewayRouter_Params) error) (SandstormCoreFactory_getGatewayRouter_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xf0832c3f66256d2b,
			MethodID:      1,
			InterfaceName: "backend.capnp:SandstormCoreFactory",
			MethodName:    "getGatewayRouter",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCoreFactory_getGatewayRouter_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCoreFactory_getGatewayRouter_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCoreFactory) GetShellCli(ctx context.Context, params func(SandstormCoreFactory_getShellCli_Params) error) (SandstormCoreFactory_getShellCli_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xf0832c3f66256d2b,
			MethodID:      2,
			InterfaceName: "backend.capnp:SandstormCoreFactory",
			MethodName:    "getShellCli",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCoreFactory_getShellCli_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCoreFactory_getShellCli_Results_Future{Future: ans.Future()}, release
}

func (c SandstormCoreFactory) AddRef() SandstormCoreFactory {
	return SandstormCoreFactory(capnp.Client(c).AddRef())
}

func (c SandstormCoreFactory) Release() {
	capnp.Client(c).Release()
}

func (c SandstormCoreFactory) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (SandstormCoreFactory) DecodeFromPtr(p capnp.Ptr) SandstormCoreFactory {
	return SandstormCoreFactory(capnp.Client{}.DecodeFromPtr(p))
}

func (c SandstormCoreFactory) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// A SandstormCoreFactory_Server is a SandstormCoreFactory with a local implementation.
type SandstormCoreFactory_Server interface {
	GetSandstormCore(context.Context, SandstormCoreFactory_getSandstormCore) error

	GetGatewayRouter(context.Context, SandstormCoreFactory_getGatewayRouter) error

	GetShellCli(context.Context, SandstormCoreFactory_getShellCli) error
}

// SandstormCoreFactory_NewServer creates a new Server from an implementation of SandstormCoreFactory_Server.
func SandstormCoreFactory_NewServer(s SandstormCoreFactory_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(SandstormCoreFactory_Methods(nil, s), s, c)
}

// SandstormCoreFactory_ServerToClient creates a new Client from an implementation of SandstormCoreFactory_Server.
// The caller is responsible for calling Release on the returned Client.
func SandstormCoreFactory_ServerToClient(s SandstormCoreFactory_Server) SandstormCoreFactory {
	return SandstormCoreFactory(capnp.NewClient(SandstormCoreFactory_NewServer(s)))
}

// SandstormCoreFactory_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func SandstormCoreFactory_Methods(methods []server.Method, s SandstormCoreFactory_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf0832c3f66256d2b,
			MethodID:      0,
			InterfaceName: "backend.capnp:SandstormCoreFactory",
			MethodName:    "getSandstormCore",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSandstormCore(ctx, SandstormCoreFactory_getSandstormCore{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf0832c3f66256d2b,
			MethodID:      1,
			InterfaceName: "backend.capnp:SandstormCoreFactory",
			MethodName:    "getGatewayRouter",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetGatewayRouter(ctx, SandstormCoreFactory_getGatewayRouter{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf0832c3f66256d2b,
			MethodID:      2,
			InterfaceName: "backend.capnp:SandstormCoreFactory",
			MethodName:    "getShellCli",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetShellCli(ctx, SandstormCoreFactory_getShellCli{call})
		},
	})

	return methods
}

// SandstormCoreFactory_getSandstormCore holds the state for a server call to SandstormCoreFactory.getSandstormCore.
// See server.Call for documentation.
type SandstormCoreFactory_getSandstormCore struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCoreFactory_getSandstormCore) Args() SandstormCoreFactory_getSandstormCore_Params {
	return SandstormCoreFactory_getSandstormCore_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCoreFactory_getSandstormCore) AllocResults() (SandstormCoreFactory_getSandstormCore_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getSandstormCore_Results(r), err
}

// SandstormCoreFactory_getGatewayRouter holds the state for a server call to SandstormCoreFactory.getGatewayRouter.
// See server.Call for documentation.
type SandstormCoreFactory_getGatewayRouter struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCoreFactory_getGatewayRouter) Args() SandstormCoreFactory_getGatewayRouter_Params {
	return SandstormCoreFactory_getGatewayRouter_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCoreFactory_getGatewayRouter) AllocResults() (SandstormCoreFactory_getGatewayRouter_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getGatewayRouter_Results(r), err
}

// SandstormCoreFactory_getShellCli holds the state for a server call to SandstormCoreFactory.getShellCli.
// See server.Call for documentation.
type SandstormCoreFactory_getShellCli struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCoreFactory_getShellCli) Args() SandstormCoreFactory_getShellCli_Params {
	return SandstormCoreFactory_getShellCli_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCoreFactory_getShellCli) AllocResults() (SandstormCoreFactory_getShellCli_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getShellCli_Results(r), err
}

// SandstormCoreFactory_List is a list of SandstormCoreFactory.
type SandstormCoreFactory_List = capnp.CapList[SandstormCoreFactory]

// NewSandstormCoreFactory creates a new list of SandstormCoreFactory.
func NewSandstormCoreFactory_List(s *capnp.Segment, sz int32) (SandstormCoreFactory_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[SandstormCoreFactory](l), err
}

type SandstormCoreFactory_getSandstormCore_Params capnp.Struct

// SandstormCoreFactory_getSandstormCore_Params_TypeID is the unique identifier for the type SandstormCoreFactory_getSandstormCore_Params.
const SandstormCoreFactory_getSandstormCore_Params_TypeID = 0xe8ac8c6560747234

func NewSandstormCoreFactory_getSandstormCore_Params(s *capnp.Segment) (SandstormCoreFactory_getSandstormCore_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getSandstormCore_Params(st), err
}

func NewRootSandstormCoreFactory_getSandstormCore_Params(s *capnp.Segment) (SandstormCoreFactory_getSandstormCore_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getSandstormCore_Params(st), err
}

func ReadRootSandstormCoreFactory_getSandstormCore_Params(msg *capnp.Message) (SandstormCoreFactory_getSandstormCore_Params, error) {
	root, err := msg.Root()
	return SandstormCoreFactory_getSandstormCore_Params(root.Struct()), err
}

func (s SandstormCoreFactory_getSandstormCore_Params) String() string {
	str, _ := text.Marshal(0xe8ac8c6560747234, capnp.Struct(s))
	return str
}

func (s SandstormCoreFactory_getSandstormCore_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCoreFactory_getSandstormCore_Params) DecodeFromPtr(p capnp.Ptr) SandstormCoreFactory_getSandstormCore_Params {
	return SandstormCoreFactory_getSandstormCore_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCoreFactory_getSandstormCore_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCoreFactory_getSandstormCore_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCoreFactory_getSandstormCore_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCoreFactory_getSandstormCore_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCoreFactory_getSandstormCore_Params) GrainId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s SandstormCoreFactory_getSandstormCore_Params) HasGrainId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCoreFactory_getSandstormCore_Params) GrainIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s SandstormCoreFactory_getSandstormCore_Params) SetGrainId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// SandstormCoreFactory_getSandstormCore_Params_List is a list of SandstormCoreFactory_getSandstormCore_Params.
type SandstormCoreFactory_getSandstormCore_Params_List = capnp.StructList[SandstormCoreFactory_getSandstormCore_Params]

// NewSandstormCoreFactory_getSandstormCore_Params creates a new list of SandstormCoreFactory_getSandstormCore_Params.
func NewSandstormCoreFactory_getSandstormCore_Params_List(s *capnp.Segment, sz int32) (SandstormCoreFactory_getSandstormCore_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCoreFactory_getSandstormCore_Params](l), err
}

// SandstormCoreFactory_getSandstormCore_Params_Future is a wrapper for a SandstormCoreFactory_getSandstormCore_Params promised by a client call.
type SandstormCoreFactory_getSandstormCore_Params_Future struct{ *capnp.Future }

func (p SandstormCoreFactory_getSandstormCore_Params_Future) Struct() (SandstormCoreFactory_getSandstormCore_Params, error) {
	s, err := p.Future.Struct()
	return SandstormCoreFactory_getSandstormCore_Params(s), err
}

type SandstormCoreFactory_getSandstormCore_Results capnp.Struct

// SandstormCoreFactory_getSandstormCore_Results_TypeID is the unique identifier for the type SandstormCoreFactory_getSandstormCore_Results.
const SandstormCoreFactory_getSandstormCore_Results_TypeID = 0xea75b020e3e6c12a

func NewSandstormCoreFactory_getSandstormCore_Results(s *capnp.Segment) (SandstormCoreFactory_getSandstormCore_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getSandstormCore_Results(st), err
}

func NewRootSandstormCoreFactory_getSandstormCore_Results(s *capnp.Segment) (SandstormCoreFactory_getSandstormCore_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getSandstormCore_Results(st), err
}

func ReadRootSandstormCoreFactory_getSandstormCore_Results(msg *capnp.Message) (SandstormCoreFactory_getSandstormCore_Results, error) {
	root, err := msg.Root()
	return SandstormCoreFactory_getSandstormCore_Results(root.Struct()), err
}

func (s SandstormCoreFactory_getSandstormCore_Results) String() string {
	str, _ := text.Marshal(0xea75b020e3e6c12a, capnp.Struct(s))
	return str
}

func (s SandstormCoreFactory_getSandstormCore_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCoreFactory_getSandstormCore_Results) DecodeFromPtr(p capnp.Ptr) SandstormCoreFactory_getSandstormCore_Results {
	return SandstormCoreFactory_getSandstormCore_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCoreFactory_getSandstormCore_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCoreFactory_getSandstormCore_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCoreFactory_getSandstormCore_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCoreFactory_getSandstormCore_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCoreFactory_getSandstormCore_Results) Core() supervisor.SandstormCore {
	p, _ := capnp.Struct(s).Ptr(0)
	return supervisor.SandstormCore(p.Interface().Client())
}

func (s SandstormCoreFactory_getSandstormCore_Results) HasCore() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCoreFactory_getSandstormCore_Results) SetCore(v supervisor.SandstormCore) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// SandstormCoreFactory_getSandstormCore_Results_List is a list of SandstormCoreFactory_getSandstormCore_Results.
type SandstormCoreFactory_getSandstormCore_Results_List = capnp.StructList[SandstormCoreFactory_getSandstormCore_Results]

// NewSandstormCoreFactory_getSandstormCore_Results creates a new list of SandstormCoreFactory_getSandstormCore_Results.
func NewSandstormCoreFactory_getSandstormCore_Results_List(s *capnp.Segment, sz int32) (SandstormCoreFactory_getSandstormCore_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCoreFactory_getSandstormCore_Results](l), err
}

// SandstormCoreFactory_getSandstormCore_Results_Future is a wrapper for a SandstormCoreFactory_getSandstormCore_Results promised by a client call.
type SandstormCoreFactory_getSandstormCore_Results_Future struct{ *capnp.Future }

func (p SandstormCoreFactory_getSandstormCore_Results_Future) Struct() (SandstormCoreFactory_getSandstormCore_Results, error) {
	s, err := p.Future.Struct()
	return SandstormCoreFactory_getSandstormCore_Results(s), err
}

func (p SandstormCoreFactory_getSandstormCore_Results_Future) Core() supervisor.SandstormCore {
	return supervisor.SandstormCore(p.Future.Field(0, nil).Client())
}

type SandstormCoreFactory_getGatewayRouter_Params capnp.Struct

// SandstormCoreFactory_getGatewayRouter_Params_TypeID is the unique identifier for the type SandstormCoreFactory_getGatewayRouter_Params.
const SandstormCoreFactory_getGatewayRouter_Params_TypeID = 0xf0b05750d16cf185

func NewSandstormCoreFactory_getGatewayRouter_Params(s *capnp.Segment) (SandstormCoreFactory_getGatewayRouter_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCoreFactory_getGatewayRouter_Params(st), err
}

func NewRootSandstormCoreFactory_getGatewayRouter_Params(s *capnp.Segment) (SandstormCoreFactory_getGatewayRouter_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCoreFactory_getGatewayRouter_Params(st), err
}

func ReadRootSandstormCoreFactory_getGatewayRouter_Params(msg *capnp.Message) (SandstormCoreFactory_getGatewayRouter_Params, error) {
	root, err := msg.Root()
	return SandstormCoreFactory_getGatewayRouter_Params(root.Struct()), err
}

func (s SandstormCoreFactory_getGatewayRouter_Params) String() string {
	str, _ := text.Marshal(0xf0b05750d16cf185, capnp.Struct(s))
	return str
}

func (s SandstormCoreFactory_getGatewayRouter_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCoreFactory_getGatewayRouter_Params) DecodeFromPtr(p capnp.Ptr) SandstormCoreFactory_getGatewayRouter_Params {
	return SandstormCoreFactory_getGatewayRouter_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCoreFactory_getGatewayRouter_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCoreFactory_getGatewayRouter_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCoreFactory_getGatewayRouter_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCoreFactory_getGatewayRouter_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// SandstormCoreFactory_getGatewayRouter_Params_List is a list of SandstormCoreFactory_getGatewayRouter_Params.
type SandstormCoreFactory_getGatewayRouter_Params_List = capnp.StructList[SandstormCoreFactory_getGatewayRouter_Params]

// NewSandstormCoreFactory_getGatewayRouter_Params creates a new list of SandstormCoreFactory_getGatewayRouter_Params.
func NewSandstormCoreFactory_getGatewayRouter_Params_List(s *capnp.Segment, sz int32) (SandstormCoreFactory_getGatewayRouter_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[SandstormCoreFactory_getGatewayRouter_Params](l), err
}

// SandstormCoreFactory_getGatewayRouter_Params_Future is a wrapper for a SandstormCoreFactory_getGatewayRouter_Params promised by a client call.
type SandstormCoreFactory_getGatewayRouter_Params_Future struct{ *capnp.Future }

func (p SandstormCoreFactory_getGatewayRouter_Params_Future) Struct() (SandstormCoreFactory_getGatewayRouter_Params, error) {
	s, err := p.Future.Struct()
	return SandstormCoreFactory_getGatewayRouter_Params(s), err
}

type SandstormCoreFactory_getGatewayRouter_Results capnp.Struct

// SandstormCoreFactory_getGatewayRouter_Results_TypeID is the unique identifier for the type SandstormCoreFactory_getGatewayRouter_Results.
const SandstormCoreFactory_getGatewayRouter_Results_TypeID = 0xa845001d2449aa2a

func NewSandstormCoreFactory_getGatewayRouter_Results(s *capnp.Segment) (SandstormCoreFactory_getGatewayRouter_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getGatewayRouter_Results(st), err
}

func NewRootSandstormCoreFactory_getGatewayRouter_Results(s *capnp.Segment) (SandstormCoreFactory_getGatewayRouter_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getGatewayRouter_Results(st), err
}

func ReadRootSandstormCoreFactory_getGatewayRouter_Results(msg *capnp.Message) (SandstormCoreFactory_getGatewayRouter_Results, error) {
	root, err := msg.Root()
	return SandstormCoreFactory_getGatewayRouter_Results(root.Struct()), err
}

func (s SandstormCoreFactory_getGatewayRouter_Results) String() string {
	str, _ := text.Marshal(0xa845001d2449aa2a, capnp.Struct(s))
	return str
}

func (s SandstormCoreFactory_getGatewayRouter_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCoreFactory_getGatewayRouter_Results) DecodeFromPtr(p capnp.Ptr) SandstormCoreFactory_getGatewayRouter_Results {
	return SandstormCoreFactory_getGatewayRouter_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCoreFactory_getGatewayRouter_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCoreFactory_getGatewayRouter_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCoreFactory_getGatewayRouter_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCoreFactory_getGatewayRouter_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCoreFactory_getGatewayRouter_Results) Router() GatewayRouter {
	p, _ := capnp.Struct(s).Ptr(0)
	return GatewayRouter(p.Interface().Client())
}

func (s SandstormCoreFactory_getGatewayRouter_Results) HasRouter() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCoreFactory_getGatewayRouter_Results) SetRouter(v GatewayRouter) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// SandstormCoreFactory_getGatewayRouter_Results_List is a list of SandstormCoreFactory_getGatewayRouter_Results.
type SandstormCoreFactory_getGatewayRouter_Results_List = capnp.StructList[SandstormCoreFactory_getGatewayRouter_Results]

// NewSandstormCoreFactory_getGatewayRouter_Results creates a new list of SandstormCoreFactory_getGatewayRouter_Results.
func NewSandstormCoreFactory_getGatewayRouter_Results_List(s *capnp.Segment, sz int32) (SandstormCoreFactory_getGatewayRouter_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCoreFactory_getGatewayRouter_Results](l), err
}

// SandstormCoreFactory_getGatewayRouter_Results_Future is a wrapper for a SandstormCoreFactory_getGatewayRouter_Results promised by a client call.
type SandstormCoreFactory_getGatewayRouter_Results_Future struct{ *capnp.Future }

func (p SandstormCoreFactory_getGatewayRouter_Results_Future) Struct() (SandstormCoreFactory_getGatewayRouter_Results, error) {
	s, err := p.Future.Struct()
	return SandstormCoreFactory_getGatewayRouter_Results(s), err
}

func (p SandstormCoreFactory_getGatewayRouter_Results_Future) Router() GatewayRouter {
	return GatewayRouter(p.Future.Field(0, nil).Client())
}

type SandstormCoreFactory_getShellCli_Params capnp.Struct

// SandstormCoreFactory_getShellCli_Params_TypeID is the unique identifier for the type SandstormCoreFactory_getShellCli_Params.
const SandstormCoreFactory_getShellCli_Params_TypeID = 0xc8fe0af361f6297a

func NewSandstormCoreFactory_getShellCli_Params(s *capnp.Segment) (SandstormCoreFactory_getShellCli_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCoreFactory_getShellCli_Params(st), err
}

func NewRootSandstormCoreFactory_getShellCli_Params(s *capnp.Segment) (SandstormCoreFactory_getShellCli_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCoreFactory_getShellCli_Params(st), err
}

func ReadRootSandstormCoreFactory_getShellCli_Params(msg *capnp.Message) (SandstormCoreFactory_getShellCli_Params, error) {
	root, err := msg.Root()
	return SandstormCoreFactory_getShellCli_Params(root.Struct()), err
}

func (s SandstormCoreFactory_getShellCli_Params) String() string {
	str, _ := text.Marshal(0xc8fe0af361f6297a, capnp.Struct(s))
	return str
}

func (s SandstormCoreFactory_getShellCli_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCoreFactory_getShellCli_Params) DecodeFromPtr(p capnp.Ptr) SandstormCoreFactory_getShellCli_Params {
	return SandstormCoreFactory_getShellCli_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCoreFactory_getShellCli_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCoreFactory_getShellCli_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCoreFactory_getShellCli_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCoreFactory_getShellCli_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// SandstormCoreFactory_getShellCli_Params_List is a list of SandstormCoreFactory_getShellCli_Params.
type SandstormCoreFactory_getShellCli_Params_List = capnp.StructList[SandstormCoreFactory_getShellCli_Params]

// NewSandstormCoreFactory_getShellCli_Params creates a new list of SandstormCoreFactory_getShellCli_Params.
func NewSandstormCoreFactory_getShellCli_Params_List(s *capnp.Segment, sz int32) (SandstormCoreFactory_getShellCli_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[SandstormCoreFactory_getShellCli_Params](l), err
}

// SandstormCoreFactory_getShellCli_Params_Future is a wrapper for a SandstormCoreFactory_getShellCli_Params promised by a client call.
type SandstormCoreFactory_getShellCli_Params_Future struct{ *capnp.Future }

func (p SandstormCoreFactory_getShellCli_Params_Future) Struct() (SandstormCoreFactory_getShellCli_Params, error) {
	s, err := p.Future.Struct()
	return SandstormCoreFactory_getShellCli_Params(s), err
}

type SandstormCoreFactory_getShellCli_Results capnp.Struct

// SandstormCoreFactory_getShellCli_Results_TypeID is the unique identifier for the type SandstormCoreFactory_getShellCli_Results.
const SandstormCoreFactory_getShellCli_Results_TypeID = 0xc701240ec8cce7ff

func NewSandstormCoreFactory_getShellCli_Results(s *capnp.Segment) (SandstormCoreFactory_getShellCli_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getShellCli_Results(st), err
}

func NewRootSandstormCoreFactory_getShellCli_Results(s *capnp.Segment) (SandstormCoreFactory_getShellCli_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getShellCli_Results(st), err
}

func ReadRootSandstormCoreFactory_getShellCli_Results(msg *capnp.Message) (SandstormCoreFactory_getShellCli_Results, error) {
	root, err := msg.Root()
	return SandstormCoreFactory_getShellCli_Results(root.Struct()), err
}

func (s SandstormCoreFactory_getShellCli_Results) String() string {
	str, _ := text.Marshal(0xc701240ec8cce7ff, capnp.Struct(s))
	return str
}

func (s SandstormCoreFactory_getShellCli_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCoreFactory_getShellCli_Results) DecodeFromPtr(p capnp.Ptr) SandstormCoreFactory_getShellCli_Results {
	return SandstormCoreFactory_getShellCli_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCoreFactory_getShellCli_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCoreFactory_getShellCli_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCoreFactory_getShellCli_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCoreFactory_getShellCli_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCoreFactory_getShellCli_Results) ShellCli() ShellCli {
	p, _ := capnp.Struct(s).Ptr(0)
	return ShellCli(p.Interface().Client())
}

func (s SandstormCoreFactory_getShellCli_Results) HasShellCli() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCoreFactory_getShellCli_Results) SetShellCli(v ShellCli) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// SandstormCoreFactory_getShellCli_Results_List is a list of SandstormCoreFactory_getShellCli_Results.
type SandstormCoreFactory_getShellCli_Results_List = capnp.StructList[SandstormCoreFactory_getShellCli_Results]

// NewSandstormCoreFactory_getShellCli_Results creates a new list of SandstormCoreFactory_getShellCli_Results.
func NewSandstormCoreFactory_getShellCli_Results_List(s *capnp.Segment, sz int32) (SandstormCoreFactory_getShellCli_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCoreFactory_getShellCli_Results](l), err
}

// SandstormCoreFactory_getShellCli_Results_Future is a wrapper for a SandstormCoreFactory_getShellCli_Results promised by a client call.
type SandstormCoreFactory_getShellCli_Results_Future struct{ *capnp.Future }

func (p SandstormCoreFactory_getShellCli_Results_Future) Struct() (SandstormCoreFactory_getShellCli_Results, error) {
	s, err := p.Future.Struct()
	return SandstormCoreFactory_getShellCli_Results(s), err
}

func (p SandstormCoreFactory_getShellCli_Results_Future) ShellCli() ShellCli {
	return ShellCli(p.Future.Field(0, nil).Client())
}

const schema_dcbc0d702b1b47a5 = "x\xda\xccZ{x\x14U\x96\xbf\xa7*M\x01\x93\x10" +
	"\xca\xe2\xe1\x03'\xca\x84O\x01A\x10\x84\x10\x02\x9d\xc7" +
	"\x84\xa4;AR\x04\x86\x99\xac\xacT\xba/I\x91\xee" +
	"\xaa\xa6\xaa\xda\x10fY\x065\x0c\x83\xfa9\xb8>V" +
	"v}\x80\xe2\x0a#\xcb\xe3\x1b|\xa2#>\x06D\x11" +
	"\x10\xd1\xc5\x95]\xe2;~\xebhT\xc6e\x1c\xa9\xfd" +
	"\xee\xed\xbe\xd5\xb7\x93\x0e\x9d\xe0\xfc\xb1\x1f\x7f\xf0\xa5\xea" +
	"\xdc[\xe7\x9c\xfb;\x8f\xfb;=\xe9\xe1\x11\xa59\x93" +
	"\xf3\xdc\x08\x12\xea\xbf\xc9\xf1\x0dpW\xbd\xf4ret" +
	"\xd6\xfd\xbfB\xea\x08\x00\x84r$\x84\xa6\xe0i\x1b\x01" +
	"\x81\x12\x9f\xe6G\xe0V=v\xfb\xe1_\xbc\xe8\xde\x8c" +
	"\xe4Q\x80\x90O \x02wO[O\x04\xb6LkE" +
	"\xe0\xde;\xf6\xe5\xd3\xfaU\xd3\xd6\"y\x04\xdb\xc07" +
	"\xbd\x11P\x8e;~\xc2;\xf7\x1e\x1byp-\x92\xc7" +
	"\x91\xa5@^uM{\x91,\x85\xe9d\xef\xcbO^" +
	"7\xb8e\xeb\xa3\xbfN,\xf5\xd1\xb5c\xa6\x07\x89\xc0" +
	"\xe4\xe9\x9f p\xbb\xc6\xdc\x1c\xfdd\xf7\xd8uI\x01" +
	"\xba\xc3\xa0\xa2eD`x\x11\xd9\xe1\xc1\x0b\xa6n\x0b" +
	"\x0c\x8d\xaf\xe3\xb5\xbb\xb6h7\x11\xa8,\"\xda\xb9\xff" +
	"6\xfb\"Ij\xbb\x95\xdfaSQ\x03\x11\xd8Nw" +
	"X\xf0\xc9\x8cG~V\xfd\xe8mH\x1d\x09\xde\x16\x87" +
	"\x8an\"\x12'\x8av pOT\xdc<\xe9\xb3\xfd" +
	"\x95\x1b8\x03\xdbf\x04\x89\x81\xd7\x0e\xbd\xb7\xb4\xeb\x9a" +
	"h\xf2Mb)\x9e\xd1H\x96.\x9fA\xbe\xfe\xa7\xfa" +
	"\xf6\xe0\xff\xfe\xd2\xbd+\xa9\x1e\xfd\xfa\xd1\x19\xd4\x03\x1d" +
	"3\xc8\xd7o\xbe\xfa\xc4\x95\x7f\xf7R\xc7=\x09\x81\x84" +
	"\xf3\x8a\xb7\x91\xbd\x1b\x9c\xceO\x9eZ\xb1h#o\xd9" +
	"\xe9\x19w\x92\xa5\xbebj\x99&\x9f\x1c\xf8\xc0\xd6\x8d" +
	"\x9cZ\xb8x>Y\xfa\xec[\x17\x8a\x0f~\xb5\xee\xfe" +
	"\xa4Z\"y\xa5\x92W\xa0,.&\x16\xadz\xea\x99" +
	"[n\x09\xfc\xf6\x01n\xe9\x99\xe2ed\xe9\xe2O\x8b" +
	"\x82\x1f\xff\xe7E\x0f%\x8f\x8c.\xfd\xa8\xf8 Yz" +
	"\x86.\xad\xf9]\xd1\xde[\xa6\xec\xdf\xc4\xe3\xe5\xfe\x99" +
	"T\xad\xed3\x89Ew\xbc\xf2\xcdC\xcfb\xeba$" +
	"\x8f\x12\xddw7\x1dk\xbd\xec\x9d\xad/!\x04S\x0e" +
	"\xcdl\x00\xa5c\xa6\x84\x90rrf\x95\xe2+\x91\x10" +
	"\xfa\xefq\xdb\x02\x85\x97V>&\xff\xc4s\xcf\xe73" +
	"\xdf\xa7\x00)!\x9b\xb5\xbc9\xeb\xc4\x84#wl\xe5" +
	"\x14\xbd\xbc\x84bk\xf1\xdaK&\xddV\xf0\xc56\xfe" +
	"\\\xf3J(,/\xa5K\x0f\xaf\x98W\xb2f\xd1\xdd" +
	"\x8f\xf3\x02\xb3J(\xb6\x02T\xe0L\xf8L\xfb\xf4g" +
	"7lG\xf2H\xb6w\xb4\xe4N\xb2\xf7\xc6Q/\x9c" +
	"\x19r\xe6\xbb\xedI\x1b\x13\xb8\\\\R\x0e\x08\xa6\xe0" +
	"\x92;\x00\xc1\x17y;\xe1\xc0\xf6u;Rj\x9d\x9e" +
	"\xd5@\x96\x96,\xdf\x9c\xb7\xf8\xd8\x9a\xdf#y\x84\xe8" +
	"\xce\xdb\xbe\xafxy\xe7\xce}\xc4\xfa\x8eY\xf3A9" +
	"=\x8bX\xdf5\xabJ\xb9h\xf6H\x84\xdcy\xf7\x1d" +
	"t\xd6\xee+x\"\x0d\xde\xb3)8\x87\xcf&:>" +
	"\xbdK\xb9\xfe\xbd\xf5\xb7?I@\x90rfB\xa1\x19" +
	"\xb3\x1b@\x99;\x9b\xec\x18\x98M\x82\xe5Q\xff?\x8d" +
	"\xbe\xe2\xb2)\xcf\"y\xbc\x87\x981\xfe7\xc9n3" +
	"\xfc\x041\x87\xefhX\xbb\xf7mu/\xff\xb9\xfb\xfc" +
	"\xf4s[\xfc\xe4s\xe3r\x1f\x9d\xfa\xc8Q\xdfsI" +
	"\xcc\xd1\xd3\x7f\xc5O\x0f\xf7\xb8\x9f\x86\xc2S\x0f?y" +
	"p\xc4\x95\x7fH\xf8,\xf1\x89\xb6\xd2\x95D\xa0\xbd\x94" +
	"|\xc23Y\x1e\"\xba[\xaa.\x19\x1f\xcb\xdb\xfb\x1e" +
	"\"p/\xdd\xadt\x96\x8e$H+\x95r\x94\xe7*" +
	"$\x84R\x16u\x97\xdeR\xf1\xbe\xb2\xabb:BS" +
	":*\xaa\x04\xa5\xbd\x92H\xff\x87R\xf8\xdaG\x13\x83" +
	"/\xf3\xc1\x14\xad\xdcL>\xbe\xaa\x92\xa8?\xaan\xe0" +
	"\x15\xe3;\xa7\xbf\xc2\x0bl\xaa\xa4\xc9`\x17\x15p?" +
	"y\xfd\xc0\x90B\xd8\x8f8\xbcuT>C\x04\xba\xa8" +
	"\xc0\xad'\xbf\xbc\xe4\x9a_\xfb\xf6#u\x14p\x0e\xaf" +
	"\x04IDh\xca\xf097\x812v\x0e\xf1\xf8\x989" +
	"\xc4\xe3+\xc7\xfeY\xfbz\xf0\xd9\x03\x89\xfd\xe8\xa9\x0c" +
	"\xaa\xdaMp\xf0\xe4\x86\xe7\x1f\x8d\xfd\xe1\xae\x83\xbc*" +
	"g\xe6\xd0/\x0d\xaa\xf2#8{\xe1\xe4\xa3?\xfd\xe6" +
	"g\xaf\xa5\x004\xa1\xea\x02\xb2p\xddi\x1d\xef\xbal" +
	"\xfd\xeb\xfc\xc2\xe1U4\x1f\x8f!\x0b\xdd5\xc7|K" +
	"\xfe4\xf8\xc3\xd7\xf9\xe0\xae\xac\xa2\x87\xa8V\x913\xba" +
	"bE\xe8\x86\xdf=\xf8\xaf\x87\xb8\x98\xf9\xbc\x8a\xe6\x85" +
	"7\x87^>\xf5\xadY\xcb\xde\xe0\xf7>QE\x83\xfb" +
	"s\xba\xf7\x94\xe3?\xae\x8e\xdf\xb3\xf4\x08\x9f\xcf\xf2\xaa" +
	"i\xcc\\TM\x8e\xb7q\xc8;\x7f\xbf\xec\xf3\xb7\x8f" +
	"\xf0\x08\x8aW\xd3\xcc\xb2\xa6\x9a\xec\xf0\xfe_\xde\xdd\xbc" +
	"\xe0\xdb\xf67\xb9|\xb6\xa5\x9az\xa4\xeb\xd0\xf0\xe0O" +
	"F\xdds,\x81N\xfa\xe6\xee\xeaw\xc9\x9b\xa7\x8e>" +
	"\xf0_\x17\xfex\xfc\xc9\x1e(\xf8M\xf53\xca\x86j" +
	"\xe2\xee\xdb\xab\xf7+\x97\x06\x08\x08VL\xee|\xeb\xd4" +
	"\x87\xe6)^E_\x80Btx\x80\xa88\xec\xe3'" +
	"\xde\xfe\xb6\xb1\xeb\x14o\xe4\xf2\x00\xcd)\xed\x01\xa2\xe2" +
	"_\xc7I\x87w]p\xe7\xfb\xbc\xc0\xd6\xc06\"\xf0" +
	"4\x15X\xb2jd\xe7sol\xfd\x80s\xe0\x89\xc0" +
	"\xc5D\xd3\xe7\xd7V}\xb5\xf17G>\xe4\x97\xeeK" +
	"|\xfc(]z\xf8\xe2\xb3\xaf\xee\xd8q\xecC^\xbb" +
	"\xae\xc054}R\xed~;7o\xde\xd5\xd5\xb9\x1f" +
	"sIga\xf0&\xb2\xf7T\xcbY\x82o{\xfcS" +
	"\x1e\x9be\xc1w\xc9\xd2\x85A\xb2w\xe7\xbf\xcf\xffn" +
	"\xda\x95?\xfa,\xcd\xf7\xc1b\x0a\x7f*0n\xdf\xc7" +
	"\x1f\\\xb63\xfe\x19\xbf\xc3\xa6 \xb5|\x0f\x15x\xe7" +
	"\x09\xf9\x1f\x1f\xba\xe9\xc1\xcf8\xc3\x8e\x07i6=<" +
	"\xe9W\xbe\xb7\x0b\x0a\xbf\xe0A\xb5/H\x0b\xd9\xa1 " +
	"\x01\xd5\xf8\xe8\x98\xa5\xfe\xabn\xfe\xb2\xfb\x19MY^" +
	"s1(kj\xc8!\xad\xaa\xd9\xaf\x0c\xaa%\x87\xd4" +
	"\xde\x159Z\xb7h\xe7\x97\\\\t\xd5\xd0\xb3\x1e\xfc" +
	"\xf3;\xce\x1e\xee\xa8\xef\xe2\xec\xff\xa8f=y\xf3\xcb" +
	"\xd1+\xc0\xfd\x9f\xd7\xbf\xe2\xcd;^C\xa1\xd5QC" +
	"\xb4\x7f\xbe\xf1\xe8\xe0[\xdf<\xf55\xb7\xd4W\xbb\x91" +
	",\x9dT6\xfe\xeb\x0f\x1e\x19\xf1-\x8dZ\xb6\xf6t" +
	"\x0d=R_-q\xfb\xf4\xd1y\x03K\xae\xbb\xfa\x0c" +
	"\x7fpz-u\xee\xaaZ\xb2\xf9\xb0_L\xddz\xaa" +
	"\xc8\xfaKZ\x9bPK2\xbe\xb2\x95\x0a\xd4\x0e-7" +
	"7\x9c\xa8\xfd\x8e\x17x\xb5\x96\x86\xddq*\xb0\xfbV" +
	"\xe5\xb5=\xef\x8f\xfe\x9e\xcf\x9dgji\xe0\x0e\x9a\xbb" +
	"\x03\xb9\x19\xfeYn\xa3\x16j\xc1Fx\xa2/\xa4\xc5" +
	"\x8cXqy\xf2\xcf&\xecTY\x9an\xd4;\xa6\xa5" +
	"5\xe1\x85\xb6\xd6\x84\x0b\xe7c;\x1e\x11\x1d[\xcd\x11" +
	"s\x10\xca\x01\x84\xe4\xbcq\x08\xa9\x03EP\x87\x09\x90" +
	"o\xeb+1\x0cB\x02\x0c\"\x81\x9a\xbeq\x95\xe6\xe0" +
	"V\xadm\xbe\x19w\xb05\xd1\x8cac\xa1^\x8fm" +
	"[7\x8d\xc2:\xcd\xd2\xa26\xdd\x88\xed;\xd6BH" +
	"\xbdR\x04u\xaa\x002\xc00\xe2Uyr1B\xea" +
	"U\"\xa8E\x02\xb8vbq\x05*0\xcd\x16\x1dC" +
	".\x12 \x17\x81?F7\x83\xa1\xee=;\xff\xbc\xe8" +
	"\xdeK|\xef \x040\x94S('\xddR\xc7\xd2\x0c" +
	"{)\xb6\xa8\xb9\xd4D)\xe2\xd8\x9e\xf4\x80t\xe9:" +
	"-\xd4B\xfc\x11\x8b\x98Z\xb8\xde\xb1\xb0\x16\x9dhk" +
	"7\xe22\x9bY\xc1;g>Bj\xae\x08\xea\x85\x02" +
	"\xb8\xb1\xc4\xca\x00\x820\xd3\xb57\x95\xc8\xe3x,\xa1" +
	"\x90\xe7\x9b\xa1\xde\xb6Z\x10!u\x89\x08j\x84\xf3\x8d" +
	"^\x8e\x90\x1a\x16A\x8d\x09 \x0b\xc20\x10\x10\x92\xa3" +
	"\xe4a\xb3\x08\xaa#\x80,\x8a\xc3@DH^N\x8e" +
	",\"\x82\xbaBHh\x10\x8f\x05\xc2\x08!\xa6\xd5j" +
	"\xb3\xd5\xc0V\xc0\xd3ru\x13Q$\xf5w\xben," +
	"5a\xa8\xdb|iS}\xc7\x0b\x7f\xdd\x93\xc5\xbf\xba" +
	"a;Z$\x92t\x1cqp~<\x92\x8e\xa1\xe2\x14" +
	"\x86\xfc6\xf5)\xc8\xa9>\x06\x01\xc8\xd9\xf0\xd4\x84\x9d" +
	"\xb2\x98^m\xda\xce|l\x9bq+\x84\x0b\xeb\x0a\xa8" +
	"\xe7xL\x91\xef\x14\x8a\xa0N\xe2\xfc6a\\\x0ah" +
	"\xfef\xd3v8Cc\x9a\xd3\x9c\xed\xac,l;\xa6" +
	"\x85S\xe89W\x80d\xf1\\\xd2\xb4\xfaf\x1c\x89T" +
	"D\xf4\x89!\x0bk\x0e.\x0bEqY(d\xc6\x0d" +
	"\xc7\xc3X\xae\xb7\x7f%\xc1\xd8OEP\xeb8\xa3\xe6" +
	"^\x83\x90Z-\x82\xba@\x00HbA]\x86\x90Z" +
	"'\x82z\xbd\x00nX\xb7p\xc81-\x04m\xcc\xc0" +
	"\x02\x1c\xd5\xf4\x88g\xae\xd6da\xbc\xc0\\\x80\xf2\xb1" +
	"\x15\xb5\x01\x90\x00\xd0\xbb\x17\xc28\x82\x1d\xbc\xd0\xc6V" +
	"\xc2\x07\x8e\x8dP\xaf\xb2f\xabA\xa2\xa7\x9cB\x8f\x98" +
	"$u;\xa7`\xb6\xd8\xcf\x80\xda\x14pn\xf8\xe0\xf0" +
	"\xd8\xd6\xa2E\x87\xba\x03g@&\xe0X\xe4\xbf9\xa6" +
	"\x85\xf5&\x83\xc0\xc7\xd0\xa28S$\x07\xb9HnN" +
	"\xcaq_?7:\xedx\xa3\x1d\xb2\xf4F\xbc b" +
	"\xd7\xe06\xdb\x0b\x82\xecI\xb2,\x96\x9e%\xa1\x7f\x8e" +
	"\xd2b\xfa\x02\xb3\x05\x1b\xbc\xa3\xbc\x04y\xef\xe9y\xb5" +
	"\xb7O\xf8\xf4l\x96\x00N\x9c-\x07p\x07\xec>E" +
	"\x03S\x98\x03k0\x13X\xcbS`\xf52\x97J\x1e" +
	"\xd6\x8a\xa0\xfe\xfc\xfc\x92T\x1f\xc1\xd7\xe3 \xfa\x9e\xee" +
	"=\x9c\xf3\xf6\x91\xb8+\x15A\xad\xe5\xec\x0b\x043\xd9" +
	"\xf7\"B\xea\x02\x11\xd4%\x02\x14h\xb1\x18\xa7yT" +
	"3\xf4\xa5\xd8v\x88\xb5C\xdd\x83\x1d\x1f\xeb\xcb\xc6\xde" +
	"\xd0\xce\x0eI\x8b;\xcd\xa6U\xd7$\xc4jp\xdb\x1c" +
	"\xddh\xc2V\xcc\xd2\x0d\xa7W(r\x15\x9d\xc4g\xcf" +
	"\x82\xee@\xff\x0azN&\xac&\x90]\xa1E\"\x8d" +
	"\x9a\x18j\xa9\x03PsD\x1fB\xde\x95\x10X\xf7-" +
	"\xcb\xe5H\x90}\xd2j\x1b;$\x18J\xa1\x0ez\x04" +
	"i\xbdf\x84\x09\x92\xa2\x15\xa6\x85\xe7h$U\xb5\xd1" +
	"\x9e\x84\xff\xa8W\xac{\xab%4\xb8-\x90y\x12 " +
	"-%\x9c\xbbT%3S\x7f\x1c\xeaU\xeb^4\x8a" +
	"\xdb<h{\xd3\xc3v4\xcb\xe1\x03\xae\xdb\x8e\x0d\\" +
	"2\xb2\xe31l\xdd\xa8\xdbH4\x89\xa5\x93\x16\x16\x85" +
	".\xdf\xa7\xde\xd7K\xd5\xf4J\x8b\x85\x0d\xdcZ\x81-" +
	"G_\xaa\x874\x07_g\xb6\xb2x\xed\x83V,A" +
	"\x8e\xf2t\xdaC\xe2u\xa7\x08\xea^\x0e\xf9O\x93\x87" +
	"\xbf\x17A}\x81C\xfes\xa4`\xed\x15A=\xc0\xf5" +
	"$\xaf\x10\xc9\x17DP_\x17\x00r\x86A\x0eB\xf2" +
	"\xab$\x98^\x16A=\"\x80\xec\x83a\xe0\x03\x90\x0f" +
	"\x11\xc1\x03\"\xa8o\x09 \x0f\x10\x86\xc1\x00\x00\xf9(" +
	"\xd9\xf2\x88\x08\xea{B\xf6\xc4\x90\xa1\x0f[\x1d2\xa3" +
	"Q\xcd\x08\xc3P\xf7\xf0\xda+\x1f\xda\xad\x06\xfe\x98\x0c" +
	"\xb7\x02\xdd\xbe\x0e\xb7\xb2\xea\xb7:\x8co\x9ck\x86\xb1" +
	"W\x0d\xa3\xa4(\xd7Y&\x82P\xdf*d*\xed\xd0" +
	">\xa17\xe1\x9ei\x07\xa2\xa9\x90b\xa4&0\xaaL" +
	"\x96\x8biH\xf9\x13\xa9\xa9\x14\xd4\x1c\x00\xae\x0e\xa2s" +
	"+\xc5\xe1]\x13\xa3\xf6\x0fh`\xd3sB\xbd\xa39" +
	"z(\xd1\x90\x89!L\x0c\xe0\x9aX\x92g\xae\x17A" +
	"m\xe6\x00\x83\x83\x99\x9a\xd8`\xaa_\xf5\x00\x13'\xcb" +
	"c\"\xa8\xff @\xbe\xd3\x16\xf3\xfa\x7f7\xa2\x19M" +
	"q\xad)\xad:c#d\x86u\xa3\x89{\x96\xdfh" +
	"\x86\xdb \x0f\x09\x90\x97\xadG\xe0s[\xa8eb2" +
	"oe\xaa\xc7\xa335\x98\xf3S\xf5Xj\xc1^\xbf" +
	"\xe5\x86\xb0\xe5T4k:\x02#[B\x88\xc7\xd2k" +
	"V\x8f&3c\x07\xdd[#\xd4\x87\x1b\x99W\x18\xb8" +
	"\xdaV\x9e\xa9\xb6\xadO\x95i\xef\xc0\x16.K\xd5\xb6" +
	"\xd5\xc9k\x1a\xc8\xee\x1b\x8f];w\x93,ma\xea" +
	"\x10\x93t\xa3)\x00F\x98\xa4 \xd3B\x08d\xf7T" +
	"\xf9\x92%\x8f\x17~\xf3\xcfL*\xa6Y\xd8p\xe6Y" +
	"(_o\xd2{u\x94\x97\xd7l\xec\x90~\xb9\xa2Y" +
	"\x8bD\xb0\xd1\x84\x0b\xfdu}\xbb\x06\x94s\xd7\x80\xa8" +
	"\x19\x8eGp\xaa\xd5\x889\xbai\xd8=\xbe\x0d\xec\x90" +
	"\x0a\xe8\xdf4\xe8R\xec+lvY\x18\x03\x8bc\x09" +
	"kQ\xb5T\xf4\x01x\x0c/0\x96X\xe9\x82\x06$" +
	"(\x9d \x81\xe0\xb18\xc0(\x17\xe5$\x04\x91\xa0\x1c" +
	"\x07\x09D\x8f$\x03F\xc0+\xafB#\x12\x94} " +
	"\xc1\x00\x8f\xb1\x066\xbaP\xf6\xc0J$(\xdbA\x02" +
	"\xc9c\x11\x80\x11.\xca&\xb0\x90\xa0\xdc\x07\x12\x0c\xf4" +
	"\xe8``D\x8dr;}\xdb\x0e\x12\x0c\xf2\x86%\xc0" +
	"\x08>\xa5\x8d~w9H0\xd8\xe3\xfc\x81\x0d<\x14" +
	"\x0c\xcb\x90\xa0,\x06\x09~\xe4\x91+\xc0(`E\xa5" +
	"o\x03 A\xae7\xc6\x006\x17PfQ\x9d\xaf\x05" +
	"\x09\xf2<\xce\x0f\xf2v\xc2\x01\xb4}\xdd\x0ee,]" +
	"{9H0\xc4\xe3\xe1\x81\x0d\x06\x94\xe1\xb0\x19\x09\x8a" +
	"\x0c\x12\xe4xd%\xb0!\x91\xe2#\x16\xc9\xdfK\xe0" +
	"\xf38\x17`\x03\x16\xb9\xab\x01\x09r\xa7\x84\x10\xa3G" +
	"9.\xee\xe48$\xc8G%\xc8\xf7(@`\xb3+" +
	"\xf9\x95mH\x90\xf7I.+\x92H\xd4\x8dRp\x19" +
	"\x8d\x82\x10*\x05\x97u\xd2H\xd2\xe8[\xd6o \x7f" +
	"\x02(\xa5\xe0:V[\x15v\xea4T\xc0\x9e\xb0\x1c" +
	"\x9dz\xc2\xe8\x01\xb6\x0dk\xbaQ\xbe\x95x\xc0\xd2\x05" +
	"\xca'\x82d\x8fd\xd7\x8b\xfc\x89\x1c\xe2m\xcb\xc9\xb0" +
	"v\x06X?#1\x8d\x12\xfc\x08*\xa8Jn\xcf." +
	"{H\xc4V)\xe4\xc7t\xa3\x893\x15XC\x94o" +
	"\xd3\x0d\xf8\xeeN\xe8\x9ey$\x07[j.\xf0c\x06" +
	"ye\x8a\x03\x97\xe5\xcd\xdc4g\xf8J\x97\x95\x14\xe4" +
	"O\xdc\xf2]vu\x83\xe4\x9d, \x19KM\x97e" +
	"l\xe4O\xe4l\xb5\x90\x16N6H\x046ePd" +
	"\x8a\xeeA \x01x\xe3.`\x04\xb8\xfc\xfdJ$\xc8" +
	"\xa7\x09P\x18\xed\x0a\x8cc\x93;\xc9\xbb\x0e\x12o\x8c" +
	"\xd9\x03\xc6\xfb\xca\xc7_L\x00E\xf2\xa6o\xc0\x88o" +
	"\x06\x14\x18\xe8\x0d\x13\x80M\xe0\xe4=\xeb\x91 \xef\"" +
	"\xa8e\x0c1\xb0\x81\x82\xbc\xe5N$\xc8\x9bH\xf4\xb3" +
	"\x81#0\x86_\xbe{#\x12\xe4\x0d$o0\x1e\x12" +
	"\x18\x0b.\xb7\x93uk$\x97\xe5wT@\xf3q)" +
	"\xb8\xecz\x89\xfc\x98=j\xc2\x0e\xf50\xf2\x87\xcal" +
	"\x1b;\xdc#!T\x17o\x8c\xe8v\xb3n4\x91\x8b" +
	"2\xc13\xbb<\x03\xbb=\xe7\x93#(%Mi\xe2" +
	"\xc2\x0b\xec\xc6K\xe1\xcfH\x1a\xb0\x9dy4\xa5\x82\x9d" +
	"\xfe\xd4k\x15J\xc1m\xc18\xa6E\xf4\x1b\x01\x97%" +
	"\xee\xb0`\xa4c\xa9o7m\xc6.\xf4r\x95\x0f%" +
	"\x8b:\xa2\xb5\xc7\x83Z\xff(\xa7\x841\xe4FX`" +
	"w\xa7\xb6F'\x0bs\xa1\x00RX\xbb\x11\x86 \xa8" +
	"\x13\x81\x96\x92!\x19\xda\xf3^\xae=\xac\xbc\x15\xce\xf7" +
	"\xe3\x1e\x9f\xe0\xed\xb1\x93\x82\x09{\xbc\xb1F_\xec\xe9" +
	"F\x82\x04\x8c\xa5&J\xb6l\xb9\xae\x9b\xe8\xd9\xcaS" +
	"=[\x1e\x9cu\x93M\xdb\xfa\x14\xc9\x98'|\xef&" +
	"\x9a\x80\xe5\x0d\xa9\x06M\x16!\xd1\xb5\xb5\x91\x87+D" +
	"Po\x11`u\xdch1\xccV\x03\x0d I\xd3\xd1" +
	"Cuq`\x00\xe3Z7\xdb\xd1\x8c\xb0\x161\x91h" +
	"`4\xc0u\x9cH=\x0e\x99\x06\x12\xc36\x0cD\x02" +
	"\x0c<\x0f/&\xa9\xc1~S\x8a\xd9\xbco%\x05\x13" +
	"7w/\xa5u\xa3W\xc4\xf4\xde\x8e\xa4\xcf\x1eW\xaf" +
	"\xbe\xf0A\x99\xfa\xc0\xf2T\x1f\xc8u^\xfb\x0f\x8d\xf9" +
	"c\xdb\x07m\x07\xb2\\\x7f\xd3\x99pv\x1b\xc8\xd6\x01" +
	"\x96s\x94\x0e\xeb\x00\xe76\xa4\xda\xc2\xac\x172\x03\xb7" +
	"\xce#\"H\x0c\xf4\x8b\x19\xef\xc1E\xf5\x9d\xe0\xcbx" +
	"\xab\xce@\xd4z\x85\xa8\xef\x0cY\xa6YFy\x96\x86" +
	"\xf3\xbc\xc9,\xfeN\xc9\xae#\xbd`3\x03\x87vn" +
	"\xb4\xb1\x04\xcc\xf2\xaf\xe1\xe5\xb7\xf3\xba-\xf5\xb8\xf2\x02" +
	"\xeb\xdc\xfd\x89\xa8$\xb9&\x97\x96i\xf6{\x18`\xa3" +
	":Y%El.)\xd2l\xfc\x0fl\x8c)\x97\x91" +
	"\xa29\x8b\x14?\xf6s\x0a`s:y\xf2f$\xc8" +
	"\x13$\x97\x11\xe9\xc0\x98t \xa5\x8d\xdd\x15\x80]\x16" +
	"h\x95b\xcc\x080jD\xba\xcel\xcdXz\xce9" +
	"+\xcbp;\xfc\x9b\xc1`@/\xf9\xaa>\x99G\xf9" +
	":\x9d\x91$;\x7f\x02)[\x0d\xac\xd3\xf2\xadn\xf5" +
	"\x96\xbf\x9b\xa6\x0fX\xce\x99\x12{\x00\xc6wN\xabi" +
	"\xbf\x92)\x08.N}^\xd4\xb3~\x9a\x9de\xa6\xf1" +
	"\xd1\xdf\xec\xfcr\xb3]ZY~b\x0b\xb2\xd45\xfe" +
	"y&\x16\x87\xaf\x0a\xbd\xe9\xd4\x9b\x1f2\xd5\xbc\xf3\x80" +
	"\xcf\x80\xfe\x98\x90\x09\xb2|v\x0e\x99\x16\x06\xd9\xcd}" +
	"\xe2\xae\xcd+\x16=\xf2/Y\xcaZ:\xc9\xd5c\xc0" +
	"\xdb\xa3\x08&.`\xe9\xd2\xff_9~\xb17\xb7\x8a" +
	"V[*\xa1\xb2\x1fv\x00\xfb}\x86\xac\xaeg\x09\x95" +
	"\xfdP\x02\xe8\xef\xe0P\xe5c\\Be?.\x02\xf6" +
	"\xab%yr#\x12\xe4\xb1\x92\xcb\x8e\x0c\xd8GY\x83" +
	"O\xa3\x13Xx\xb2\xa7\x14\xe9H\xaa\x88\xe8?\x80\xed" +
	"O\x02\xbb\x1f\xd3\xd2\xac\xa3\xc84^\xed\x87\x17\xd0s" +
	"\xb2\xeb}\xcbg=\xab.\xcb\xa8\x99\xc7~\xde\xd4\x8f" +
	"\xc4\xe4$\x11\xd4\x92\xccS?7\x1c\xb74\x92\xa2\x91" +
	"8\xb7g\xe3\xdc\xaf\x82\x92!\xc1\xf0~\x8a\x11\xe9P" +
	"f?\xf5>5\xce0r\xed\xff\xdc$=v\x7f\x00" +
	"\x9d\xdd\x97R\xe3\xb5\xdf\xd9\x1a\xe4q\x99\x1a\xe4 \xd7" +
	" \x87L\xc3\xc1\x86\xc3\xc8\xe8t:;\x03u\xfd\x7f" +
	"\x01\x00\x00\xff\xff\xbc\xcb\x08C"

func init() {
	schemas.Register(schema_dcbc0d702b1b47a5,
		0x809d3d6d45c4c37d,
		0x83ffc259cf8da847,
		0x86362c69f5c42997,
		0x86ca17d397d72d2b,
		0x87a6a96b0a4edd21,
		0x8829b2e76d8325f1,
		0x88751049aa34129f,
		0x8b790707193ea7ff,
		0x8ca64856a439e754,
		0x9145c7ea308343d9,
		0x916d32f140971035,
		0x94ff7bf84a8553ee,
		0x96e1c35b28d92f83,
		0x9a5778b8e7e9745a,
		0x9aa99e08dd1161ff,
		0x9d88f29f0318d4bb,
		0x9e90498484bab87d,
		0xa019dbe64a38e85d,
		0xa1c73384bc38ab4b,
		0xa37265bba0f4c58f,
		0xa845001d2449aa2a,
		0xa98fd02dd93dd26b,
		0xaaef1f8c301b865d,
		0xac9557813c4f78cf,
		0xad91bb3785f964f9,
		0xadfbf90ef9c01c9a,
		0xaf88ad00c801b00d,
		0xb481d35d0da2713c,
		0xb61fc18674ca994f,
		0xb78d8adc5c13b1b9,
		0xbb33202722933fa6,
		0xbc51d6bc865a8fcf,
		0xbd05d1a434a60c2a,
		0xbf2816cab7a3b8d9,
		0xc1b0e9713ac1ad4f,
		0xc3a9d72077d3a1da,
		0xc44a2ee5cb2413d8,
		0xc537e92b2708501c,
		0xc701240ec8cce7ff,
		0xc70587321bf0dd8b,
		0xc8fe0af361f6297a,
		0xca94bf70a6be91b7,
		0xcb56f444d1311800,
		0xcc8a20b16569f588,
		0xcce40aee6005d381,
		0xcd9c9fab5f637827,
		0xce6a3dd4342110d2,
		0xd0669675481ed533,
		0xd0d6ed6a5ed70e62,
		0xd285f754a2dafae2,
		0xd3961c234a15cdf1,
		0xdd2b1e18de9ed1b8,
		0xe06fe4e0d4e93178,
		0xe0f162f7d6b6e614,
		0xe29212b1cf072afc,
		0xe3a9cebde9177d60,
		0xe4d0899af24786be,
		0xe4d3afafc9fe1acf,
		0xe60c482f4f0d4d90,
		0xe8ac8c6560747234,
		0xea0b2836fb52aee9,
		0xea75b020e3e6c12a,
		0xea9f82a07e11b6d7,
		0xef241fd6058030cf,
		0xf0832c3f66256d2b,
		0xf0b05750d16cf185,
		0xf153e1cffe8f580a,
		0xf2ccecff0178227b,
		0xf3e0d28b0ad162be,
		0xf716a4e3f32b4130,
		0xf92f4e3c080d2237,
		0xfa7238e0a9345914,
		0xfb4cd9916f42104c,
		0xfd22e2b5cb138bb2)
}
