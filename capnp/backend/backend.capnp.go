// Code generated by capnpc-go. DO NOT EDIT.

package backend

import (
	context "context"
	strconv "strconv"
	apisession "zenhack.net/go/sandstorm/capnp/apisession"
	grain "zenhack.net/go/sandstorm/capnp/grain"
	spk "zenhack.net/go/sandstorm/capnp/spk"
	supervisor "zenhack.net/go/sandstorm/capnp/supervisor"
	util "zenhack.net/go/sandstorm/capnp/util"
	websession "zenhack.net/go/sandstorm/capnp/websession"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

// Constants defined in backend.capnp.
const (
	Backend_socketPath = "/var/sandstorm/socket/backend"
)

type Backend struct{ Client *capnp.Client }

// Backend_TypeID is the unique identifier for the type Backend.
const Backend_TypeID = 0xc1b0e9713ac1ad4f

func (c Backend) StartGrain(ctx context.Context, params func(Backend_startGrain_Params) error) (Backend_startGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      0,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "startGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_startGrain_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_startGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) GetGrain(ctx context.Context, params func(Backend_getGrain_Params) error) (Backend_getGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      1,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_getGrain_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_getGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) DeleteGrain(ctx context.Context, params func(Backend_deleteGrain_Params) error) (Backend_deleteGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      2,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_deleteGrain_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_deleteGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) InstallPackage(ctx context.Context, params func(Backend_installPackage_Params) error) (Backend_installPackage_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      3,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "installPackage",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_installPackage_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_installPackage_Results_Future{Future: ans.Future()}, release
}
func (c Backend) TryGetPackage(ctx context.Context, params func(Backend_tryGetPackage_Params) error) (Backend_tryGetPackage_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      4,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "tryGetPackage",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_tryGetPackage_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_tryGetPackage_Results_Future{Future: ans.Future()}, release
}
func (c Backend) DeletePackage(ctx context.Context, params func(Backend_deletePackage_Params) error) (Backend_deletePackage_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      5,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deletePackage",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_deletePackage_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_deletePackage_Results_Future{Future: ans.Future()}, release
}
func (c Backend) BackupGrain(ctx context.Context, params func(Backend_backupGrain_Params) error) (Backend_backupGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      6,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "backupGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_backupGrain_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_backupGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) RestoreGrain(ctx context.Context, params func(Backend_restoreGrain_Params) error) (Backend_restoreGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      7,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "restoreGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_restoreGrain_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_restoreGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) UploadBackup(ctx context.Context, params func(Backend_uploadBackup_Params) error) (Backend_uploadBackup_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      8,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "uploadBackup",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_uploadBackup_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_uploadBackup_Results_Future{Future: ans.Future()}, release
}
func (c Backend) DownloadBackup(ctx context.Context, params func(Backend_downloadBackup_Params) error) (Backend_downloadBackup_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      9,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "downloadBackup",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_downloadBackup_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_downloadBackup_Results_Future{Future: ans.Future()}, release
}
func (c Backend) DeleteBackup(ctx context.Context, params func(Backend_deleteBackup_Params) error) (Backend_deleteBackup_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      10,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteBackup",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_deleteBackup_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_deleteBackup_Results_Future{Future: ans.Future()}, release
}
func (c Backend) GetUserStorageUsage(ctx context.Context, params func(Backend_getUserStorageUsage_Params) error) (Backend_getUserStorageUsage_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      11,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getUserStorageUsage",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_getUserStorageUsage_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_getUserStorageUsage_Results_Future{Future: ans.Future()}, release
}
func (c Backend) TransferGrain(ctx context.Context, params func(Backend_transferGrain_Params) error) (Backend_transferGrain_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      12,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "transferGrain",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_transferGrain_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_transferGrain_Results_Future{Future: ans.Future()}, release
}
func (c Backend) DeleteUser(ctx context.Context, params func(Backend_deleteUser_Params) error) (Backend_deleteUser_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      13,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_deleteUser_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_deleteUser_Results_Future{Future: ans.Future()}, release
}
func (c Backend) Ping(ctx context.Context, params func(Backend_ping_Params) error) (Backend_ping_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      14,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "ping",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_ping_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_ping_Results_Future{Future: ans.Future()}, release
}
func (c Backend) GetGrainStorageUsage(ctx context.Context, params func(Backend_getGrainStorageUsage_Params) error) (Backend_getGrainStorageUsage_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      15,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getGrainStorageUsage",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_getGrainStorageUsage_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_getGrainStorageUsage_Results_Future{Future: ans.Future()}, release
}

// A Backend_Server is a Backend with a local implementation.
type Backend_Server interface {
	StartGrain(context.Context, Backend_startGrain) error

	GetGrain(context.Context, Backend_getGrain) error

	DeleteGrain(context.Context, Backend_deleteGrain) error

	InstallPackage(context.Context, Backend_installPackage) error

	TryGetPackage(context.Context, Backend_tryGetPackage) error

	DeletePackage(context.Context, Backend_deletePackage) error

	BackupGrain(context.Context, Backend_backupGrain) error

	RestoreGrain(context.Context, Backend_restoreGrain) error

	UploadBackup(context.Context, Backend_uploadBackup) error

	DownloadBackup(context.Context, Backend_downloadBackup) error

	DeleteBackup(context.Context, Backend_deleteBackup) error

	GetUserStorageUsage(context.Context, Backend_getUserStorageUsage) error

	TransferGrain(context.Context, Backend_transferGrain) error

	DeleteUser(context.Context, Backend_deleteUser) error

	Ping(context.Context, Backend_ping) error

	GetGrainStorageUsage(context.Context, Backend_getGrainStorageUsage) error
}

// Backend_NewServer creates a new Server from an implementation of Backend_Server.
func Backend_NewServer(s Backend_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Backend_Methods(nil, s), s, c, policy)
}

// Backend_ServerToClient creates a new Client from an implementation of Backend_Server.
// The caller is responsible for calling Release on the returned Client.
func Backend_ServerToClient(s Backend_Server, policy *server.Policy) Backend {
	return Backend{Client: capnp.NewClient(Backend_NewServer(s, policy))}
}

// Backend_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Backend_Methods(methods []server.Method, s Backend_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 16)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      0,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "startGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.StartGrain(ctx, Backend_startGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      1,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetGrain(ctx, Backend_getGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      2,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeleteGrain(ctx, Backend_deleteGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      3,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "installPackage",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.InstallPackage(ctx, Backend_installPackage{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      4,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "tryGetPackage",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.TryGetPackage(ctx, Backend_tryGetPackage{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      5,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deletePackage",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeletePackage(ctx, Backend_deletePackage{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      6,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "backupGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.BackupGrain(ctx, Backend_backupGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      7,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "restoreGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.RestoreGrain(ctx, Backend_restoreGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      8,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "uploadBackup",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.UploadBackup(ctx, Backend_uploadBackup{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      9,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "downloadBackup",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DownloadBackup(ctx, Backend_downloadBackup{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      10,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteBackup",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeleteBackup(ctx, Backend_deleteBackup{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      11,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getUserStorageUsage",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetUserStorageUsage(ctx, Backend_getUserStorageUsage{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      12,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "transferGrain",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.TransferGrain(ctx, Backend_transferGrain{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      13,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "deleteUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeleteUser(ctx, Backend_deleteUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      14,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "ping",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Ping(ctx, Backend_ping{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1b0e9713ac1ad4f,
			MethodID:      15,
			InterfaceName: "backend.capnp:Backend",
			MethodName:    "getGrainStorageUsage",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetGrainStorageUsage(ctx, Backend_getGrainStorageUsage{call})
		},
	})

	return methods
}

// Backend_startGrain holds the state for a server call to Backend.startGrain.
// See server.Call for documentation.
type Backend_startGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_startGrain) Args() Backend_startGrain_Params {
	return Backend_startGrain_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_startGrain) AllocResults() (Backend_startGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_startGrain_Results{Struct: r}, err
}

// Backend_getGrain holds the state for a server call to Backend.getGrain.
// See server.Call for documentation.
type Backend_getGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_getGrain) Args() Backend_getGrain_Params {
	return Backend_getGrain_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_getGrain) AllocResults() (Backend_getGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_getGrain_Results{Struct: r}, err
}

// Backend_deleteGrain holds the state for a server call to Backend.deleteGrain.
// See server.Call for documentation.
type Backend_deleteGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_deleteGrain) Args() Backend_deleteGrain_Params {
	return Backend_deleteGrain_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_deleteGrain) AllocResults() (Backend_deleteGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteGrain_Results{Struct: r}, err
}

// Backend_installPackage holds the state for a server call to Backend.installPackage.
// See server.Call for documentation.
type Backend_installPackage struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_installPackage) Args() Backend_installPackage_Params {
	return Backend_installPackage_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_installPackage) AllocResults() (Backend_installPackage_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_installPackage_Results{Struct: r}, err
}

// Backend_tryGetPackage holds the state for a server call to Backend.tryGetPackage.
// See server.Call for documentation.
type Backend_tryGetPackage struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_tryGetPackage) Args() Backend_tryGetPackage_Params {
	return Backend_tryGetPackage_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_tryGetPackage) AllocResults() (Backend_tryGetPackage_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_tryGetPackage_Results{Struct: r}, err
}

// Backend_deletePackage holds the state for a server call to Backend.deletePackage.
// See server.Call for documentation.
type Backend_deletePackage struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_deletePackage) Args() Backend_deletePackage_Params {
	return Backend_deletePackage_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_deletePackage) AllocResults() (Backend_deletePackage_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deletePackage_Results{Struct: r}, err
}

// Backend_backupGrain holds the state for a server call to Backend.backupGrain.
// See server.Call for documentation.
type Backend_backupGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_backupGrain) Args() Backend_backupGrain_Params {
	return Backend_backupGrain_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_backupGrain) AllocResults() (Backend_backupGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_backupGrain_Results{Struct: r}, err
}

// Backend_restoreGrain holds the state for a server call to Backend.restoreGrain.
// See server.Call for documentation.
type Backend_restoreGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_restoreGrain) Args() Backend_restoreGrain_Params {
	return Backend_restoreGrain_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_restoreGrain) AllocResults() (Backend_restoreGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_restoreGrain_Results{Struct: r}, err
}

// Backend_uploadBackup holds the state for a server call to Backend.uploadBackup.
// See server.Call for documentation.
type Backend_uploadBackup struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_uploadBackup) Args() Backend_uploadBackup_Params {
	return Backend_uploadBackup_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_uploadBackup) AllocResults() (Backend_uploadBackup_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_uploadBackup_Results{Struct: r}, err
}

// Backend_downloadBackup holds the state for a server call to Backend.downloadBackup.
// See server.Call for documentation.
type Backend_downloadBackup struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_downloadBackup) Args() Backend_downloadBackup_Params {
	return Backend_downloadBackup_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_downloadBackup) AllocResults() (Backend_downloadBackup_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_downloadBackup_Results{Struct: r}, err
}

// Backend_deleteBackup holds the state for a server call to Backend.deleteBackup.
// See server.Call for documentation.
type Backend_deleteBackup struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_deleteBackup) Args() Backend_deleteBackup_Params {
	return Backend_deleteBackup_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_deleteBackup) AllocResults() (Backend_deleteBackup_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteBackup_Results{Struct: r}, err
}

// Backend_getUserStorageUsage holds the state for a server call to Backend.getUserStorageUsage.
// See server.Call for documentation.
type Backend_getUserStorageUsage struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_getUserStorageUsage) Args() Backend_getUserStorageUsage_Params {
	return Backend_getUserStorageUsage_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_getUserStorageUsage) AllocResults() (Backend_getUserStorageUsage_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getUserStorageUsage_Results{Struct: r}, err
}

// Backend_transferGrain holds the state for a server call to Backend.transferGrain.
// See server.Call for documentation.
type Backend_transferGrain struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_transferGrain) Args() Backend_transferGrain_Params {
	return Backend_transferGrain_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_transferGrain) AllocResults() (Backend_transferGrain_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_transferGrain_Results{Struct: r}, err
}

// Backend_deleteUser holds the state for a server call to Backend.deleteUser.
// See server.Call for documentation.
type Backend_deleteUser struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_deleteUser) Args() Backend_deleteUser_Params {
	return Backend_deleteUser_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_deleteUser) AllocResults() (Backend_deleteUser_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteUser_Results{Struct: r}, err
}

// Backend_ping holds the state for a server call to Backend.ping.
// See server.Call for documentation.
type Backend_ping struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_ping) Args() Backend_ping_Params {
	return Backend_ping_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_ping) AllocResults() (Backend_ping_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_ping_Results{Struct: r}, err
}

// Backend_getGrainStorageUsage holds the state for a server call to Backend.getGrainStorageUsage.
// See server.Call for documentation.
type Backend_getGrainStorageUsage struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_getGrainStorageUsage) Args() Backend_getGrainStorageUsage_Params {
	return Backend_getGrainStorageUsage_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_getGrainStorageUsage) AllocResults() (Backend_getGrainStorageUsage_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getGrainStorageUsage_Results{Struct: r}, err
}

type Backend_PackageUploadStream struct{ Client *capnp.Client }

// Backend_PackageUploadStream_TypeID is the unique identifier for the type Backend_PackageUploadStream.
const Backend_PackageUploadStream_TypeID = 0xb481d35d0da2713c

func (c Backend_PackageUploadStream) SaveAs(ctx context.Context, params func(Backend_PackageUploadStream_saveAs_Params) error) (Backend_PackageUploadStream_saveAs_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb481d35d0da2713c,
			MethodID:      0,
			InterfaceName: "backend.capnp:Backend.PackageUploadStream",
			MethodName:    "saveAs",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Backend_PackageUploadStream_saveAs_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Backend_PackageUploadStream_saveAs_Results_Future{Future: ans.Future()}, release
}
func (c Backend_PackageUploadStream) Write(ctx context.Context, params func(util.ByteStream_write_Params) error) (util.ByteStream_write_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      0,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "write",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(util.ByteStream_write_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return util.ByteStream_write_Results_Future{Future: ans.Future()}, release
}
func (c Backend_PackageUploadStream) Done(ctx context.Context, params func(util.ByteStream_done_Params) error) (util.ByteStream_done_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      1,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "done",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(util.ByteStream_done_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return util.ByteStream_done_Results_Future{Future: ans.Future()}, release
}
func (c Backend_PackageUploadStream) ExpectSize(ctx context.Context, params func(util.ByteStream_expectSize_Params) error) (util.ByteStream_expectSize_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      2,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "expectSize",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(util.ByteStream_expectSize_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return util.ByteStream_expectSize_Results_Future{Future: ans.Future()}, release
}

// A Backend_PackageUploadStream_Server is a Backend_PackageUploadStream with a local implementation.
type Backend_PackageUploadStream_Server interface {
	SaveAs(context.Context, Backend_PackageUploadStream_saveAs) error

	Write(context.Context, util.ByteStream_write) error

	Done(context.Context, util.ByteStream_done) error

	ExpectSize(context.Context, util.ByteStream_expectSize) error
}

// Backend_PackageUploadStream_NewServer creates a new Server from an implementation of Backend_PackageUploadStream_Server.
func Backend_PackageUploadStream_NewServer(s Backend_PackageUploadStream_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Backend_PackageUploadStream_Methods(nil, s), s, c, policy)
}

// Backend_PackageUploadStream_ServerToClient creates a new Client from an implementation of Backend_PackageUploadStream_Server.
// The caller is responsible for calling Release on the returned Client.
func Backend_PackageUploadStream_ServerToClient(s Backend_PackageUploadStream_Server, policy *server.Policy) Backend_PackageUploadStream {
	return Backend_PackageUploadStream{Client: capnp.NewClient(Backend_PackageUploadStream_NewServer(s, policy))}
}

// Backend_PackageUploadStream_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Backend_PackageUploadStream_Methods(methods []server.Method, s Backend_PackageUploadStream_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 4)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb481d35d0da2713c,
			MethodID:      0,
			InterfaceName: "backend.capnp:Backend.PackageUploadStream",
			MethodName:    "saveAs",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SaveAs(ctx, Backend_PackageUploadStream_saveAs{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      0,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "write",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Write(ctx, util.ByteStream_write{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      1,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "done",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Done(ctx, util.ByteStream_done{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xcd57387729cfe35f,
			MethodID:      2,
			InterfaceName: "util.capnp:ByteStream",
			MethodName:    "expectSize",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ExpectSize(ctx, util.ByteStream_expectSize{call})
		},
	})

	return methods
}

// Backend_PackageUploadStream_saveAs holds the state for a server call to Backend_PackageUploadStream.saveAs.
// See server.Call for documentation.
type Backend_PackageUploadStream_saveAs struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Backend_PackageUploadStream_saveAs) Args() Backend_PackageUploadStream_saveAs_Params {
	return Backend_PackageUploadStream_saveAs_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Backend_PackageUploadStream_saveAs) AllocResults() (Backend_PackageUploadStream_saveAs_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_PackageUploadStream_saveAs_Results{Struct: r}, err
}

type Backend_PackageUploadStream_saveAs_Params struct{ capnp.Struct }

// Backend_PackageUploadStream_saveAs_Params_TypeID is the unique identifier for the type Backend_PackageUploadStream_saveAs_Params.
const Backend_PackageUploadStream_saveAs_Params_TypeID = 0x86ca17d397d72d2b

func NewBackend_PackageUploadStream_saveAs_Params(s *capnp.Segment) (Backend_PackageUploadStream_saveAs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_PackageUploadStream_saveAs_Params{st}, err
}

func NewRootBackend_PackageUploadStream_saveAs_Params(s *capnp.Segment) (Backend_PackageUploadStream_saveAs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_PackageUploadStream_saveAs_Params{st}, err
}

func ReadRootBackend_PackageUploadStream_saveAs_Params(msg *capnp.Message) (Backend_PackageUploadStream_saveAs_Params, error) {
	root, err := msg.Root()
	return Backend_PackageUploadStream_saveAs_Params{root.Struct()}, err
}

func (s Backend_PackageUploadStream_saveAs_Params) String() string {
	str, _ := text.Marshal(0x86ca17d397d72d2b, s.Struct)
	return str
}

func (s Backend_PackageUploadStream_saveAs_Params) PackageId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_PackageUploadStream_saveAs_Params) HasPackageId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_PackageUploadStream_saveAs_Params) PackageIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_PackageUploadStream_saveAs_Params) SetPackageId(v string) error {
	return s.Struct.SetText(0, v)
}

// Backend_PackageUploadStream_saveAs_Params_List is a list of Backend_PackageUploadStream_saveAs_Params.
type Backend_PackageUploadStream_saveAs_Params_List struct{ capnp.List }

// NewBackend_PackageUploadStream_saveAs_Params creates a new list of Backend_PackageUploadStream_saveAs_Params.
func NewBackend_PackageUploadStream_saveAs_Params_List(s *capnp.Segment, sz int32) (Backend_PackageUploadStream_saveAs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_PackageUploadStream_saveAs_Params_List{l}, err
}

func (s Backend_PackageUploadStream_saveAs_Params_List) At(i int) Backend_PackageUploadStream_saveAs_Params {
	return Backend_PackageUploadStream_saveAs_Params{s.List.Struct(i)}
}

func (s Backend_PackageUploadStream_saveAs_Params_List) Set(i int, v Backend_PackageUploadStream_saveAs_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_PackageUploadStream_saveAs_Params_List) String() string {
	str, _ := text.MarshalList(0x86ca17d397d72d2b, s.List)
	return str
}

// Backend_PackageUploadStream_saveAs_Params_Future is a wrapper for a Backend_PackageUploadStream_saveAs_Params promised by a client call.
type Backend_PackageUploadStream_saveAs_Params_Future struct{ *capnp.Future }

func (p Backend_PackageUploadStream_saveAs_Params_Future) Struct() (Backend_PackageUploadStream_saveAs_Params, error) {
	s, err := p.Future.Struct()
	return Backend_PackageUploadStream_saveAs_Params{s}, err
}

type Backend_PackageUploadStream_saveAs_Results struct{ capnp.Struct }

// Backend_PackageUploadStream_saveAs_Results_TypeID is the unique identifier for the type Backend_PackageUploadStream_saveAs_Results.
const Backend_PackageUploadStream_saveAs_Results_TypeID = 0xa019dbe64a38e85d

func NewBackend_PackageUploadStream_saveAs_Results(s *capnp.Segment) (Backend_PackageUploadStream_saveAs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_PackageUploadStream_saveAs_Results{st}, err
}

func NewRootBackend_PackageUploadStream_saveAs_Results(s *capnp.Segment) (Backend_PackageUploadStream_saveAs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_PackageUploadStream_saveAs_Results{st}, err
}

func ReadRootBackend_PackageUploadStream_saveAs_Results(msg *capnp.Message) (Backend_PackageUploadStream_saveAs_Results, error) {
	root, err := msg.Root()
	return Backend_PackageUploadStream_saveAs_Results{root.Struct()}, err
}

func (s Backend_PackageUploadStream_saveAs_Results) String() string {
	str, _ := text.Marshal(0xa019dbe64a38e85d, s.Struct)
	return str
}

func (s Backend_PackageUploadStream_saveAs_Results) AppId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_PackageUploadStream_saveAs_Results) HasAppId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_PackageUploadStream_saveAs_Results) AppIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_PackageUploadStream_saveAs_Results) SetAppId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Backend_PackageUploadStream_saveAs_Results) Manifest() (spk.Manifest, error) {
	p, err := s.Struct.Ptr(1)
	return spk.Manifest{Struct: p.Struct()}, err
}

func (s Backend_PackageUploadStream_saveAs_Results) HasManifest() bool {
	return s.Struct.HasPtr(1)
}

func (s Backend_PackageUploadStream_saveAs_Results) SetManifest(v spk.Manifest) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewManifest sets the manifest field to a newly
// allocated spk.Manifest struct, preferring placement in s's segment.
func (s Backend_PackageUploadStream_saveAs_Results) NewManifest() (spk.Manifest, error) {
	ss, err := spk.NewManifest(s.Struct.Segment())
	if err != nil {
		return spk.Manifest{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Backend_PackageUploadStream_saveAs_Results) AuthorPgpKeyFingerprint() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Backend_PackageUploadStream_saveAs_Results) HasAuthorPgpKeyFingerprint() bool {
	return s.Struct.HasPtr(2)
}

func (s Backend_PackageUploadStream_saveAs_Results) AuthorPgpKeyFingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_PackageUploadStream_saveAs_Results) SetAuthorPgpKeyFingerprint(v string) error {
	return s.Struct.SetText(2, v)
}

// Backend_PackageUploadStream_saveAs_Results_List is a list of Backend_PackageUploadStream_saveAs_Results.
type Backend_PackageUploadStream_saveAs_Results_List struct{ capnp.List }

// NewBackend_PackageUploadStream_saveAs_Results creates a new list of Backend_PackageUploadStream_saveAs_Results.
func NewBackend_PackageUploadStream_saveAs_Results_List(s *capnp.Segment, sz int32) (Backend_PackageUploadStream_saveAs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Backend_PackageUploadStream_saveAs_Results_List{l}, err
}

func (s Backend_PackageUploadStream_saveAs_Results_List) At(i int) Backend_PackageUploadStream_saveAs_Results {
	return Backend_PackageUploadStream_saveAs_Results{s.List.Struct(i)}
}

func (s Backend_PackageUploadStream_saveAs_Results_List) Set(i int, v Backend_PackageUploadStream_saveAs_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_PackageUploadStream_saveAs_Results_List) String() string {
	str, _ := text.MarshalList(0xa019dbe64a38e85d, s.List)
	return str
}

// Backend_PackageUploadStream_saveAs_Results_Future is a wrapper for a Backend_PackageUploadStream_saveAs_Results promised by a client call.
type Backend_PackageUploadStream_saveAs_Results_Future struct{ *capnp.Future }

func (p Backend_PackageUploadStream_saveAs_Results_Future) Struct() (Backend_PackageUploadStream_saveAs_Results, error) {
	s, err := p.Future.Struct()
	return Backend_PackageUploadStream_saveAs_Results{s}, err
}

func (p Backend_PackageUploadStream_saveAs_Results_Future) Manifest() spk.Manifest_Future {
	return spk.Manifest_Future{Future: p.Future.Field(1, nil)}
}

type Backend_startGrain_Params struct{ capnp.Struct }

// Backend_startGrain_Params_TypeID is the unique identifier for the type Backend_startGrain_Params.
const Backend_startGrain_Params_TypeID = 0xadfbf90ef9c01c9a

func NewBackend_startGrain_Params(s *capnp.Segment) (Backend_startGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Backend_startGrain_Params{st}, err
}

func NewRootBackend_startGrain_Params(s *capnp.Segment) (Backend_startGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Backend_startGrain_Params{st}, err
}

func ReadRootBackend_startGrain_Params(msg *capnp.Message) (Backend_startGrain_Params, error) {
	root, err := msg.Root()
	return Backend_startGrain_Params{root.Struct()}, err
}

func (s Backend_startGrain_Params) String() string {
	str, _ := text.Marshal(0xadfbf90ef9c01c9a, s.Struct)
	return str
}

func (s Backend_startGrain_Params) OwnerId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_startGrain_Params) HasOwnerId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_startGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_startGrain_Params) SetOwnerId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Backend_startGrain_Params) GrainId() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Backend_startGrain_Params) HasGrainId() bool {
	return s.Struct.HasPtr(1)
}

func (s Backend_startGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_startGrain_Params) SetGrainId(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Backend_startGrain_Params) PackageId() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Backend_startGrain_Params) HasPackageId() bool {
	return s.Struct.HasPtr(2)
}

func (s Backend_startGrain_Params) PackageIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_startGrain_Params) SetPackageId(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Backend_startGrain_Params) Command() (spk.Manifest_Command, error) {
	p, err := s.Struct.Ptr(3)
	return spk.Manifest_Command{Struct: p.Struct()}, err
}

func (s Backend_startGrain_Params) HasCommand() bool {
	return s.Struct.HasPtr(3)
}

func (s Backend_startGrain_Params) SetCommand(v spk.Manifest_Command) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewCommand sets the command field to a newly
// allocated spk.Manifest_Command struct, preferring placement in s's segment.
func (s Backend_startGrain_Params) NewCommand() (spk.Manifest_Command, error) {
	ss, err := spk.NewManifest_Command(s.Struct.Segment())
	if err != nil {
		return spk.Manifest_Command{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

func (s Backend_startGrain_Params) IsNew() bool {
	return s.Struct.Bit(0)
}

func (s Backend_startGrain_Params) SetIsNew(v bool) {
	s.Struct.SetBit(0, v)
}

func (s Backend_startGrain_Params) DevMode() bool {
	return s.Struct.Bit(1)
}

func (s Backend_startGrain_Params) SetDevMode(v bool) {
	s.Struct.SetBit(1, v)
}

func (s Backend_startGrain_Params) MountProc() bool {
	return s.Struct.Bit(2)
}

func (s Backend_startGrain_Params) SetMountProc(v bool) {
	s.Struct.SetBit(2, v)
}

// Backend_startGrain_Params_List is a list of Backend_startGrain_Params.
type Backend_startGrain_Params_List struct{ capnp.List }

// NewBackend_startGrain_Params creates a new list of Backend_startGrain_Params.
func NewBackend_startGrain_Params_List(s *capnp.Segment, sz int32) (Backend_startGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return Backend_startGrain_Params_List{l}, err
}

func (s Backend_startGrain_Params_List) At(i int) Backend_startGrain_Params {
	return Backend_startGrain_Params{s.List.Struct(i)}
}

func (s Backend_startGrain_Params_List) Set(i int, v Backend_startGrain_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_startGrain_Params_List) String() string {
	str, _ := text.MarshalList(0xadfbf90ef9c01c9a, s.List)
	return str
}

// Backend_startGrain_Params_Future is a wrapper for a Backend_startGrain_Params promised by a client call.
type Backend_startGrain_Params_Future struct{ *capnp.Future }

func (p Backend_startGrain_Params_Future) Struct() (Backend_startGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_startGrain_Params{s}, err
}

func (p Backend_startGrain_Params_Future) Command() spk.Manifest_Command_Future {
	return spk.Manifest_Command_Future{Future: p.Future.Field(3, nil)}
}

type Backend_startGrain_Results struct{ capnp.Struct }

// Backend_startGrain_Results_TypeID is the unique identifier for the type Backend_startGrain_Results.
const Backend_startGrain_Results_TypeID = 0xac9557813c4f78cf

func NewBackend_startGrain_Results(s *capnp.Segment) (Backend_startGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_startGrain_Results{st}, err
}

func NewRootBackend_startGrain_Results(s *capnp.Segment) (Backend_startGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_startGrain_Results{st}, err
}

func ReadRootBackend_startGrain_Results(msg *capnp.Message) (Backend_startGrain_Results, error) {
	root, err := msg.Root()
	return Backend_startGrain_Results{root.Struct()}, err
}

func (s Backend_startGrain_Results) String() string {
	str, _ := text.Marshal(0xac9557813c4f78cf, s.Struct)
	return str
}

func (s Backend_startGrain_Results) Supervisor() supervisor.Supervisor {
	p, _ := s.Struct.Ptr(0)
	return supervisor.Supervisor{Client: p.Interface().Client()}
}

func (s Backend_startGrain_Results) HasSupervisor() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_startGrain_Results) SetSupervisor(v supervisor.Supervisor) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Backend_startGrain_Results_List is a list of Backend_startGrain_Results.
type Backend_startGrain_Results_List struct{ capnp.List }

// NewBackend_startGrain_Results creates a new list of Backend_startGrain_Results.
func NewBackend_startGrain_Results_List(s *capnp.Segment, sz int32) (Backend_startGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_startGrain_Results_List{l}, err
}

func (s Backend_startGrain_Results_List) At(i int) Backend_startGrain_Results {
	return Backend_startGrain_Results{s.List.Struct(i)}
}

func (s Backend_startGrain_Results_List) Set(i int, v Backend_startGrain_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_startGrain_Results_List) String() string {
	str, _ := text.MarshalList(0xac9557813c4f78cf, s.List)
	return str
}

// Backend_startGrain_Results_Future is a wrapper for a Backend_startGrain_Results promised by a client call.
type Backend_startGrain_Results_Future struct{ *capnp.Future }

func (p Backend_startGrain_Results_Future) Struct() (Backend_startGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_startGrain_Results{s}, err
}

func (p Backend_startGrain_Results_Future) Supervisor() supervisor.Supervisor {
	return supervisor.Supervisor{Client: p.Future.Field(0, nil).Client()}
}

type Backend_getGrain_Params struct{ capnp.Struct }

// Backend_getGrain_Params_TypeID is the unique identifier for the type Backend_getGrain_Params.
const Backend_getGrain_Params_TypeID = 0xe4d3afafc9fe1acf

func NewBackend_getGrain_Params(s *capnp.Segment) (Backend_getGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_getGrain_Params{st}, err
}

func NewRootBackend_getGrain_Params(s *capnp.Segment) (Backend_getGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_getGrain_Params{st}, err
}

func ReadRootBackend_getGrain_Params(msg *capnp.Message) (Backend_getGrain_Params, error) {
	root, err := msg.Root()
	return Backend_getGrain_Params{root.Struct()}, err
}

func (s Backend_getGrain_Params) String() string {
	str, _ := text.Marshal(0xe4d3afafc9fe1acf, s.Struct)
	return str
}

func (s Backend_getGrain_Params) OwnerId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_getGrain_Params) HasOwnerId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_getGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_getGrain_Params) SetOwnerId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Backend_getGrain_Params) GrainId() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Backend_getGrain_Params) HasGrainId() bool {
	return s.Struct.HasPtr(1)
}

func (s Backend_getGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_getGrain_Params) SetGrainId(v string) error {
	return s.Struct.SetText(1, v)
}

// Backend_getGrain_Params_List is a list of Backend_getGrain_Params.
type Backend_getGrain_Params_List struct{ capnp.List }

// NewBackend_getGrain_Params creates a new list of Backend_getGrain_Params.
func NewBackend_getGrain_Params_List(s *capnp.Segment, sz int32) (Backend_getGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Backend_getGrain_Params_List{l}, err
}

func (s Backend_getGrain_Params_List) At(i int) Backend_getGrain_Params {
	return Backend_getGrain_Params{s.List.Struct(i)}
}

func (s Backend_getGrain_Params_List) Set(i int, v Backend_getGrain_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_getGrain_Params_List) String() string {
	str, _ := text.MarshalList(0xe4d3afafc9fe1acf, s.List)
	return str
}

// Backend_getGrain_Params_Future is a wrapper for a Backend_getGrain_Params promised by a client call.
type Backend_getGrain_Params_Future struct{ *capnp.Future }

func (p Backend_getGrain_Params_Future) Struct() (Backend_getGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_getGrain_Params{s}, err
}

type Backend_getGrain_Results struct{ capnp.Struct }

// Backend_getGrain_Results_TypeID is the unique identifier for the type Backend_getGrain_Results.
const Backend_getGrain_Results_TypeID = 0xea0b2836fb52aee9

func NewBackend_getGrain_Results(s *capnp.Segment) (Backend_getGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_getGrain_Results{st}, err
}

func NewRootBackend_getGrain_Results(s *capnp.Segment) (Backend_getGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_getGrain_Results{st}, err
}

func ReadRootBackend_getGrain_Results(msg *capnp.Message) (Backend_getGrain_Results, error) {
	root, err := msg.Root()
	return Backend_getGrain_Results{root.Struct()}, err
}

func (s Backend_getGrain_Results) String() string {
	str, _ := text.Marshal(0xea0b2836fb52aee9, s.Struct)
	return str
}

func (s Backend_getGrain_Results) Supervisor() supervisor.Supervisor {
	p, _ := s.Struct.Ptr(0)
	return supervisor.Supervisor{Client: p.Interface().Client()}
}

func (s Backend_getGrain_Results) HasSupervisor() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_getGrain_Results) SetSupervisor(v supervisor.Supervisor) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Backend_getGrain_Results_List is a list of Backend_getGrain_Results.
type Backend_getGrain_Results_List struct{ capnp.List }

// NewBackend_getGrain_Results creates a new list of Backend_getGrain_Results.
func NewBackend_getGrain_Results_List(s *capnp.Segment, sz int32) (Backend_getGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_getGrain_Results_List{l}, err
}

func (s Backend_getGrain_Results_List) At(i int) Backend_getGrain_Results {
	return Backend_getGrain_Results{s.List.Struct(i)}
}

func (s Backend_getGrain_Results_List) Set(i int, v Backend_getGrain_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_getGrain_Results_List) String() string {
	str, _ := text.MarshalList(0xea0b2836fb52aee9, s.List)
	return str
}

// Backend_getGrain_Results_Future is a wrapper for a Backend_getGrain_Results promised by a client call.
type Backend_getGrain_Results_Future struct{ *capnp.Future }

func (p Backend_getGrain_Results_Future) Struct() (Backend_getGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_getGrain_Results{s}, err
}

func (p Backend_getGrain_Results_Future) Supervisor() supervisor.Supervisor {
	return supervisor.Supervisor{Client: p.Future.Field(0, nil).Client()}
}

type Backend_deleteGrain_Params struct{ capnp.Struct }

// Backend_deleteGrain_Params_TypeID is the unique identifier for the type Backend_deleteGrain_Params.
const Backend_deleteGrain_Params_TypeID = 0xd0669675481ed533

func NewBackend_deleteGrain_Params(s *capnp.Segment) (Backend_deleteGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_deleteGrain_Params{st}, err
}

func NewRootBackend_deleteGrain_Params(s *capnp.Segment) (Backend_deleteGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_deleteGrain_Params{st}, err
}

func ReadRootBackend_deleteGrain_Params(msg *capnp.Message) (Backend_deleteGrain_Params, error) {
	root, err := msg.Root()
	return Backend_deleteGrain_Params{root.Struct()}, err
}

func (s Backend_deleteGrain_Params) String() string {
	str, _ := text.Marshal(0xd0669675481ed533, s.Struct)
	return str
}

func (s Backend_deleteGrain_Params) OwnerId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_deleteGrain_Params) HasOwnerId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_deleteGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_deleteGrain_Params) SetOwnerId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Backend_deleteGrain_Params) GrainId() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Backend_deleteGrain_Params) HasGrainId() bool {
	return s.Struct.HasPtr(1)
}

func (s Backend_deleteGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_deleteGrain_Params) SetGrainId(v string) error {
	return s.Struct.SetText(1, v)
}

// Backend_deleteGrain_Params_List is a list of Backend_deleteGrain_Params.
type Backend_deleteGrain_Params_List struct{ capnp.List }

// NewBackend_deleteGrain_Params creates a new list of Backend_deleteGrain_Params.
func NewBackend_deleteGrain_Params_List(s *capnp.Segment, sz int32) (Backend_deleteGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Backend_deleteGrain_Params_List{l}, err
}

func (s Backend_deleteGrain_Params_List) At(i int) Backend_deleteGrain_Params {
	return Backend_deleteGrain_Params{s.List.Struct(i)}
}

func (s Backend_deleteGrain_Params_List) Set(i int, v Backend_deleteGrain_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_deleteGrain_Params_List) String() string {
	str, _ := text.MarshalList(0xd0669675481ed533, s.List)
	return str
}

// Backend_deleteGrain_Params_Future is a wrapper for a Backend_deleteGrain_Params promised by a client call.
type Backend_deleteGrain_Params_Future struct{ *capnp.Future }

func (p Backend_deleteGrain_Params_Future) Struct() (Backend_deleteGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_deleteGrain_Params{s}, err
}

type Backend_deleteGrain_Results struct{ capnp.Struct }

// Backend_deleteGrain_Results_TypeID is the unique identifier for the type Backend_deleteGrain_Results.
const Backend_deleteGrain_Results_TypeID = 0x9aa99e08dd1161ff

func NewBackend_deleteGrain_Results(s *capnp.Segment) (Backend_deleteGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteGrain_Results{st}, err
}

func NewRootBackend_deleteGrain_Results(s *capnp.Segment) (Backend_deleteGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteGrain_Results{st}, err
}

func ReadRootBackend_deleteGrain_Results(msg *capnp.Message) (Backend_deleteGrain_Results, error) {
	root, err := msg.Root()
	return Backend_deleteGrain_Results{root.Struct()}, err
}

func (s Backend_deleteGrain_Results) String() string {
	str, _ := text.Marshal(0x9aa99e08dd1161ff, s.Struct)
	return str
}

// Backend_deleteGrain_Results_List is a list of Backend_deleteGrain_Results.
type Backend_deleteGrain_Results_List struct{ capnp.List }

// NewBackend_deleteGrain_Results creates a new list of Backend_deleteGrain_Results.
func NewBackend_deleteGrain_Results_List(s *capnp.Segment, sz int32) (Backend_deleteGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Backend_deleteGrain_Results_List{l}, err
}

func (s Backend_deleteGrain_Results_List) At(i int) Backend_deleteGrain_Results {
	return Backend_deleteGrain_Results{s.List.Struct(i)}
}

func (s Backend_deleteGrain_Results_List) Set(i int, v Backend_deleteGrain_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_deleteGrain_Results_List) String() string {
	str, _ := text.MarshalList(0x9aa99e08dd1161ff, s.List)
	return str
}

// Backend_deleteGrain_Results_Future is a wrapper for a Backend_deleteGrain_Results promised by a client call.
type Backend_deleteGrain_Results_Future struct{ *capnp.Future }

func (p Backend_deleteGrain_Results_Future) Struct() (Backend_deleteGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_deleteGrain_Results{s}, err
}

type Backend_installPackage_Params struct{ capnp.Struct }

// Backend_installPackage_Params_TypeID is the unique identifier for the type Backend_installPackage_Params.
const Backend_installPackage_Params_TypeID = 0xa98fd02dd93dd26b

func NewBackend_installPackage_Params(s *capnp.Segment) (Backend_installPackage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_installPackage_Params{st}, err
}

func NewRootBackend_installPackage_Params(s *capnp.Segment) (Backend_installPackage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_installPackage_Params{st}, err
}

func ReadRootBackend_installPackage_Params(msg *capnp.Message) (Backend_installPackage_Params, error) {
	root, err := msg.Root()
	return Backend_installPackage_Params{root.Struct()}, err
}

func (s Backend_installPackage_Params) String() string {
	str, _ := text.Marshal(0xa98fd02dd93dd26b, s.Struct)
	return str
}

// Backend_installPackage_Params_List is a list of Backend_installPackage_Params.
type Backend_installPackage_Params_List struct{ capnp.List }

// NewBackend_installPackage_Params creates a new list of Backend_installPackage_Params.
func NewBackend_installPackage_Params_List(s *capnp.Segment, sz int32) (Backend_installPackage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Backend_installPackage_Params_List{l}, err
}

func (s Backend_installPackage_Params_List) At(i int) Backend_installPackage_Params {
	return Backend_installPackage_Params{s.List.Struct(i)}
}

func (s Backend_installPackage_Params_List) Set(i int, v Backend_installPackage_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_installPackage_Params_List) String() string {
	str, _ := text.MarshalList(0xa98fd02dd93dd26b, s.List)
	return str
}

// Backend_installPackage_Params_Future is a wrapper for a Backend_installPackage_Params promised by a client call.
type Backend_installPackage_Params_Future struct{ *capnp.Future }

func (p Backend_installPackage_Params_Future) Struct() (Backend_installPackage_Params, error) {
	s, err := p.Future.Struct()
	return Backend_installPackage_Params{s}, err
}

type Backend_installPackage_Results struct{ capnp.Struct }

// Backend_installPackage_Results_TypeID is the unique identifier for the type Backend_installPackage_Results.
const Backend_installPackage_Results_TypeID = 0x8829b2e76d8325f1

func NewBackend_installPackage_Results(s *capnp.Segment) (Backend_installPackage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_installPackage_Results{st}, err
}

func NewRootBackend_installPackage_Results(s *capnp.Segment) (Backend_installPackage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_installPackage_Results{st}, err
}

func ReadRootBackend_installPackage_Results(msg *capnp.Message) (Backend_installPackage_Results, error) {
	root, err := msg.Root()
	return Backend_installPackage_Results{root.Struct()}, err
}

func (s Backend_installPackage_Results) String() string {
	str, _ := text.Marshal(0x8829b2e76d8325f1, s.Struct)
	return str
}

func (s Backend_installPackage_Results) Stream() Backend_PackageUploadStream {
	p, _ := s.Struct.Ptr(0)
	return Backend_PackageUploadStream{Client: p.Interface().Client()}
}

func (s Backend_installPackage_Results) HasStream() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_installPackage_Results) SetStream(v Backend_PackageUploadStream) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Backend_installPackage_Results_List is a list of Backend_installPackage_Results.
type Backend_installPackage_Results_List struct{ capnp.List }

// NewBackend_installPackage_Results creates a new list of Backend_installPackage_Results.
func NewBackend_installPackage_Results_List(s *capnp.Segment, sz int32) (Backend_installPackage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_installPackage_Results_List{l}, err
}

func (s Backend_installPackage_Results_List) At(i int) Backend_installPackage_Results {
	return Backend_installPackage_Results{s.List.Struct(i)}
}

func (s Backend_installPackage_Results_List) Set(i int, v Backend_installPackage_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_installPackage_Results_List) String() string {
	str, _ := text.MarshalList(0x8829b2e76d8325f1, s.List)
	return str
}

// Backend_installPackage_Results_Future is a wrapper for a Backend_installPackage_Results promised by a client call.
type Backend_installPackage_Results_Future struct{ *capnp.Future }

func (p Backend_installPackage_Results_Future) Struct() (Backend_installPackage_Results, error) {
	s, err := p.Future.Struct()
	return Backend_installPackage_Results{s}, err
}

func (p Backend_installPackage_Results_Future) Stream() Backend_PackageUploadStream {
	return Backend_PackageUploadStream{Client: p.Future.Field(0, nil).Client()}
}

type Backend_tryGetPackage_Params struct{ capnp.Struct }

// Backend_tryGetPackage_Params_TypeID is the unique identifier for the type Backend_tryGetPackage_Params.
const Backend_tryGetPackage_Params_TypeID = 0xfb4cd9916f42104c

func NewBackend_tryGetPackage_Params(s *capnp.Segment) (Backend_tryGetPackage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_tryGetPackage_Params{st}, err
}

func NewRootBackend_tryGetPackage_Params(s *capnp.Segment) (Backend_tryGetPackage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_tryGetPackage_Params{st}, err
}

func ReadRootBackend_tryGetPackage_Params(msg *capnp.Message) (Backend_tryGetPackage_Params, error) {
	root, err := msg.Root()
	return Backend_tryGetPackage_Params{root.Struct()}, err
}

func (s Backend_tryGetPackage_Params) String() string {
	str, _ := text.Marshal(0xfb4cd9916f42104c, s.Struct)
	return str
}

func (s Backend_tryGetPackage_Params) PackageId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_tryGetPackage_Params) HasPackageId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_tryGetPackage_Params) PackageIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_tryGetPackage_Params) SetPackageId(v string) error {
	return s.Struct.SetText(0, v)
}

// Backend_tryGetPackage_Params_List is a list of Backend_tryGetPackage_Params.
type Backend_tryGetPackage_Params_List struct{ capnp.List }

// NewBackend_tryGetPackage_Params creates a new list of Backend_tryGetPackage_Params.
func NewBackend_tryGetPackage_Params_List(s *capnp.Segment, sz int32) (Backend_tryGetPackage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_tryGetPackage_Params_List{l}, err
}

func (s Backend_tryGetPackage_Params_List) At(i int) Backend_tryGetPackage_Params {
	return Backend_tryGetPackage_Params{s.List.Struct(i)}
}

func (s Backend_tryGetPackage_Params_List) Set(i int, v Backend_tryGetPackage_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_tryGetPackage_Params_List) String() string {
	str, _ := text.MarshalList(0xfb4cd9916f42104c, s.List)
	return str
}

// Backend_tryGetPackage_Params_Future is a wrapper for a Backend_tryGetPackage_Params promised by a client call.
type Backend_tryGetPackage_Params_Future struct{ *capnp.Future }

func (p Backend_tryGetPackage_Params_Future) Struct() (Backend_tryGetPackage_Params, error) {
	s, err := p.Future.Struct()
	return Backend_tryGetPackage_Params{s}, err
}

type Backend_tryGetPackage_Results struct{ capnp.Struct }

// Backend_tryGetPackage_Results_TypeID is the unique identifier for the type Backend_tryGetPackage_Results.
const Backend_tryGetPackage_Results_TypeID = 0xef241fd6058030cf

func NewBackend_tryGetPackage_Results(s *capnp.Segment) (Backend_tryGetPackage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_tryGetPackage_Results{st}, err
}

func NewRootBackend_tryGetPackage_Results(s *capnp.Segment) (Backend_tryGetPackage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_tryGetPackage_Results{st}, err
}

func ReadRootBackend_tryGetPackage_Results(msg *capnp.Message) (Backend_tryGetPackage_Results, error) {
	root, err := msg.Root()
	return Backend_tryGetPackage_Results{root.Struct()}, err
}

func (s Backend_tryGetPackage_Results) String() string {
	str, _ := text.Marshal(0xef241fd6058030cf, s.Struct)
	return str
}

func (s Backend_tryGetPackage_Results) AppId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_tryGetPackage_Results) HasAppId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_tryGetPackage_Results) AppIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_tryGetPackage_Results) SetAppId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Backend_tryGetPackage_Results) Manifest() (spk.Manifest, error) {
	p, err := s.Struct.Ptr(1)
	return spk.Manifest{Struct: p.Struct()}, err
}

func (s Backend_tryGetPackage_Results) HasManifest() bool {
	return s.Struct.HasPtr(1)
}

func (s Backend_tryGetPackage_Results) SetManifest(v spk.Manifest) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewManifest sets the manifest field to a newly
// allocated spk.Manifest struct, preferring placement in s's segment.
func (s Backend_tryGetPackage_Results) NewManifest() (spk.Manifest, error) {
	ss, err := spk.NewManifest(s.Struct.Segment())
	if err != nil {
		return spk.Manifest{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Backend_tryGetPackage_Results) AuthorPgpKeyFingerprint() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Backend_tryGetPackage_Results) HasAuthorPgpKeyFingerprint() bool {
	return s.Struct.HasPtr(2)
}

func (s Backend_tryGetPackage_Results) AuthorPgpKeyFingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_tryGetPackage_Results) SetAuthorPgpKeyFingerprint(v string) error {
	return s.Struct.SetText(2, v)
}

// Backend_tryGetPackage_Results_List is a list of Backend_tryGetPackage_Results.
type Backend_tryGetPackage_Results_List struct{ capnp.List }

// NewBackend_tryGetPackage_Results creates a new list of Backend_tryGetPackage_Results.
func NewBackend_tryGetPackage_Results_List(s *capnp.Segment, sz int32) (Backend_tryGetPackage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Backend_tryGetPackage_Results_List{l}, err
}

func (s Backend_tryGetPackage_Results_List) At(i int) Backend_tryGetPackage_Results {
	return Backend_tryGetPackage_Results{s.List.Struct(i)}
}

func (s Backend_tryGetPackage_Results_List) Set(i int, v Backend_tryGetPackage_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_tryGetPackage_Results_List) String() string {
	str, _ := text.MarshalList(0xef241fd6058030cf, s.List)
	return str
}

// Backend_tryGetPackage_Results_Future is a wrapper for a Backend_tryGetPackage_Results promised by a client call.
type Backend_tryGetPackage_Results_Future struct{ *capnp.Future }

func (p Backend_tryGetPackage_Results_Future) Struct() (Backend_tryGetPackage_Results, error) {
	s, err := p.Future.Struct()
	return Backend_tryGetPackage_Results{s}, err
}

func (p Backend_tryGetPackage_Results_Future) Manifest() spk.Manifest_Future {
	return spk.Manifest_Future{Future: p.Future.Field(1, nil)}
}

type Backend_deletePackage_Params struct{ capnp.Struct }

// Backend_deletePackage_Params_TypeID is the unique identifier for the type Backend_deletePackage_Params.
const Backend_deletePackage_Params_TypeID = 0xb61fc18674ca994f

func NewBackend_deletePackage_Params(s *capnp.Segment) (Backend_deletePackage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deletePackage_Params{st}, err
}

func NewRootBackend_deletePackage_Params(s *capnp.Segment) (Backend_deletePackage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deletePackage_Params{st}, err
}

func ReadRootBackend_deletePackage_Params(msg *capnp.Message) (Backend_deletePackage_Params, error) {
	root, err := msg.Root()
	return Backend_deletePackage_Params{root.Struct()}, err
}

func (s Backend_deletePackage_Params) String() string {
	str, _ := text.Marshal(0xb61fc18674ca994f, s.Struct)
	return str
}

func (s Backend_deletePackage_Params) PackageId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_deletePackage_Params) HasPackageId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_deletePackage_Params) PackageIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_deletePackage_Params) SetPackageId(v string) error {
	return s.Struct.SetText(0, v)
}

// Backend_deletePackage_Params_List is a list of Backend_deletePackage_Params.
type Backend_deletePackage_Params_List struct{ capnp.List }

// NewBackend_deletePackage_Params creates a new list of Backend_deletePackage_Params.
func NewBackend_deletePackage_Params_List(s *capnp.Segment, sz int32) (Backend_deletePackage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_deletePackage_Params_List{l}, err
}

func (s Backend_deletePackage_Params_List) At(i int) Backend_deletePackage_Params {
	return Backend_deletePackage_Params{s.List.Struct(i)}
}

func (s Backend_deletePackage_Params_List) Set(i int, v Backend_deletePackage_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_deletePackage_Params_List) String() string {
	str, _ := text.MarshalList(0xb61fc18674ca994f, s.List)
	return str
}

// Backend_deletePackage_Params_Future is a wrapper for a Backend_deletePackage_Params promised by a client call.
type Backend_deletePackage_Params_Future struct{ *capnp.Future }

func (p Backend_deletePackage_Params_Future) Struct() (Backend_deletePackage_Params, error) {
	s, err := p.Future.Struct()
	return Backend_deletePackage_Params{s}, err
}

type Backend_deletePackage_Results struct{ capnp.Struct }

// Backend_deletePackage_Results_TypeID is the unique identifier for the type Backend_deletePackage_Results.
const Backend_deletePackage_Results_TypeID = 0xea9f82a07e11b6d7

func NewBackend_deletePackage_Results(s *capnp.Segment) (Backend_deletePackage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deletePackage_Results{st}, err
}

func NewRootBackend_deletePackage_Results(s *capnp.Segment) (Backend_deletePackage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deletePackage_Results{st}, err
}

func ReadRootBackend_deletePackage_Results(msg *capnp.Message) (Backend_deletePackage_Results, error) {
	root, err := msg.Root()
	return Backend_deletePackage_Results{root.Struct()}, err
}

func (s Backend_deletePackage_Results) String() string {
	str, _ := text.Marshal(0xea9f82a07e11b6d7, s.Struct)
	return str
}

// Backend_deletePackage_Results_List is a list of Backend_deletePackage_Results.
type Backend_deletePackage_Results_List struct{ capnp.List }

// NewBackend_deletePackage_Results creates a new list of Backend_deletePackage_Results.
func NewBackend_deletePackage_Results_List(s *capnp.Segment, sz int32) (Backend_deletePackage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Backend_deletePackage_Results_List{l}, err
}

func (s Backend_deletePackage_Results_List) At(i int) Backend_deletePackage_Results {
	return Backend_deletePackage_Results{s.List.Struct(i)}
}

func (s Backend_deletePackage_Results_List) Set(i int, v Backend_deletePackage_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_deletePackage_Results_List) String() string {
	str, _ := text.MarshalList(0xea9f82a07e11b6d7, s.List)
	return str
}

// Backend_deletePackage_Results_Future is a wrapper for a Backend_deletePackage_Results promised by a client call.
type Backend_deletePackage_Results_Future struct{ *capnp.Future }

func (p Backend_deletePackage_Results_Future) Struct() (Backend_deletePackage_Results, error) {
	s, err := p.Future.Struct()
	return Backend_deletePackage_Results{s}, err
}

type Backend_backupGrain_Params struct{ capnp.Struct }

// Backend_backupGrain_Params_TypeID is the unique identifier for the type Backend_backupGrain_Params.
const Backend_backupGrain_Params_TypeID = 0x87a6a96b0a4edd21

func NewBackend_backupGrain_Params(s *capnp.Segment) (Backend_backupGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Backend_backupGrain_Params{st}, err
}

func NewRootBackend_backupGrain_Params(s *capnp.Segment) (Backend_backupGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Backend_backupGrain_Params{st}, err
}

func ReadRootBackend_backupGrain_Params(msg *capnp.Message) (Backend_backupGrain_Params, error) {
	root, err := msg.Root()
	return Backend_backupGrain_Params{root.Struct()}, err
}

func (s Backend_backupGrain_Params) String() string {
	str, _ := text.Marshal(0x87a6a96b0a4edd21, s.Struct)
	return str
}

func (s Backend_backupGrain_Params) BackupId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_backupGrain_Params) HasBackupId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_backupGrain_Params) BackupIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_backupGrain_Params) SetBackupId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Backend_backupGrain_Params) OwnerId() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Backend_backupGrain_Params) HasOwnerId() bool {
	return s.Struct.HasPtr(1)
}

func (s Backend_backupGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_backupGrain_Params) SetOwnerId(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Backend_backupGrain_Params) GrainId() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Backend_backupGrain_Params) HasGrainId() bool {
	return s.Struct.HasPtr(2)
}

func (s Backend_backupGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_backupGrain_Params) SetGrainId(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Backend_backupGrain_Params) Info() (grain.GrainInfo, error) {
	p, err := s.Struct.Ptr(3)
	return grain.GrainInfo{Struct: p.Struct()}, err
}

func (s Backend_backupGrain_Params) HasInfo() bool {
	return s.Struct.HasPtr(3)
}

func (s Backend_backupGrain_Params) SetInfo(v grain.GrainInfo) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated grain.GrainInfo struct, preferring placement in s's segment.
func (s Backend_backupGrain_Params) NewInfo() (grain.GrainInfo, error) {
	ss, err := grain.NewGrainInfo(s.Struct.Segment())
	if err != nil {
		return grain.GrainInfo{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

// Backend_backupGrain_Params_List is a list of Backend_backupGrain_Params.
type Backend_backupGrain_Params_List struct{ capnp.List }

// NewBackend_backupGrain_Params creates a new list of Backend_backupGrain_Params.
func NewBackend_backupGrain_Params_List(s *capnp.Segment, sz int32) (Backend_backupGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Backend_backupGrain_Params_List{l}, err
}

func (s Backend_backupGrain_Params_List) At(i int) Backend_backupGrain_Params {
	return Backend_backupGrain_Params{s.List.Struct(i)}
}

func (s Backend_backupGrain_Params_List) Set(i int, v Backend_backupGrain_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_backupGrain_Params_List) String() string {
	str, _ := text.MarshalList(0x87a6a96b0a4edd21, s.List)
	return str
}

// Backend_backupGrain_Params_Future is a wrapper for a Backend_backupGrain_Params promised by a client call.
type Backend_backupGrain_Params_Future struct{ *capnp.Future }

func (p Backend_backupGrain_Params_Future) Struct() (Backend_backupGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_backupGrain_Params{s}, err
}

func (p Backend_backupGrain_Params_Future) Info() grain.GrainInfo_Future {
	return grain.GrainInfo_Future{Future: p.Future.Field(3, nil)}
}

type Backend_backupGrain_Results struct{ capnp.Struct }

// Backend_backupGrain_Results_TypeID is the unique identifier for the type Backend_backupGrain_Results.
const Backend_backupGrain_Results_TypeID = 0xcd9c9fab5f637827

func NewBackend_backupGrain_Results(s *capnp.Segment) (Backend_backupGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_backupGrain_Results{st}, err
}

func NewRootBackend_backupGrain_Results(s *capnp.Segment) (Backend_backupGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_backupGrain_Results{st}, err
}

func ReadRootBackend_backupGrain_Results(msg *capnp.Message) (Backend_backupGrain_Results, error) {
	root, err := msg.Root()
	return Backend_backupGrain_Results{root.Struct()}, err
}

func (s Backend_backupGrain_Results) String() string {
	str, _ := text.Marshal(0xcd9c9fab5f637827, s.Struct)
	return str
}

// Backend_backupGrain_Results_List is a list of Backend_backupGrain_Results.
type Backend_backupGrain_Results_List struct{ capnp.List }

// NewBackend_backupGrain_Results creates a new list of Backend_backupGrain_Results.
func NewBackend_backupGrain_Results_List(s *capnp.Segment, sz int32) (Backend_backupGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Backend_backupGrain_Results_List{l}, err
}

func (s Backend_backupGrain_Results_List) At(i int) Backend_backupGrain_Results {
	return Backend_backupGrain_Results{s.List.Struct(i)}
}

func (s Backend_backupGrain_Results_List) Set(i int, v Backend_backupGrain_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_backupGrain_Results_List) String() string {
	str, _ := text.MarshalList(0xcd9c9fab5f637827, s.List)
	return str
}

// Backend_backupGrain_Results_Future is a wrapper for a Backend_backupGrain_Results promised by a client call.
type Backend_backupGrain_Results_Future struct{ *capnp.Future }

func (p Backend_backupGrain_Results_Future) Struct() (Backend_backupGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_backupGrain_Results{s}, err
}

type Backend_restoreGrain_Params struct{ capnp.Struct }

// Backend_restoreGrain_Params_TypeID is the unique identifier for the type Backend_restoreGrain_Params.
const Backend_restoreGrain_Params_TypeID = 0x9d88f29f0318d4bb

func NewBackend_restoreGrain_Params(s *capnp.Segment) (Backend_restoreGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_restoreGrain_Params{st}, err
}

func NewRootBackend_restoreGrain_Params(s *capnp.Segment) (Backend_restoreGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_restoreGrain_Params{st}, err
}

func ReadRootBackend_restoreGrain_Params(msg *capnp.Message) (Backend_restoreGrain_Params, error) {
	root, err := msg.Root()
	return Backend_restoreGrain_Params{root.Struct()}, err
}

func (s Backend_restoreGrain_Params) String() string {
	str, _ := text.Marshal(0x9d88f29f0318d4bb, s.Struct)
	return str
}

func (s Backend_restoreGrain_Params) BackupId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_restoreGrain_Params) HasBackupId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_restoreGrain_Params) BackupIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_restoreGrain_Params) SetBackupId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Backend_restoreGrain_Params) OwnerId() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Backend_restoreGrain_Params) HasOwnerId() bool {
	return s.Struct.HasPtr(1)
}

func (s Backend_restoreGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_restoreGrain_Params) SetOwnerId(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Backend_restoreGrain_Params) GrainId() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Backend_restoreGrain_Params) HasGrainId() bool {
	return s.Struct.HasPtr(2)
}

func (s Backend_restoreGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_restoreGrain_Params) SetGrainId(v string) error {
	return s.Struct.SetText(2, v)
}

// Backend_restoreGrain_Params_List is a list of Backend_restoreGrain_Params.
type Backend_restoreGrain_Params_List struct{ capnp.List }

// NewBackend_restoreGrain_Params creates a new list of Backend_restoreGrain_Params.
func NewBackend_restoreGrain_Params_List(s *capnp.Segment, sz int32) (Backend_restoreGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Backend_restoreGrain_Params_List{l}, err
}

func (s Backend_restoreGrain_Params_List) At(i int) Backend_restoreGrain_Params {
	return Backend_restoreGrain_Params{s.List.Struct(i)}
}

func (s Backend_restoreGrain_Params_List) Set(i int, v Backend_restoreGrain_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_restoreGrain_Params_List) String() string {
	str, _ := text.MarshalList(0x9d88f29f0318d4bb, s.List)
	return str
}

// Backend_restoreGrain_Params_Future is a wrapper for a Backend_restoreGrain_Params promised by a client call.
type Backend_restoreGrain_Params_Future struct{ *capnp.Future }

func (p Backend_restoreGrain_Params_Future) Struct() (Backend_restoreGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_restoreGrain_Params{s}, err
}

type Backend_restoreGrain_Results struct{ capnp.Struct }

// Backend_restoreGrain_Results_TypeID is the unique identifier for the type Backend_restoreGrain_Results.
const Backend_restoreGrain_Results_TypeID = 0x8b790707193ea7ff

func NewBackend_restoreGrain_Results(s *capnp.Segment) (Backend_restoreGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_restoreGrain_Results{st}, err
}

func NewRootBackend_restoreGrain_Results(s *capnp.Segment) (Backend_restoreGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_restoreGrain_Results{st}, err
}

func ReadRootBackend_restoreGrain_Results(msg *capnp.Message) (Backend_restoreGrain_Results, error) {
	root, err := msg.Root()
	return Backend_restoreGrain_Results{root.Struct()}, err
}

func (s Backend_restoreGrain_Results) String() string {
	str, _ := text.Marshal(0x8b790707193ea7ff, s.Struct)
	return str
}

func (s Backend_restoreGrain_Results) Info() (grain.GrainInfo, error) {
	p, err := s.Struct.Ptr(0)
	return grain.GrainInfo{Struct: p.Struct()}, err
}

func (s Backend_restoreGrain_Results) HasInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_restoreGrain_Results) SetInfo(v grain.GrainInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated grain.GrainInfo struct, preferring placement in s's segment.
func (s Backend_restoreGrain_Results) NewInfo() (grain.GrainInfo, error) {
	ss, err := grain.NewGrainInfo(s.Struct.Segment())
	if err != nil {
		return grain.GrainInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Backend_restoreGrain_Results_List is a list of Backend_restoreGrain_Results.
type Backend_restoreGrain_Results_List struct{ capnp.List }

// NewBackend_restoreGrain_Results creates a new list of Backend_restoreGrain_Results.
func NewBackend_restoreGrain_Results_List(s *capnp.Segment, sz int32) (Backend_restoreGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_restoreGrain_Results_List{l}, err
}

func (s Backend_restoreGrain_Results_List) At(i int) Backend_restoreGrain_Results {
	return Backend_restoreGrain_Results{s.List.Struct(i)}
}

func (s Backend_restoreGrain_Results_List) Set(i int, v Backend_restoreGrain_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_restoreGrain_Results_List) String() string {
	str, _ := text.MarshalList(0x8b790707193ea7ff, s.List)
	return str
}

// Backend_restoreGrain_Results_Future is a wrapper for a Backend_restoreGrain_Results promised by a client call.
type Backend_restoreGrain_Results_Future struct{ *capnp.Future }

func (p Backend_restoreGrain_Results_Future) Struct() (Backend_restoreGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_restoreGrain_Results{s}, err
}

func (p Backend_restoreGrain_Results_Future) Info() grain.GrainInfo_Future {
	return grain.GrainInfo_Future{Future: p.Future.Field(0, nil)}
}

type Backend_uploadBackup_Params struct{ capnp.Struct }

// Backend_uploadBackup_Params_TypeID is the unique identifier for the type Backend_uploadBackup_Params.
const Backend_uploadBackup_Params_TypeID = 0xf2ccecff0178227b

func NewBackend_uploadBackup_Params(s *capnp.Segment) (Backend_uploadBackup_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_uploadBackup_Params{st}, err
}

func NewRootBackend_uploadBackup_Params(s *capnp.Segment) (Backend_uploadBackup_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_uploadBackup_Params{st}, err
}

func ReadRootBackend_uploadBackup_Params(msg *capnp.Message) (Backend_uploadBackup_Params, error) {
	root, err := msg.Root()
	return Backend_uploadBackup_Params{root.Struct()}, err
}

func (s Backend_uploadBackup_Params) String() string {
	str, _ := text.Marshal(0xf2ccecff0178227b, s.Struct)
	return str
}

func (s Backend_uploadBackup_Params) BackupId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_uploadBackup_Params) HasBackupId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_uploadBackup_Params) BackupIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_uploadBackup_Params) SetBackupId(v string) error {
	return s.Struct.SetText(0, v)
}

// Backend_uploadBackup_Params_List is a list of Backend_uploadBackup_Params.
type Backend_uploadBackup_Params_List struct{ capnp.List }

// NewBackend_uploadBackup_Params creates a new list of Backend_uploadBackup_Params.
func NewBackend_uploadBackup_Params_List(s *capnp.Segment, sz int32) (Backend_uploadBackup_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_uploadBackup_Params_List{l}, err
}

func (s Backend_uploadBackup_Params_List) At(i int) Backend_uploadBackup_Params {
	return Backend_uploadBackup_Params{s.List.Struct(i)}
}

func (s Backend_uploadBackup_Params_List) Set(i int, v Backend_uploadBackup_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_uploadBackup_Params_List) String() string {
	str, _ := text.MarshalList(0xf2ccecff0178227b, s.List)
	return str
}

// Backend_uploadBackup_Params_Future is a wrapper for a Backend_uploadBackup_Params promised by a client call.
type Backend_uploadBackup_Params_Future struct{ *capnp.Future }

func (p Backend_uploadBackup_Params_Future) Struct() (Backend_uploadBackup_Params, error) {
	s, err := p.Future.Struct()
	return Backend_uploadBackup_Params{s}, err
}

type Backend_uploadBackup_Results struct{ capnp.Struct }

// Backend_uploadBackup_Results_TypeID is the unique identifier for the type Backend_uploadBackup_Results.
const Backend_uploadBackup_Results_TypeID = 0xbc51d6bc865a8fcf

func NewBackend_uploadBackup_Results(s *capnp.Segment) (Backend_uploadBackup_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_uploadBackup_Results{st}, err
}

func NewRootBackend_uploadBackup_Results(s *capnp.Segment) (Backend_uploadBackup_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_uploadBackup_Results{st}, err
}

func ReadRootBackend_uploadBackup_Results(msg *capnp.Message) (Backend_uploadBackup_Results, error) {
	root, err := msg.Root()
	return Backend_uploadBackup_Results{root.Struct()}, err
}

func (s Backend_uploadBackup_Results) String() string {
	str, _ := text.Marshal(0xbc51d6bc865a8fcf, s.Struct)
	return str
}

func (s Backend_uploadBackup_Results) Stream() util.ByteStream {
	p, _ := s.Struct.Ptr(0)
	return util.ByteStream{Client: p.Interface().Client()}
}

func (s Backend_uploadBackup_Results) HasStream() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_uploadBackup_Results) SetStream(v util.ByteStream) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Backend_uploadBackup_Results_List is a list of Backend_uploadBackup_Results.
type Backend_uploadBackup_Results_List struct{ capnp.List }

// NewBackend_uploadBackup_Results creates a new list of Backend_uploadBackup_Results.
func NewBackend_uploadBackup_Results_List(s *capnp.Segment, sz int32) (Backend_uploadBackup_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_uploadBackup_Results_List{l}, err
}

func (s Backend_uploadBackup_Results_List) At(i int) Backend_uploadBackup_Results {
	return Backend_uploadBackup_Results{s.List.Struct(i)}
}

func (s Backend_uploadBackup_Results_List) Set(i int, v Backend_uploadBackup_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_uploadBackup_Results_List) String() string {
	str, _ := text.MarshalList(0xbc51d6bc865a8fcf, s.List)
	return str
}

// Backend_uploadBackup_Results_Future is a wrapper for a Backend_uploadBackup_Results promised by a client call.
type Backend_uploadBackup_Results_Future struct{ *capnp.Future }

func (p Backend_uploadBackup_Results_Future) Struct() (Backend_uploadBackup_Results, error) {
	s, err := p.Future.Struct()
	return Backend_uploadBackup_Results{s}, err
}

func (p Backend_uploadBackup_Results_Future) Stream() util.ByteStream {
	return util.ByteStream{Client: p.Future.Field(0, nil).Client()}
}

type Backend_downloadBackup_Params struct{ capnp.Struct }

// Backend_downloadBackup_Params_TypeID is the unique identifier for the type Backend_downloadBackup_Params.
const Backend_downloadBackup_Params_TypeID = 0x916d32f140971035

func NewBackend_downloadBackup_Params(s *capnp.Segment) (Backend_downloadBackup_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_downloadBackup_Params{st}, err
}

func NewRootBackend_downloadBackup_Params(s *capnp.Segment) (Backend_downloadBackup_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_downloadBackup_Params{st}, err
}

func ReadRootBackend_downloadBackup_Params(msg *capnp.Message) (Backend_downloadBackup_Params, error) {
	root, err := msg.Root()
	return Backend_downloadBackup_Params{root.Struct()}, err
}

func (s Backend_downloadBackup_Params) String() string {
	str, _ := text.Marshal(0x916d32f140971035, s.Struct)
	return str
}

func (s Backend_downloadBackup_Params) BackupId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_downloadBackup_Params) HasBackupId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_downloadBackup_Params) BackupIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_downloadBackup_Params) SetBackupId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Backend_downloadBackup_Params) Stream() util.ByteStream {
	p, _ := s.Struct.Ptr(1)
	return util.ByteStream{Client: p.Interface().Client()}
}

func (s Backend_downloadBackup_Params) HasStream() bool {
	return s.Struct.HasPtr(1)
}

func (s Backend_downloadBackup_Params) SetStream(v util.ByteStream) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

// Backend_downloadBackup_Params_List is a list of Backend_downloadBackup_Params.
type Backend_downloadBackup_Params_List struct{ capnp.List }

// NewBackend_downloadBackup_Params creates a new list of Backend_downloadBackup_Params.
func NewBackend_downloadBackup_Params_List(s *capnp.Segment, sz int32) (Backend_downloadBackup_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Backend_downloadBackup_Params_List{l}, err
}

func (s Backend_downloadBackup_Params_List) At(i int) Backend_downloadBackup_Params {
	return Backend_downloadBackup_Params{s.List.Struct(i)}
}

func (s Backend_downloadBackup_Params_List) Set(i int, v Backend_downloadBackup_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_downloadBackup_Params_List) String() string {
	str, _ := text.MarshalList(0x916d32f140971035, s.List)
	return str
}

// Backend_downloadBackup_Params_Future is a wrapper for a Backend_downloadBackup_Params promised by a client call.
type Backend_downloadBackup_Params_Future struct{ *capnp.Future }

func (p Backend_downloadBackup_Params_Future) Struct() (Backend_downloadBackup_Params, error) {
	s, err := p.Future.Struct()
	return Backend_downloadBackup_Params{s}, err
}

func (p Backend_downloadBackup_Params_Future) Stream() util.ByteStream {
	return util.ByteStream{Client: p.Future.Field(1, nil).Client()}
}

type Backend_downloadBackup_Results struct{ capnp.Struct }

// Backend_downloadBackup_Results_TypeID is the unique identifier for the type Backend_downloadBackup_Results.
const Backend_downloadBackup_Results_TypeID = 0x9e90498484bab87d

func NewBackend_downloadBackup_Results(s *capnp.Segment) (Backend_downloadBackup_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_downloadBackup_Results{st}, err
}

func NewRootBackend_downloadBackup_Results(s *capnp.Segment) (Backend_downloadBackup_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_downloadBackup_Results{st}, err
}

func ReadRootBackend_downloadBackup_Results(msg *capnp.Message) (Backend_downloadBackup_Results, error) {
	root, err := msg.Root()
	return Backend_downloadBackup_Results{root.Struct()}, err
}

func (s Backend_downloadBackup_Results) String() string {
	str, _ := text.Marshal(0x9e90498484bab87d, s.Struct)
	return str
}

// Backend_downloadBackup_Results_List is a list of Backend_downloadBackup_Results.
type Backend_downloadBackup_Results_List struct{ capnp.List }

// NewBackend_downloadBackup_Results creates a new list of Backend_downloadBackup_Results.
func NewBackend_downloadBackup_Results_List(s *capnp.Segment, sz int32) (Backend_downloadBackup_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Backend_downloadBackup_Results_List{l}, err
}

func (s Backend_downloadBackup_Results_List) At(i int) Backend_downloadBackup_Results {
	return Backend_downloadBackup_Results{s.List.Struct(i)}
}

func (s Backend_downloadBackup_Results_List) Set(i int, v Backend_downloadBackup_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_downloadBackup_Results_List) String() string {
	str, _ := text.MarshalList(0x9e90498484bab87d, s.List)
	return str
}

// Backend_downloadBackup_Results_Future is a wrapper for a Backend_downloadBackup_Results promised by a client call.
type Backend_downloadBackup_Results_Future struct{ *capnp.Future }

func (p Backend_downloadBackup_Results_Future) Struct() (Backend_downloadBackup_Results, error) {
	s, err := p.Future.Struct()
	return Backend_downloadBackup_Results{s}, err
}

type Backend_deleteBackup_Params struct{ capnp.Struct }

// Backend_deleteBackup_Params_TypeID is the unique identifier for the type Backend_deleteBackup_Params.
const Backend_deleteBackup_Params_TypeID = 0xd0d6ed6a5ed70e62

func NewBackend_deleteBackup_Params(s *capnp.Segment) (Backend_deleteBackup_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deleteBackup_Params{st}, err
}

func NewRootBackend_deleteBackup_Params(s *capnp.Segment) (Backend_deleteBackup_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deleteBackup_Params{st}, err
}

func ReadRootBackend_deleteBackup_Params(msg *capnp.Message) (Backend_deleteBackup_Params, error) {
	root, err := msg.Root()
	return Backend_deleteBackup_Params{root.Struct()}, err
}

func (s Backend_deleteBackup_Params) String() string {
	str, _ := text.Marshal(0xd0d6ed6a5ed70e62, s.Struct)
	return str
}

func (s Backend_deleteBackup_Params) BackupId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_deleteBackup_Params) HasBackupId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_deleteBackup_Params) BackupIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_deleteBackup_Params) SetBackupId(v string) error {
	return s.Struct.SetText(0, v)
}

// Backend_deleteBackup_Params_List is a list of Backend_deleteBackup_Params.
type Backend_deleteBackup_Params_List struct{ capnp.List }

// NewBackend_deleteBackup_Params creates a new list of Backend_deleteBackup_Params.
func NewBackend_deleteBackup_Params_List(s *capnp.Segment, sz int32) (Backend_deleteBackup_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_deleteBackup_Params_List{l}, err
}

func (s Backend_deleteBackup_Params_List) At(i int) Backend_deleteBackup_Params {
	return Backend_deleteBackup_Params{s.List.Struct(i)}
}

func (s Backend_deleteBackup_Params_List) Set(i int, v Backend_deleteBackup_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_deleteBackup_Params_List) String() string {
	str, _ := text.MarshalList(0xd0d6ed6a5ed70e62, s.List)
	return str
}

// Backend_deleteBackup_Params_Future is a wrapper for a Backend_deleteBackup_Params promised by a client call.
type Backend_deleteBackup_Params_Future struct{ *capnp.Future }

func (p Backend_deleteBackup_Params_Future) Struct() (Backend_deleteBackup_Params, error) {
	s, err := p.Future.Struct()
	return Backend_deleteBackup_Params{s}, err
}

type Backend_deleteBackup_Results struct{ capnp.Struct }

// Backend_deleteBackup_Results_TypeID is the unique identifier for the type Backend_deleteBackup_Results.
const Backend_deleteBackup_Results_TypeID = 0xaf88ad00c801b00d

func NewBackend_deleteBackup_Results(s *capnp.Segment) (Backend_deleteBackup_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteBackup_Results{st}, err
}

func NewRootBackend_deleteBackup_Results(s *capnp.Segment) (Backend_deleteBackup_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteBackup_Results{st}, err
}

func ReadRootBackend_deleteBackup_Results(msg *capnp.Message) (Backend_deleteBackup_Results, error) {
	root, err := msg.Root()
	return Backend_deleteBackup_Results{root.Struct()}, err
}

func (s Backend_deleteBackup_Results) String() string {
	str, _ := text.Marshal(0xaf88ad00c801b00d, s.Struct)
	return str
}

// Backend_deleteBackup_Results_List is a list of Backend_deleteBackup_Results.
type Backend_deleteBackup_Results_List struct{ capnp.List }

// NewBackend_deleteBackup_Results creates a new list of Backend_deleteBackup_Results.
func NewBackend_deleteBackup_Results_List(s *capnp.Segment, sz int32) (Backend_deleteBackup_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Backend_deleteBackup_Results_List{l}, err
}

func (s Backend_deleteBackup_Results_List) At(i int) Backend_deleteBackup_Results {
	return Backend_deleteBackup_Results{s.List.Struct(i)}
}

func (s Backend_deleteBackup_Results_List) Set(i int, v Backend_deleteBackup_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_deleteBackup_Results_List) String() string {
	str, _ := text.MarshalList(0xaf88ad00c801b00d, s.List)
	return str
}

// Backend_deleteBackup_Results_Future is a wrapper for a Backend_deleteBackup_Results promised by a client call.
type Backend_deleteBackup_Results_Future struct{ *capnp.Future }

func (p Backend_deleteBackup_Results_Future) Struct() (Backend_deleteBackup_Results, error) {
	s, err := p.Future.Struct()
	return Backend_deleteBackup_Results{s}, err
}

type Backend_getUserStorageUsage_Params struct{ capnp.Struct }

// Backend_getUserStorageUsage_Params_TypeID is the unique identifier for the type Backend_getUserStorageUsage_Params.
const Backend_getUserStorageUsage_Params_TypeID = 0xaaef1f8c301b865d

func NewBackend_getUserStorageUsage_Params(s *capnp.Segment) (Backend_getUserStorageUsage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_getUserStorageUsage_Params{st}, err
}

func NewRootBackend_getUserStorageUsage_Params(s *capnp.Segment) (Backend_getUserStorageUsage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_getUserStorageUsage_Params{st}, err
}

func ReadRootBackend_getUserStorageUsage_Params(msg *capnp.Message) (Backend_getUserStorageUsage_Params, error) {
	root, err := msg.Root()
	return Backend_getUserStorageUsage_Params{root.Struct()}, err
}

func (s Backend_getUserStorageUsage_Params) String() string {
	str, _ := text.Marshal(0xaaef1f8c301b865d, s.Struct)
	return str
}

func (s Backend_getUserStorageUsage_Params) UserId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_getUserStorageUsage_Params) HasUserId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_getUserStorageUsage_Params) UserIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_getUserStorageUsage_Params) SetUserId(v string) error {
	return s.Struct.SetText(0, v)
}

// Backend_getUserStorageUsage_Params_List is a list of Backend_getUserStorageUsage_Params.
type Backend_getUserStorageUsage_Params_List struct{ capnp.List }

// NewBackend_getUserStorageUsage_Params creates a new list of Backend_getUserStorageUsage_Params.
func NewBackend_getUserStorageUsage_Params_List(s *capnp.Segment, sz int32) (Backend_getUserStorageUsage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_getUserStorageUsage_Params_List{l}, err
}

func (s Backend_getUserStorageUsage_Params_List) At(i int) Backend_getUserStorageUsage_Params {
	return Backend_getUserStorageUsage_Params{s.List.Struct(i)}
}

func (s Backend_getUserStorageUsage_Params_List) Set(i int, v Backend_getUserStorageUsage_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_getUserStorageUsage_Params_List) String() string {
	str, _ := text.MarshalList(0xaaef1f8c301b865d, s.List)
	return str
}

// Backend_getUserStorageUsage_Params_Future is a wrapper for a Backend_getUserStorageUsage_Params promised by a client call.
type Backend_getUserStorageUsage_Params_Future struct{ *capnp.Future }

func (p Backend_getUserStorageUsage_Params_Future) Struct() (Backend_getUserStorageUsage_Params, error) {
	s, err := p.Future.Struct()
	return Backend_getUserStorageUsage_Params{s}, err
}

type Backend_getUserStorageUsage_Results struct{ capnp.Struct }

// Backend_getUserStorageUsage_Results_TypeID is the unique identifier for the type Backend_getUserStorageUsage_Results.
const Backend_getUserStorageUsage_Results_TypeID = 0xa1c73384bc38ab4b

func NewBackend_getUserStorageUsage_Results(s *capnp.Segment) (Backend_getUserStorageUsage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getUserStorageUsage_Results{st}, err
}

func NewRootBackend_getUserStorageUsage_Results(s *capnp.Segment) (Backend_getUserStorageUsage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getUserStorageUsage_Results{st}, err
}

func ReadRootBackend_getUserStorageUsage_Results(msg *capnp.Message) (Backend_getUserStorageUsage_Results, error) {
	root, err := msg.Root()
	return Backend_getUserStorageUsage_Results{root.Struct()}, err
}

func (s Backend_getUserStorageUsage_Results) String() string {
	str, _ := text.Marshal(0xa1c73384bc38ab4b, s.Struct)
	return str
}

func (s Backend_getUserStorageUsage_Results) Size() uint64 {
	return s.Struct.Uint64(0)
}

func (s Backend_getUserStorageUsage_Results) SetSize(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Backend_getUserStorageUsage_Results_List is a list of Backend_getUserStorageUsage_Results.
type Backend_getUserStorageUsage_Results_List struct{ capnp.List }

// NewBackend_getUserStorageUsage_Results creates a new list of Backend_getUserStorageUsage_Results.
func NewBackend_getUserStorageUsage_Results_List(s *capnp.Segment, sz int32) (Backend_getUserStorageUsage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Backend_getUserStorageUsage_Results_List{l}, err
}

func (s Backend_getUserStorageUsage_Results_List) At(i int) Backend_getUserStorageUsage_Results {
	return Backend_getUserStorageUsage_Results{s.List.Struct(i)}
}

func (s Backend_getUserStorageUsage_Results_List) Set(i int, v Backend_getUserStorageUsage_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_getUserStorageUsage_Results_List) String() string {
	str, _ := text.MarshalList(0xa1c73384bc38ab4b, s.List)
	return str
}

// Backend_getUserStorageUsage_Results_Future is a wrapper for a Backend_getUserStorageUsage_Results promised by a client call.
type Backend_getUserStorageUsage_Results_Future struct{ *capnp.Future }

func (p Backend_getUserStorageUsage_Results_Future) Struct() (Backend_getUserStorageUsage_Results, error) {
	s, err := p.Future.Struct()
	return Backend_getUserStorageUsage_Results{s}, err
}

type Backend_transferGrain_Params struct{ capnp.Struct }

// Backend_transferGrain_Params_TypeID is the unique identifier for the type Backend_transferGrain_Params.
const Backend_transferGrain_Params_TypeID = 0xcce40aee6005d381

func NewBackend_transferGrain_Params(s *capnp.Segment) (Backend_transferGrain_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_transferGrain_Params{st}, err
}

func NewRootBackend_transferGrain_Params(s *capnp.Segment) (Backend_transferGrain_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Backend_transferGrain_Params{st}, err
}

func ReadRootBackend_transferGrain_Params(msg *capnp.Message) (Backend_transferGrain_Params, error) {
	root, err := msg.Root()
	return Backend_transferGrain_Params{root.Struct()}, err
}

func (s Backend_transferGrain_Params) String() string {
	str, _ := text.Marshal(0xcce40aee6005d381, s.Struct)
	return str
}

func (s Backend_transferGrain_Params) OwnerId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_transferGrain_Params) HasOwnerId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_transferGrain_Params) OwnerIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_transferGrain_Params) SetOwnerId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Backend_transferGrain_Params) GrainId() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Backend_transferGrain_Params) HasGrainId() bool {
	return s.Struct.HasPtr(1)
}

func (s Backend_transferGrain_Params) GrainIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_transferGrain_Params) SetGrainId(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Backend_transferGrain_Params) NewOwnerId() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Backend_transferGrain_Params) HasNewOwnerId() bool {
	return s.Struct.HasPtr(2)
}

func (s Backend_transferGrain_Params) NewOwnerIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Backend_transferGrain_Params) SetNewOwnerId(v string) error {
	return s.Struct.SetText(2, v)
}

// Backend_transferGrain_Params_List is a list of Backend_transferGrain_Params.
type Backend_transferGrain_Params_List struct{ capnp.List }

// NewBackend_transferGrain_Params creates a new list of Backend_transferGrain_Params.
func NewBackend_transferGrain_Params_List(s *capnp.Segment, sz int32) (Backend_transferGrain_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Backend_transferGrain_Params_List{l}, err
}

func (s Backend_transferGrain_Params_List) At(i int) Backend_transferGrain_Params {
	return Backend_transferGrain_Params{s.List.Struct(i)}
}

func (s Backend_transferGrain_Params_List) Set(i int, v Backend_transferGrain_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_transferGrain_Params_List) String() string {
	str, _ := text.MarshalList(0xcce40aee6005d381, s.List)
	return str
}

// Backend_transferGrain_Params_Future is a wrapper for a Backend_transferGrain_Params promised by a client call.
type Backend_transferGrain_Params_Future struct{ *capnp.Future }

func (p Backend_transferGrain_Params_Future) Struct() (Backend_transferGrain_Params, error) {
	s, err := p.Future.Struct()
	return Backend_transferGrain_Params{s}, err
}

type Backend_transferGrain_Results struct{ capnp.Struct }

// Backend_transferGrain_Results_TypeID is the unique identifier for the type Backend_transferGrain_Results.
const Backend_transferGrain_Results_TypeID = 0x86362c69f5c42997

func NewBackend_transferGrain_Results(s *capnp.Segment) (Backend_transferGrain_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_transferGrain_Results{st}, err
}

func NewRootBackend_transferGrain_Results(s *capnp.Segment) (Backend_transferGrain_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_transferGrain_Results{st}, err
}

func ReadRootBackend_transferGrain_Results(msg *capnp.Message) (Backend_transferGrain_Results, error) {
	root, err := msg.Root()
	return Backend_transferGrain_Results{root.Struct()}, err
}

func (s Backend_transferGrain_Results) String() string {
	str, _ := text.Marshal(0x86362c69f5c42997, s.Struct)
	return str
}

// Backend_transferGrain_Results_List is a list of Backend_transferGrain_Results.
type Backend_transferGrain_Results_List struct{ capnp.List }

// NewBackend_transferGrain_Results creates a new list of Backend_transferGrain_Results.
func NewBackend_transferGrain_Results_List(s *capnp.Segment, sz int32) (Backend_transferGrain_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Backend_transferGrain_Results_List{l}, err
}

func (s Backend_transferGrain_Results_List) At(i int) Backend_transferGrain_Results {
	return Backend_transferGrain_Results{s.List.Struct(i)}
}

func (s Backend_transferGrain_Results_List) Set(i int, v Backend_transferGrain_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_transferGrain_Results_List) String() string {
	str, _ := text.MarshalList(0x86362c69f5c42997, s.List)
	return str
}

// Backend_transferGrain_Results_Future is a wrapper for a Backend_transferGrain_Results promised by a client call.
type Backend_transferGrain_Results_Future struct{ *capnp.Future }

func (p Backend_transferGrain_Results_Future) Struct() (Backend_transferGrain_Results, error) {
	s, err := p.Future.Struct()
	return Backend_transferGrain_Results{s}, err
}

type Backend_deleteUser_Params struct{ capnp.Struct }

// Backend_deleteUser_Params_TypeID is the unique identifier for the type Backend_deleteUser_Params.
const Backend_deleteUser_Params_TypeID = 0xfa7238e0a9345914

func NewBackend_deleteUser_Params(s *capnp.Segment) (Backend_deleteUser_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deleteUser_Params{st}, err
}

func NewRootBackend_deleteUser_Params(s *capnp.Segment) (Backend_deleteUser_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Backend_deleteUser_Params{st}, err
}

func ReadRootBackend_deleteUser_Params(msg *capnp.Message) (Backend_deleteUser_Params, error) {
	root, err := msg.Root()
	return Backend_deleteUser_Params{root.Struct()}, err
}

func (s Backend_deleteUser_Params) String() string {
	str, _ := text.Marshal(0xfa7238e0a9345914, s.Struct)
	return str
}

func (s Backend_deleteUser_Params) UserId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_deleteUser_Params) HasUserId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_deleteUser_Params) UserIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_deleteUser_Params) SetUserId(v string) error {
	return s.Struct.SetText(0, v)
}

// Backend_deleteUser_Params_List is a list of Backend_deleteUser_Params.
type Backend_deleteUser_Params_List struct{ capnp.List }

// NewBackend_deleteUser_Params creates a new list of Backend_deleteUser_Params.
func NewBackend_deleteUser_Params_List(s *capnp.Segment, sz int32) (Backend_deleteUser_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Backend_deleteUser_Params_List{l}, err
}

func (s Backend_deleteUser_Params_List) At(i int) Backend_deleteUser_Params {
	return Backend_deleteUser_Params{s.List.Struct(i)}
}

func (s Backend_deleteUser_Params_List) Set(i int, v Backend_deleteUser_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_deleteUser_Params_List) String() string {
	str, _ := text.MarshalList(0xfa7238e0a9345914, s.List)
	return str
}

// Backend_deleteUser_Params_Future is a wrapper for a Backend_deleteUser_Params promised by a client call.
type Backend_deleteUser_Params_Future struct{ *capnp.Future }

func (p Backend_deleteUser_Params_Future) Struct() (Backend_deleteUser_Params, error) {
	s, err := p.Future.Struct()
	return Backend_deleteUser_Params{s}, err
}

type Backend_deleteUser_Results struct{ capnp.Struct }

// Backend_deleteUser_Results_TypeID is the unique identifier for the type Backend_deleteUser_Results.
const Backend_deleteUser_Results_TypeID = 0x9145c7ea308343d9

func NewBackend_deleteUser_Results(s *capnp.Segment) (Backend_deleteUser_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteUser_Results{st}, err
}

func NewRootBackend_deleteUser_Results(s *capnp.Segment) (Backend_deleteUser_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_deleteUser_Results{st}, err
}

func ReadRootBackend_deleteUser_Results(msg *capnp.Message) (Backend_deleteUser_Results, error) {
	root, err := msg.Root()
	return Backend_deleteUser_Results{root.Struct()}, err
}

func (s Backend_deleteUser_Results) String() string {
	str, _ := text.Marshal(0x9145c7ea308343d9, s.Struct)
	return str
}

// Backend_deleteUser_Results_List is a list of Backend_deleteUser_Results.
type Backend_deleteUser_Results_List struct{ capnp.List }

// NewBackend_deleteUser_Results creates a new list of Backend_deleteUser_Results.
func NewBackend_deleteUser_Results_List(s *capnp.Segment, sz int32) (Backend_deleteUser_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Backend_deleteUser_Results_List{l}, err
}

func (s Backend_deleteUser_Results_List) At(i int) Backend_deleteUser_Results {
	return Backend_deleteUser_Results{s.List.Struct(i)}
}

func (s Backend_deleteUser_Results_List) Set(i int, v Backend_deleteUser_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_deleteUser_Results_List) String() string {
	str, _ := text.MarshalList(0x9145c7ea308343d9, s.List)
	return str
}

// Backend_deleteUser_Results_Future is a wrapper for a Backend_deleteUser_Results promised by a client call.
type Backend_deleteUser_Results_Future struct{ *capnp.Future }

func (p Backend_deleteUser_Results_Future) Struct() (Backend_deleteUser_Results, error) {
	s, err := p.Future.Struct()
	return Backend_deleteUser_Results{s}, err
}

type Backend_ping_Params struct{ capnp.Struct }

// Backend_ping_Params_TypeID is the unique identifier for the type Backend_ping_Params.
const Backend_ping_Params_TypeID = 0xcb56f444d1311800

func NewBackend_ping_Params(s *capnp.Segment) (Backend_ping_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_ping_Params{st}, err
}

func NewRootBackend_ping_Params(s *capnp.Segment) (Backend_ping_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_ping_Params{st}, err
}

func ReadRootBackend_ping_Params(msg *capnp.Message) (Backend_ping_Params, error) {
	root, err := msg.Root()
	return Backend_ping_Params{root.Struct()}, err
}

func (s Backend_ping_Params) String() string {
	str, _ := text.Marshal(0xcb56f444d1311800, s.Struct)
	return str
}

// Backend_ping_Params_List is a list of Backend_ping_Params.
type Backend_ping_Params_List struct{ capnp.List }

// NewBackend_ping_Params creates a new list of Backend_ping_Params.
func NewBackend_ping_Params_List(s *capnp.Segment, sz int32) (Backend_ping_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Backend_ping_Params_List{l}, err
}

func (s Backend_ping_Params_List) At(i int) Backend_ping_Params {
	return Backend_ping_Params{s.List.Struct(i)}
}

func (s Backend_ping_Params_List) Set(i int, v Backend_ping_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_ping_Params_List) String() string {
	str, _ := text.MarshalList(0xcb56f444d1311800, s.List)
	return str
}

// Backend_ping_Params_Future is a wrapper for a Backend_ping_Params promised by a client call.
type Backend_ping_Params_Future struct{ *capnp.Future }

func (p Backend_ping_Params_Future) Struct() (Backend_ping_Params, error) {
	s, err := p.Future.Struct()
	return Backend_ping_Params{s}, err
}

type Backend_ping_Results struct{ capnp.Struct }

// Backend_ping_Results_TypeID is the unique identifier for the type Backend_ping_Results.
const Backend_ping_Results_TypeID = 0xe3a9cebde9177d60

func NewBackend_ping_Results(s *capnp.Segment) (Backend_ping_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_ping_Results{st}, err
}

func NewRootBackend_ping_Results(s *capnp.Segment) (Backend_ping_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Backend_ping_Results{st}, err
}

func ReadRootBackend_ping_Results(msg *capnp.Message) (Backend_ping_Results, error) {
	root, err := msg.Root()
	return Backend_ping_Results{root.Struct()}, err
}

func (s Backend_ping_Results) String() string {
	str, _ := text.Marshal(0xe3a9cebde9177d60, s.Struct)
	return str
}

// Backend_ping_Results_List is a list of Backend_ping_Results.
type Backend_ping_Results_List struct{ capnp.List }

// NewBackend_ping_Results creates a new list of Backend_ping_Results.
func NewBackend_ping_Results_List(s *capnp.Segment, sz int32) (Backend_ping_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Backend_ping_Results_List{l}, err
}

func (s Backend_ping_Results_List) At(i int) Backend_ping_Results {
	return Backend_ping_Results{s.List.Struct(i)}
}

func (s Backend_ping_Results_List) Set(i int, v Backend_ping_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_ping_Results_List) String() string {
	str, _ := text.MarshalList(0xe3a9cebde9177d60, s.List)
	return str
}

// Backend_ping_Results_Future is a wrapper for a Backend_ping_Results promised by a client call.
type Backend_ping_Results_Future struct{ *capnp.Future }

func (p Backend_ping_Results_Future) Struct() (Backend_ping_Results, error) {
	s, err := p.Future.Struct()
	return Backend_ping_Results{s}, err
}

type Backend_getGrainStorageUsage_Params struct{ capnp.Struct }

// Backend_getGrainStorageUsage_Params_TypeID is the unique identifier for the type Backend_getGrainStorageUsage_Params.
const Backend_getGrainStorageUsage_Params_TypeID = 0xe06fe4e0d4e93178

func NewBackend_getGrainStorageUsage_Params(s *capnp.Segment) (Backend_getGrainStorageUsage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_getGrainStorageUsage_Params{st}, err
}

func NewRootBackend_getGrainStorageUsage_Params(s *capnp.Segment) (Backend_getGrainStorageUsage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Backend_getGrainStorageUsage_Params{st}, err
}

func ReadRootBackend_getGrainStorageUsage_Params(msg *capnp.Message) (Backend_getGrainStorageUsage_Params, error) {
	root, err := msg.Root()
	return Backend_getGrainStorageUsage_Params{root.Struct()}, err
}

func (s Backend_getGrainStorageUsage_Params) String() string {
	str, _ := text.Marshal(0xe06fe4e0d4e93178, s.Struct)
	return str
}

func (s Backend_getGrainStorageUsage_Params) OwnerId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Backend_getGrainStorageUsage_Params) HasOwnerId() bool {
	return s.Struct.HasPtr(0)
}

func (s Backend_getGrainStorageUsage_Params) OwnerIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Backend_getGrainStorageUsage_Params) SetOwnerId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Backend_getGrainStorageUsage_Params) GrainId() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Backend_getGrainStorageUsage_Params) HasGrainId() bool {
	return s.Struct.HasPtr(1)
}

func (s Backend_getGrainStorageUsage_Params) GrainIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Backend_getGrainStorageUsage_Params) SetGrainId(v string) error {
	return s.Struct.SetText(1, v)
}

// Backend_getGrainStorageUsage_Params_List is a list of Backend_getGrainStorageUsage_Params.
type Backend_getGrainStorageUsage_Params_List struct{ capnp.List }

// NewBackend_getGrainStorageUsage_Params creates a new list of Backend_getGrainStorageUsage_Params.
func NewBackend_getGrainStorageUsage_Params_List(s *capnp.Segment, sz int32) (Backend_getGrainStorageUsage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Backend_getGrainStorageUsage_Params_List{l}, err
}

func (s Backend_getGrainStorageUsage_Params_List) At(i int) Backend_getGrainStorageUsage_Params {
	return Backend_getGrainStorageUsage_Params{s.List.Struct(i)}
}

func (s Backend_getGrainStorageUsage_Params_List) Set(i int, v Backend_getGrainStorageUsage_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_getGrainStorageUsage_Params_List) String() string {
	str, _ := text.MarshalList(0xe06fe4e0d4e93178, s.List)
	return str
}

// Backend_getGrainStorageUsage_Params_Future is a wrapper for a Backend_getGrainStorageUsage_Params promised by a client call.
type Backend_getGrainStorageUsage_Params_Future struct{ *capnp.Future }

func (p Backend_getGrainStorageUsage_Params_Future) Struct() (Backend_getGrainStorageUsage_Params, error) {
	s, err := p.Future.Struct()
	return Backend_getGrainStorageUsage_Params{s}, err
}

type Backend_getGrainStorageUsage_Results struct{ capnp.Struct }

// Backend_getGrainStorageUsage_Results_TypeID is the unique identifier for the type Backend_getGrainStorageUsage_Results.
const Backend_getGrainStorageUsage_Results_TypeID = 0x809d3d6d45c4c37d

func NewBackend_getGrainStorageUsage_Results(s *capnp.Segment) (Backend_getGrainStorageUsage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getGrainStorageUsage_Results{st}, err
}

func NewRootBackend_getGrainStorageUsage_Results(s *capnp.Segment) (Backend_getGrainStorageUsage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Backend_getGrainStorageUsage_Results{st}, err
}

func ReadRootBackend_getGrainStorageUsage_Results(msg *capnp.Message) (Backend_getGrainStorageUsage_Results, error) {
	root, err := msg.Root()
	return Backend_getGrainStorageUsage_Results{root.Struct()}, err
}

func (s Backend_getGrainStorageUsage_Results) String() string {
	str, _ := text.Marshal(0x809d3d6d45c4c37d, s.Struct)
	return str
}

func (s Backend_getGrainStorageUsage_Results) Size() uint64 {
	return s.Struct.Uint64(0)
}

func (s Backend_getGrainStorageUsage_Results) SetSize(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Backend_getGrainStorageUsage_Results_List is a list of Backend_getGrainStorageUsage_Results.
type Backend_getGrainStorageUsage_Results_List struct{ capnp.List }

// NewBackend_getGrainStorageUsage_Results creates a new list of Backend_getGrainStorageUsage_Results.
func NewBackend_getGrainStorageUsage_Results_List(s *capnp.Segment, sz int32) (Backend_getGrainStorageUsage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Backend_getGrainStorageUsage_Results_List{l}, err
}

func (s Backend_getGrainStorageUsage_Results_List) At(i int) Backend_getGrainStorageUsage_Results {
	return Backend_getGrainStorageUsage_Results{s.List.Struct(i)}
}

func (s Backend_getGrainStorageUsage_Results_List) Set(i int, v Backend_getGrainStorageUsage_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Backend_getGrainStorageUsage_Results_List) String() string {
	str, _ := text.MarshalList(0x809d3d6d45c4c37d, s.List)
	return str
}

// Backend_getGrainStorageUsage_Results_Future is a wrapper for a Backend_getGrainStorageUsage_Results promised by a client call.
type Backend_getGrainStorageUsage_Results_Future struct{ *capnp.Future }

func (p Backend_getGrainStorageUsage_Results_Future) Struct() (Backend_getGrainStorageUsage_Results, error) {
	s, err := p.Future.Struct()
	return Backend_getGrainStorageUsage_Results{s}, err
}

type GatewayRouter struct{ Client *capnp.Client }

// GatewayRouter_TypeID is the unique identifier for the type GatewayRouter.
const GatewayRouter_TypeID = 0xc3a9d72077d3a1da

func (c GatewayRouter) OpenUiSession(ctx context.Context, params func(GatewayRouter_openUiSession_Params) error) (GatewayRouter_openUiSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      0,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "openUiSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_openUiSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return GatewayRouter_openUiSession_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) OpenApiSession(ctx context.Context, params func(GatewayRouter_openApiSession_Params) error) (GatewayRouter_openApiSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      1,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "openApiSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_openApiSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return GatewayRouter_openApiSession_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) GetStaticAsset(ctx context.Context, params func(GatewayRouter_getStaticAsset_Params) error) (GatewayRouter_getStaticAsset_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      2,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getStaticAsset",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_getStaticAsset_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return GatewayRouter_getStaticAsset_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) GetStaticPublishingHost(ctx context.Context, params func(GatewayRouter_getStaticPublishingHost_Params) error) (GatewayRouter_getStaticPublishingHost_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      3,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getStaticPublishingHost",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_getStaticPublishingHost_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return GatewayRouter_getStaticPublishingHost_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) RouteForeignHostname(ctx context.Context, params func(GatewayRouter_routeForeignHostname_Params) error) (GatewayRouter_routeForeignHostname_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      4,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "routeForeignHostname",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_routeForeignHostname_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return GatewayRouter_routeForeignHostname_Results_Future{Future: ans.Future()}, release
}
func (c GatewayRouter) SubscribeTlsKeys(ctx context.Context, params func(GatewayRouter_subscribeTlsKeys_Params) error) (GatewayRouter_subscribeTlsKeys_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      5,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "subscribeTlsKeys",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_subscribeTlsKeys_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return GatewayRouter_subscribeTlsKeys_Results_Future{Future: ans.Future()}, release
}

// A GatewayRouter_Server is a GatewayRouter with a local implementation.
type GatewayRouter_Server interface {
	OpenUiSession(context.Context, GatewayRouter_openUiSession) error

	OpenApiSession(context.Context, GatewayRouter_openApiSession) error

	GetStaticAsset(context.Context, GatewayRouter_getStaticAsset) error

	GetStaticPublishingHost(context.Context, GatewayRouter_getStaticPublishingHost) error

	RouteForeignHostname(context.Context, GatewayRouter_routeForeignHostname) error

	SubscribeTlsKeys(context.Context, GatewayRouter_subscribeTlsKeys) error
}

// GatewayRouter_NewServer creates a new Server from an implementation of GatewayRouter_Server.
func GatewayRouter_NewServer(s GatewayRouter_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(GatewayRouter_Methods(nil, s), s, c, policy)
}

// GatewayRouter_ServerToClient creates a new Client from an implementation of GatewayRouter_Server.
// The caller is responsible for calling Release on the returned Client.
func GatewayRouter_ServerToClient(s GatewayRouter_Server, policy *server.Policy) GatewayRouter {
	return GatewayRouter{Client: capnp.NewClient(GatewayRouter_NewServer(s, policy))}
}

// GatewayRouter_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func GatewayRouter_Methods(methods []server.Method, s GatewayRouter_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 6)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      0,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "openUiSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OpenUiSession(ctx, GatewayRouter_openUiSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      1,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "openApiSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OpenApiSession(ctx, GatewayRouter_openApiSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      2,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getStaticAsset",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetStaticAsset(ctx, GatewayRouter_getStaticAsset{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      3,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "getStaticPublishingHost",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetStaticPublishingHost(ctx, GatewayRouter_getStaticPublishingHost{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      4,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "routeForeignHostname",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.RouteForeignHostname(ctx, GatewayRouter_routeForeignHostname{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc3a9d72077d3a1da,
			MethodID:      5,
			InterfaceName: "backend.capnp:GatewayRouter",
			MethodName:    "subscribeTlsKeys",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SubscribeTlsKeys(ctx, GatewayRouter_subscribeTlsKeys{call})
		},
	})

	return methods
}

// GatewayRouter_openUiSession holds the state for a server call to GatewayRouter.openUiSession.
// See server.Call for documentation.
type GatewayRouter_openUiSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_openUiSession) Args() GatewayRouter_openUiSession_Params {
	return GatewayRouter_openUiSession_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c GatewayRouter_openUiSession) AllocResults() (GatewayRouter_openUiSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_openUiSession_Results{Struct: r}, err
}

// GatewayRouter_openApiSession holds the state for a server call to GatewayRouter.openApiSession.
// See server.Call for documentation.
type GatewayRouter_openApiSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_openApiSession) Args() GatewayRouter_openApiSession_Params {
	return GatewayRouter_openApiSession_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c GatewayRouter_openApiSession) AllocResults() (GatewayRouter_openApiSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_openApiSession_Results{Struct: r}, err
}

// GatewayRouter_getStaticAsset holds the state for a server call to GatewayRouter.getStaticAsset.
// See server.Call for documentation.
type GatewayRouter_getStaticAsset struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_getStaticAsset) Args() GatewayRouter_getStaticAsset_Params {
	return GatewayRouter_getStaticAsset_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c GatewayRouter_getStaticAsset) AllocResults() (GatewayRouter_getStaticAsset_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GatewayRouter_getStaticAsset_Results{Struct: r}, err
}

// GatewayRouter_getStaticPublishingHost holds the state for a server call to GatewayRouter.getStaticPublishingHost.
// See server.Call for documentation.
type GatewayRouter_getStaticPublishingHost struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_getStaticPublishingHost) Args() GatewayRouter_getStaticPublishingHost_Params {
	return GatewayRouter_getStaticPublishingHost_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c GatewayRouter_getStaticPublishingHost) AllocResults() (GatewayRouter_getStaticPublishingHost_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticPublishingHost_Results{Struct: r}, err
}

// GatewayRouter_routeForeignHostname holds the state for a server call to GatewayRouter.routeForeignHostname.
// See server.Call for documentation.
type GatewayRouter_routeForeignHostname struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_routeForeignHostname) Args() GatewayRouter_routeForeignHostname_Params {
	return GatewayRouter_routeForeignHostname_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c GatewayRouter_routeForeignHostname) AllocResults() (GatewayRouter_routeForeignHostname_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_routeForeignHostname_Results{Struct: r}, err
}

// GatewayRouter_subscribeTlsKeys holds the state for a server call to GatewayRouter.subscribeTlsKeys.
// See server.Call for documentation.
type GatewayRouter_subscribeTlsKeys struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_subscribeTlsKeys) Args() GatewayRouter_subscribeTlsKeys_Params {
	return GatewayRouter_subscribeTlsKeys_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c GatewayRouter_subscribeTlsKeys) AllocResults() (GatewayRouter_subscribeTlsKeys_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_subscribeTlsKeys_Results{Struct: r}, err
}

type GatewayRouter_ForeignHostnameInfo struct{ capnp.Struct }
type GatewayRouter_ForeignHostnameInfo_Which uint16

const (
	GatewayRouter_ForeignHostnameInfo_Which_unknown          GatewayRouter_ForeignHostnameInfo_Which = 0
	GatewayRouter_ForeignHostnameInfo_Which_staticPublishing GatewayRouter_ForeignHostnameInfo_Which = 1
	GatewayRouter_ForeignHostnameInfo_Which_standalone       GatewayRouter_ForeignHostnameInfo_Which = 2
)

func (w GatewayRouter_ForeignHostnameInfo_Which) String() string {
	const s = "unknownstaticPublishingstandalone"
	switch w {
	case GatewayRouter_ForeignHostnameInfo_Which_unknown:
		return s[0:7]
	case GatewayRouter_ForeignHostnameInfo_Which_staticPublishing:
		return s[7:23]
	case GatewayRouter_ForeignHostnameInfo_Which_standalone:
		return s[23:33]

	}
	return "GatewayRouter_ForeignHostnameInfo_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// GatewayRouter_ForeignHostnameInfo_TypeID is the unique identifier for the type GatewayRouter_ForeignHostnameInfo.
const GatewayRouter_ForeignHostnameInfo_TypeID = 0xc70587321bf0dd8b

func NewGatewayRouter_ForeignHostnameInfo(s *capnp.Segment) (GatewayRouter_ForeignHostnameInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GatewayRouter_ForeignHostnameInfo{st}, err
}

func NewRootGatewayRouter_ForeignHostnameInfo(s *capnp.Segment) (GatewayRouter_ForeignHostnameInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GatewayRouter_ForeignHostnameInfo{st}, err
}

func ReadRootGatewayRouter_ForeignHostnameInfo(msg *capnp.Message) (GatewayRouter_ForeignHostnameInfo, error) {
	root, err := msg.Root()
	return GatewayRouter_ForeignHostnameInfo{root.Struct()}, err
}

func (s GatewayRouter_ForeignHostnameInfo) String() string {
	str, _ := text.Marshal(0xc70587321bf0dd8b, s.Struct)
	return str
}

func (s GatewayRouter_ForeignHostnameInfo) Which() GatewayRouter_ForeignHostnameInfo_Which {
	return GatewayRouter_ForeignHostnameInfo_Which(s.Struct.Uint16(0))
}
func (s GatewayRouter_ForeignHostnameInfo) SetUnknown() {
	s.Struct.SetUint16(0, 0)

}

func (s GatewayRouter_ForeignHostnameInfo) StaticPublishing() (string, error) {
	if s.Struct.Uint16(0) != 1 {
		panic("Which() != staticPublishing")
	}
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_ForeignHostnameInfo) HasStaticPublishing() bool {
	if s.Struct.Uint16(0) != 1 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_ForeignHostnameInfo) StaticPublishingBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_ForeignHostnameInfo) SetStaticPublishing(v string) error {
	s.Struct.SetUint16(0, 1)
	return s.Struct.SetText(0, v)
}

func (s GatewayRouter_ForeignHostnameInfo) SetStandalone() {
	s.Struct.SetUint16(0, 2)

}

func (s GatewayRouter_ForeignHostnameInfo) TtlSeconds() uint32 {
	return s.Struct.Uint32(4)
}

func (s GatewayRouter_ForeignHostnameInfo) SetTtlSeconds(v uint32) {
	s.Struct.SetUint32(4, v)
}

// GatewayRouter_ForeignHostnameInfo_List is a list of GatewayRouter_ForeignHostnameInfo.
type GatewayRouter_ForeignHostnameInfo_List struct{ capnp.List }

// NewGatewayRouter_ForeignHostnameInfo creates a new list of GatewayRouter_ForeignHostnameInfo.
func NewGatewayRouter_ForeignHostnameInfo_List(s *capnp.Segment, sz int32) (GatewayRouter_ForeignHostnameInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return GatewayRouter_ForeignHostnameInfo_List{l}, err
}

func (s GatewayRouter_ForeignHostnameInfo_List) At(i int) GatewayRouter_ForeignHostnameInfo {
	return GatewayRouter_ForeignHostnameInfo{s.List.Struct(i)}
}

func (s GatewayRouter_ForeignHostnameInfo_List) Set(i int, v GatewayRouter_ForeignHostnameInfo) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_ForeignHostnameInfo_List) String() string {
	str, _ := text.MarshalList(0xc70587321bf0dd8b, s.List)
	return str
}

// GatewayRouter_ForeignHostnameInfo_Future is a wrapper for a GatewayRouter_ForeignHostnameInfo promised by a client call.
type GatewayRouter_ForeignHostnameInfo_Future struct{ *capnp.Future }

func (p GatewayRouter_ForeignHostnameInfo_Future) Struct() (GatewayRouter_ForeignHostnameInfo, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_ForeignHostnameInfo{s}, err
}

type GatewayRouter_TlsKeyCallback struct{ Client *capnp.Client }

// GatewayRouter_TlsKeyCallback_TypeID is the unique identifier for the type GatewayRouter_TlsKeyCallback.
const GatewayRouter_TlsKeyCallback_TypeID = 0xa37265bba0f4c58f

func (c GatewayRouter_TlsKeyCallback) SetKeys(ctx context.Context, params func(GatewayRouter_TlsKeyCallback_setKeys_Params) error) (GatewayRouter_TlsKeyCallback_setKeys_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xa37265bba0f4c58f,
			MethodID:      0,
			InterfaceName: "backend.capnp:GatewayRouter.TlsKeyCallback",
			MethodName:    "setKeys",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(GatewayRouter_TlsKeyCallback_setKeys_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return GatewayRouter_TlsKeyCallback_setKeys_Results_Future{Future: ans.Future()}, release
}

// A GatewayRouter_TlsKeyCallback_Server is a GatewayRouter_TlsKeyCallback with a local implementation.
type GatewayRouter_TlsKeyCallback_Server interface {
	SetKeys(context.Context, GatewayRouter_TlsKeyCallback_setKeys) error
}

// GatewayRouter_TlsKeyCallback_NewServer creates a new Server from an implementation of GatewayRouter_TlsKeyCallback_Server.
func GatewayRouter_TlsKeyCallback_NewServer(s GatewayRouter_TlsKeyCallback_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(GatewayRouter_TlsKeyCallback_Methods(nil, s), s, c, policy)
}

// GatewayRouter_TlsKeyCallback_ServerToClient creates a new Client from an implementation of GatewayRouter_TlsKeyCallback_Server.
// The caller is responsible for calling Release on the returned Client.
func GatewayRouter_TlsKeyCallback_ServerToClient(s GatewayRouter_TlsKeyCallback_Server, policy *server.Policy) GatewayRouter_TlsKeyCallback {
	return GatewayRouter_TlsKeyCallback{Client: capnp.NewClient(GatewayRouter_TlsKeyCallback_NewServer(s, policy))}
}

// GatewayRouter_TlsKeyCallback_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func GatewayRouter_TlsKeyCallback_Methods(methods []server.Method, s GatewayRouter_TlsKeyCallback_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa37265bba0f4c58f,
			MethodID:      0,
			InterfaceName: "backend.capnp:GatewayRouter.TlsKeyCallback",
			MethodName:    "setKeys",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SetKeys(ctx, GatewayRouter_TlsKeyCallback_setKeys{call})
		},
	})

	return methods
}

// GatewayRouter_TlsKeyCallback_setKeys holds the state for a server call to GatewayRouter_TlsKeyCallback.setKeys.
// See server.Call for documentation.
type GatewayRouter_TlsKeyCallback_setKeys struct {
	*server.Call
}

// Args returns the call's arguments.
func (c GatewayRouter_TlsKeyCallback_setKeys) Args() GatewayRouter_TlsKeyCallback_setKeys_Params {
	return GatewayRouter_TlsKeyCallback_setKeys_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c GatewayRouter_TlsKeyCallback_setKeys) AllocResults() (GatewayRouter_TlsKeyCallback_setKeys_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_TlsKeyCallback_setKeys_Results{Struct: r}, err
}

type GatewayRouter_TlsKeyCallback_setKeys_Params struct{ capnp.Struct }

// GatewayRouter_TlsKeyCallback_setKeys_Params_TypeID is the unique identifier for the type GatewayRouter_TlsKeyCallback_setKeys_Params.
const GatewayRouter_TlsKeyCallback_setKeys_Params_TypeID = 0xbb33202722933fa6

func NewGatewayRouter_TlsKeyCallback_setKeys_Params(s *capnp.Segment) (GatewayRouter_TlsKeyCallback_setKeys_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_TlsKeyCallback_setKeys_Params{st}, err
}

func NewRootGatewayRouter_TlsKeyCallback_setKeys_Params(s *capnp.Segment) (GatewayRouter_TlsKeyCallback_setKeys_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_TlsKeyCallback_setKeys_Params{st}, err
}

func ReadRootGatewayRouter_TlsKeyCallback_setKeys_Params(msg *capnp.Message) (GatewayRouter_TlsKeyCallback_setKeys_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_TlsKeyCallback_setKeys_Params{root.Struct()}, err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) String() string {
	str, _ := text.Marshal(0xbb33202722933fa6, s.Struct)
	return str
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) HasKey() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) CertChain() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) HasCertChain() bool {
	return s.Struct.HasPtr(1)
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) CertChainBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params) SetCertChain(v string) error {
	return s.Struct.SetText(1, v)
}

// GatewayRouter_TlsKeyCallback_setKeys_Params_List is a list of GatewayRouter_TlsKeyCallback_setKeys_Params.
type GatewayRouter_TlsKeyCallback_setKeys_Params_List struct{ capnp.List }

// NewGatewayRouter_TlsKeyCallback_setKeys_Params creates a new list of GatewayRouter_TlsKeyCallback_setKeys_Params.
func NewGatewayRouter_TlsKeyCallback_setKeys_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_TlsKeyCallback_setKeys_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return GatewayRouter_TlsKeyCallback_setKeys_Params_List{l}, err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params_List) At(i int) GatewayRouter_TlsKeyCallback_setKeys_Params {
	return GatewayRouter_TlsKeyCallback_setKeys_Params{s.List.Struct(i)}
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params_List) Set(i int, v GatewayRouter_TlsKeyCallback_setKeys_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Params_List) String() string {
	str, _ := text.MarshalList(0xbb33202722933fa6, s.List)
	return str
}

// GatewayRouter_TlsKeyCallback_setKeys_Params_Future is a wrapper for a GatewayRouter_TlsKeyCallback_setKeys_Params promised by a client call.
type GatewayRouter_TlsKeyCallback_setKeys_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_TlsKeyCallback_setKeys_Params_Future) Struct() (GatewayRouter_TlsKeyCallback_setKeys_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_TlsKeyCallback_setKeys_Params{s}, err
}

type GatewayRouter_TlsKeyCallback_setKeys_Results struct{ capnp.Struct }

// GatewayRouter_TlsKeyCallback_setKeys_Results_TypeID is the unique identifier for the type GatewayRouter_TlsKeyCallback_setKeys_Results.
const GatewayRouter_TlsKeyCallback_setKeys_Results_TypeID = 0xd3961c234a15cdf1

func NewGatewayRouter_TlsKeyCallback_setKeys_Results(s *capnp.Segment) (GatewayRouter_TlsKeyCallback_setKeys_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_TlsKeyCallback_setKeys_Results{st}, err
}

func NewRootGatewayRouter_TlsKeyCallback_setKeys_Results(s *capnp.Segment) (GatewayRouter_TlsKeyCallback_setKeys_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_TlsKeyCallback_setKeys_Results{st}, err
}

func ReadRootGatewayRouter_TlsKeyCallback_setKeys_Results(msg *capnp.Message) (GatewayRouter_TlsKeyCallback_setKeys_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_TlsKeyCallback_setKeys_Results{root.Struct()}, err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Results) String() string {
	str, _ := text.Marshal(0xd3961c234a15cdf1, s.Struct)
	return str
}

// GatewayRouter_TlsKeyCallback_setKeys_Results_List is a list of GatewayRouter_TlsKeyCallback_setKeys_Results.
type GatewayRouter_TlsKeyCallback_setKeys_Results_List struct{ capnp.List }

// NewGatewayRouter_TlsKeyCallback_setKeys_Results creates a new list of GatewayRouter_TlsKeyCallback_setKeys_Results.
func NewGatewayRouter_TlsKeyCallback_setKeys_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_TlsKeyCallback_setKeys_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return GatewayRouter_TlsKeyCallback_setKeys_Results_List{l}, err
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Results_List) At(i int) GatewayRouter_TlsKeyCallback_setKeys_Results {
	return GatewayRouter_TlsKeyCallback_setKeys_Results{s.List.Struct(i)}
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Results_List) Set(i int, v GatewayRouter_TlsKeyCallback_setKeys_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_TlsKeyCallback_setKeys_Results_List) String() string {
	str, _ := text.MarshalList(0xd3961c234a15cdf1, s.List)
	return str
}

// GatewayRouter_TlsKeyCallback_setKeys_Results_Future is a wrapper for a GatewayRouter_TlsKeyCallback_setKeys_Results promised by a client call.
type GatewayRouter_TlsKeyCallback_setKeys_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_TlsKeyCallback_setKeys_Results_Future) Struct() (GatewayRouter_TlsKeyCallback_setKeys_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_TlsKeyCallback_setKeys_Results{s}, err
}

type GatewayRouter_openUiSession_Params struct{ capnp.Struct }

// GatewayRouter_openUiSession_Params_TypeID is the unique identifier for the type GatewayRouter_openUiSession_Params.
const GatewayRouter_openUiSession_Params_TypeID = 0x83ffc259cf8da847

func NewGatewayRouter_openUiSession_Params(s *capnp.Segment) (GatewayRouter_openUiSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_openUiSession_Params{st}, err
}

func NewRootGatewayRouter_openUiSession_Params(s *capnp.Segment) (GatewayRouter_openUiSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_openUiSession_Params{st}, err
}

func ReadRootGatewayRouter_openUiSession_Params(msg *capnp.Message) (GatewayRouter_openUiSession_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_openUiSession_Params{root.Struct()}, err
}

func (s GatewayRouter_openUiSession_Params) String() string {
	str, _ := text.Marshal(0x83ffc259cf8da847, s.Struct)
	return str
}

func (s GatewayRouter_openUiSession_Params) SessionCookie() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_openUiSession_Params) HasSessionCookie() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_openUiSession_Params) SessionCookieBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_openUiSession_Params) SetSessionCookie(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GatewayRouter_openUiSession_Params) Params() (websession.WebSession_Params, error) {
	p, err := s.Struct.Ptr(1)
	return websession.WebSession_Params{Struct: p.Struct()}, err
}

func (s GatewayRouter_openUiSession_Params) HasParams() bool {
	return s.Struct.HasPtr(1)
}

func (s GatewayRouter_openUiSession_Params) SetParams(v websession.WebSession_Params) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated websession.WebSession_Params struct, preferring placement in s's segment.
func (s GatewayRouter_openUiSession_Params) NewParams() (websession.WebSession_Params, error) {
	ss, err := websession.NewWebSession_Params(s.Struct.Segment())
	if err != nil {
		return websession.WebSession_Params{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// GatewayRouter_openUiSession_Params_List is a list of GatewayRouter_openUiSession_Params.
type GatewayRouter_openUiSession_Params_List struct{ capnp.List }

// NewGatewayRouter_openUiSession_Params creates a new list of GatewayRouter_openUiSession_Params.
func NewGatewayRouter_openUiSession_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_openUiSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return GatewayRouter_openUiSession_Params_List{l}, err
}

func (s GatewayRouter_openUiSession_Params_List) At(i int) GatewayRouter_openUiSession_Params {
	return GatewayRouter_openUiSession_Params{s.List.Struct(i)}
}

func (s GatewayRouter_openUiSession_Params_List) Set(i int, v GatewayRouter_openUiSession_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_openUiSession_Params_List) String() string {
	str, _ := text.MarshalList(0x83ffc259cf8da847, s.List)
	return str
}

// GatewayRouter_openUiSession_Params_Future is a wrapper for a GatewayRouter_openUiSession_Params promised by a client call.
type GatewayRouter_openUiSession_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_openUiSession_Params_Future) Struct() (GatewayRouter_openUiSession_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_openUiSession_Params{s}, err
}

func (p GatewayRouter_openUiSession_Params_Future) Params() websession.WebSession_Params_Future {
	return websession.WebSession_Params_Future{Future: p.Future.Field(1, nil)}
}

type GatewayRouter_openUiSession_Results struct{ capnp.Struct }

// GatewayRouter_openUiSession_Results_TypeID is the unique identifier for the type GatewayRouter_openUiSession_Results.
const GatewayRouter_openUiSession_Results_TypeID = 0xbd05d1a434a60c2a

func NewGatewayRouter_openUiSession_Results(s *capnp.Segment) (GatewayRouter_openUiSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_openUiSession_Results{st}, err
}

func NewRootGatewayRouter_openUiSession_Results(s *capnp.Segment) (GatewayRouter_openUiSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GatewayRouter_openUiSession_Results{st}, err
}

func ReadRootGatewayRouter_openUiSession_Results(msg *capnp.Message) (GatewayRouter_openUiSession_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_openUiSession_Results{root.Struct()}, err
}

func (s GatewayRouter_openUiSession_Results) String() string {
	str, _ := text.Marshal(0xbd05d1a434a60c2a, s.Struct)
	return str
}

func (s GatewayRouter_openUiSession_Results) Session() websession.WebSession {
	p, _ := s.Struct.Ptr(0)
	return websession.WebSession{Client: p.Interface().Client()}
}

func (s GatewayRouter_openUiSession_Results) HasSession() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_openUiSession_Results) SetSession(v websession.WebSession) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s GatewayRouter_openUiSession_Results) LoadingIndicator() util.Handle {
	p, _ := s.Struct.Ptr(1)
	return util.Handle{Client: p.Interface().Client()}
}

func (s GatewayRouter_openUiSession_Results) HasLoadingIndicator() bool {
	return s.Struct.HasPtr(1)
}

func (s GatewayRouter_openUiSession_Results) SetLoadingIndicator(v util.Handle) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

// GatewayRouter_openUiSession_Results_List is a list of GatewayRouter_openUiSession_Results.
type GatewayRouter_openUiSession_Results_List struct{ capnp.List }

// NewGatewayRouter_openUiSession_Results creates a new list of GatewayRouter_openUiSession_Results.
func NewGatewayRouter_openUiSession_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_openUiSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return GatewayRouter_openUiSession_Results_List{l}, err
}

func (s GatewayRouter_openUiSession_Results_List) At(i int) GatewayRouter_openUiSession_Results {
	return GatewayRouter_openUiSession_Results{s.List.Struct(i)}
}

func (s GatewayRouter_openUiSession_Results_List) Set(i int, v GatewayRouter_openUiSession_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_openUiSession_Results_List) String() string {
	str, _ := text.MarshalList(0xbd05d1a434a60c2a, s.List)
	return str
}

// GatewayRouter_openUiSession_Results_Future is a wrapper for a GatewayRouter_openUiSession_Results promised by a client call.
type GatewayRouter_openUiSession_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_openUiSession_Results_Future) Struct() (GatewayRouter_openUiSession_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_openUiSession_Results{s}, err
}

func (p GatewayRouter_openUiSession_Results_Future) Session() websession.WebSession {
	return websession.WebSession{Client: p.Future.Field(0, nil).Client()}
}

func (p GatewayRouter_openUiSession_Results_Future) LoadingIndicator() util.Handle {
	return util.Handle{Client: p.Future.Field(1, nil).Client()}
}

type GatewayRouter_openApiSession_Params struct{ capnp.Struct }

// GatewayRouter_openApiSession_Params_TypeID is the unique identifier for the type GatewayRouter_openApiSession_Params.
const GatewayRouter_openApiSession_Params_TypeID = 0x9a5778b8e7e9745a

func NewGatewayRouter_openApiSession_Params(s *capnp.Segment) (GatewayRouter_openApiSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_openApiSession_Params{st}, err
}

func NewRootGatewayRouter_openApiSession_Params(s *capnp.Segment) (GatewayRouter_openApiSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_openApiSession_Params{st}, err
}

func ReadRootGatewayRouter_openApiSession_Params(msg *capnp.Message) (GatewayRouter_openApiSession_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_openApiSession_Params{root.Struct()}, err
}

func (s GatewayRouter_openApiSession_Params) String() string {
	str, _ := text.Marshal(0x9a5778b8e7e9745a, s.Struct)
	return str
}

func (s GatewayRouter_openApiSession_Params) ApiToken() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_openApiSession_Params) HasApiToken() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_openApiSession_Params) ApiTokenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_openApiSession_Params) SetApiToken(v string) error {
	return s.Struct.SetText(0, v)
}

// GatewayRouter_openApiSession_Params_List is a list of GatewayRouter_openApiSession_Params.
type GatewayRouter_openApiSession_Params_List struct{ capnp.List }

// NewGatewayRouter_openApiSession_Params creates a new list of GatewayRouter_openApiSession_Params.
func NewGatewayRouter_openApiSession_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_openApiSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GatewayRouter_openApiSession_Params_List{l}, err
}

func (s GatewayRouter_openApiSession_Params_List) At(i int) GatewayRouter_openApiSession_Params {
	return GatewayRouter_openApiSession_Params{s.List.Struct(i)}
}

func (s GatewayRouter_openApiSession_Params_List) Set(i int, v GatewayRouter_openApiSession_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_openApiSession_Params_List) String() string {
	str, _ := text.MarshalList(0x9a5778b8e7e9745a, s.List)
	return str
}

// GatewayRouter_openApiSession_Params_Future is a wrapper for a GatewayRouter_openApiSession_Params promised by a client call.
type GatewayRouter_openApiSession_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_openApiSession_Params_Future) Struct() (GatewayRouter_openApiSession_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_openApiSession_Params{s}, err
}

type GatewayRouter_openApiSession_Results struct{ capnp.Struct }

// GatewayRouter_openApiSession_Results_TypeID is the unique identifier for the type GatewayRouter_openApiSession_Results.
const GatewayRouter_openApiSession_Results_TypeID = 0xcc8a20b16569f588

func NewGatewayRouter_openApiSession_Results(s *capnp.Segment) (GatewayRouter_openApiSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_openApiSession_Results{st}, err
}

func NewRootGatewayRouter_openApiSession_Results(s *capnp.Segment) (GatewayRouter_openApiSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_openApiSession_Results{st}, err
}

func ReadRootGatewayRouter_openApiSession_Results(msg *capnp.Message) (GatewayRouter_openApiSession_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_openApiSession_Results{root.Struct()}, err
}

func (s GatewayRouter_openApiSession_Results) String() string {
	str, _ := text.Marshal(0xcc8a20b16569f588, s.Struct)
	return str
}

func (s GatewayRouter_openApiSession_Results) Session() apisession.ApiSession {
	p, _ := s.Struct.Ptr(0)
	return apisession.ApiSession{Client: p.Interface().Client()}
}

func (s GatewayRouter_openApiSession_Results) HasSession() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_openApiSession_Results) SetSession(v apisession.ApiSession) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// GatewayRouter_openApiSession_Results_List is a list of GatewayRouter_openApiSession_Results.
type GatewayRouter_openApiSession_Results_List struct{ capnp.List }

// NewGatewayRouter_openApiSession_Results creates a new list of GatewayRouter_openApiSession_Results.
func NewGatewayRouter_openApiSession_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_openApiSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GatewayRouter_openApiSession_Results_List{l}, err
}

func (s GatewayRouter_openApiSession_Results_List) At(i int) GatewayRouter_openApiSession_Results {
	return GatewayRouter_openApiSession_Results{s.List.Struct(i)}
}

func (s GatewayRouter_openApiSession_Results_List) Set(i int, v GatewayRouter_openApiSession_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_openApiSession_Results_List) String() string {
	str, _ := text.MarshalList(0xcc8a20b16569f588, s.List)
	return str
}

// GatewayRouter_openApiSession_Results_Future is a wrapper for a GatewayRouter_openApiSession_Results promised by a client call.
type GatewayRouter_openApiSession_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_openApiSession_Results_Future) Struct() (GatewayRouter_openApiSession_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_openApiSession_Results{s}, err
}

func (p GatewayRouter_openApiSession_Results_Future) Session() apisession.ApiSession {
	return apisession.ApiSession{Client: p.Future.Field(0, nil).Client()}
}

type GatewayRouter_getStaticAsset_Params struct{ capnp.Struct }

// GatewayRouter_getStaticAsset_Params_TypeID is the unique identifier for the type GatewayRouter_getStaticAsset_Params.
const GatewayRouter_getStaticAsset_Params_TypeID = 0xe4d0899af24786be

func NewGatewayRouter_getStaticAsset_Params(s *capnp.Segment) (GatewayRouter_getStaticAsset_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticAsset_Params{st}, err
}

func NewRootGatewayRouter_getStaticAsset_Params(s *capnp.Segment) (GatewayRouter_getStaticAsset_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticAsset_Params{st}, err
}

func ReadRootGatewayRouter_getStaticAsset_Params(msg *capnp.Message) (GatewayRouter_getStaticAsset_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_getStaticAsset_Params{root.Struct()}, err
}

func (s GatewayRouter_getStaticAsset_Params) String() string {
	str, _ := text.Marshal(0xe4d0899af24786be, s.Struct)
	return str
}

func (s GatewayRouter_getStaticAsset_Params) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_getStaticAsset_Params) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_getStaticAsset_Params) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_getStaticAsset_Params) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

// GatewayRouter_getStaticAsset_Params_List is a list of GatewayRouter_getStaticAsset_Params.
type GatewayRouter_getStaticAsset_Params_List struct{ capnp.List }

// NewGatewayRouter_getStaticAsset_Params creates a new list of GatewayRouter_getStaticAsset_Params.
func NewGatewayRouter_getStaticAsset_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_getStaticAsset_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GatewayRouter_getStaticAsset_Params_List{l}, err
}

func (s GatewayRouter_getStaticAsset_Params_List) At(i int) GatewayRouter_getStaticAsset_Params {
	return GatewayRouter_getStaticAsset_Params{s.List.Struct(i)}
}

func (s GatewayRouter_getStaticAsset_Params_List) Set(i int, v GatewayRouter_getStaticAsset_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_getStaticAsset_Params_List) String() string {
	str, _ := text.MarshalList(0xe4d0899af24786be, s.List)
	return str
}

// GatewayRouter_getStaticAsset_Params_Future is a wrapper for a GatewayRouter_getStaticAsset_Params promised by a client call.
type GatewayRouter_getStaticAsset_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_getStaticAsset_Params_Future) Struct() (GatewayRouter_getStaticAsset_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getStaticAsset_Params{s}, err
}

type GatewayRouter_getStaticAsset_Results struct{ capnp.Struct }

// GatewayRouter_getStaticAsset_Results_TypeID is the unique identifier for the type GatewayRouter_getStaticAsset_Results.
const GatewayRouter_getStaticAsset_Results_TypeID = 0xfd22e2b5cb138bb2

func NewGatewayRouter_getStaticAsset_Results(s *capnp.Segment) (GatewayRouter_getStaticAsset_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GatewayRouter_getStaticAsset_Results{st}, err
}

func NewRootGatewayRouter_getStaticAsset_Results(s *capnp.Segment) (GatewayRouter_getStaticAsset_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GatewayRouter_getStaticAsset_Results{st}, err
}

func ReadRootGatewayRouter_getStaticAsset_Results(msg *capnp.Message) (GatewayRouter_getStaticAsset_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_getStaticAsset_Results{root.Struct()}, err
}

func (s GatewayRouter_getStaticAsset_Results) String() string {
	str, _ := text.Marshal(0xfd22e2b5cb138bb2, s.Struct)
	return str
}

func (s GatewayRouter_getStaticAsset_Results) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s GatewayRouter_getStaticAsset_Results) HasContent() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_getStaticAsset_Results) SetContent(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s GatewayRouter_getStaticAsset_Results) Type() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GatewayRouter_getStaticAsset_Results) HasType() bool {
	return s.Struct.HasPtr(1)
}

func (s GatewayRouter_getStaticAsset_Results) TypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GatewayRouter_getStaticAsset_Results) SetType(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GatewayRouter_getStaticAsset_Results) Encoding() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GatewayRouter_getStaticAsset_Results) HasEncoding() bool {
	return s.Struct.HasPtr(2)
}

func (s GatewayRouter_getStaticAsset_Results) EncodingBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GatewayRouter_getStaticAsset_Results) SetEncoding(v string) error {
	return s.Struct.SetText(2, v)
}

// GatewayRouter_getStaticAsset_Results_List is a list of GatewayRouter_getStaticAsset_Results.
type GatewayRouter_getStaticAsset_Results_List struct{ capnp.List }

// NewGatewayRouter_getStaticAsset_Results creates a new list of GatewayRouter_getStaticAsset_Results.
func NewGatewayRouter_getStaticAsset_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_getStaticAsset_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GatewayRouter_getStaticAsset_Results_List{l}, err
}

func (s GatewayRouter_getStaticAsset_Results_List) At(i int) GatewayRouter_getStaticAsset_Results {
	return GatewayRouter_getStaticAsset_Results{s.List.Struct(i)}
}

func (s GatewayRouter_getStaticAsset_Results_List) Set(i int, v GatewayRouter_getStaticAsset_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_getStaticAsset_Results_List) String() string {
	str, _ := text.MarshalList(0xfd22e2b5cb138bb2, s.List)
	return str
}

// GatewayRouter_getStaticAsset_Results_Future is a wrapper for a GatewayRouter_getStaticAsset_Results promised by a client call.
type GatewayRouter_getStaticAsset_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_getStaticAsset_Results_Future) Struct() (GatewayRouter_getStaticAsset_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getStaticAsset_Results{s}, err
}

type GatewayRouter_getStaticPublishingHost_Params struct{ capnp.Struct }

// GatewayRouter_getStaticPublishingHost_Params_TypeID is the unique identifier for the type GatewayRouter_getStaticPublishingHost_Params.
const GatewayRouter_getStaticPublishingHost_Params_TypeID = 0xf92f4e3c080d2237

func NewGatewayRouter_getStaticPublishingHost_Params(s *capnp.Segment) (GatewayRouter_getStaticPublishingHost_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticPublishingHost_Params{st}, err
}

func NewRootGatewayRouter_getStaticPublishingHost_Params(s *capnp.Segment) (GatewayRouter_getStaticPublishingHost_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticPublishingHost_Params{st}, err
}

func ReadRootGatewayRouter_getStaticPublishingHost_Params(msg *capnp.Message) (GatewayRouter_getStaticPublishingHost_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_getStaticPublishingHost_Params{root.Struct()}, err
}

func (s GatewayRouter_getStaticPublishingHost_Params) String() string {
	str, _ := text.Marshal(0xf92f4e3c080d2237, s.Struct)
	return str
}

func (s GatewayRouter_getStaticPublishingHost_Params) PublicId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_getStaticPublishingHost_Params) HasPublicId() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_getStaticPublishingHost_Params) PublicIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_getStaticPublishingHost_Params) SetPublicId(v string) error {
	return s.Struct.SetText(0, v)
}

// GatewayRouter_getStaticPublishingHost_Params_List is a list of GatewayRouter_getStaticPublishingHost_Params.
type GatewayRouter_getStaticPublishingHost_Params_List struct{ capnp.List }

// NewGatewayRouter_getStaticPublishingHost_Params creates a new list of GatewayRouter_getStaticPublishingHost_Params.
func NewGatewayRouter_getStaticPublishingHost_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_getStaticPublishingHost_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GatewayRouter_getStaticPublishingHost_Params_List{l}, err
}

func (s GatewayRouter_getStaticPublishingHost_Params_List) At(i int) GatewayRouter_getStaticPublishingHost_Params {
	return GatewayRouter_getStaticPublishingHost_Params{s.List.Struct(i)}
}

func (s GatewayRouter_getStaticPublishingHost_Params_List) Set(i int, v GatewayRouter_getStaticPublishingHost_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_getStaticPublishingHost_Params_List) String() string {
	str, _ := text.MarshalList(0xf92f4e3c080d2237, s.List)
	return str
}

// GatewayRouter_getStaticPublishingHost_Params_Future is a wrapper for a GatewayRouter_getStaticPublishingHost_Params promised by a client call.
type GatewayRouter_getStaticPublishingHost_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_getStaticPublishingHost_Params_Future) Struct() (GatewayRouter_getStaticPublishingHost_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getStaticPublishingHost_Params{s}, err
}

type GatewayRouter_getStaticPublishingHost_Results struct{ capnp.Struct }

// GatewayRouter_getStaticPublishingHost_Results_TypeID is the unique identifier for the type GatewayRouter_getStaticPublishingHost_Results.
const GatewayRouter_getStaticPublishingHost_Results_TypeID = 0xe0f162f7d6b6e614

func NewGatewayRouter_getStaticPublishingHost_Results(s *capnp.Segment) (GatewayRouter_getStaticPublishingHost_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticPublishingHost_Results{st}, err
}

func NewRootGatewayRouter_getStaticPublishingHost_Results(s *capnp.Segment) (GatewayRouter_getStaticPublishingHost_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_getStaticPublishingHost_Results{st}, err
}

func ReadRootGatewayRouter_getStaticPublishingHost_Results(msg *capnp.Message) (GatewayRouter_getStaticPublishingHost_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_getStaticPublishingHost_Results{root.Struct()}, err
}

func (s GatewayRouter_getStaticPublishingHost_Results) String() string {
	str, _ := text.Marshal(0xe0f162f7d6b6e614, s.Struct)
	return str
}

func (s GatewayRouter_getStaticPublishingHost_Results) Supervisor() supervisor.Supervisor {
	p, _ := s.Struct.Ptr(0)
	return supervisor.Supervisor{Client: p.Interface().Client()}
}

func (s GatewayRouter_getStaticPublishingHost_Results) HasSupervisor() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_getStaticPublishingHost_Results) SetSupervisor(v supervisor.Supervisor) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// GatewayRouter_getStaticPublishingHost_Results_List is a list of GatewayRouter_getStaticPublishingHost_Results.
type GatewayRouter_getStaticPublishingHost_Results_List struct{ capnp.List }

// NewGatewayRouter_getStaticPublishingHost_Results creates a new list of GatewayRouter_getStaticPublishingHost_Results.
func NewGatewayRouter_getStaticPublishingHost_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_getStaticPublishingHost_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GatewayRouter_getStaticPublishingHost_Results_List{l}, err
}

func (s GatewayRouter_getStaticPublishingHost_Results_List) At(i int) GatewayRouter_getStaticPublishingHost_Results {
	return GatewayRouter_getStaticPublishingHost_Results{s.List.Struct(i)}
}

func (s GatewayRouter_getStaticPublishingHost_Results_List) Set(i int, v GatewayRouter_getStaticPublishingHost_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_getStaticPublishingHost_Results_List) String() string {
	str, _ := text.MarshalList(0xe0f162f7d6b6e614, s.List)
	return str
}

// GatewayRouter_getStaticPublishingHost_Results_Future is a wrapper for a GatewayRouter_getStaticPublishingHost_Results promised by a client call.
type GatewayRouter_getStaticPublishingHost_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_getStaticPublishingHost_Results_Future) Struct() (GatewayRouter_getStaticPublishingHost_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_getStaticPublishingHost_Results{s}, err
}

func (p GatewayRouter_getStaticPublishingHost_Results_Future) Supervisor() supervisor.Supervisor {
	return supervisor.Supervisor{Client: p.Future.Field(0, nil).Client()}
}

type GatewayRouter_routeForeignHostname_Params struct{ capnp.Struct }

// GatewayRouter_routeForeignHostname_Params_TypeID is the unique identifier for the type GatewayRouter_routeForeignHostname_Params.
const GatewayRouter_routeForeignHostname_Params_TypeID = 0x94ff7bf84a8553ee

func NewGatewayRouter_routeForeignHostname_Params(s *capnp.Segment) (GatewayRouter_routeForeignHostname_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_routeForeignHostname_Params{st}, err
}

func NewRootGatewayRouter_routeForeignHostname_Params(s *capnp.Segment) (GatewayRouter_routeForeignHostname_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_routeForeignHostname_Params{st}, err
}

func ReadRootGatewayRouter_routeForeignHostname_Params(msg *capnp.Message) (GatewayRouter_routeForeignHostname_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_routeForeignHostname_Params{root.Struct()}, err
}

func (s GatewayRouter_routeForeignHostname_Params) String() string {
	str, _ := text.Marshal(0x94ff7bf84a8553ee, s.Struct)
	return str
}

func (s GatewayRouter_routeForeignHostname_Params) Hostname() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GatewayRouter_routeForeignHostname_Params) HasHostname() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_routeForeignHostname_Params) HostnameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GatewayRouter_routeForeignHostname_Params) SetHostname(v string) error {
	return s.Struct.SetText(0, v)
}

// GatewayRouter_routeForeignHostname_Params_List is a list of GatewayRouter_routeForeignHostname_Params.
type GatewayRouter_routeForeignHostname_Params_List struct{ capnp.List }

// NewGatewayRouter_routeForeignHostname_Params creates a new list of GatewayRouter_routeForeignHostname_Params.
func NewGatewayRouter_routeForeignHostname_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_routeForeignHostname_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GatewayRouter_routeForeignHostname_Params_List{l}, err
}

func (s GatewayRouter_routeForeignHostname_Params_List) At(i int) GatewayRouter_routeForeignHostname_Params {
	return GatewayRouter_routeForeignHostname_Params{s.List.Struct(i)}
}

func (s GatewayRouter_routeForeignHostname_Params_List) Set(i int, v GatewayRouter_routeForeignHostname_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_routeForeignHostname_Params_List) String() string {
	str, _ := text.MarshalList(0x94ff7bf84a8553ee, s.List)
	return str
}

// GatewayRouter_routeForeignHostname_Params_Future is a wrapper for a GatewayRouter_routeForeignHostname_Params promised by a client call.
type GatewayRouter_routeForeignHostname_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_routeForeignHostname_Params_Future) Struct() (GatewayRouter_routeForeignHostname_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_routeForeignHostname_Params{s}, err
}

type GatewayRouter_routeForeignHostname_Results struct{ capnp.Struct }

// GatewayRouter_routeForeignHostname_Results_TypeID is the unique identifier for the type GatewayRouter_routeForeignHostname_Results.
const GatewayRouter_routeForeignHostname_Results_TypeID = 0xce6a3dd4342110d2

func NewGatewayRouter_routeForeignHostname_Results(s *capnp.Segment) (GatewayRouter_routeForeignHostname_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_routeForeignHostname_Results{st}, err
}

func NewRootGatewayRouter_routeForeignHostname_Results(s *capnp.Segment) (GatewayRouter_routeForeignHostname_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_routeForeignHostname_Results{st}, err
}

func ReadRootGatewayRouter_routeForeignHostname_Results(msg *capnp.Message) (GatewayRouter_routeForeignHostname_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_routeForeignHostname_Results{root.Struct()}, err
}

func (s GatewayRouter_routeForeignHostname_Results) String() string {
	str, _ := text.Marshal(0xce6a3dd4342110d2, s.Struct)
	return str
}

func (s GatewayRouter_routeForeignHostname_Results) Info() (GatewayRouter_ForeignHostnameInfo, error) {
	p, err := s.Struct.Ptr(0)
	return GatewayRouter_ForeignHostnameInfo{Struct: p.Struct()}, err
}

func (s GatewayRouter_routeForeignHostname_Results) HasInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_routeForeignHostname_Results) SetInfo(v GatewayRouter_ForeignHostnameInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated GatewayRouter_ForeignHostnameInfo struct, preferring placement in s's segment.
func (s GatewayRouter_routeForeignHostname_Results) NewInfo() (GatewayRouter_ForeignHostnameInfo, error) {
	ss, err := NewGatewayRouter_ForeignHostnameInfo(s.Struct.Segment())
	if err != nil {
		return GatewayRouter_ForeignHostnameInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// GatewayRouter_routeForeignHostname_Results_List is a list of GatewayRouter_routeForeignHostname_Results.
type GatewayRouter_routeForeignHostname_Results_List struct{ capnp.List }

// NewGatewayRouter_routeForeignHostname_Results creates a new list of GatewayRouter_routeForeignHostname_Results.
func NewGatewayRouter_routeForeignHostname_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_routeForeignHostname_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GatewayRouter_routeForeignHostname_Results_List{l}, err
}

func (s GatewayRouter_routeForeignHostname_Results_List) At(i int) GatewayRouter_routeForeignHostname_Results {
	return GatewayRouter_routeForeignHostname_Results{s.List.Struct(i)}
}

func (s GatewayRouter_routeForeignHostname_Results_List) Set(i int, v GatewayRouter_routeForeignHostname_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_routeForeignHostname_Results_List) String() string {
	str, _ := text.MarshalList(0xce6a3dd4342110d2, s.List)
	return str
}

// GatewayRouter_routeForeignHostname_Results_Future is a wrapper for a GatewayRouter_routeForeignHostname_Results promised by a client call.
type GatewayRouter_routeForeignHostname_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_routeForeignHostname_Results_Future) Struct() (GatewayRouter_routeForeignHostname_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_routeForeignHostname_Results{s}, err
}

func (p GatewayRouter_routeForeignHostname_Results_Future) Info() GatewayRouter_ForeignHostnameInfo_Future {
	return GatewayRouter_ForeignHostnameInfo_Future{Future: p.Future.Field(0, nil)}
}

type GatewayRouter_subscribeTlsKeys_Params struct{ capnp.Struct }

// GatewayRouter_subscribeTlsKeys_Params_TypeID is the unique identifier for the type GatewayRouter_subscribeTlsKeys_Params.
const GatewayRouter_subscribeTlsKeys_Params_TypeID = 0xc44a2ee5cb2413d8

func NewGatewayRouter_subscribeTlsKeys_Params(s *capnp.Segment) (GatewayRouter_subscribeTlsKeys_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_subscribeTlsKeys_Params{st}, err
}

func NewRootGatewayRouter_subscribeTlsKeys_Params(s *capnp.Segment) (GatewayRouter_subscribeTlsKeys_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GatewayRouter_subscribeTlsKeys_Params{st}, err
}

func ReadRootGatewayRouter_subscribeTlsKeys_Params(msg *capnp.Message) (GatewayRouter_subscribeTlsKeys_Params, error) {
	root, err := msg.Root()
	return GatewayRouter_subscribeTlsKeys_Params{root.Struct()}, err
}

func (s GatewayRouter_subscribeTlsKeys_Params) String() string {
	str, _ := text.Marshal(0xc44a2ee5cb2413d8, s.Struct)
	return str
}

func (s GatewayRouter_subscribeTlsKeys_Params) Callback() GatewayRouter_TlsKeyCallback {
	p, _ := s.Struct.Ptr(0)
	return GatewayRouter_TlsKeyCallback{Client: p.Interface().Client()}
}

func (s GatewayRouter_subscribeTlsKeys_Params) HasCallback() bool {
	return s.Struct.HasPtr(0)
}

func (s GatewayRouter_subscribeTlsKeys_Params) SetCallback(v GatewayRouter_TlsKeyCallback) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// GatewayRouter_subscribeTlsKeys_Params_List is a list of GatewayRouter_subscribeTlsKeys_Params.
type GatewayRouter_subscribeTlsKeys_Params_List struct{ capnp.List }

// NewGatewayRouter_subscribeTlsKeys_Params creates a new list of GatewayRouter_subscribeTlsKeys_Params.
func NewGatewayRouter_subscribeTlsKeys_Params_List(s *capnp.Segment, sz int32) (GatewayRouter_subscribeTlsKeys_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GatewayRouter_subscribeTlsKeys_Params_List{l}, err
}

func (s GatewayRouter_subscribeTlsKeys_Params_List) At(i int) GatewayRouter_subscribeTlsKeys_Params {
	return GatewayRouter_subscribeTlsKeys_Params{s.List.Struct(i)}
}

func (s GatewayRouter_subscribeTlsKeys_Params_List) Set(i int, v GatewayRouter_subscribeTlsKeys_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_subscribeTlsKeys_Params_List) String() string {
	str, _ := text.MarshalList(0xc44a2ee5cb2413d8, s.List)
	return str
}

// GatewayRouter_subscribeTlsKeys_Params_Future is a wrapper for a GatewayRouter_subscribeTlsKeys_Params promised by a client call.
type GatewayRouter_subscribeTlsKeys_Params_Future struct{ *capnp.Future }

func (p GatewayRouter_subscribeTlsKeys_Params_Future) Struct() (GatewayRouter_subscribeTlsKeys_Params, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_subscribeTlsKeys_Params{s}, err
}

func (p GatewayRouter_subscribeTlsKeys_Params_Future) Callback() GatewayRouter_TlsKeyCallback {
	return GatewayRouter_TlsKeyCallback{Client: p.Future.Field(0, nil).Client()}
}

type GatewayRouter_subscribeTlsKeys_Results struct{ capnp.Struct }

// GatewayRouter_subscribeTlsKeys_Results_TypeID is the unique identifier for the type GatewayRouter_subscribeTlsKeys_Results.
const GatewayRouter_subscribeTlsKeys_Results_TypeID = 0x96e1c35b28d92f83

func NewGatewayRouter_subscribeTlsKeys_Results(s *capnp.Segment) (GatewayRouter_subscribeTlsKeys_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_subscribeTlsKeys_Results{st}, err
}

func NewRootGatewayRouter_subscribeTlsKeys_Results(s *capnp.Segment) (GatewayRouter_subscribeTlsKeys_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GatewayRouter_subscribeTlsKeys_Results{st}, err
}

func ReadRootGatewayRouter_subscribeTlsKeys_Results(msg *capnp.Message) (GatewayRouter_subscribeTlsKeys_Results, error) {
	root, err := msg.Root()
	return GatewayRouter_subscribeTlsKeys_Results{root.Struct()}, err
}

func (s GatewayRouter_subscribeTlsKeys_Results) String() string {
	str, _ := text.Marshal(0x96e1c35b28d92f83, s.Struct)
	return str
}

// GatewayRouter_subscribeTlsKeys_Results_List is a list of GatewayRouter_subscribeTlsKeys_Results.
type GatewayRouter_subscribeTlsKeys_Results_List struct{ capnp.List }

// NewGatewayRouter_subscribeTlsKeys_Results creates a new list of GatewayRouter_subscribeTlsKeys_Results.
func NewGatewayRouter_subscribeTlsKeys_Results_List(s *capnp.Segment, sz int32) (GatewayRouter_subscribeTlsKeys_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return GatewayRouter_subscribeTlsKeys_Results_List{l}, err
}

func (s GatewayRouter_subscribeTlsKeys_Results_List) At(i int) GatewayRouter_subscribeTlsKeys_Results {
	return GatewayRouter_subscribeTlsKeys_Results{s.List.Struct(i)}
}

func (s GatewayRouter_subscribeTlsKeys_Results_List) Set(i int, v GatewayRouter_subscribeTlsKeys_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GatewayRouter_subscribeTlsKeys_Results_List) String() string {
	str, _ := text.MarshalList(0x96e1c35b28d92f83, s.List)
	return str
}

// GatewayRouter_subscribeTlsKeys_Results_Future is a wrapper for a GatewayRouter_subscribeTlsKeys_Results promised by a client call.
type GatewayRouter_subscribeTlsKeys_Results_Future struct{ *capnp.Future }

func (p GatewayRouter_subscribeTlsKeys_Results_Future) Struct() (GatewayRouter_subscribeTlsKeys_Results, error) {
	s, err := p.Future.Struct()
	return GatewayRouter_subscribeTlsKeys_Results{s}, err
}

type SandstormCoreFactory struct{ Client *capnp.Client }

// SandstormCoreFactory_TypeID is the unique identifier for the type SandstormCoreFactory.
const SandstormCoreFactory_TypeID = 0xf0832c3f66256d2b

func (c SandstormCoreFactory) GetSandstormCore(ctx context.Context, params func(SandstormCoreFactory_getSandstormCore_Params) error) (SandstormCoreFactory_getSandstormCore_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xf0832c3f66256d2b,
			MethodID:      0,
			InterfaceName: "backend.capnp:SandstormCoreFactory",
			MethodName:    "getSandstormCore",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCoreFactory_getSandstormCore_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormCoreFactory_getSandstormCore_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCoreFactory) GetGatewayRouter(ctx context.Context, params func(SandstormCoreFactory_getGatewayRouter_Params) error) (SandstormCoreFactory_getGatewayRouter_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xf0832c3f66256d2b,
			MethodID:      1,
			InterfaceName: "backend.capnp:SandstormCoreFactory",
			MethodName:    "getGatewayRouter",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCoreFactory_getGatewayRouter_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormCoreFactory_getGatewayRouter_Results_Future{Future: ans.Future()}, release
}

// A SandstormCoreFactory_Server is a SandstormCoreFactory with a local implementation.
type SandstormCoreFactory_Server interface {
	GetSandstormCore(context.Context, SandstormCoreFactory_getSandstormCore) error

	GetGatewayRouter(context.Context, SandstormCoreFactory_getGatewayRouter) error
}

// SandstormCoreFactory_NewServer creates a new Server from an implementation of SandstormCoreFactory_Server.
func SandstormCoreFactory_NewServer(s SandstormCoreFactory_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(SandstormCoreFactory_Methods(nil, s), s, c, policy)
}

// SandstormCoreFactory_ServerToClient creates a new Client from an implementation of SandstormCoreFactory_Server.
// The caller is responsible for calling Release on the returned Client.
func SandstormCoreFactory_ServerToClient(s SandstormCoreFactory_Server, policy *server.Policy) SandstormCoreFactory {
	return SandstormCoreFactory{Client: capnp.NewClient(SandstormCoreFactory_NewServer(s, policy))}
}

// SandstormCoreFactory_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func SandstormCoreFactory_Methods(methods []server.Method, s SandstormCoreFactory_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf0832c3f66256d2b,
			MethodID:      0,
			InterfaceName: "backend.capnp:SandstormCoreFactory",
			MethodName:    "getSandstormCore",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSandstormCore(ctx, SandstormCoreFactory_getSandstormCore{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf0832c3f66256d2b,
			MethodID:      1,
			InterfaceName: "backend.capnp:SandstormCoreFactory",
			MethodName:    "getGatewayRouter",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetGatewayRouter(ctx, SandstormCoreFactory_getGatewayRouter{call})
		},
	})

	return methods
}

// SandstormCoreFactory_getSandstormCore holds the state for a server call to SandstormCoreFactory.getSandstormCore.
// See server.Call for documentation.
type SandstormCoreFactory_getSandstormCore struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCoreFactory_getSandstormCore) Args() SandstormCoreFactory_getSandstormCore_Params {
	return SandstormCoreFactory_getSandstormCore_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormCoreFactory_getSandstormCore) AllocResults() (SandstormCoreFactory_getSandstormCore_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getSandstormCore_Results{Struct: r}, err
}

// SandstormCoreFactory_getGatewayRouter holds the state for a server call to SandstormCoreFactory.getGatewayRouter.
// See server.Call for documentation.
type SandstormCoreFactory_getGatewayRouter struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCoreFactory_getGatewayRouter) Args() SandstormCoreFactory_getGatewayRouter_Params {
	return SandstormCoreFactory_getGatewayRouter_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormCoreFactory_getGatewayRouter) AllocResults() (SandstormCoreFactory_getGatewayRouter_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getGatewayRouter_Results{Struct: r}, err
}

type SandstormCoreFactory_getSandstormCore_Params struct{ capnp.Struct }

// SandstormCoreFactory_getSandstormCore_Params_TypeID is the unique identifier for the type SandstormCoreFactory_getSandstormCore_Params.
const SandstormCoreFactory_getSandstormCore_Params_TypeID = 0xe8ac8c6560747234

func NewSandstormCoreFactory_getSandstormCore_Params(s *capnp.Segment) (SandstormCoreFactory_getSandstormCore_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getSandstormCore_Params{st}, err
}

func NewRootSandstormCoreFactory_getSandstormCore_Params(s *capnp.Segment) (SandstormCoreFactory_getSandstormCore_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getSandstormCore_Params{st}, err
}

func ReadRootSandstormCoreFactory_getSandstormCore_Params(msg *capnp.Message) (SandstormCoreFactory_getSandstormCore_Params, error) {
	root, err := msg.Root()
	return SandstormCoreFactory_getSandstormCore_Params{root.Struct()}, err
}

func (s SandstormCoreFactory_getSandstormCore_Params) String() string {
	str, _ := text.Marshal(0xe8ac8c6560747234, s.Struct)
	return str
}

func (s SandstormCoreFactory_getSandstormCore_Params) GrainId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s SandstormCoreFactory_getSandstormCore_Params) HasGrainId() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormCoreFactory_getSandstormCore_Params) GrainIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s SandstormCoreFactory_getSandstormCore_Params) SetGrainId(v string) error {
	return s.Struct.SetText(0, v)
}

// SandstormCoreFactory_getSandstormCore_Params_List is a list of SandstormCoreFactory_getSandstormCore_Params.
type SandstormCoreFactory_getSandstormCore_Params_List struct{ capnp.List }

// NewSandstormCoreFactory_getSandstormCore_Params creates a new list of SandstormCoreFactory_getSandstormCore_Params.
func NewSandstormCoreFactory_getSandstormCore_Params_List(s *capnp.Segment, sz int32) (SandstormCoreFactory_getSandstormCore_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormCoreFactory_getSandstormCore_Params_List{l}, err
}

func (s SandstormCoreFactory_getSandstormCore_Params_List) At(i int) SandstormCoreFactory_getSandstormCore_Params {
	return SandstormCoreFactory_getSandstormCore_Params{s.List.Struct(i)}
}

func (s SandstormCoreFactory_getSandstormCore_Params_List) Set(i int, v SandstormCoreFactory_getSandstormCore_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormCoreFactory_getSandstormCore_Params_List) String() string {
	str, _ := text.MarshalList(0xe8ac8c6560747234, s.List)
	return str
}

// SandstormCoreFactory_getSandstormCore_Params_Future is a wrapper for a SandstormCoreFactory_getSandstormCore_Params promised by a client call.
type SandstormCoreFactory_getSandstormCore_Params_Future struct{ *capnp.Future }

func (p SandstormCoreFactory_getSandstormCore_Params_Future) Struct() (SandstormCoreFactory_getSandstormCore_Params, error) {
	s, err := p.Future.Struct()
	return SandstormCoreFactory_getSandstormCore_Params{s}, err
}

type SandstormCoreFactory_getSandstormCore_Results struct{ capnp.Struct }

// SandstormCoreFactory_getSandstormCore_Results_TypeID is the unique identifier for the type SandstormCoreFactory_getSandstormCore_Results.
const SandstormCoreFactory_getSandstormCore_Results_TypeID = 0xea75b020e3e6c12a

func NewSandstormCoreFactory_getSandstormCore_Results(s *capnp.Segment) (SandstormCoreFactory_getSandstormCore_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getSandstormCore_Results{st}, err
}

func NewRootSandstormCoreFactory_getSandstormCore_Results(s *capnp.Segment) (SandstormCoreFactory_getSandstormCore_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getSandstormCore_Results{st}, err
}

func ReadRootSandstormCoreFactory_getSandstormCore_Results(msg *capnp.Message) (SandstormCoreFactory_getSandstormCore_Results, error) {
	root, err := msg.Root()
	return SandstormCoreFactory_getSandstormCore_Results{root.Struct()}, err
}

func (s SandstormCoreFactory_getSandstormCore_Results) String() string {
	str, _ := text.Marshal(0xea75b020e3e6c12a, s.Struct)
	return str
}

func (s SandstormCoreFactory_getSandstormCore_Results) Core() supervisor.SandstormCore {
	p, _ := s.Struct.Ptr(0)
	return supervisor.SandstormCore{Client: p.Interface().Client()}
}

func (s SandstormCoreFactory_getSandstormCore_Results) HasCore() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormCoreFactory_getSandstormCore_Results) SetCore(v supervisor.SandstormCore) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SandstormCoreFactory_getSandstormCore_Results_List is a list of SandstormCoreFactory_getSandstormCore_Results.
type SandstormCoreFactory_getSandstormCore_Results_List struct{ capnp.List }

// NewSandstormCoreFactory_getSandstormCore_Results creates a new list of SandstormCoreFactory_getSandstormCore_Results.
func NewSandstormCoreFactory_getSandstormCore_Results_List(s *capnp.Segment, sz int32) (SandstormCoreFactory_getSandstormCore_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormCoreFactory_getSandstormCore_Results_List{l}, err
}

func (s SandstormCoreFactory_getSandstormCore_Results_List) At(i int) SandstormCoreFactory_getSandstormCore_Results {
	return SandstormCoreFactory_getSandstormCore_Results{s.List.Struct(i)}
}

func (s SandstormCoreFactory_getSandstormCore_Results_List) Set(i int, v SandstormCoreFactory_getSandstormCore_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormCoreFactory_getSandstormCore_Results_List) String() string {
	str, _ := text.MarshalList(0xea75b020e3e6c12a, s.List)
	return str
}

// SandstormCoreFactory_getSandstormCore_Results_Future is a wrapper for a SandstormCoreFactory_getSandstormCore_Results promised by a client call.
type SandstormCoreFactory_getSandstormCore_Results_Future struct{ *capnp.Future }

func (p SandstormCoreFactory_getSandstormCore_Results_Future) Struct() (SandstormCoreFactory_getSandstormCore_Results, error) {
	s, err := p.Future.Struct()
	return SandstormCoreFactory_getSandstormCore_Results{s}, err
}

func (p SandstormCoreFactory_getSandstormCore_Results_Future) Core() supervisor.SandstormCore {
	return supervisor.SandstormCore{Client: p.Future.Field(0, nil).Client()}
}

type SandstormCoreFactory_getGatewayRouter_Params struct{ capnp.Struct }

// SandstormCoreFactory_getGatewayRouter_Params_TypeID is the unique identifier for the type SandstormCoreFactory_getGatewayRouter_Params.
const SandstormCoreFactory_getGatewayRouter_Params_TypeID = 0xf0b05750d16cf185

func NewSandstormCoreFactory_getGatewayRouter_Params(s *capnp.Segment) (SandstormCoreFactory_getGatewayRouter_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCoreFactory_getGatewayRouter_Params{st}, err
}

func NewRootSandstormCoreFactory_getGatewayRouter_Params(s *capnp.Segment) (SandstormCoreFactory_getGatewayRouter_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCoreFactory_getGatewayRouter_Params{st}, err
}

func ReadRootSandstormCoreFactory_getGatewayRouter_Params(msg *capnp.Message) (SandstormCoreFactory_getGatewayRouter_Params, error) {
	root, err := msg.Root()
	return SandstormCoreFactory_getGatewayRouter_Params{root.Struct()}, err
}

func (s SandstormCoreFactory_getGatewayRouter_Params) String() string {
	str, _ := text.Marshal(0xf0b05750d16cf185, s.Struct)
	return str
}

// SandstormCoreFactory_getGatewayRouter_Params_List is a list of SandstormCoreFactory_getGatewayRouter_Params.
type SandstormCoreFactory_getGatewayRouter_Params_List struct{ capnp.List }

// NewSandstormCoreFactory_getGatewayRouter_Params creates a new list of SandstormCoreFactory_getGatewayRouter_Params.
func NewSandstormCoreFactory_getGatewayRouter_Params_List(s *capnp.Segment, sz int32) (SandstormCoreFactory_getGatewayRouter_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormCoreFactory_getGatewayRouter_Params_List{l}, err
}

func (s SandstormCoreFactory_getGatewayRouter_Params_List) At(i int) SandstormCoreFactory_getGatewayRouter_Params {
	return SandstormCoreFactory_getGatewayRouter_Params{s.List.Struct(i)}
}

func (s SandstormCoreFactory_getGatewayRouter_Params_List) Set(i int, v SandstormCoreFactory_getGatewayRouter_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormCoreFactory_getGatewayRouter_Params_List) String() string {
	str, _ := text.MarshalList(0xf0b05750d16cf185, s.List)
	return str
}

// SandstormCoreFactory_getGatewayRouter_Params_Future is a wrapper for a SandstormCoreFactory_getGatewayRouter_Params promised by a client call.
type SandstormCoreFactory_getGatewayRouter_Params_Future struct{ *capnp.Future }

func (p SandstormCoreFactory_getGatewayRouter_Params_Future) Struct() (SandstormCoreFactory_getGatewayRouter_Params, error) {
	s, err := p.Future.Struct()
	return SandstormCoreFactory_getGatewayRouter_Params{s}, err
}

type SandstormCoreFactory_getGatewayRouter_Results struct{ capnp.Struct }

// SandstormCoreFactory_getGatewayRouter_Results_TypeID is the unique identifier for the type SandstormCoreFactory_getGatewayRouter_Results.
const SandstormCoreFactory_getGatewayRouter_Results_TypeID = 0xa845001d2449aa2a

func NewSandstormCoreFactory_getGatewayRouter_Results(s *capnp.Segment) (SandstormCoreFactory_getGatewayRouter_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getGatewayRouter_Results{st}, err
}

func NewRootSandstormCoreFactory_getGatewayRouter_Results(s *capnp.Segment) (SandstormCoreFactory_getGatewayRouter_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCoreFactory_getGatewayRouter_Results{st}, err
}

func ReadRootSandstormCoreFactory_getGatewayRouter_Results(msg *capnp.Message) (SandstormCoreFactory_getGatewayRouter_Results, error) {
	root, err := msg.Root()
	return SandstormCoreFactory_getGatewayRouter_Results{root.Struct()}, err
}

func (s SandstormCoreFactory_getGatewayRouter_Results) String() string {
	str, _ := text.Marshal(0xa845001d2449aa2a, s.Struct)
	return str
}

func (s SandstormCoreFactory_getGatewayRouter_Results) Router() GatewayRouter {
	p, _ := s.Struct.Ptr(0)
	return GatewayRouter{Client: p.Interface().Client()}
}

func (s SandstormCoreFactory_getGatewayRouter_Results) HasRouter() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormCoreFactory_getGatewayRouter_Results) SetRouter(v GatewayRouter) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SandstormCoreFactory_getGatewayRouter_Results_List is a list of SandstormCoreFactory_getGatewayRouter_Results.
type SandstormCoreFactory_getGatewayRouter_Results_List struct{ capnp.List }

// NewSandstormCoreFactory_getGatewayRouter_Results creates a new list of SandstormCoreFactory_getGatewayRouter_Results.
func NewSandstormCoreFactory_getGatewayRouter_Results_List(s *capnp.Segment, sz int32) (SandstormCoreFactory_getGatewayRouter_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormCoreFactory_getGatewayRouter_Results_List{l}, err
}

func (s SandstormCoreFactory_getGatewayRouter_Results_List) At(i int) SandstormCoreFactory_getGatewayRouter_Results {
	return SandstormCoreFactory_getGatewayRouter_Results{s.List.Struct(i)}
}

func (s SandstormCoreFactory_getGatewayRouter_Results_List) Set(i int, v SandstormCoreFactory_getGatewayRouter_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormCoreFactory_getGatewayRouter_Results_List) String() string {
	str, _ := text.MarshalList(0xa845001d2449aa2a, s.List)
	return str
}

// SandstormCoreFactory_getGatewayRouter_Results_Future is a wrapper for a SandstormCoreFactory_getGatewayRouter_Results promised by a client call.
type SandstormCoreFactory_getGatewayRouter_Results_Future struct{ *capnp.Future }

func (p SandstormCoreFactory_getGatewayRouter_Results_Future) Struct() (SandstormCoreFactory_getGatewayRouter_Results, error) {
	s, err := p.Future.Struct()
	return SandstormCoreFactory_getGatewayRouter_Results{s}, err
}

func (p SandstormCoreFactory_getGatewayRouter_Results_Future) Router() GatewayRouter {
	return GatewayRouter{Client: p.Future.Field(0, nil).Client()}
}

const schema_dcbc0d702b1b47a5 = "x\xda\xccY}t\x14U\x96\xbf\xb7\xaa;E\x1cb" +
	"R[\xf1\x1b6\xc2\xc0QP>\x92NHd\x09\xdd" +
	"i\x06c\xa2h*\x91e\xcd\x0e+\x95N\x91\x14\xe9" +
	"\xae\xeaTU\x9b\xc4Y\x16\x11A\x06g\x8e\xcb\xee\xa8" +
	"+\xbb\x8e\xca\xaak\x1cY\xa2g\xf0\xcc\xac\xb8\xc7\xf8" +
	"1\x82\x1a\x01\x11\x19\xdd\xe1,~O<;\xa3\xe1\xe8" +
	"\xee\xb2\xae\xd6\x9e\xf7\xba_\xf5K\xd2M\x12f\xf6\x9c" +
	"9\xfe!yu\xdf}\xf7\xdd\xf7\xbb_\xbf^\xbcY" +
	"\x89\x08\xe5A)\x06\xd0r[ X\xe0m|\xf1\xa5" +
	"\x95\x89\xda\x07n\x03\xf5|D\x80\x80\x04\x102\xcaw" +
	"!\xa0\xd2W\x1e\x06\xf4f\xd5\xdd\xber\xb1\xf6\xdd-" +
	" \x9f\x1f\xf0n\xd83\xb8\xb4{x`\x10\x00C\xf7" +
	"\x97\x9f\x83J\x7f\xb9\x04\xd0\xf2H\xb9\x88-\x03\xe5\x02" +
	"\x02x\xf5\x8f\xff\xf0\xd0M/x[@\x9e\x81\x00A" +
	"\x81(|\xaa|\x07Q8X\xde\x03\xe8\xdd7\xef\xa5" +
	"/\x8d+\x97l\x03\xf9|v\xe0\xac\x8a6\x84\x80w" +
	"\xc5\x82\xe3\xf7\x1d\xbd\xe0\xd5m \xcf'[\x91|*" +
	"\xaax\x81l\x9dYAm9q\xfd9]\xfd\x8f\xdd" +
	"\x99\xde\x1a\xa4{\xeb*\x1a\x89\xc0\xaa\x8aO\x00\xbd\x91" +
	"\xb9[\x12\x9f<=o{F\x80j\x98\x1b\xda@\x04" +
	"\xcaCD\x83\xf7O\xcb/\x92\xa4\xbe\xbbx\x015\xd4" +
	"J\x04\xd6R\x81wVlY\xfc\xe9++wr\xd6" +
	"m\x0c5\x12\xeb\xaaJ\xee\x8b\x8cT$2_\xd2\x17" +
	"3Bmdk*D.\xf6\xdb\x96\xad\x8d\xff\xfd=" +
	"\xefG\x99\x9bS\xdd\xc7B\xd4\xfc\x8f\xa8\xee-\x8b\xde" +
	"\xb9\xfc\xcf_|\xef\xde\xb4\x00\xd5]X\xf9\x04\xd1\xdd" +
	"\xea\x0e\x7f\xf2\xb3\xde5\xbb\xf8\xad\xa7C\x7fC\xb6\x16" +
	"VR\xbb5\xf9\xc4\xb4\x1f\xf7\xef\xe2\xccZP\xd9L" +
	"\xb6>\xfb\xd6\x85\xe2\x83\xa7\xb6?\x901K$\x9f." +
	"\"\x9fP\x99[\xb9\x17\xd0\xdb\xf8\xb3\x7f\xb9\xe3\x8e\x86" +
	"\xbf\xfe1\xb7u\xb0r\x03\xd9\xba\xf6\xd75\x8d\x1f\xff" +
	"\xdbE\x0fe\xfcM\xb7\xee\xa9|\x95>\x15\xddz\xed" +
	"Oj\xf6\xdf\x11z\xe5a\x1e\x1cz\x155+UE" +
	"\xcc\xba\xfb\xe5/\x1ezV\xb7\xff\x11\xe4\x19\xa2\xf7\xee" +
	"\xc3G{.=\xde\xff\"\x01\xc7=U\xad\xa8\xf4W" +
	"I\x00\xca\xa3U\xf5\xca\x10\xf9\xd7\xbf\xcf\x7f\xa2a\xce" +
	"\xcc\x95\x8f\xcb\xdf\xf6\xef\xb8\xaf\xea}\xa2\xec U\xd6" +
	"\xf5f\xed;\x0b\x0e\xdf\xdd\xcf\x19:\\E\x81\xb1v" +
	"\xdb%\x8b\x7fP\xf6\xd9\x13\xfc\xab\x1d\xab\xa2\x98\xfa\x88" +
	"n=\xd4{\xc3\xb2\xcdk\xeey\x92\x17\x08.\xa1\xc0" +
	"\x90\x97\x10\x81]3\x9e?}\xee\xe9\xaf\xf6dn\x92" +
	"\x86N\xd5\x92(\x02\x86j\x97\xdc\x8d\x80\x9f\x15\x0d\xe0" +
	"\x81=\xdb\xf7f\x0f\x1f\xaan%\x87/\xeb\xde]\xb4" +
	"\xf6\xe8\xe6\x9f\x82|\xbe8*\x00~^\xdd\x8c\xcaP" +
	"5\xb9\xe3\xc1\xeaze\xa4\xfa\x02\x00\xef\x86\xfb_u" +
	"\xb7\x0d\x96=\xc3[\xf2^5\x05\xd8o\xaa\x89%\x8f" +
	"\x85\xffv\xf6e\x97\x86\x9e\x05\xf9\x0a\x1fFr\xcd\x9b" +
	"\xf4\xbdj\x08\x8c\x0e\xdd\xdd\xbam\xff\xdb\xea~^\xc3" +
	"\xd6\x1a\xaaag\x0d\xd10\x7f\xfac\x95\x8f\x1c\x09>" +
	"7*\xc2j\xe8\xab\x0cR\x0d\xbe\x91\xf2\xb9\xa2\xf7h" +
	"\xfd%W$\x8b\xf6\xff\x0a\xc8\x01W=\xad,\xb8\xea" +
	"2\x80\xd0\xaa\xab\xa4\x80\"/\x93\x00\xb2\xcf6V\xfa" +
	"\xf4\x9f\xbc\xaf\x04\x97\x11\xe9\xb9\xcb\xeeD\xe5\xaaZ\"" +
	"\xfdKe\xcek\x1f-l|\x89G\xea\xac\xda\xdd4" +
	"\xc2j\x89uw\x9d\xf8\xfc\x92\x8a;\x83\xaf\x80:\x03" +
	"1\xab|%J\"@hu\xed\xed\xa8\x18D\x93\xa2" +
	"\xd7~\x02\xf8\xcd\x85\xe5G\xbe\xf3\xc5\x9f\xbe\x96\xf5z" +
	"\xc3\xf2?\"^\xdf\xfe\xa5\xa1?u\xe9\x8e\xd7\xf9s" +
	"\xca\x97\xd3\xbcT\xb7\x9c\x9c\xb3\xf9hp\xddo\xcf\xf9" +
	"\xf0u\x1e\xf7\xdar\xea\xa6\xc4r\x02\xde\xcbzc7" +
	"\xff\xe4\xc1\x7f\x18\xe2\xe0T\x18\xa6!\xf3f\xc9\xac\xca" +
	"\xb7j7\xbc\xc1\xeb\xfer9\xc5}a\x98\xe8\x0e\x1d" +
	"\xfb\xe3kR\xf7\xae?\xcc\x87\xfa\xbc0\x85SU\x98" +
	"x\xb8\xed\xdc\xe3\x7f\xb1\xe17o\x1f\xe6\xdfhg\x98" +
	"\x06\xdd\x03T\xc3\xc8\xd0y\x8d\xdf\x9eq\xef\xd1\xf4+" +
	"\xa7\x83.\xfc.9\xbc\xb7|\xf8\xad\x93\x1fZ'y" +
	"\xdd\xfb\xc2\xf4\xf5^\xa6\xbaK?~\xe6\xed\xffj\x1b" +
	"99\xca\xc3\x11\x1a'U\x11\xa2{\xdd\xc6\x0b\x86\x9f" +
	"{\xa3\xff\x03\xeeb7E.&\xba\xffu[\xfd\xa9" +
	"]\xdf?\xfc!\xbf\xb5.Bu\xabt\xeb\xa1\x8b\xbf" +
	"9\xb8w\xef\xd1\x0f\xf9\xc3\xbb#\x154\xdbG\xc8\xe1" +
	"\x95\xb6\xbbN\xff\xc1\x93\xbf\x06.H\x8fE\xde%\x02" +
	"\xc3T\xc3\xf0?7\x7f\xb5\xe4\xf2o}\xca\xdf\xbc\xb0" +
	"n)\x8d\xb4:\x8a\xce\xc1\x8f?\xb8t \xf5)\xaf" +
	"\xa1\xaa\x8e\x9a\xdf@\x05\x8e?#\xff\xd5C\xb7?\xf8" +
	")g\xbeQG\xc3\xfc\xd0\xe2\xdb\x82o\x97\xcd\xf9\x8c" +
	"\x7f\xd2\xd5u4\xc3ju\xe4I\xafH\xcc]\x1f\xbe" +
	"r\xcb\xe7c\xa1\x1a\x0aF/F\xe5\xbc(\x81\x95\x1c" +
	"\xbdS\xe9&\xff\xf2\xb6\x8e\xc4\x8f4\xad\x19\xf8<m" +
	"I\xdaOQ\xfa\x06\xdf\x9b\xdd\x8b\xde\x7f\xbc~\x8a\xbf" +
	"\xc4\xaa(}\xbe\x9b\xa2\xc4\xc6\xea\xd9E\xd3\x96]\xbf" +
	"\xe84\xef\xc8\x8dQ\xea\x86\x9dT\xa0\xf4\xa6\xca\xfe\x93" +
	"5\xf6\xff\xf0\x1a\xf6EI:Q\x9e\xa3\x02\xd7\x95D" +
	"\xad\x9d\xef\\\xf7\x15/p\"J\xe19L\x05\x9e\xbe" +
	"Kym\xdf\xfb\xb3\xbf\xce\x1cA/[\xb4\x82\x02|" +
	"\xe6\x8a\xbd\xe0\x8d\xfb\xef\x97^\x9b\x16\xeb\xd2\xcd\xf6\x85" +
	"\xc1\x98\x964\x93K\xa3\x99?;t\xb7\xde\xd6\x0c\xb3" +
	"\xc5\xb5l\xadC_\xedh\x1d\xfa\x9cf\xddI\xc5E" +
	"\xd7Q\x03b\x00 \x80\x00r\xd1|\x00u\x9a\x88j" +
	"\xa9\x80\xc5\x8eq\xab\x8e\x85 `!\x81sF\x938" +
	"Z\xb1c\xc5\xbat\xb7Is;\x01\x9a\x10q:\x08" +
	"8\x1d@\xc6S\xde\xa2[4{\x91\xa3\x99B\xbb\xe3" +
	"ZvbQZtQ\x9bVF\xb7\x8e5\xb5^s" +
	"\xf5\x1e\xad\xaf\xd9J\xb9\xba\xbd\xd0J\xea\xe6j\xa3E" +
	"w\x1c\xc32\xe74i\xb6\x96p\xa8i\xcc\xd2y6" +
	"\x80z\xb9\x88j\xa5\x802b)I\xd9r\xf9R\x00" +
	"\xf5J\x11\xd5\x1a\x01='\xbdy\x05\x94YV\x97\xa1" +
	"gL\xc3p\x92*\xc3\x12\xef\xde\x81\xff\\s\xdf%" +
	"\xc1\xe3\x00\x88%\xdc\x15\x03\xa3\xaf\xe8\xda\x9a\xe9\xac\xd7" +
	"m\xea@\xea4)\xee:\xbet\xc1h\xe9&-\xd6" +
	"E<\x9c\x8c[Z{\x8bk\xebZb\xa1\xa3\xdd\xa2" +
	"\xd79\xec\x16\xbc\xbb\x9b\x01\xd4\xe9\"\xaa\x17\x0a\xe8%" +
	"\xd3;\x1b\x00\xdb\x99\xad\xf9L\"\xcb\xa9d\xda \xdf" +
	"7%\xbeZ\xad\x11@]'\xa2\x1a\xe7|cD\x01" +
	"\xd4v\x11\xd5\xa4\x80\xb2 \x94\xa2\x00 '\xc8b\xa7" +
	"\x88\xaa+\xa0,\x8a\xa5(\x02\xc8\xdd\x04\x04q\x11\xd5" +
	"^!mA*\xd9\xd0\x0e\x00\xcc\xaaMV\x8f\xa9\xdb" +
	"\x0d\xbe\x95\x9b:\x88!\xd9\xbf\x8b\x0ds\xbd\x85%^" +
	"\xe7\xcc\x8e\x96\xf7\x9e\xff\xdf}\x13\xf8\xd70\x1dW\x8b" +
	"\xc73\x8e#\x0e.N\xc5G\xa3ri\x16\x95a\x87" +
	"\xfa\x14\xe5l\xd1\x05D9\xbfz['\xf0\xd3\xb3\xaf" +
	"w&\xc8O\xcd\xf2v=\xae\xbb\xfajG\xb7\xd3\x8a" +
	"]\x07 \xaf\xac\xd5c\x12HD\xa9?\xc9\xabIZ" +
	"\xc2\xe1\x01\xdd8\x11\xa0s<E\xd6\x1b7\x7fph" +
	"^O\xcd\x9a\xa1\xb1\xde(\xc8\x15]6\xf9\xdf\xd5\x96" +
	"\xad\x1b\x1d\xe65\x96\xe3\x9aZB\xcf\x05\xcfF\x0e\x9e" +
	"\x9d\x199\xee\xf43\x87\xb0\x93jsb\xb6\xd1\xa6\xdf" +
	"\x18w\xae\xd5\xfb\x1c\xffe'\x8e\xfc\xba\xe4\xe8\xd0G" +
	"'\x9fUZ\xd2\xb8\xd1\xea\xd2\xcd\\V\xe5|-\x0e" +
	"\x07.:\x93\x02\x0d3a\xbao\xc2Jb\xc2wD" +
	"T\x9b\xb8\xb7ZEb\xe9\x1a\x11\xd5\x1b\xb9\x00S\xc9" +
	"\xe2u\"\xaa\x7fvv\xb14I8\x8ds\xed\xe4\xb3" +
	"\x92\x8f\\\xfe~\x15\x00jDD\xf5:\xee~\x0d\x8d" +
	"\xb9\xee\xf7\x02\x80z\xa3\x88\xea:\x01\xcb\xb4d\x92\xb3" +
	"<\xa1\x99\xc6z\xddq\xc9mK\xbcW\xdf\xfb\xd8\xd8" +
	"0\xef\xe6\xad,\xa4\xb4\x94\xdbi\xd9M\x1dB\xf2Z" +
	"\xbd\xefj\xc3\xec\xd0\xed\xa4m\x98n^pq\xa5\x8c" +
	"D\xdc\xf8J\xe6\xe2\xd4*Y \x17\xfa\xd2X]\xa1" +
	"\xc5\xe3m\x9a\x18\xebjBT\x03b\x10\xc0\xef\xc9\x91" +
	"\xb5m\xb2\x1c\x05A\x0eJ\x9b\x1c\xdd%\xf0\x8e`\x13" +
	"\x8e\x0b\xbb\x16\xcdLW\xbf\x15\x96\xad_\xad\xc5\\\xcb" +
	"\xee\xa3\xc5\x98?\xd4\xaf)\xf9R\x1e\x0dW\x1be~" +
	"|:S\xca\x1b\x93Q3\xb9f*\x0e\xf5\x8bJ\x1e" +
	"\x8bR\x0e\x0f\xda|v8\xaef\xbb|\xc0\x8d\xd1\xd8" +
	"\xca\x05\xb2\x93J\xea\xf6-\x86\x03\xa2En\xbaxu" +
	"Ml\xd6\xa0z\xff\x047\xe5N`\xe9k\x86\xaf\x7f" +
	"\x1f\x89\xbd\x01\x11\xd5\xfd\x1c\x8a\x7fN\x16\x7f*\xa2\xfa" +
	"<\x87\xe2\xe7H\x1d\xde/\xa2z\x80+\x83/\x13\xc9" +
	"\xe7ET_\x17\x10\x03\xa5\x18\x00\x90\x0f\x92\xc0xI" +
	"D\xf5\xb0\x80r\x10K1\x88(\x0f\x11\xc1\x03\"\xaa" +
	"o\x09(\x17\x08\xa5X\x80(\x1f!*\x0f\x8b\xa8\xfe" +
	"J\x988\xc8s\x94\xfeM1+\x91\xd0\xccv,\xf1" +
	"\x0em\xbb\xfc\xa1\xa7\xd5\x86_dB\xa7\xccp\xae\xd7" +
	"{\x10A@\x04\xdc\xd4\xae\xdf\xb2\xcaj\xd7\xd9\xdf^" +
	"\xc2J\x99n\x93m\x01\xc6\xfc\xb53f\xc4l\x0a\xa1" +
	"\xa51\x9f\xf0\xf8\x14\x82\x89lx0^\x06\x19a " +
	"\xcbKix\x84\xd3i&\x82j\x00\x91\xabRpf" +
	"\xa38\xecjb\xc29\x9b\x9e\xa9`\xa2\xf8\x8eu-" +
	"\xcc\xc4\xae\x9f\xe2\xb9r<\x1b@\x9d#\xa2\xba\x98\x03" +
	"\xcf\x82\xe6l9\x96\xba\xf4>\xff\xcc\x98n\xbb+:" +
	"5\x03\xd0\x9c((R\xc9\xd1y{\\?\x92\xb3\xd9" +
	"\xc9W\xde'\xd1<\xfb\xc9\x91\xbb\\4\xd7\xe5v\x00" +
	"\xa8\x8bET\x97\x09\xb8)\xd3<\xa3\xec\xbd\xf1x\xd5" +
	"\xaa\x87e\xe9Qv2\xb1\xde0;\x1a\xd0l7b" +
	"\x9ak\xd9\x00({'\xa3\xeb\xd6=9\xe7\x8b\xbf\x1b" +
	"k\x1f\xb2\xcb\xa7\x9b~u\x1a\xf2taa+G\x9d" +
	"\x14\xee\xf6\xd84\x01\xa2\xdb\xe91\xc0!C\x9c\xa4k" +
	"\x095\"\x061\xcb\xd5 cu\x94\x11l\x05A\x19" +
	"F\x09\x05\x7f\x84E6\x89*'\xb0\x11\x04\xe5\x18J" +
	"(\xfa\x93;2\xc2L9\x88m (\x83(a\x81" +
	"\xcf0!\xe3\x09\x95}x+\x08\xca\x1e\x94P\xf2G" +
	"6ds\xa8\xf20\xda (\xf7\xa3\x84\xd3|b\x07" +
	"\xd9\xfc\xaa\xfc\x90~\xdd\x8a\x12\x16\xfa\xcc$2\xd6A" +
	"\xe9\xa3\xe7v\xa3\x84\xe7\xf8\x1c\x1d2\xfaQ\xd1q\x03" +
	"\x08\xcaZ\x94\xf0[\xfe4\x8a\x8c\xf9QT\xfa\xb5\x01" +
	"%\x9c\xee\xd3\x8e\xc8x<\xa5\x96\xda\\\x85\x12\x16\xf9" +
	"D\x04\x16\x0d\xe0\x01\xd8\xb3}\xaf2\x8f\xee\x9d\x85\x12" +
	"\x9e\xeb\xf3f\xc8\x88<\xe5<\xdc\x0d\x82\"\xa3\x84\x01" +
	"\x9fAA\xc6\xc8*Ar#\xf9k\x09\x83\xfe\x80\x8b" +
	"\x8c\x10\x95GZA\x90\x87%\x00\xc6\xd9pD\xc4\x89" +
	"\xf9 \xc8G$,\xf6\xe9\x0dd\xc4\xb2\xfc\xf2\x13 " +
	"\xc8\x83\x92\xc7\xd29\x88\x86\x19A\x8fM\xad\x00\x10A" +
	"\x8f\xf5o i\xf4+\xabr\x10N\x03%\x82\x9ek" +
	"\xf7\xd5S\xfc\x94\xb1\x15\x96M\xb2+lvbjX" +
	"\xab\x07\xc5vz\x81\x05(\x14\x13A\xa2#\xd3kA" +
	"8\x1d\xb5\xbeZN\x86\x15QdUTb\x16\xa5\x87" +
	"G(\xab\xcf\xa8gC\x03\x88\xba\x1d\xc1\xe2\xa4av" +
	"pWEV\x86\x8b\x1d\xaa\x80\xef)\x84\xb1\xb1.\xb9" +
	"\xbaM#\xca'\xd4H\x10e\x09\xd7\xa2[=\xd6\xe4" +
	"c\xa6{o\x90\xcc\xf5\x96\xc7\xb2 \x84\xd3yP\xbd" +
	"\x90&q\xc6\xcb#\xa3\x0f\xe5\xa7\xc8c\xf7K\x88>" +
	"\xfd\x8c\x8cu\x93\x1f\xb8\x15\x04\xf9\x1e\x12o\x8cSB" +
	"FX\xc8\xdf'\xdf6\x93hc4\x092\xceJN" +
	"\xbd\x00\x82\xdcM\xd0\xc5\xd8pdl\x9b\xac\x13 h" +
	"\x04\\\x8cDD\xc6\x88\xcb\xabw\x80 \xab\x92\xc7\xb2" +
	"\x1b\x94\xd1\x14\x15A\x8f\x8d\x0c\x10\xd6\xd9R\x87\xee\xb6" +
	"\xb8\x9ak@8V\xe78\xba\xcb-\x09\xb1\xa6T[" +
	"\xdcp:\x0d\xb3\x83\x0c?\x04[l B6\x11\x15" +
	"\x13gEH[\x92\x1eb\x90M1\x04\x8a\xfc\xa3L" +
	"n\xf4a\xe3^\x9e)&\x96\xa9G@s\xa9\xff\x80" +
	"\x93\xc9\xf5c\xa6\xb8\x06s\xbd\x05\xa4,\x97\x88\x81\xe9" +
	"\x9e\x97\xa6\x03H\xb6\xff\xae\x88j\xa7\x80E\xf8\x8d\x97" +
	"N\xf7\xfa\x8e\xec\xe8_$|\xed\xa5;\xa1n\xd2\x93" +
	"%ET\xff\x92tB\x98\xee\x84\xfa\xc8b\xaf\x88\xea" +
	"\x1d\x02nJ\x99]\xa6\xd5cB\x01\x89V\xd7\x885" +
	"\xa5\x90y\x93\x9b\xc1\x1cW3\xdb\xb5\xb8\x05\xa2\xa9C" +
	"\x81\xe7\xba\xf1\x16=f\x99 \xb6;8\x0d\x04\x9c\x96" +
	"\x9fR\"\x11\xc1\x0a\xf2\x94F\xc5\\\xc54\x9a-\xa6" +
	"\\M{eh\xee/\xfa>\xe8;0Aw9\x9a" +
	"\xf9a\xad\x087&Es\x8dIQn6d\x0d\xe6" +
	"\xaa\xd6\xec\x188a7h\xea=7\x10\x11\x10\x1b\xa6" +
	"\xc4\x04\x8d\x1bj'?\xfb\xe7l\xcfs\x10#~\xa2" +
	"\x99\x0c12\x86\x9f\x9a\xa8\xfd\x88f\xf9\x8f\xb3\x9e\x8a" +
	"\xf9\x86v\x02\xe6 \xc70~V\xad\xe3\xb8\xbey2" +
	"\xd4k\x8e~\xf3\xf7\xe6\x93\x9c\xc6\xb3\xe47&\xf7\xe5" +
	"\x1c=\xcfb,\xcb\x15\xc2\xf9\x1c\x93\xc70\x9a\xa6s" +
	"=\xda\xc5Y\x18\x8a\xc6\xf8\xeb\x8a\xb9\xdd=\xa7\xa9\x8c" +
	"\x02\xef\xff\xd3\xc5\xf9\xa6\xfbQ\xeb\xb9F\x18>+\xe5" +
	";#\xdf\xbd\x9a\xc3\xe9X\xfd\x1d_lJW\xc8\x85" +
	"\x12>;\xc4,[G\xd9\x9b\xfe\xcc\x8fv\xf7\xaey" +
	"\xe4\xef'H\xab\xa3'\xbcq\x84\xfa\xb8$\x9c\xee\xe9" +
	"FK\xff\xa1\x92Ub>\xb7\x8av\x1f)\xcb\xd3h" +
	"\xa3\xc5~BC\xf6K\x98\\N\x9a\x9b\x05\xa4\xd1b" +
	"?I!\xfd)\x1cV>.\xcf\"\xdffJ\x1e{" +
	"\x16d\x8ai[\xcc\xd8$d!5\xb6C\x99\x12\x15" +
	"\x95\x01\xeb\xa4\x86\xd7\xdfw\x82\xcd\x97\xa3r\x04\x10\x7f" +
	"N\x92H\xc7r\x9f\x93\x9f\xb0\xcf\xc1vO\x9d\xe0\x1a" +
	"\x8d\xcd\xdf\x81\xab\x98Lj\xf4\xdb\x9b\x89\x1a\x90\xf9\xb9" +
	"\x1a\x90F\xae\x01\x89Y\xa6\xab\x9b.\x16\x81\x80E\x80" +
	"\xc5n_\xd2\xffy\xcc\xd3\xcd\x98\xd5N\x9b9\xdf\x9d" +
	"\xff\x17\x00\x00\xff\xffncP\x16"

func init() {
	schemas.Register(schema_dcbc0d702b1b47a5,
		0x809d3d6d45c4c37d,
		0x835c613045824121,
		0x83ffc259cf8da847,
		0x86362c69f5c42997,
		0x86ca17d397d72d2b,
		0x87a6a96b0a4edd21,
		0x8829b2e76d8325f1,
		0x8b790707193ea7ff,
		0x9145c7ea308343d9,
		0x916d32f140971035,
		0x94ff7bf84a8553ee,
		0x96e1c35b28d92f83,
		0x9a5778b8e7e9745a,
		0x9aa99e08dd1161ff,
		0x9d88f29f0318d4bb,
		0x9e90498484bab87d,
		0xa019dbe64a38e85d,
		0xa1c73384bc38ab4b,
		0xa37265bba0f4c58f,
		0xa845001d2449aa2a,
		0xa98fd02dd93dd26b,
		0xaaef1f8c301b865d,
		0xac9557813c4f78cf,
		0xadfbf90ef9c01c9a,
		0xaf88ad00c801b00d,
		0xb481d35d0da2713c,
		0xb61fc18674ca994f,
		0xbb33202722933fa6,
		0xbc51d6bc865a8fcf,
		0xbd05d1a434a60c2a,
		0xc1b0e9713ac1ad4f,
		0xc3a9d72077d3a1da,
		0xc44a2ee5cb2413d8,
		0xc70587321bf0dd8b,
		0xcb56f444d1311800,
		0xcc8a20b16569f588,
		0xcce40aee6005d381,
		0xcd9c9fab5f637827,
		0xce6a3dd4342110d2,
		0xd0669675481ed533,
		0xd0d6ed6a5ed70e62,
		0xd3961c234a15cdf1,
		0xe06fe4e0d4e93178,
		0xe0f162f7d6b6e614,
		0xe3a9cebde9177d60,
		0xe4d0899af24786be,
		0xe4d3afafc9fe1acf,
		0xe8ac8c6560747234,
		0xea0b2836fb52aee9,
		0xea75b020e3e6c12a,
		0xea9f82a07e11b6d7,
		0xef241fd6058030cf,
		0xf0832c3f66256d2b,
		0xf0b05750d16cf185,
		0xf2ccecff0178227b,
		0xf92f4e3c080d2237,
		0xfa7238e0a9345914,
		0xfb4cd9916f42104c,
		0xfd22e2b5cb138bb2)
}
