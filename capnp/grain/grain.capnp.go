// Code generated by capnpc-go. DO NOT EDIT.

package grain

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	strconv "strconv"
	activity "zenhack.net/go/sandstorm/capnp/activity"
	identity "zenhack.net/go/sandstorm/capnp/identity"
	powerbox "zenhack.net/go/sandstorm/capnp/powerbox"
	util "zenhack.net/go/sandstorm/capnp/util"
)

// Constants defined in grain.capnp.
const (
	MinimumSchedulingSlack = uint64(300000000000)
)

type SandstormApi struct{ Client *capnp.Client }

// SandstormApi_TypeID is the unique identifier for the type SandstormApi.
const SandstormApi_TypeID = 0xd2654fcf2a7002cb

func (c SandstormApi) DeprecatedPublish(ctx context.Context, params func(SandstormApi_deprecatedPublish_Params) error) (SandstormApi_deprecatedPublish_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      0,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deprecatedPublish",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_deprecatedPublish_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_deprecatedPublish_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) DeprecatedRegisterAction(ctx context.Context, params func(SandstormApi_deprecatedRegisterAction_Params) error) (SandstormApi_deprecatedRegisterAction_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      1,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deprecatedRegisterAction",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_deprecatedRegisterAction_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_deprecatedRegisterAction_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) ShareCap(ctx context.Context, params func(SandstormApi_shareCap_Params) error) (SandstormApi_shareCap_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      2,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "shareCap",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_shareCap_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_shareCap_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) ShareView(ctx context.Context, params func(SandstormApi_shareView_Params) error) (SandstormApi_shareView_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      3,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "shareView",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_shareView_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_shareView_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) Restore(ctx context.Context, params func(SandstormApi_restore_Params) error) (SandstormApi_restore_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      4,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "restore",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_restore_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_restore_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) Drop(ctx context.Context, params func(SandstormApi_drop_Params) error) (SandstormApi_drop_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      5,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "drop",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_drop_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_drop_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) Deleted(ctx context.Context, params func(SandstormApi_deleted_Params) error) (SandstormApi_deleted_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      6,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deleted",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_deleted_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_deleted_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) StayAwake(ctx context.Context, params func(SandstormApi_stayAwake_Params) error) (SandstormApi_stayAwake_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      7,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "stayAwake",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_stayAwake_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_stayAwake_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) Save(ctx context.Context, params func(SandstormApi_save_Params) error) (SandstormApi_save_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      8,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_save_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_save_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) BackgroundActivity(ctx context.Context, params func(SandstormApi_backgroundActivity_Params) error) (SandstormApi_backgroundActivity_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      9,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "backgroundActivity",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_backgroundActivity_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_backgroundActivity_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) GetIdentityId(ctx context.Context, params func(SandstormApi_getIdentityId_Params) error) (SandstormApi_getIdentityId_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      10,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "getIdentityId",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_getIdentityId_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_getIdentityId_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) Schedule(ctx context.Context, params func(ScheduledJob) error) (SandstormApi_schedule_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      11,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "schedule",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 24, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(ScheduledJob{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_schedule_Results_Future{Future: ans.Future()}, release
}

func (c SandstormApi) AddRef() SandstormApi {
	return SandstormApi{
		Client: c.Client.AddRef(),
	}
}

func (c SandstormApi) Release() {
	c.Client.Release()
}

// A SandstormApi_Server is a SandstormApi with a local implementation.
type SandstormApi_Server interface {
	DeprecatedPublish(context.Context, SandstormApi_deprecatedPublish) error

	DeprecatedRegisterAction(context.Context, SandstormApi_deprecatedRegisterAction) error

	ShareCap(context.Context, SandstormApi_shareCap) error

	ShareView(context.Context, SandstormApi_shareView) error

	Restore(context.Context, SandstormApi_restore) error

	Drop(context.Context, SandstormApi_drop) error

	Deleted(context.Context, SandstormApi_deleted) error

	StayAwake(context.Context, SandstormApi_stayAwake) error

	Save(context.Context, SandstormApi_save) error

	BackgroundActivity(context.Context, SandstormApi_backgroundActivity) error

	GetIdentityId(context.Context, SandstormApi_getIdentityId) error

	Schedule(context.Context, SandstormApi_schedule) error
}

// SandstormApi_NewServer creates a new Server from an implementation of SandstormApi_Server.
func SandstormApi_NewServer(s SandstormApi_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(SandstormApi_Methods(nil, s), s, c, policy)
}

// SandstormApi_ServerToClient creates a new Client from an implementation of SandstormApi_Server.
// The caller is responsible for calling Release on the returned Client.
func SandstormApi_ServerToClient(s SandstormApi_Server, policy *server.Policy) SandstormApi {
	return SandstormApi{Client: capnp.NewClient(SandstormApi_NewServer(s, policy))}
}

// SandstormApi_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func SandstormApi_Methods(methods []server.Method, s SandstormApi_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 12)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      0,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deprecatedPublish",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeprecatedPublish(ctx, SandstormApi_deprecatedPublish{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      1,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deprecatedRegisterAction",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeprecatedRegisterAction(ctx, SandstormApi_deprecatedRegisterAction{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      2,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "shareCap",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ShareCap(ctx, SandstormApi_shareCap{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      3,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "shareView",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ShareView(ctx, SandstormApi_shareView{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      4,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "restore",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Restore(ctx, SandstormApi_restore{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      5,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "drop",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Drop(ctx, SandstormApi_drop{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      6,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deleted",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Deleted(ctx, SandstormApi_deleted{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      7,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "stayAwake",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.StayAwake(ctx, SandstormApi_stayAwake{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      8,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, SandstormApi_save{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      9,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "backgroundActivity",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.BackgroundActivity(ctx, SandstormApi_backgroundActivity{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      10,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "getIdentityId",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetIdentityId(ctx, SandstormApi_getIdentityId{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      11,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "schedule",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Schedule(ctx, SandstormApi_schedule{call})
		},
	})

	return methods
}

// SandstormApi_deprecatedPublish holds the state for a server call to SandstormApi.deprecatedPublish.
// See server.Call for documentation.
type SandstormApi_deprecatedPublish struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_deprecatedPublish) Args() SandstormApi_deprecatedPublish_Params {
	return SandstormApi_deprecatedPublish_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_deprecatedPublish) AllocResults() (SandstormApi_deprecatedPublish_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedPublish_Results{Struct: r}, err
}

// SandstormApi_deprecatedRegisterAction holds the state for a server call to SandstormApi.deprecatedRegisterAction.
// See server.Call for documentation.
type SandstormApi_deprecatedRegisterAction struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_deprecatedRegisterAction) Args() SandstormApi_deprecatedRegisterAction_Params {
	return SandstormApi_deprecatedRegisterAction_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_deprecatedRegisterAction) AllocResults() (SandstormApi_deprecatedRegisterAction_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedRegisterAction_Results{Struct: r}, err
}

// SandstormApi_shareCap holds the state for a server call to SandstormApi.shareCap.
// See server.Call for documentation.
type SandstormApi_shareCap struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_shareCap) Args() SandstormApi_shareCap_Params {
	return SandstormApi_shareCap_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_shareCap) AllocResults() (SandstormApi_shareCap_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareCap_Results{Struct: r}, err
}

// SandstormApi_shareView holds the state for a server call to SandstormApi.shareView.
// See server.Call for documentation.
type SandstormApi_shareView struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_shareView) Args() SandstormApi_shareView_Params {
	return SandstormApi_shareView_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_shareView) AllocResults() (SandstormApi_shareView_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareView_Results{Struct: r}, err
}

// SandstormApi_restore holds the state for a server call to SandstormApi.restore.
// See server.Call for documentation.
type SandstormApi_restore struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_restore) Args() SandstormApi_restore_Params {
	return SandstormApi_restore_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_restore) AllocResults() (SandstormApi_restore_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_restore_Results{Struct: r}, err
}

// SandstormApi_drop holds the state for a server call to SandstormApi.drop.
// See server.Call for documentation.
type SandstormApi_drop struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_drop) Args() SandstormApi_drop_Params {
	return SandstormApi_drop_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_drop) AllocResults() (SandstormApi_drop_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_drop_Results{Struct: r}, err
}

// SandstormApi_deleted holds the state for a server call to SandstormApi.deleted.
// See server.Call for documentation.
type SandstormApi_deleted struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_deleted) Args() SandstormApi_deleted_Params {
	return SandstormApi_deleted_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_deleted) AllocResults() (SandstormApi_deleted_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deleted_Results{Struct: r}, err
}

// SandstormApi_stayAwake holds the state for a server call to SandstormApi.stayAwake.
// See server.Call for documentation.
type SandstormApi_stayAwake struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_stayAwake) Args() SandstormApi_stayAwake_Params {
	return SandstormApi_stayAwake_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_stayAwake) AllocResults() (SandstormApi_stayAwake_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_stayAwake_Results{Struct: r}, err
}

// SandstormApi_save holds the state for a server call to SandstormApi.save.
// See server.Call for documentation.
type SandstormApi_save struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_save) Args() SandstormApi_save_Params {
	return SandstormApi_save_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_save) AllocResults() (SandstormApi_save_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_save_Results{Struct: r}, err
}

// SandstormApi_backgroundActivity holds the state for a server call to SandstormApi.backgroundActivity.
// See server.Call for documentation.
type SandstormApi_backgroundActivity struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_backgroundActivity) Args() SandstormApi_backgroundActivity_Params {
	return SandstormApi_backgroundActivity_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_backgroundActivity) AllocResults() (SandstormApi_backgroundActivity_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_backgroundActivity_Results{Struct: r}, err
}

// SandstormApi_getIdentityId holds the state for a server call to SandstormApi.getIdentityId.
// See server.Call for documentation.
type SandstormApi_getIdentityId struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_getIdentityId) Args() SandstormApi_getIdentityId_Params {
	return SandstormApi_getIdentityId_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_getIdentityId) AllocResults() (SandstormApi_getIdentityId_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_getIdentityId_Results{Struct: r}, err
}

// SandstormApi_schedule holds the state for a server call to SandstormApi.schedule.
// See server.Call for documentation.
type SandstormApi_schedule struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_schedule) Args() ScheduledJob {
	return ScheduledJob{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_schedule) AllocResults() (SandstormApi_schedule_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_schedule_Results{Struct: r}, err
}

type SandstormApi_deprecatedPublish_Params struct{ capnp.Struct }

// SandstormApi_deprecatedPublish_Params_TypeID is the unique identifier for the type SandstormApi_deprecatedPublish_Params.
const SandstormApi_deprecatedPublish_Params_TypeID = 0xa2873a59df6d885c

func NewSandstormApi_deprecatedPublish_Params(s *capnp.Segment) (SandstormApi_deprecatedPublish_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedPublish_Params{st}, err
}

func NewRootSandstormApi_deprecatedPublish_Params(s *capnp.Segment) (SandstormApi_deprecatedPublish_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedPublish_Params{st}, err
}

func ReadRootSandstormApi_deprecatedPublish_Params(msg *capnp.Message) (SandstormApi_deprecatedPublish_Params, error) {
	root, err := msg.Root()
	return SandstormApi_deprecatedPublish_Params{root.Struct()}, err
}

func (s SandstormApi_deprecatedPublish_Params) String() string {
	str, _ := text.Marshal(0xa2873a59df6d885c, s.Struct)
	return str
}

// SandstormApi_deprecatedPublish_Params_List is a list of SandstormApi_deprecatedPublish_Params.
type SandstormApi_deprecatedPublish_Params_List struct{ capnp.List }

// NewSandstormApi_deprecatedPublish_Params creates a new list of SandstormApi_deprecatedPublish_Params.
func NewSandstormApi_deprecatedPublish_Params_List(s *capnp.Segment, sz int32) (SandstormApi_deprecatedPublish_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_deprecatedPublish_Params_List{l}, err
}

func (s SandstormApi_deprecatedPublish_Params_List) At(i int) SandstormApi_deprecatedPublish_Params {
	return SandstormApi_deprecatedPublish_Params{s.List.Struct(i)}
}

func (s SandstormApi_deprecatedPublish_Params_List) Set(i int, v SandstormApi_deprecatedPublish_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deprecatedPublish_Params_List) String() string {
	str, _ := text.MarshalList(0xa2873a59df6d885c, s.List)
	return str
}

// SandstormApi_deprecatedPublish_Params_Future is a wrapper for a SandstormApi_deprecatedPublish_Params promised by a client call.
type SandstormApi_deprecatedPublish_Params_Future struct{ *capnp.Future }

func (p SandstormApi_deprecatedPublish_Params_Future) Struct() (SandstormApi_deprecatedPublish_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deprecatedPublish_Params{s}, err
}

type SandstormApi_deprecatedPublish_Results struct{ capnp.Struct }

// SandstormApi_deprecatedPublish_Results_TypeID is the unique identifier for the type SandstormApi_deprecatedPublish_Results.
const SandstormApi_deprecatedPublish_Results_TypeID = 0xb42ccfaaf45a3f7a

func NewSandstormApi_deprecatedPublish_Results(s *capnp.Segment) (SandstormApi_deprecatedPublish_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedPublish_Results{st}, err
}

func NewRootSandstormApi_deprecatedPublish_Results(s *capnp.Segment) (SandstormApi_deprecatedPublish_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedPublish_Results{st}, err
}

func ReadRootSandstormApi_deprecatedPublish_Results(msg *capnp.Message) (SandstormApi_deprecatedPublish_Results, error) {
	root, err := msg.Root()
	return SandstormApi_deprecatedPublish_Results{root.Struct()}, err
}

func (s SandstormApi_deprecatedPublish_Results) String() string {
	str, _ := text.Marshal(0xb42ccfaaf45a3f7a, s.Struct)
	return str
}

// SandstormApi_deprecatedPublish_Results_List is a list of SandstormApi_deprecatedPublish_Results.
type SandstormApi_deprecatedPublish_Results_List struct{ capnp.List }

// NewSandstormApi_deprecatedPublish_Results creates a new list of SandstormApi_deprecatedPublish_Results.
func NewSandstormApi_deprecatedPublish_Results_List(s *capnp.Segment, sz int32) (SandstormApi_deprecatedPublish_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_deprecatedPublish_Results_List{l}, err
}

func (s SandstormApi_deprecatedPublish_Results_List) At(i int) SandstormApi_deprecatedPublish_Results {
	return SandstormApi_deprecatedPublish_Results{s.List.Struct(i)}
}

func (s SandstormApi_deprecatedPublish_Results_List) Set(i int, v SandstormApi_deprecatedPublish_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deprecatedPublish_Results_List) String() string {
	str, _ := text.MarshalList(0xb42ccfaaf45a3f7a, s.List)
	return str
}

// SandstormApi_deprecatedPublish_Results_Future is a wrapper for a SandstormApi_deprecatedPublish_Results promised by a client call.
type SandstormApi_deprecatedPublish_Results_Future struct{ *capnp.Future }

func (p SandstormApi_deprecatedPublish_Results_Future) Struct() (SandstormApi_deprecatedPublish_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deprecatedPublish_Results{s}, err
}

type SandstormApi_deprecatedRegisterAction_Params struct{ capnp.Struct }

// SandstormApi_deprecatedRegisterAction_Params_TypeID is the unique identifier for the type SandstormApi_deprecatedRegisterAction_Params.
const SandstormApi_deprecatedRegisterAction_Params_TypeID = 0xd271034eec62b43b

func NewSandstormApi_deprecatedRegisterAction_Params(s *capnp.Segment) (SandstormApi_deprecatedRegisterAction_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedRegisterAction_Params{st}, err
}

func NewRootSandstormApi_deprecatedRegisterAction_Params(s *capnp.Segment) (SandstormApi_deprecatedRegisterAction_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedRegisterAction_Params{st}, err
}

func ReadRootSandstormApi_deprecatedRegisterAction_Params(msg *capnp.Message) (SandstormApi_deprecatedRegisterAction_Params, error) {
	root, err := msg.Root()
	return SandstormApi_deprecatedRegisterAction_Params{root.Struct()}, err
}

func (s SandstormApi_deprecatedRegisterAction_Params) String() string {
	str, _ := text.Marshal(0xd271034eec62b43b, s.Struct)
	return str
}

// SandstormApi_deprecatedRegisterAction_Params_List is a list of SandstormApi_deprecatedRegisterAction_Params.
type SandstormApi_deprecatedRegisterAction_Params_List struct{ capnp.List }

// NewSandstormApi_deprecatedRegisterAction_Params creates a new list of SandstormApi_deprecatedRegisterAction_Params.
func NewSandstormApi_deprecatedRegisterAction_Params_List(s *capnp.Segment, sz int32) (SandstormApi_deprecatedRegisterAction_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_deprecatedRegisterAction_Params_List{l}, err
}

func (s SandstormApi_deprecatedRegisterAction_Params_List) At(i int) SandstormApi_deprecatedRegisterAction_Params {
	return SandstormApi_deprecatedRegisterAction_Params{s.List.Struct(i)}
}

func (s SandstormApi_deprecatedRegisterAction_Params_List) Set(i int, v SandstormApi_deprecatedRegisterAction_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deprecatedRegisterAction_Params_List) String() string {
	str, _ := text.MarshalList(0xd271034eec62b43b, s.List)
	return str
}

// SandstormApi_deprecatedRegisterAction_Params_Future is a wrapper for a SandstormApi_deprecatedRegisterAction_Params promised by a client call.
type SandstormApi_deprecatedRegisterAction_Params_Future struct{ *capnp.Future }

func (p SandstormApi_deprecatedRegisterAction_Params_Future) Struct() (SandstormApi_deprecatedRegisterAction_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deprecatedRegisterAction_Params{s}, err
}

type SandstormApi_deprecatedRegisterAction_Results struct{ capnp.Struct }

// SandstormApi_deprecatedRegisterAction_Results_TypeID is the unique identifier for the type SandstormApi_deprecatedRegisterAction_Results.
const SandstormApi_deprecatedRegisterAction_Results_TypeID = 0xb9d62f4beefefc29

func NewSandstormApi_deprecatedRegisterAction_Results(s *capnp.Segment) (SandstormApi_deprecatedRegisterAction_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedRegisterAction_Results{st}, err
}

func NewRootSandstormApi_deprecatedRegisterAction_Results(s *capnp.Segment) (SandstormApi_deprecatedRegisterAction_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedRegisterAction_Results{st}, err
}

func ReadRootSandstormApi_deprecatedRegisterAction_Results(msg *capnp.Message) (SandstormApi_deprecatedRegisterAction_Results, error) {
	root, err := msg.Root()
	return SandstormApi_deprecatedRegisterAction_Results{root.Struct()}, err
}

func (s SandstormApi_deprecatedRegisterAction_Results) String() string {
	str, _ := text.Marshal(0xb9d62f4beefefc29, s.Struct)
	return str
}

// SandstormApi_deprecatedRegisterAction_Results_List is a list of SandstormApi_deprecatedRegisterAction_Results.
type SandstormApi_deprecatedRegisterAction_Results_List struct{ capnp.List }

// NewSandstormApi_deprecatedRegisterAction_Results creates a new list of SandstormApi_deprecatedRegisterAction_Results.
func NewSandstormApi_deprecatedRegisterAction_Results_List(s *capnp.Segment, sz int32) (SandstormApi_deprecatedRegisterAction_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_deprecatedRegisterAction_Results_List{l}, err
}

func (s SandstormApi_deprecatedRegisterAction_Results_List) At(i int) SandstormApi_deprecatedRegisterAction_Results {
	return SandstormApi_deprecatedRegisterAction_Results{s.List.Struct(i)}
}

func (s SandstormApi_deprecatedRegisterAction_Results_List) Set(i int, v SandstormApi_deprecatedRegisterAction_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deprecatedRegisterAction_Results_List) String() string {
	str, _ := text.MarshalList(0xb9d62f4beefefc29, s.List)
	return str
}

// SandstormApi_deprecatedRegisterAction_Results_Future is a wrapper for a SandstormApi_deprecatedRegisterAction_Results promised by a client call.
type SandstormApi_deprecatedRegisterAction_Results_Future struct{ *capnp.Future }

func (p SandstormApi_deprecatedRegisterAction_Results_Future) Struct() (SandstormApi_deprecatedRegisterAction_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deprecatedRegisterAction_Results{s}, err
}

type SandstormApi_shareCap_Params struct{ capnp.Struct }

// SandstormApi_shareCap_Params_TypeID is the unique identifier for the type SandstormApi_shareCap_Params.
const SandstormApi_shareCap_Params_TypeID = 0xeb3c29aff080ec3e

func NewSandstormApi_shareCap_Params(s *capnp.Segment) (SandstormApi_shareCap_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareCap_Params{st}, err
}

func NewRootSandstormApi_shareCap_Params(s *capnp.Segment) (SandstormApi_shareCap_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareCap_Params{st}, err
}

func ReadRootSandstormApi_shareCap_Params(msg *capnp.Message) (SandstormApi_shareCap_Params, error) {
	root, err := msg.Root()
	return SandstormApi_shareCap_Params{root.Struct()}, err
}

func (s SandstormApi_shareCap_Params) String() string {
	str, _ := text.Marshal(0xeb3c29aff080ec3e, s.Struct)
	return str
}

func (s SandstormApi_shareCap_Params) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SandstormApi_shareCap_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_shareCap_Params) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SandstormApi_shareCap_Params) DisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	p, err := s.Struct.Ptr(1)
	return powerbox.PowerboxDisplayInfo{Struct: p.Struct()}, err
}

func (s SandstormApi_shareCap_Params) HasDisplayInfo() bool {
	return s.Struct.HasPtr(1)
}

func (s SandstormApi_shareCap_Params) SetDisplayInfo(v powerbox.PowerboxDisplayInfo) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDisplayInfo sets the displayInfo field to a newly
// allocated powerbox.PowerboxDisplayInfo struct, preferring placement in s's segment.
func (s SandstormApi_shareCap_Params) NewDisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	ss, err := powerbox.NewPowerboxDisplayInfo(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDisplayInfo{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// SandstormApi_shareCap_Params_List is a list of SandstormApi_shareCap_Params.
type SandstormApi_shareCap_Params_List struct{ capnp.List }

// NewSandstormApi_shareCap_Params creates a new list of SandstormApi_shareCap_Params.
func NewSandstormApi_shareCap_Params_List(s *capnp.Segment, sz int32) (SandstormApi_shareCap_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SandstormApi_shareCap_Params_List{l}, err
}

func (s SandstormApi_shareCap_Params_List) At(i int) SandstormApi_shareCap_Params {
	return SandstormApi_shareCap_Params{s.List.Struct(i)}
}

func (s SandstormApi_shareCap_Params_List) Set(i int, v SandstormApi_shareCap_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_shareCap_Params_List) String() string {
	str, _ := text.MarshalList(0xeb3c29aff080ec3e, s.List)
	return str
}

// SandstormApi_shareCap_Params_Future is a wrapper for a SandstormApi_shareCap_Params promised by a client call.
type SandstormApi_shareCap_Params_Future struct{ *capnp.Future }

func (p SandstormApi_shareCap_Params_Future) Struct() (SandstormApi_shareCap_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_shareCap_Params{s}, err
}

func (p SandstormApi_shareCap_Params_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SandstormApi_shareCap_Params_Future) DisplayInfo() powerbox.PowerboxDisplayInfo_Future {
	return powerbox.PowerboxDisplayInfo_Future{Future: p.Future.Field(1, nil)}
}

type SandstormApi_shareCap_Results struct{ capnp.Struct }

// SandstormApi_shareCap_Results_TypeID is the unique identifier for the type SandstormApi_shareCap_Results.
const SandstormApi_shareCap_Results_TypeID = 0xb96fc5fb8137a705

func NewSandstormApi_shareCap_Results(s *capnp.Segment) (SandstormApi_shareCap_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareCap_Results{st}, err
}

func NewRootSandstormApi_shareCap_Results(s *capnp.Segment) (SandstormApi_shareCap_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareCap_Results{st}, err
}

func ReadRootSandstormApi_shareCap_Results(msg *capnp.Message) (SandstormApi_shareCap_Results, error) {
	root, err := msg.Root()
	return SandstormApi_shareCap_Results{root.Struct()}, err
}

func (s SandstormApi_shareCap_Results) String() string {
	str, _ := text.Marshal(0xb96fc5fb8137a705, s.Struct)
	return str
}

func (s SandstormApi_shareCap_Results) SharedCap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SandstormApi_shareCap_Results) HasSharedCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_shareCap_Results) SetSharedCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SandstormApi_shareCap_Results) Link() SharingLink {
	p, _ := s.Struct.Ptr(1)
	return SharingLink{Client: p.Interface().Client()}
}

func (s SandstormApi_shareCap_Results) HasLink() bool {
	return s.Struct.HasPtr(1)
}

func (s SandstormApi_shareCap_Results) SetLink(v SharingLink) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

// SandstormApi_shareCap_Results_List is a list of SandstormApi_shareCap_Results.
type SandstormApi_shareCap_Results_List struct{ capnp.List }

// NewSandstormApi_shareCap_Results creates a new list of SandstormApi_shareCap_Results.
func NewSandstormApi_shareCap_Results_List(s *capnp.Segment, sz int32) (SandstormApi_shareCap_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SandstormApi_shareCap_Results_List{l}, err
}

func (s SandstormApi_shareCap_Results_List) At(i int) SandstormApi_shareCap_Results {
	return SandstormApi_shareCap_Results{s.List.Struct(i)}
}

func (s SandstormApi_shareCap_Results_List) Set(i int, v SandstormApi_shareCap_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_shareCap_Results_List) String() string {
	str, _ := text.MarshalList(0xb96fc5fb8137a705, s.List)
	return str
}

// SandstormApi_shareCap_Results_Future is a wrapper for a SandstormApi_shareCap_Results promised by a client call.
type SandstormApi_shareCap_Results_Future struct{ *capnp.Future }

func (p SandstormApi_shareCap_Results_Future) Struct() (SandstormApi_shareCap_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_shareCap_Results{s}, err
}

func (p SandstormApi_shareCap_Results_Future) SharedCap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SandstormApi_shareCap_Results_Future) Link() SharingLink {
	return SharingLink{Client: p.Future.Field(1, nil).Client()}
}

type SandstormApi_shareView_Params struct{ capnp.Struct }

// SandstormApi_shareView_Params_TypeID is the unique identifier for the type SandstormApi_shareView_Params.
const SandstormApi_shareView_Params_TypeID = 0xb1e3f6ac609eb4d7

func NewSandstormApi_shareView_Params(s *capnp.Segment) (SandstormApi_shareView_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_shareView_Params{st}, err
}

func NewRootSandstormApi_shareView_Params(s *capnp.Segment) (SandstormApi_shareView_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_shareView_Params{st}, err
}

func ReadRootSandstormApi_shareView_Params(msg *capnp.Message) (SandstormApi_shareView_Params, error) {
	root, err := msg.Root()
	return SandstormApi_shareView_Params{root.Struct()}, err
}

func (s SandstormApi_shareView_Params) String() string {
	str, _ := text.Marshal(0xb1e3f6ac609eb4d7, s.Struct)
	return str
}

func (s SandstormApi_shareView_Params) View() UiView {
	p, _ := s.Struct.Ptr(0)
	return UiView{Client: p.Interface().Client()}
}

func (s SandstormApi_shareView_Params) HasView() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_shareView_Params) SetView(v UiView) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SandstormApi_shareView_Params_List is a list of SandstormApi_shareView_Params.
type SandstormApi_shareView_Params_List struct{ capnp.List }

// NewSandstormApi_shareView_Params creates a new list of SandstormApi_shareView_Params.
func NewSandstormApi_shareView_Params_List(s *capnp.Segment, sz int32) (SandstormApi_shareView_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_shareView_Params_List{l}, err
}

func (s SandstormApi_shareView_Params_List) At(i int) SandstormApi_shareView_Params {
	return SandstormApi_shareView_Params{s.List.Struct(i)}
}

func (s SandstormApi_shareView_Params_List) Set(i int, v SandstormApi_shareView_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_shareView_Params_List) String() string {
	str, _ := text.MarshalList(0xb1e3f6ac609eb4d7, s.List)
	return str
}

// SandstormApi_shareView_Params_Future is a wrapper for a SandstormApi_shareView_Params promised by a client call.
type SandstormApi_shareView_Params_Future struct{ *capnp.Future }

func (p SandstormApi_shareView_Params_Future) Struct() (SandstormApi_shareView_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_shareView_Params{s}, err
}

func (p SandstormApi_shareView_Params_Future) View() UiView {
	return UiView{Client: p.Future.Field(0, nil).Client()}
}

type SandstormApi_shareView_Results struct{ capnp.Struct }

// SandstormApi_shareView_Results_TypeID is the unique identifier for the type SandstormApi_shareView_Results.
const SandstormApi_shareView_Results_TypeID = 0xe6abbf843a84f35d

func NewSandstormApi_shareView_Results(s *capnp.Segment) (SandstormApi_shareView_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareView_Results{st}, err
}

func NewRootSandstormApi_shareView_Results(s *capnp.Segment) (SandstormApi_shareView_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareView_Results{st}, err
}

func ReadRootSandstormApi_shareView_Results(msg *capnp.Message) (SandstormApi_shareView_Results, error) {
	root, err := msg.Root()
	return SandstormApi_shareView_Results{root.Struct()}, err
}

func (s SandstormApi_shareView_Results) String() string {
	str, _ := text.Marshal(0xe6abbf843a84f35d, s.Struct)
	return str
}

func (s SandstormApi_shareView_Results) SharedView() UiView {
	p, _ := s.Struct.Ptr(0)
	return UiView{Client: p.Interface().Client()}
}

func (s SandstormApi_shareView_Results) HasSharedView() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_shareView_Results) SetSharedView(v UiView) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s SandstormApi_shareView_Results) Link() ViewSharingLink {
	p, _ := s.Struct.Ptr(1)
	return ViewSharingLink{Client: p.Interface().Client()}
}

func (s SandstormApi_shareView_Results) HasLink() bool {
	return s.Struct.HasPtr(1)
}

func (s SandstormApi_shareView_Results) SetLink(v ViewSharingLink) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

// SandstormApi_shareView_Results_List is a list of SandstormApi_shareView_Results.
type SandstormApi_shareView_Results_List struct{ capnp.List }

// NewSandstormApi_shareView_Results creates a new list of SandstormApi_shareView_Results.
func NewSandstormApi_shareView_Results_List(s *capnp.Segment, sz int32) (SandstormApi_shareView_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SandstormApi_shareView_Results_List{l}, err
}

func (s SandstormApi_shareView_Results_List) At(i int) SandstormApi_shareView_Results {
	return SandstormApi_shareView_Results{s.List.Struct(i)}
}

func (s SandstormApi_shareView_Results_List) Set(i int, v SandstormApi_shareView_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_shareView_Results_List) String() string {
	str, _ := text.MarshalList(0xe6abbf843a84f35d, s.List)
	return str
}

// SandstormApi_shareView_Results_Future is a wrapper for a SandstormApi_shareView_Results promised by a client call.
type SandstormApi_shareView_Results_Future struct{ *capnp.Future }

func (p SandstormApi_shareView_Results_Future) Struct() (SandstormApi_shareView_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_shareView_Results{s}, err
}

func (p SandstormApi_shareView_Results_Future) SharedView() UiView {
	return UiView{Client: p.Future.Field(0, nil).Client()}
}

func (p SandstormApi_shareView_Results_Future) Link() ViewSharingLink {
	return ViewSharingLink{Client: p.Future.Field(1, nil).Client()}
}

type SandstormApi_restore_Params struct{ capnp.Struct }

// SandstormApi_restore_Params_TypeID is the unique identifier for the type SandstormApi_restore_Params.
const SandstormApi_restore_Params_TypeID = 0xd29e9db5843719f0

func NewSandstormApi_restore_Params(s *capnp.Segment) (SandstormApi_restore_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_restore_Params{st}, err
}

func NewRootSandstormApi_restore_Params(s *capnp.Segment) (SandstormApi_restore_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_restore_Params{st}, err
}

func ReadRootSandstormApi_restore_Params(msg *capnp.Message) (SandstormApi_restore_Params, error) {
	root, err := msg.Root()
	return SandstormApi_restore_Params{root.Struct()}, err
}

func (s SandstormApi_restore_Params) String() string {
	str, _ := text.Marshal(0xd29e9db5843719f0, s.Struct)
	return str
}

func (s SandstormApi_restore_Params) Token() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormApi_restore_Params) HasToken() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_restore_Params) SetToken(v []byte) error {
	return s.Struct.SetData(0, v)
}

// SandstormApi_restore_Params_List is a list of SandstormApi_restore_Params.
type SandstormApi_restore_Params_List struct{ capnp.List }

// NewSandstormApi_restore_Params creates a new list of SandstormApi_restore_Params.
func NewSandstormApi_restore_Params_List(s *capnp.Segment, sz int32) (SandstormApi_restore_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_restore_Params_List{l}, err
}

func (s SandstormApi_restore_Params_List) At(i int) SandstormApi_restore_Params {
	return SandstormApi_restore_Params{s.List.Struct(i)}
}

func (s SandstormApi_restore_Params_List) Set(i int, v SandstormApi_restore_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_restore_Params_List) String() string {
	str, _ := text.MarshalList(0xd29e9db5843719f0, s.List)
	return str
}

// SandstormApi_restore_Params_Future is a wrapper for a SandstormApi_restore_Params promised by a client call.
type SandstormApi_restore_Params_Future struct{ *capnp.Future }

func (p SandstormApi_restore_Params_Future) Struct() (SandstormApi_restore_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_restore_Params{s}, err
}

type SandstormApi_restore_Results struct{ capnp.Struct }

// SandstormApi_restore_Results_TypeID is the unique identifier for the type SandstormApi_restore_Results.
const SandstormApi_restore_Results_TypeID = 0xecf1f14c4209c731

func NewSandstormApi_restore_Results(s *capnp.Segment) (SandstormApi_restore_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_restore_Results{st}, err
}

func NewRootSandstormApi_restore_Results(s *capnp.Segment) (SandstormApi_restore_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_restore_Results{st}, err
}

func ReadRootSandstormApi_restore_Results(msg *capnp.Message) (SandstormApi_restore_Results, error) {
	root, err := msg.Root()
	return SandstormApi_restore_Results{root.Struct()}, err
}

func (s SandstormApi_restore_Results) String() string {
	str, _ := text.Marshal(0xecf1f14c4209c731, s.Struct)
	return str
}

func (s SandstormApi_restore_Results) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SandstormApi_restore_Results) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_restore_Results) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// SandstormApi_restore_Results_List is a list of SandstormApi_restore_Results.
type SandstormApi_restore_Results_List struct{ capnp.List }

// NewSandstormApi_restore_Results creates a new list of SandstormApi_restore_Results.
func NewSandstormApi_restore_Results_List(s *capnp.Segment, sz int32) (SandstormApi_restore_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_restore_Results_List{l}, err
}

func (s SandstormApi_restore_Results_List) At(i int) SandstormApi_restore_Results {
	return SandstormApi_restore_Results{s.List.Struct(i)}
}

func (s SandstormApi_restore_Results_List) Set(i int, v SandstormApi_restore_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_restore_Results_List) String() string {
	str, _ := text.MarshalList(0xecf1f14c4209c731, s.List)
	return str
}

// SandstormApi_restore_Results_Future is a wrapper for a SandstormApi_restore_Results promised by a client call.
type SandstormApi_restore_Results_Future struct{ *capnp.Future }

func (p SandstormApi_restore_Results_Future) Struct() (SandstormApi_restore_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_restore_Results{s}, err
}

func (p SandstormApi_restore_Results_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

type SandstormApi_drop_Params struct{ capnp.Struct }

// SandstormApi_drop_Params_TypeID is the unique identifier for the type SandstormApi_drop_Params.
const SandstormApi_drop_Params_TypeID = 0xadac227f85285c65

func NewSandstormApi_drop_Params(s *capnp.Segment) (SandstormApi_drop_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_drop_Params{st}, err
}

func NewRootSandstormApi_drop_Params(s *capnp.Segment) (SandstormApi_drop_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_drop_Params{st}, err
}

func ReadRootSandstormApi_drop_Params(msg *capnp.Message) (SandstormApi_drop_Params, error) {
	root, err := msg.Root()
	return SandstormApi_drop_Params{root.Struct()}, err
}

func (s SandstormApi_drop_Params) String() string {
	str, _ := text.Marshal(0xadac227f85285c65, s.Struct)
	return str
}

func (s SandstormApi_drop_Params) Token() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormApi_drop_Params) HasToken() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_drop_Params) SetToken(v []byte) error {
	return s.Struct.SetData(0, v)
}

// SandstormApi_drop_Params_List is a list of SandstormApi_drop_Params.
type SandstormApi_drop_Params_List struct{ capnp.List }

// NewSandstormApi_drop_Params creates a new list of SandstormApi_drop_Params.
func NewSandstormApi_drop_Params_List(s *capnp.Segment, sz int32) (SandstormApi_drop_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_drop_Params_List{l}, err
}

func (s SandstormApi_drop_Params_List) At(i int) SandstormApi_drop_Params {
	return SandstormApi_drop_Params{s.List.Struct(i)}
}

func (s SandstormApi_drop_Params_List) Set(i int, v SandstormApi_drop_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_drop_Params_List) String() string {
	str, _ := text.MarshalList(0xadac227f85285c65, s.List)
	return str
}

// SandstormApi_drop_Params_Future is a wrapper for a SandstormApi_drop_Params promised by a client call.
type SandstormApi_drop_Params_Future struct{ *capnp.Future }

func (p SandstormApi_drop_Params_Future) Struct() (SandstormApi_drop_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_drop_Params{s}, err
}

type SandstormApi_drop_Results struct{ capnp.Struct }

// SandstormApi_drop_Results_TypeID is the unique identifier for the type SandstormApi_drop_Results.
const SandstormApi_drop_Results_TypeID = 0xfbbc20367c72bc59

func NewSandstormApi_drop_Results(s *capnp.Segment) (SandstormApi_drop_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_drop_Results{st}, err
}

func NewRootSandstormApi_drop_Results(s *capnp.Segment) (SandstormApi_drop_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_drop_Results{st}, err
}

func ReadRootSandstormApi_drop_Results(msg *capnp.Message) (SandstormApi_drop_Results, error) {
	root, err := msg.Root()
	return SandstormApi_drop_Results{root.Struct()}, err
}

func (s SandstormApi_drop_Results) String() string {
	str, _ := text.Marshal(0xfbbc20367c72bc59, s.Struct)
	return str
}

// SandstormApi_drop_Results_List is a list of SandstormApi_drop_Results.
type SandstormApi_drop_Results_List struct{ capnp.List }

// NewSandstormApi_drop_Results creates a new list of SandstormApi_drop_Results.
func NewSandstormApi_drop_Results_List(s *capnp.Segment, sz int32) (SandstormApi_drop_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_drop_Results_List{l}, err
}

func (s SandstormApi_drop_Results_List) At(i int) SandstormApi_drop_Results {
	return SandstormApi_drop_Results{s.List.Struct(i)}
}

func (s SandstormApi_drop_Results_List) Set(i int, v SandstormApi_drop_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_drop_Results_List) String() string {
	str, _ := text.MarshalList(0xfbbc20367c72bc59, s.List)
	return str
}

// SandstormApi_drop_Results_Future is a wrapper for a SandstormApi_drop_Results promised by a client call.
type SandstormApi_drop_Results_Future struct{ *capnp.Future }

func (p SandstormApi_drop_Results_Future) Struct() (SandstormApi_drop_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_drop_Results{s}, err
}

type SandstormApi_deleted_Params struct{ capnp.Struct }

// SandstormApi_deleted_Params_TypeID is the unique identifier for the type SandstormApi_deleted_Params.
const SandstormApi_deleted_Params_TypeID = 0x87d94955ce3c61dd

func NewSandstormApi_deleted_Params(s *capnp.Segment) (SandstormApi_deleted_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_deleted_Params{st}, err
}

func NewRootSandstormApi_deleted_Params(s *capnp.Segment) (SandstormApi_deleted_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_deleted_Params{st}, err
}

func ReadRootSandstormApi_deleted_Params(msg *capnp.Message) (SandstormApi_deleted_Params, error) {
	root, err := msg.Root()
	return SandstormApi_deleted_Params{root.Struct()}, err
}

func (s SandstormApi_deleted_Params) String() string {
	str, _ := text.Marshal(0x87d94955ce3c61dd, s.Struct)
	return str
}

func (s SandstormApi_deleted_Params) Ref() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SandstormApi_deleted_Params) HasRef() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_deleted_Params) SetRef(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// SandstormApi_deleted_Params_List is a list of SandstormApi_deleted_Params.
type SandstormApi_deleted_Params_List struct{ capnp.List }

// NewSandstormApi_deleted_Params creates a new list of SandstormApi_deleted_Params.
func NewSandstormApi_deleted_Params_List(s *capnp.Segment, sz int32) (SandstormApi_deleted_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_deleted_Params_List{l}, err
}

func (s SandstormApi_deleted_Params_List) At(i int) SandstormApi_deleted_Params {
	return SandstormApi_deleted_Params{s.List.Struct(i)}
}

func (s SandstormApi_deleted_Params_List) Set(i int, v SandstormApi_deleted_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deleted_Params_List) String() string {
	str, _ := text.MarshalList(0x87d94955ce3c61dd, s.List)
	return str
}

// SandstormApi_deleted_Params_Future is a wrapper for a SandstormApi_deleted_Params promised by a client call.
type SandstormApi_deleted_Params_Future struct{ *capnp.Future }

func (p SandstormApi_deleted_Params_Future) Struct() (SandstormApi_deleted_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deleted_Params{s}, err
}

func (p SandstormApi_deleted_Params_Future) Ref() *capnp.Future {
	return p.Future.Field(0, nil)
}

type SandstormApi_deleted_Results struct{ capnp.Struct }

// SandstormApi_deleted_Results_TypeID is the unique identifier for the type SandstormApi_deleted_Results.
const SandstormApi_deleted_Results_TypeID = 0xf8fe6b4e94a960f7

func NewSandstormApi_deleted_Results(s *capnp.Segment) (SandstormApi_deleted_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deleted_Results{st}, err
}

func NewRootSandstormApi_deleted_Results(s *capnp.Segment) (SandstormApi_deleted_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deleted_Results{st}, err
}

func ReadRootSandstormApi_deleted_Results(msg *capnp.Message) (SandstormApi_deleted_Results, error) {
	root, err := msg.Root()
	return SandstormApi_deleted_Results{root.Struct()}, err
}

func (s SandstormApi_deleted_Results) String() string {
	str, _ := text.Marshal(0xf8fe6b4e94a960f7, s.Struct)
	return str
}

// SandstormApi_deleted_Results_List is a list of SandstormApi_deleted_Results.
type SandstormApi_deleted_Results_List struct{ capnp.List }

// NewSandstormApi_deleted_Results creates a new list of SandstormApi_deleted_Results.
func NewSandstormApi_deleted_Results_List(s *capnp.Segment, sz int32) (SandstormApi_deleted_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_deleted_Results_List{l}, err
}

func (s SandstormApi_deleted_Results_List) At(i int) SandstormApi_deleted_Results {
	return SandstormApi_deleted_Results{s.List.Struct(i)}
}

func (s SandstormApi_deleted_Results_List) Set(i int, v SandstormApi_deleted_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deleted_Results_List) String() string {
	str, _ := text.MarshalList(0xf8fe6b4e94a960f7, s.List)
	return str
}

// SandstormApi_deleted_Results_Future is a wrapper for a SandstormApi_deleted_Results promised by a client call.
type SandstormApi_deleted_Results_Future struct{ *capnp.Future }

func (p SandstormApi_deleted_Results_Future) Struct() (SandstormApi_deleted_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deleted_Results{s}, err
}

type SandstormApi_stayAwake_Params struct{ capnp.Struct }

// SandstormApi_stayAwake_Params_TypeID is the unique identifier for the type SandstormApi_stayAwake_Params.
const SandstormApi_stayAwake_Params_TypeID = 0xb469e5d523b89e1b

func NewSandstormApi_stayAwake_Params(s *capnp.Segment) (SandstormApi_stayAwake_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_stayAwake_Params{st}, err
}

func NewRootSandstormApi_stayAwake_Params(s *capnp.Segment) (SandstormApi_stayAwake_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_stayAwake_Params{st}, err
}

func ReadRootSandstormApi_stayAwake_Params(msg *capnp.Message) (SandstormApi_stayAwake_Params, error) {
	root, err := msg.Root()
	return SandstormApi_stayAwake_Params{root.Struct()}, err
}

func (s SandstormApi_stayAwake_Params) String() string {
	str, _ := text.Marshal(0xb469e5d523b89e1b, s.Struct)
	return str
}

func (s SandstormApi_stayAwake_Params) DisplayInfo() (activity.NotificationDisplayInfo, error) {
	p, err := s.Struct.Ptr(0)
	return activity.NotificationDisplayInfo{Struct: p.Struct()}, err
}

func (s SandstormApi_stayAwake_Params) HasDisplayInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_stayAwake_Params) SetDisplayInfo(v activity.NotificationDisplayInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDisplayInfo sets the displayInfo field to a newly
// allocated activity.NotificationDisplayInfo struct, preferring placement in s's segment.
func (s SandstormApi_stayAwake_Params) NewDisplayInfo() (activity.NotificationDisplayInfo, error) {
	ss, err := activity.NewNotificationDisplayInfo(s.Struct.Segment())
	if err != nil {
		return activity.NotificationDisplayInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s SandstormApi_stayAwake_Params) Notification() activity.OngoingNotification {
	p, _ := s.Struct.Ptr(1)
	return activity.OngoingNotification{Client: p.Interface().Client()}
}

func (s SandstormApi_stayAwake_Params) HasNotification() bool {
	return s.Struct.HasPtr(1)
}

func (s SandstormApi_stayAwake_Params) SetNotification(v activity.OngoingNotification) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

// SandstormApi_stayAwake_Params_List is a list of SandstormApi_stayAwake_Params.
type SandstormApi_stayAwake_Params_List struct{ capnp.List }

// NewSandstormApi_stayAwake_Params creates a new list of SandstormApi_stayAwake_Params.
func NewSandstormApi_stayAwake_Params_List(s *capnp.Segment, sz int32) (SandstormApi_stayAwake_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SandstormApi_stayAwake_Params_List{l}, err
}

func (s SandstormApi_stayAwake_Params_List) At(i int) SandstormApi_stayAwake_Params {
	return SandstormApi_stayAwake_Params{s.List.Struct(i)}
}

func (s SandstormApi_stayAwake_Params_List) Set(i int, v SandstormApi_stayAwake_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_stayAwake_Params_List) String() string {
	str, _ := text.MarshalList(0xb469e5d523b89e1b, s.List)
	return str
}

// SandstormApi_stayAwake_Params_Future is a wrapper for a SandstormApi_stayAwake_Params promised by a client call.
type SandstormApi_stayAwake_Params_Future struct{ *capnp.Future }

func (p SandstormApi_stayAwake_Params_Future) Struct() (SandstormApi_stayAwake_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_stayAwake_Params{s}, err
}

func (p SandstormApi_stayAwake_Params_Future) DisplayInfo() activity.NotificationDisplayInfo_Future {
	return activity.NotificationDisplayInfo_Future{Future: p.Future.Field(0, nil)}
}

func (p SandstormApi_stayAwake_Params_Future) Notification() activity.OngoingNotification {
	return activity.OngoingNotification{Client: p.Future.Field(1, nil).Client()}
}

type SandstormApi_stayAwake_Results struct{ capnp.Struct }

// SandstormApi_stayAwake_Results_TypeID is the unique identifier for the type SandstormApi_stayAwake_Results.
const SandstormApi_stayAwake_Results_TypeID = 0x9fd40f92e1eb5d21

func NewSandstormApi_stayAwake_Results(s *capnp.Segment) (SandstormApi_stayAwake_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_stayAwake_Results{st}, err
}

func NewRootSandstormApi_stayAwake_Results(s *capnp.Segment) (SandstormApi_stayAwake_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_stayAwake_Results{st}, err
}

func ReadRootSandstormApi_stayAwake_Results(msg *capnp.Message) (SandstormApi_stayAwake_Results, error) {
	root, err := msg.Root()
	return SandstormApi_stayAwake_Results{root.Struct()}, err
}

func (s SandstormApi_stayAwake_Results) String() string {
	str, _ := text.Marshal(0x9fd40f92e1eb5d21, s.Struct)
	return str
}

func (s SandstormApi_stayAwake_Results) Handle() util.Handle {
	p, _ := s.Struct.Ptr(0)
	return util.Handle{Client: p.Interface().Client()}
}

func (s SandstormApi_stayAwake_Results) HasHandle() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_stayAwake_Results) SetHandle(v util.Handle) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SandstormApi_stayAwake_Results_List is a list of SandstormApi_stayAwake_Results.
type SandstormApi_stayAwake_Results_List struct{ capnp.List }

// NewSandstormApi_stayAwake_Results creates a new list of SandstormApi_stayAwake_Results.
func NewSandstormApi_stayAwake_Results_List(s *capnp.Segment, sz int32) (SandstormApi_stayAwake_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_stayAwake_Results_List{l}, err
}

func (s SandstormApi_stayAwake_Results_List) At(i int) SandstormApi_stayAwake_Results {
	return SandstormApi_stayAwake_Results{s.List.Struct(i)}
}

func (s SandstormApi_stayAwake_Results_List) Set(i int, v SandstormApi_stayAwake_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_stayAwake_Results_List) String() string {
	str, _ := text.MarshalList(0x9fd40f92e1eb5d21, s.List)
	return str
}

// SandstormApi_stayAwake_Results_Future is a wrapper for a SandstormApi_stayAwake_Results promised by a client call.
type SandstormApi_stayAwake_Results_Future struct{ *capnp.Future }

func (p SandstormApi_stayAwake_Results_Future) Struct() (SandstormApi_stayAwake_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_stayAwake_Results{s}, err
}

func (p SandstormApi_stayAwake_Results_Future) Handle() util.Handle {
	return util.Handle{Client: p.Future.Field(0, nil).Client()}
}

type SandstormApi_save_Params struct{ capnp.Struct }

// SandstormApi_save_Params_TypeID is the unique identifier for the type SandstormApi_save_Params.
const SandstormApi_save_Params_TypeID = 0xd692a643ba8a1f58

func NewSandstormApi_save_Params(s *capnp.Segment) (SandstormApi_save_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_save_Params{st}, err
}

func NewRootSandstormApi_save_Params(s *capnp.Segment) (SandstormApi_save_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_save_Params{st}, err
}

func ReadRootSandstormApi_save_Params(msg *capnp.Message) (SandstormApi_save_Params, error) {
	root, err := msg.Root()
	return SandstormApi_save_Params{root.Struct()}, err
}

func (s SandstormApi_save_Params) String() string {
	str, _ := text.Marshal(0xd692a643ba8a1f58, s.Struct)
	return str
}

func (s SandstormApi_save_Params) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SandstormApi_save_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_save_Params) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SandstormApi_save_Params) Label() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(1)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s SandstormApi_save_Params) HasLabel() bool {
	return s.Struct.HasPtr(1)
}

func (s SandstormApi_save_Params) SetLabel(v util.LocalizedText) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewLabel sets the label field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s SandstormApi_save_Params) NewLabel() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// SandstormApi_save_Params_List is a list of SandstormApi_save_Params.
type SandstormApi_save_Params_List struct{ capnp.List }

// NewSandstormApi_save_Params creates a new list of SandstormApi_save_Params.
func NewSandstormApi_save_Params_List(s *capnp.Segment, sz int32) (SandstormApi_save_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SandstormApi_save_Params_List{l}, err
}

func (s SandstormApi_save_Params_List) At(i int) SandstormApi_save_Params {
	return SandstormApi_save_Params{s.List.Struct(i)}
}

func (s SandstormApi_save_Params_List) Set(i int, v SandstormApi_save_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_save_Params_List) String() string {
	str, _ := text.MarshalList(0xd692a643ba8a1f58, s.List)
	return str
}

// SandstormApi_save_Params_Future is a wrapper for a SandstormApi_save_Params promised by a client call.
type SandstormApi_save_Params_Future struct{ *capnp.Future }

func (p SandstormApi_save_Params_Future) Struct() (SandstormApi_save_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_save_Params{s}, err
}

func (p SandstormApi_save_Params_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SandstormApi_save_Params_Future) Label() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(1, nil)}
}

type SandstormApi_save_Results struct{ capnp.Struct }

// SandstormApi_save_Results_TypeID is the unique identifier for the type SandstormApi_save_Results.
const SandstormApi_save_Results_TypeID = 0x9206caa8d3e3cc7e

func NewSandstormApi_save_Results(s *capnp.Segment) (SandstormApi_save_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_save_Results{st}, err
}

func NewRootSandstormApi_save_Results(s *capnp.Segment) (SandstormApi_save_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_save_Results{st}, err
}

func ReadRootSandstormApi_save_Results(msg *capnp.Message) (SandstormApi_save_Results, error) {
	root, err := msg.Root()
	return SandstormApi_save_Results{root.Struct()}, err
}

func (s SandstormApi_save_Results) String() string {
	str, _ := text.Marshal(0x9206caa8d3e3cc7e, s.Struct)
	return str
}

func (s SandstormApi_save_Results) Token() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormApi_save_Results) HasToken() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_save_Results) SetToken(v []byte) error {
	return s.Struct.SetData(0, v)
}

// SandstormApi_save_Results_List is a list of SandstormApi_save_Results.
type SandstormApi_save_Results_List struct{ capnp.List }

// NewSandstormApi_save_Results creates a new list of SandstormApi_save_Results.
func NewSandstormApi_save_Results_List(s *capnp.Segment, sz int32) (SandstormApi_save_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_save_Results_List{l}, err
}

func (s SandstormApi_save_Results_List) At(i int) SandstormApi_save_Results {
	return SandstormApi_save_Results{s.List.Struct(i)}
}

func (s SandstormApi_save_Results_List) Set(i int, v SandstormApi_save_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_save_Results_List) String() string {
	str, _ := text.MarshalList(0x9206caa8d3e3cc7e, s.List)
	return str
}

// SandstormApi_save_Results_Future is a wrapper for a SandstormApi_save_Results promised by a client call.
type SandstormApi_save_Results_Future struct{ *capnp.Future }

func (p SandstormApi_save_Results_Future) Struct() (SandstormApi_save_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_save_Results{s}, err
}

type SandstormApi_backgroundActivity_Params struct{ capnp.Struct }

// SandstormApi_backgroundActivity_Params_TypeID is the unique identifier for the type SandstormApi_backgroundActivity_Params.
const SandstormApi_backgroundActivity_Params_TypeID = 0xec8866df56873858

func NewSandstormApi_backgroundActivity_Params(s *capnp.Segment) (SandstormApi_backgroundActivity_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_backgroundActivity_Params{st}, err
}

func NewRootSandstormApi_backgroundActivity_Params(s *capnp.Segment) (SandstormApi_backgroundActivity_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_backgroundActivity_Params{st}, err
}

func ReadRootSandstormApi_backgroundActivity_Params(msg *capnp.Message) (SandstormApi_backgroundActivity_Params, error) {
	root, err := msg.Root()
	return SandstormApi_backgroundActivity_Params{root.Struct()}, err
}

func (s SandstormApi_backgroundActivity_Params) String() string {
	str, _ := text.Marshal(0xec8866df56873858, s.Struct)
	return str
}

func (s SandstormApi_backgroundActivity_Params) Event() (activity.ActivityEvent, error) {
	p, err := s.Struct.Ptr(0)
	return activity.ActivityEvent{Struct: p.Struct()}, err
}

func (s SandstormApi_backgroundActivity_Params) HasEvent() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_backgroundActivity_Params) SetEvent(v activity.ActivityEvent) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewEvent sets the event field to a newly
// allocated activity.ActivityEvent struct, preferring placement in s's segment.
func (s SandstormApi_backgroundActivity_Params) NewEvent() (activity.ActivityEvent, error) {
	ss, err := activity.NewActivityEvent(s.Struct.Segment())
	if err != nil {
		return activity.ActivityEvent{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// SandstormApi_backgroundActivity_Params_List is a list of SandstormApi_backgroundActivity_Params.
type SandstormApi_backgroundActivity_Params_List struct{ capnp.List }

// NewSandstormApi_backgroundActivity_Params creates a new list of SandstormApi_backgroundActivity_Params.
func NewSandstormApi_backgroundActivity_Params_List(s *capnp.Segment, sz int32) (SandstormApi_backgroundActivity_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_backgroundActivity_Params_List{l}, err
}

func (s SandstormApi_backgroundActivity_Params_List) At(i int) SandstormApi_backgroundActivity_Params {
	return SandstormApi_backgroundActivity_Params{s.List.Struct(i)}
}

func (s SandstormApi_backgroundActivity_Params_List) Set(i int, v SandstormApi_backgroundActivity_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_backgroundActivity_Params_List) String() string {
	str, _ := text.MarshalList(0xec8866df56873858, s.List)
	return str
}

// SandstormApi_backgroundActivity_Params_Future is a wrapper for a SandstormApi_backgroundActivity_Params promised by a client call.
type SandstormApi_backgroundActivity_Params_Future struct{ *capnp.Future }

func (p SandstormApi_backgroundActivity_Params_Future) Struct() (SandstormApi_backgroundActivity_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_backgroundActivity_Params{s}, err
}

func (p SandstormApi_backgroundActivity_Params_Future) Event() activity.ActivityEvent_Future {
	return activity.ActivityEvent_Future{Future: p.Future.Field(0, nil)}
}

type SandstormApi_backgroundActivity_Results struct{ capnp.Struct }

// SandstormApi_backgroundActivity_Results_TypeID is the unique identifier for the type SandstormApi_backgroundActivity_Results.
const SandstormApi_backgroundActivity_Results_TypeID = 0xa535ac09456b2870

func NewSandstormApi_backgroundActivity_Results(s *capnp.Segment) (SandstormApi_backgroundActivity_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_backgroundActivity_Results{st}, err
}

func NewRootSandstormApi_backgroundActivity_Results(s *capnp.Segment) (SandstormApi_backgroundActivity_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_backgroundActivity_Results{st}, err
}

func ReadRootSandstormApi_backgroundActivity_Results(msg *capnp.Message) (SandstormApi_backgroundActivity_Results, error) {
	root, err := msg.Root()
	return SandstormApi_backgroundActivity_Results{root.Struct()}, err
}

func (s SandstormApi_backgroundActivity_Results) String() string {
	str, _ := text.Marshal(0xa535ac09456b2870, s.Struct)
	return str
}

// SandstormApi_backgroundActivity_Results_List is a list of SandstormApi_backgroundActivity_Results.
type SandstormApi_backgroundActivity_Results_List struct{ capnp.List }

// NewSandstormApi_backgroundActivity_Results creates a new list of SandstormApi_backgroundActivity_Results.
func NewSandstormApi_backgroundActivity_Results_List(s *capnp.Segment, sz int32) (SandstormApi_backgroundActivity_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_backgroundActivity_Results_List{l}, err
}

func (s SandstormApi_backgroundActivity_Results_List) At(i int) SandstormApi_backgroundActivity_Results {
	return SandstormApi_backgroundActivity_Results{s.List.Struct(i)}
}

func (s SandstormApi_backgroundActivity_Results_List) Set(i int, v SandstormApi_backgroundActivity_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_backgroundActivity_Results_List) String() string {
	str, _ := text.MarshalList(0xa535ac09456b2870, s.List)
	return str
}

// SandstormApi_backgroundActivity_Results_Future is a wrapper for a SandstormApi_backgroundActivity_Results promised by a client call.
type SandstormApi_backgroundActivity_Results_Future struct{ *capnp.Future }

func (p SandstormApi_backgroundActivity_Results_Future) Struct() (SandstormApi_backgroundActivity_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_backgroundActivity_Results{s}, err
}

type SandstormApi_getIdentityId_Params struct{ capnp.Struct }

// SandstormApi_getIdentityId_Params_TypeID is the unique identifier for the type SandstormApi_getIdentityId_Params.
const SandstormApi_getIdentityId_Params_TypeID = 0xd76b6c6364d6bff5

func NewSandstormApi_getIdentityId_Params(s *capnp.Segment) (SandstormApi_getIdentityId_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_getIdentityId_Params{st}, err
}

func NewRootSandstormApi_getIdentityId_Params(s *capnp.Segment) (SandstormApi_getIdentityId_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_getIdentityId_Params{st}, err
}

func ReadRootSandstormApi_getIdentityId_Params(msg *capnp.Message) (SandstormApi_getIdentityId_Params, error) {
	root, err := msg.Root()
	return SandstormApi_getIdentityId_Params{root.Struct()}, err
}

func (s SandstormApi_getIdentityId_Params) String() string {
	str, _ := text.Marshal(0xd76b6c6364d6bff5, s.Struct)
	return str
}

func (s SandstormApi_getIdentityId_Params) Identity() identity.Identity {
	p, _ := s.Struct.Ptr(0)
	return identity.Identity{Client: p.Interface().Client()}
}

func (s SandstormApi_getIdentityId_Params) HasIdentity() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_getIdentityId_Params) SetIdentity(v identity.Identity) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SandstormApi_getIdentityId_Params_List is a list of SandstormApi_getIdentityId_Params.
type SandstormApi_getIdentityId_Params_List struct{ capnp.List }

// NewSandstormApi_getIdentityId_Params creates a new list of SandstormApi_getIdentityId_Params.
func NewSandstormApi_getIdentityId_Params_List(s *capnp.Segment, sz int32) (SandstormApi_getIdentityId_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_getIdentityId_Params_List{l}, err
}

func (s SandstormApi_getIdentityId_Params_List) At(i int) SandstormApi_getIdentityId_Params {
	return SandstormApi_getIdentityId_Params{s.List.Struct(i)}
}

func (s SandstormApi_getIdentityId_Params_List) Set(i int, v SandstormApi_getIdentityId_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_getIdentityId_Params_List) String() string {
	str, _ := text.MarshalList(0xd76b6c6364d6bff5, s.List)
	return str
}

// SandstormApi_getIdentityId_Params_Future is a wrapper for a SandstormApi_getIdentityId_Params promised by a client call.
type SandstormApi_getIdentityId_Params_Future struct{ *capnp.Future }

func (p SandstormApi_getIdentityId_Params_Future) Struct() (SandstormApi_getIdentityId_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_getIdentityId_Params{s}, err
}

func (p SandstormApi_getIdentityId_Params_Future) Identity() identity.Identity {
	return identity.Identity{Client: p.Future.Field(0, nil).Client()}
}

type SandstormApi_getIdentityId_Results struct{ capnp.Struct }

// SandstormApi_getIdentityId_Results_TypeID is the unique identifier for the type SandstormApi_getIdentityId_Results.
const SandstormApi_getIdentityId_Results_TypeID = 0x8c4a70a31703d35c

func NewSandstormApi_getIdentityId_Results(s *capnp.Segment) (SandstormApi_getIdentityId_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_getIdentityId_Results{st}, err
}

func NewRootSandstormApi_getIdentityId_Results(s *capnp.Segment) (SandstormApi_getIdentityId_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_getIdentityId_Results{st}, err
}

func ReadRootSandstormApi_getIdentityId_Results(msg *capnp.Message) (SandstormApi_getIdentityId_Results, error) {
	root, err := msg.Root()
	return SandstormApi_getIdentityId_Results{root.Struct()}, err
}

func (s SandstormApi_getIdentityId_Results) String() string {
	str, _ := text.Marshal(0x8c4a70a31703d35c, s.Struct)
	return str
}

func (s SandstormApi_getIdentityId_Results) Id() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormApi_getIdentityId_Results) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_getIdentityId_Results) SetId(v []byte) error {
	return s.Struct.SetData(0, v)
}

// SandstormApi_getIdentityId_Results_List is a list of SandstormApi_getIdentityId_Results.
type SandstormApi_getIdentityId_Results_List struct{ capnp.List }

// NewSandstormApi_getIdentityId_Results creates a new list of SandstormApi_getIdentityId_Results.
func NewSandstormApi_getIdentityId_Results_List(s *capnp.Segment, sz int32) (SandstormApi_getIdentityId_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_getIdentityId_Results_List{l}, err
}

func (s SandstormApi_getIdentityId_Results_List) At(i int) SandstormApi_getIdentityId_Results {
	return SandstormApi_getIdentityId_Results{s.List.Struct(i)}
}

func (s SandstormApi_getIdentityId_Results_List) Set(i int, v SandstormApi_getIdentityId_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_getIdentityId_Results_List) String() string {
	str, _ := text.MarshalList(0x8c4a70a31703d35c, s.List)
	return str
}

// SandstormApi_getIdentityId_Results_Future is a wrapper for a SandstormApi_getIdentityId_Results promised by a client call.
type SandstormApi_getIdentityId_Results_Future struct{ *capnp.Future }

func (p SandstormApi_getIdentityId_Results_Future) Struct() (SandstormApi_getIdentityId_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_getIdentityId_Results{s}, err
}

type SandstormApi_schedule_Results struct{ capnp.Struct }

// SandstormApi_schedule_Results_TypeID is the unique identifier for the type SandstormApi_schedule_Results.
const SandstormApi_schedule_Results_TypeID = 0x8dc8d4c06855854e

func NewSandstormApi_schedule_Results(s *capnp.Segment) (SandstormApi_schedule_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_schedule_Results{st}, err
}

func NewRootSandstormApi_schedule_Results(s *capnp.Segment) (SandstormApi_schedule_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_schedule_Results{st}, err
}

func ReadRootSandstormApi_schedule_Results(msg *capnp.Message) (SandstormApi_schedule_Results, error) {
	root, err := msg.Root()
	return SandstormApi_schedule_Results{root.Struct()}, err
}

func (s SandstormApi_schedule_Results) String() string {
	str, _ := text.Marshal(0x8dc8d4c06855854e, s.Struct)
	return str
}

// SandstormApi_schedule_Results_List is a list of SandstormApi_schedule_Results.
type SandstormApi_schedule_Results_List struct{ capnp.List }

// NewSandstormApi_schedule_Results creates a new list of SandstormApi_schedule_Results.
func NewSandstormApi_schedule_Results_List(s *capnp.Segment, sz int32) (SandstormApi_schedule_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_schedule_Results_List{l}, err
}

func (s SandstormApi_schedule_Results_List) At(i int) SandstormApi_schedule_Results {
	return SandstormApi_schedule_Results{s.List.Struct(i)}
}

func (s SandstormApi_schedule_Results_List) Set(i int, v SandstormApi_schedule_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_schedule_Results_List) String() string {
	str, _ := text.MarshalList(0x8dc8d4c06855854e, s.List)
	return str
}

// SandstormApi_schedule_Results_Future is a wrapper for a SandstormApi_schedule_Results promised by a client call.
type SandstormApi_schedule_Results_Future struct{ *capnp.Future }

func (p SandstormApi_schedule_Results_Future) Struct() (SandstormApi_schedule_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_schedule_Results{s}, err
}

type ScheduledJob struct{ capnp.Struct }
type ScheduledJob_schedule ScheduledJob
type ScheduledJob_schedule_oneShot ScheduledJob
type ScheduledJob_schedule_Which uint16

const (
	ScheduledJob_schedule_Which_oneShot  ScheduledJob_schedule_Which = 0
	ScheduledJob_schedule_Which_periodic ScheduledJob_schedule_Which = 1
)

func (w ScheduledJob_schedule_Which) String() string {
	const s = "oneShotperiodic"
	switch w {
	case ScheduledJob_schedule_Which_oneShot:
		return s[0:7]
	case ScheduledJob_schedule_Which_periodic:
		return s[7:15]

	}
	return "ScheduledJob_schedule_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// ScheduledJob_TypeID is the unique identifier for the type ScheduledJob.
const ScheduledJob_TypeID = 0xa34f0cfe24c69d74

func NewScheduledJob(s *capnp.Segment) (ScheduledJob, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return ScheduledJob{st}, err
}

func NewRootScheduledJob(s *capnp.Segment) (ScheduledJob, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return ScheduledJob{st}, err
}

func ReadRootScheduledJob(msg *capnp.Message) (ScheduledJob, error) {
	root, err := msg.Root()
	return ScheduledJob{root.Struct()}, err
}

func (s ScheduledJob) String() string {
	str, _ := text.Marshal(0xa34f0cfe24c69d74, s.Struct)
	return str
}

func (s ScheduledJob) Name() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(0)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s ScheduledJob) HasName() bool {
	return s.Struct.HasPtr(0)
}

func (s ScheduledJob) SetName(v util.LocalizedText) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewName sets the name field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s ScheduledJob) NewName() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s ScheduledJob) Callback() ScheduledJob_Callback {
	p, _ := s.Struct.Ptr(1)
	return ScheduledJob_Callback{Client: p.Interface().Client()}
}

func (s ScheduledJob) HasCallback() bool {
	return s.Struct.HasPtr(1)
}

func (s ScheduledJob) SetCallback(v ScheduledJob_Callback) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

func (s ScheduledJob) Schedule() ScheduledJob_schedule { return ScheduledJob_schedule(s) }

func (s ScheduledJob_schedule) Which() ScheduledJob_schedule_Which {
	return ScheduledJob_schedule_Which(s.Struct.Uint16(16))
}
func (s ScheduledJob_schedule) OneShot() ScheduledJob_schedule_oneShot {
	return ScheduledJob_schedule_oneShot(s)
}

func (s ScheduledJob_schedule) SetOneShot() {
	s.Struct.SetUint16(16, 0)
}

func (s ScheduledJob_schedule_oneShot) When() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s ScheduledJob_schedule_oneShot) SetWhen(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s ScheduledJob_schedule_oneShot) Slack() uint64 {
	return s.Struct.Uint64(8)
}

func (s ScheduledJob_schedule_oneShot) SetSlack(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s ScheduledJob_schedule) Periodic() SchedulingPeriod {
	if s.Struct.Uint16(16) != 1 {
		panic("Which() != periodic")
	}
	return SchedulingPeriod(s.Struct.Uint16(0))
}

func (s ScheduledJob_schedule) SetPeriodic(v SchedulingPeriod) {
	s.Struct.SetUint16(16, 1)
	s.Struct.SetUint16(0, uint16(v))
}

// ScheduledJob_List is a list of ScheduledJob.
type ScheduledJob_List struct{ capnp.List }

// NewScheduledJob creates a new list of ScheduledJob.
func NewScheduledJob_List(s *capnp.Segment, sz int32) (ScheduledJob_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2}, sz)
	return ScheduledJob_List{l}, err
}

func (s ScheduledJob_List) At(i int) ScheduledJob { return ScheduledJob{s.List.Struct(i)} }

func (s ScheduledJob_List) Set(i int, v ScheduledJob) error { return s.List.SetStruct(i, v.Struct) }

func (s ScheduledJob_List) String() string {
	str, _ := text.MarshalList(0xa34f0cfe24c69d74, s.List)
	return str
}

// ScheduledJob_Future is a wrapper for a ScheduledJob promised by a client call.
type ScheduledJob_Future struct{ *capnp.Future }

func (p ScheduledJob_Future) Struct() (ScheduledJob, error) {
	s, err := p.Future.Struct()
	return ScheduledJob{s}, err
}

func (p ScheduledJob_Future) Name() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(0, nil)}
}

func (p ScheduledJob_Future) Callback() ScheduledJob_Callback {
	return ScheduledJob_Callback{Client: p.Future.Field(1, nil).Client()}
}

func (p ScheduledJob_Future) Schedule() ScheduledJob_schedule_Future {
	return ScheduledJob_schedule_Future{p.Future}
}

// ScheduledJob_schedule_Future is a wrapper for a ScheduledJob_schedule promised by a client call.
type ScheduledJob_schedule_Future struct{ *capnp.Future }

func (p ScheduledJob_schedule_Future) Struct() (ScheduledJob_schedule, error) {
	s, err := p.Future.Struct()
	return ScheduledJob_schedule{s}, err
}

func (p ScheduledJob_schedule_Future) OneShot() ScheduledJob_schedule_oneShot_Future {
	return ScheduledJob_schedule_oneShot_Future{p.Future}
}

// ScheduledJob_schedule_oneShot_Future is a wrapper for a ScheduledJob_schedule_oneShot promised by a client call.
type ScheduledJob_schedule_oneShot_Future struct{ *capnp.Future }

func (p ScheduledJob_schedule_oneShot_Future) Struct() (ScheduledJob_schedule_oneShot, error) {
	s, err := p.Future.Struct()
	return ScheduledJob_schedule_oneShot{s}, err
}

type ScheduledJob_Callback struct{ Client *capnp.Client }

// ScheduledJob_Callback_TypeID is the unique identifier for the type ScheduledJob_Callback.
const ScheduledJob_Callback_TypeID = 0xab619ad5a8fb7e11

func (c ScheduledJob_Callback) Run(ctx context.Context, params func(ScheduledJob_Callback_run_Params) error) (ScheduledJob_Callback_run_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xab619ad5a8fb7e11,
			MethodID:      0,
			InterfaceName: "grain.capnp:ScheduledJob.Callback",
			MethodName:    "run",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(ScheduledJob_Callback_run_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return ScheduledJob_Callback_run_Results_Future{Future: ans.Future()}, release
}

func (c ScheduledJob_Callback) AddRef() ScheduledJob_Callback {
	return ScheduledJob_Callback{
		Client: c.Client.AddRef(),
	}
}

func (c ScheduledJob_Callback) Release() {
	c.Client.Release()
}

// A ScheduledJob_Callback_Server is a ScheduledJob_Callback with a local implementation.
type ScheduledJob_Callback_Server interface {
	Run(context.Context, ScheduledJob_Callback_run) error
}

// ScheduledJob_Callback_NewServer creates a new Server from an implementation of ScheduledJob_Callback_Server.
func ScheduledJob_Callback_NewServer(s ScheduledJob_Callback_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(ScheduledJob_Callback_Methods(nil, s), s, c, policy)
}

// ScheduledJob_Callback_ServerToClient creates a new Client from an implementation of ScheduledJob_Callback_Server.
// The caller is responsible for calling Release on the returned Client.
func ScheduledJob_Callback_ServerToClient(s ScheduledJob_Callback_Server, policy *server.Policy) ScheduledJob_Callback {
	return ScheduledJob_Callback{Client: capnp.NewClient(ScheduledJob_Callback_NewServer(s, policy))}
}

// ScheduledJob_Callback_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func ScheduledJob_Callback_Methods(methods []server.Method, s ScheduledJob_Callback_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xab619ad5a8fb7e11,
			MethodID:      0,
			InterfaceName: "grain.capnp:ScheduledJob.Callback",
			MethodName:    "run",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Run(ctx, ScheduledJob_Callback_run{call})
		},
	})

	return methods
}

// ScheduledJob_Callback_run holds the state for a server call to ScheduledJob_Callback.run.
// See server.Call for documentation.
type ScheduledJob_Callback_run struct {
	*server.Call
}

// Args returns the call's arguments.
func (c ScheduledJob_Callback_run) Args() ScheduledJob_Callback_run_Params {
	return ScheduledJob_Callback_run_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c ScheduledJob_Callback_run) AllocResults() (ScheduledJob_Callback_run_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return ScheduledJob_Callback_run_Results{Struct: r}, err
}

type ScheduledJob_Callback_run_Params struct{ capnp.Struct }

// ScheduledJob_Callback_run_Params_TypeID is the unique identifier for the type ScheduledJob_Callback_run_Params.
const ScheduledJob_Callback_run_Params_TypeID = 0xc0dde7310fa94a2b

func NewScheduledJob_Callback_run_Params(s *capnp.Segment) (ScheduledJob_Callback_run_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ScheduledJob_Callback_run_Params{st}, err
}

func NewRootScheduledJob_Callback_run_Params(s *capnp.Segment) (ScheduledJob_Callback_run_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ScheduledJob_Callback_run_Params{st}, err
}

func ReadRootScheduledJob_Callback_run_Params(msg *capnp.Message) (ScheduledJob_Callback_run_Params, error) {
	root, err := msg.Root()
	return ScheduledJob_Callback_run_Params{root.Struct()}, err
}

func (s ScheduledJob_Callback_run_Params) String() string {
	str, _ := text.Marshal(0xc0dde7310fa94a2b, s.Struct)
	return str
}

// ScheduledJob_Callback_run_Params_List is a list of ScheduledJob_Callback_run_Params.
type ScheduledJob_Callback_run_Params_List struct{ capnp.List }

// NewScheduledJob_Callback_run_Params creates a new list of ScheduledJob_Callback_run_Params.
func NewScheduledJob_Callback_run_Params_List(s *capnp.Segment, sz int32) (ScheduledJob_Callback_run_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return ScheduledJob_Callback_run_Params_List{l}, err
}

func (s ScheduledJob_Callback_run_Params_List) At(i int) ScheduledJob_Callback_run_Params {
	return ScheduledJob_Callback_run_Params{s.List.Struct(i)}
}

func (s ScheduledJob_Callback_run_Params_List) Set(i int, v ScheduledJob_Callback_run_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ScheduledJob_Callback_run_Params_List) String() string {
	str, _ := text.MarshalList(0xc0dde7310fa94a2b, s.List)
	return str
}

// ScheduledJob_Callback_run_Params_Future is a wrapper for a ScheduledJob_Callback_run_Params promised by a client call.
type ScheduledJob_Callback_run_Params_Future struct{ *capnp.Future }

func (p ScheduledJob_Callback_run_Params_Future) Struct() (ScheduledJob_Callback_run_Params, error) {
	s, err := p.Future.Struct()
	return ScheduledJob_Callback_run_Params{s}, err
}

type ScheduledJob_Callback_run_Results struct{ capnp.Struct }

// ScheduledJob_Callback_run_Results_TypeID is the unique identifier for the type ScheduledJob_Callback_run_Results.
const ScheduledJob_Callback_run_Results_TypeID = 0x8b89acc0133457cf

func NewScheduledJob_Callback_run_Results(s *capnp.Segment) (ScheduledJob_Callback_run_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return ScheduledJob_Callback_run_Results{st}, err
}

func NewRootScheduledJob_Callback_run_Results(s *capnp.Segment) (ScheduledJob_Callback_run_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return ScheduledJob_Callback_run_Results{st}, err
}

func ReadRootScheduledJob_Callback_run_Results(msg *capnp.Message) (ScheduledJob_Callback_run_Results, error) {
	root, err := msg.Root()
	return ScheduledJob_Callback_run_Results{root.Struct()}, err
}

func (s ScheduledJob_Callback_run_Results) String() string {
	str, _ := text.Marshal(0x8b89acc0133457cf, s.Struct)
	return str
}

func (s ScheduledJob_Callback_run_Results) CancelFutureRuns() bool {
	return s.Struct.Bit(0)
}

func (s ScheduledJob_Callback_run_Results) SetCancelFutureRuns(v bool) {
	s.Struct.SetBit(0, v)
}

// ScheduledJob_Callback_run_Results_List is a list of ScheduledJob_Callback_run_Results.
type ScheduledJob_Callback_run_Results_List struct{ capnp.List }

// NewScheduledJob_Callback_run_Results creates a new list of ScheduledJob_Callback_run_Results.
func NewScheduledJob_Callback_run_Results_List(s *capnp.Segment, sz int32) (ScheduledJob_Callback_run_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return ScheduledJob_Callback_run_Results_List{l}, err
}

func (s ScheduledJob_Callback_run_Results_List) At(i int) ScheduledJob_Callback_run_Results {
	return ScheduledJob_Callback_run_Results{s.List.Struct(i)}
}

func (s ScheduledJob_Callback_run_Results_List) Set(i int, v ScheduledJob_Callback_run_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ScheduledJob_Callback_run_Results_List) String() string {
	str, _ := text.MarshalList(0x8b89acc0133457cf, s.List)
	return str
}

// ScheduledJob_Callback_run_Results_Future is a wrapper for a ScheduledJob_Callback_run_Results promised by a client call.
type ScheduledJob_Callback_run_Results_Future struct{ *capnp.Future }

func (p ScheduledJob_Callback_run_Results_Future) Struct() (ScheduledJob_Callback_run_Results, error) {
	s, err := p.Future.Struct()
	return ScheduledJob_Callback_run_Results{s}, err
}

type SchedulingPeriod uint16

// SchedulingPeriod_TypeID is the unique identifier for the type SchedulingPeriod.
const SchedulingPeriod_TypeID = 0x8478a37e9456409d

// Values of SchedulingPeriod.
const (
	SchedulingPeriod_annually SchedulingPeriod = 3
	SchedulingPeriod_monthly  SchedulingPeriod = 2
	SchedulingPeriod_weekly   SchedulingPeriod = 4
	SchedulingPeriod_daily    SchedulingPeriod = 1
	SchedulingPeriod_hourly   SchedulingPeriod = 0
)

// String returns the enum's constant name.
func (c SchedulingPeriod) String() string {
	switch c {
	case SchedulingPeriod_annually:
		return "annually"
	case SchedulingPeriod_monthly:
		return "monthly"
	case SchedulingPeriod_weekly:
		return "weekly"
	case SchedulingPeriod_daily:
		return "daily"
	case SchedulingPeriod_hourly:
		return "hourly"

	default:
		return ""
	}
}

// SchedulingPeriodFromString returns the enum value with a name,
// or the zero value if there's no such value.
func SchedulingPeriodFromString(c string) SchedulingPeriod {
	switch c {
	case "annually":
		return SchedulingPeriod_annually
	case "monthly":
		return SchedulingPeriod_monthly
	case "weekly":
		return SchedulingPeriod_weekly
	case "daily":
		return SchedulingPeriod_daily
	case "hourly":
		return SchedulingPeriod_hourly

	default:
		return 0
	}
}

type SchedulingPeriod_List struct{ capnp.List }

func NewSchedulingPeriod_List(s *capnp.Segment, sz int32) (SchedulingPeriod_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return SchedulingPeriod_List{l.List}, err
}

func (l SchedulingPeriod_List) At(i int) SchedulingPeriod {
	ul := capnp.UInt16List{List: l.List}
	return SchedulingPeriod(ul.At(i))
}

func (l SchedulingPeriod_List) Set(i int, v SchedulingPeriod) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type UiView struct{ Client *capnp.Client }

// UiView_TypeID is the unique identifier for the type UiView.
const UiView_TypeID = 0xdbb4d798ea67e2e7

func (c UiView) GetViewInfo(ctx context.Context, params func(UiView_getViewInfo_Params) error) (UiView_ViewInfo_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      0,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "getViewInfo",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_getViewInfo_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_ViewInfo_Future{Future: ans.Future()}, release
}
func (c UiView) NewSession(ctx context.Context, params func(UiView_newSession_Params) error) (UiView_newSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      1,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newSession_Results_Future{Future: ans.Future()}, release
}
func (c UiView) NewRequestSession(ctx context.Context, params func(UiView_newRequestSession_Params) error) (UiView_newRequestSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      2,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newRequestSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 5}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newRequestSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newRequestSession_Results_Future{Future: ans.Future()}, release
}
func (c UiView) NewOfferSession(ctx context.Context, params func(UiView_newOfferSession_Params) error) (UiView_newOfferSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      3,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newOfferSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 6}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newOfferSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newOfferSession_Results_Future{Future: ans.Future()}, release
}

func (c UiView) AddRef() UiView {
	return UiView{
		Client: c.Client.AddRef(),
	}
}

func (c UiView) Release() {
	c.Client.Release()
}

// A UiView_Server is a UiView with a local implementation.
type UiView_Server interface {
	GetViewInfo(context.Context, UiView_getViewInfo) error

	NewSession(context.Context, UiView_newSession) error

	NewRequestSession(context.Context, UiView_newRequestSession) error

	NewOfferSession(context.Context, UiView_newOfferSession) error
}

// UiView_NewServer creates a new Server from an implementation of UiView_Server.
func UiView_NewServer(s UiView_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(UiView_Methods(nil, s), s, c, policy)
}

// UiView_ServerToClient creates a new Client from an implementation of UiView_Server.
// The caller is responsible for calling Release on the returned Client.
func UiView_ServerToClient(s UiView_Server, policy *server.Policy) UiView {
	return UiView{Client: capnp.NewClient(UiView_NewServer(s, policy))}
}

// UiView_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func UiView_Methods(methods []server.Method, s UiView_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 4)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      0,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "getViewInfo",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetViewInfo(ctx, UiView_getViewInfo{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      1,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewSession(ctx, UiView_newSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      2,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newRequestSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewRequestSession(ctx, UiView_newRequestSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      3,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newOfferSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewOfferSession(ctx, UiView_newOfferSession{call})
		},
	})

	return methods
}

// UiView_getViewInfo holds the state for a server call to UiView.getViewInfo.
// See server.Call for documentation.
type UiView_getViewInfo struct {
	*server.Call
}

// Args returns the call's arguments.
func (c UiView_getViewInfo) Args() UiView_getViewInfo_Params {
	return UiView_getViewInfo_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c UiView_getViewInfo) AllocResults() (UiView_ViewInfo, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 8})
	return UiView_ViewInfo{Struct: r}, err
}

// UiView_newSession holds the state for a server call to UiView.newSession.
// See server.Call for documentation.
type UiView_newSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c UiView_newSession) Args() UiView_newSession_Params {
	return UiView_newSession_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c UiView_newSession) AllocResults() (UiView_newSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newSession_Results{Struct: r}, err
}

// UiView_newRequestSession holds the state for a server call to UiView.newRequestSession.
// See server.Call for documentation.
type UiView_newRequestSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c UiView_newRequestSession) Args() UiView_newRequestSession_Params {
	return UiView_newRequestSession_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c UiView_newRequestSession) AllocResults() (UiView_newRequestSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newRequestSession_Results{Struct: r}, err
}

// UiView_newOfferSession holds the state for a server call to UiView.newOfferSession.
// See server.Call for documentation.
type UiView_newOfferSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c UiView_newOfferSession) Args() UiView_newOfferSession_Params {
	return UiView_newOfferSession_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c UiView_newOfferSession) AllocResults() (UiView_newOfferSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newOfferSession_Results{Struct: r}, err
}

type UiView_ViewInfo struct{ capnp.Struct }

// UiView_ViewInfo_TypeID is the unique identifier for the type UiView_ViewInfo.
const UiView_ViewInfo_TypeID = 0xbc5e354741a8e665

func NewUiView_ViewInfo(s *capnp.Segment) (UiView_ViewInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8})
	return UiView_ViewInfo{st}, err
}

func NewRootUiView_ViewInfo(s *capnp.Segment) (UiView_ViewInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8})
	return UiView_ViewInfo{st}, err
}

func ReadRootUiView_ViewInfo(msg *capnp.Message) (UiView_ViewInfo, error) {
	root, err := msg.Root()
	return UiView_ViewInfo{root.Struct()}, err
}

func (s UiView_ViewInfo) String() string {
	str, _ := text.Marshal(0xbc5e354741a8e665, s.Struct)
	return str
}

func (s UiView_ViewInfo) Permissions() (PermissionDef_List, error) {
	p, err := s.Struct.Ptr(0)
	return PermissionDef_List{List: p.List()}, err
}

func (s UiView_ViewInfo) HasPermissions() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_ViewInfo) SetPermissions(v PermissionDef_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewPermissions sets the permissions field to a newly
// allocated PermissionDef_List, preferring placement in s's segment.
func (s UiView_ViewInfo) NewPermissions(n int32) (PermissionDef_List, error) {
	l, err := NewPermissionDef_List(s.Struct.Segment(), n)
	if err != nil {
		return PermissionDef_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s UiView_ViewInfo) Roles() (RoleDef_List, error) {
	p, err := s.Struct.Ptr(1)
	return RoleDef_List{List: p.List()}, err
}

func (s UiView_ViewInfo) HasRoles() bool {
	return s.Struct.HasPtr(1)
}

func (s UiView_ViewInfo) SetRoles(v RoleDef_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRoles sets the roles field to a newly
// allocated RoleDef_List, preferring placement in s's segment.
func (s UiView_ViewInfo) NewRoles(n int32) (RoleDef_List, error) {
	l, err := NewRoleDef_List(s.Struct.Segment(), n)
	if err != nil {
		return RoleDef_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s UiView_ViewInfo) DeniedPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.BitList{List: p.List()}, err
}

func (s UiView_ViewInfo) HasDeniedPermissions() bool {
	return s.Struct.HasPtr(2)
}

func (s UiView_ViewInfo) SetDeniedPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewDeniedPermissions sets the deniedPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s UiView_ViewInfo) NewDeniedPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s UiView_ViewInfo) MatchRequests() (powerbox.PowerboxDescriptor_List, error) {
	p, err := s.Struct.Ptr(3)
	return powerbox.PowerboxDescriptor_List{List: p.List()}, err
}

func (s UiView_ViewInfo) HasMatchRequests() bool {
	return s.Struct.HasPtr(3)
}

func (s UiView_ViewInfo) SetMatchRequests(v powerbox.PowerboxDescriptor_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewMatchRequests sets the matchRequests field to a newly
// allocated powerbox.PowerboxDescriptor_List, preferring placement in s's segment.
func (s UiView_ViewInfo) NewMatchRequests(n int32) (powerbox.PowerboxDescriptor_List, error) {
	l, err := powerbox.NewPowerboxDescriptor_List(s.Struct.Segment(), n)
	if err != nil {
		return powerbox.PowerboxDescriptor_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s UiView_ViewInfo) MatchOffers() (powerbox.PowerboxDescriptor_List, error) {
	p, err := s.Struct.Ptr(4)
	return powerbox.PowerboxDescriptor_List{List: p.List()}, err
}

func (s UiView_ViewInfo) HasMatchOffers() bool {
	return s.Struct.HasPtr(4)
}

func (s UiView_ViewInfo) SetMatchOffers(v powerbox.PowerboxDescriptor_List) error {
	return s.Struct.SetPtr(4, v.List.ToPtr())
}

// NewMatchOffers sets the matchOffers field to a newly
// allocated powerbox.PowerboxDescriptor_List, preferring placement in s's segment.
func (s UiView_ViewInfo) NewMatchOffers(n int32) (powerbox.PowerboxDescriptor_List, error) {
	l, err := powerbox.NewPowerboxDescriptor_List(s.Struct.Segment(), n)
	if err != nil {
		return powerbox.PowerboxDescriptor_List{}, err
	}
	err = s.Struct.SetPtr(4, l.List.ToPtr())
	return l, err
}

func (s UiView_ViewInfo) AppTitle() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(5)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s UiView_ViewInfo) HasAppTitle() bool {
	return s.Struct.HasPtr(5)
}

func (s UiView_ViewInfo) SetAppTitle(v util.LocalizedText) error {
	return s.Struct.SetPtr(5, v.Struct.ToPtr())
}

// NewAppTitle sets the appTitle field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s UiView_ViewInfo) NewAppTitle() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(5, ss.Struct.ToPtr())
	return ss, err
}

func (s UiView_ViewInfo) GrainIcon() util.StaticAsset {
	p, _ := s.Struct.Ptr(6)
	return util.StaticAsset{Client: p.Interface().Client()}
}

func (s UiView_ViewInfo) HasGrainIcon() bool {
	return s.Struct.HasPtr(6)
}

func (s UiView_ViewInfo) SetGrainIcon(v util.StaticAsset) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(6, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(6, in.ToPtr())
}

func (s UiView_ViewInfo) EventTypes() (activity.ActivityTypeDef_List, error) {
	p, err := s.Struct.Ptr(7)
	return activity.ActivityTypeDef_List{List: p.List()}, err
}

func (s UiView_ViewInfo) HasEventTypes() bool {
	return s.Struct.HasPtr(7)
}

func (s UiView_ViewInfo) SetEventTypes(v activity.ActivityTypeDef_List) error {
	return s.Struct.SetPtr(7, v.List.ToPtr())
}

// NewEventTypes sets the eventTypes field to a newly
// allocated activity.ActivityTypeDef_List, preferring placement in s's segment.
func (s UiView_ViewInfo) NewEventTypes(n int32) (activity.ActivityTypeDef_List, error) {
	l, err := activity.NewActivityTypeDef_List(s.Struct.Segment(), n)
	if err != nil {
		return activity.ActivityTypeDef_List{}, err
	}
	err = s.Struct.SetPtr(7, l.List.ToPtr())
	return l, err
}

// UiView_ViewInfo_List is a list of UiView_ViewInfo.
type UiView_ViewInfo_List struct{ capnp.List }

// NewUiView_ViewInfo creates a new list of UiView_ViewInfo.
func NewUiView_ViewInfo_List(s *capnp.Segment, sz int32) (UiView_ViewInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8}, sz)
	return UiView_ViewInfo_List{l}, err
}

func (s UiView_ViewInfo_List) At(i int) UiView_ViewInfo { return UiView_ViewInfo{s.List.Struct(i)} }

func (s UiView_ViewInfo_List) Set(i int, v UiView_ViewInfo) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_ViewInfo_List) String() string {
	str, _ := text.MarshalList(0xbc5e354741a8e665, s.List)
	return str
}

// UiView_ViewInfo_Future is a wrapper for a UiView_ViewInfo promised by a client call.
type UiView_ViewInfo_Future struct{ *capnp.Future }

func (p UiView_ViewInfo_Future) Struct() (UiView_ViewInfo, error) {
	s, err := p.Future.Struct()
	return UiView_ViewInfo{s}, err
}

func (p UiView_ViewInfo_Future) AppTitle() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(5, nil)}
}

func (p UiView_ViewInfo_Future) GrainIcon() util.StaticAsset {
	return util.StaticAsset{Client: p.Future.Field(6, nil).Client()}
}

type UiView_PowerboxTag struct{ capnp.Struct }

// UiView_PowerboxTag_TypeID is the unique identifier for the type UiView_PowerboxTag.
const UiView_PowerboxTag_TypeID = 0x982790c08b1958ec

func NewUiView_PowerboxTag(s *capnp.Segment) (UiView_PowerboxTag, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_PowerboxTag{st}, err
}

func NewRootUiView_PowerboxTag(s *capnp.Segment) (UiView_PowerboxTag, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_PowerboxTag{st}, err
}

func ReadRootUiView_PowerboxTag(msg *capnp.Message) (UiView_PowerboxTag, error) {
	root, err := msg.Root()
	return UiView_PowerboxTag{root.Struct()}, err
}

func (s UiView_PowerboxTag) String() string {
	str, _ := text.Marshal(0x982790c08b1958ec, s.Struct)
	return str
}

func (s UiView_PowerboxTag) Title() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s UiView_PowerboxTag) HasTitle() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_PowerboxTag) TitleBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s UiView_PowerboxTag) SetTitle(v string) error {
	return s.Struct.SetText(0, v)
}

// UiView_PowerboxTag_List is a list of UiView_PowerboxTag.
type UiView_PowerboxTag_List struct{ capnp.List }

// NewUiView_PowerboxTag creates a new list of UiView_PowerboxTag.
func NewUiView_PowerboxTag_List(s *capnp.Segment, sz int32) (UiView_PowerboxTag_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return UiView_PowerboxTag_List{l}, err
}

func (s UiView_PowerboxTag_List) At(i int) UiView_PowerboxTag {
	return UiView_PowerboxTag{s.List.Struct(i)}
}

func (s UiView_PowerboxTag_List) Set(i int, v UiView_PowerboxTag) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_PowerboxTag_List) String() string {
	str, _ := text.MarshalList(0x982790c08b1958ec, s.List)
	return str
}

// UiView_PowerboxTag_Future is a wrapper for a UiView_PowerboxTag promised by a client call.
type UiView_PowerboxTag_Future struct{ *capnp.Future }

func (p UiView_PowerboxTag_Future) Struct() (UiView_PowerboxTag, error) {
	s, err := p.Future.Struct()
	return UiView_PowerboxTag{s}, err
}

type UiView_getViewInfo_Params struct{ capnp.Struct }

// UiView_getViewInfo_Params_TypeID is the unique identifier for the type UiView_getViewInfo_Params.
const UiView_getViewInfo_Params_TypeID = 0x8f2ef49549d64e86

func NewUiView_getViewInfo_Params(s *capnp.Segment) (UiView_getViewInfo_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return UiView_getViewInfo_Params{st}, err
}

func NewRootUiView_getViewInfo_Params(s *capnp.Segment) (UiView_getViewInfo_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return UiView_getViewInfo_Params{st}, err
}

func ReadRootUiView_getViewInfo_Params(msg *capnp.Message) (UiView_getViewInfo_Params, error) {
	root, err := msg.Root()
	return UiView_getViewInfo_Params{root.Struct()}, err
}

func (s UiView_getViewInfo_Params) String() string {
	str, _ := text.Marshal(0x8f2ef49549d64e86, s.Struct)
	return str
}

// UiView_getViewInfo_Params_List is a list of UiView_getViewInfo_Params.
type UiView_getViewInfo_Params_List struct{ capnp.List }

// NewUiView_getViewInfo_Params creates a new list of UiView_getViewInfo_Params.
func NewUiView_getViewInfo_Params_List(s *capnp.Segment, sz int32) (UiView_getViewInfo_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return UiView_getViewInfo_Params_List{l}, err
}

func (s UiView_getViewInfo_Params_List) At(i int) UiView_getViewInfo_Params {
	return UiView_getViewInfo_Params{s.List.Struct(i)}
}

func (s UiView_getViewInfo_Params_List) Set(i int, v UiView_getViewInfo_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_getViewInfo_Params_List) String() string {
	str, _ := text.MarshalList(0x8f2ef49549d64e86, s.List)
	return str
}

// UiView_getViewInfo_Params_Future is a wrapper for a UiView_getViewInfo_Params promised by a client call.
type UiView_getViewInfo_Params_Future struct{ *capnp.Future }

func (p UiView_getViewInfo_Params_Future) Struct() (UiView_getViewInfo_Params, error) {
	s, err := p.Future.Struct()
	return UiView_getViewInfo_Params{s}, err
}

type UiView_newSession_Params struct{ capnp.Struct }

// UiView_newSession_Params_TypeID is the unique identifier for the type UiView_newSession_Params.
const UiView_newSession_Params_TypeID = 0xf87a2c5a9f996828

func NewUiView_newSession_Params(s *capnp.Segment) (UiView_newSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return UiView_newSession_Params{st}, err
}

func NewRootUiView_newSession_Params(s *capnp.Segment) (UiView_newSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return UiView_newSession_Params{st}, err
}

func ReadRootUiView_newSession_Params(msg *capnp.Message) (UiView_newSession_Params, error) {
	root, err := msg.Root()
	return UiView_newSession_Params{root.Struct()}, err
}

func (s UiView_newSession_Params) String() string {
	str, _ := text.Marshal(0xf87a2c5a9f996828, s.Struct)
	return str
}

func (s UiView_newSession_Params) UserInfo() (identity.UserInfo, error) {
	p, err := s.Struct.Ptr(0)
	return identity.UserInfo{Struct: p.Struct()}, err
}

func (s UiView_newSession_Params) HasUserInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newSession_Params) SetUserInfo(v identity.UserInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewUserInfo sets the userInfo field to a newly
// allocated identity.UserInfo struct, preferring placement in s's segment.
func (s UiView_newSession_Params) NewUserInfo() (identity.UserInfo, error) {
	ss, err := identity.NewUserInfo(s.Struct.Segment())
	if err != nil {
		return identity.UserInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s UiView_newSession_Params) Context() SessionContext {
	p, _ := s.Struct.Ptr(1)
	return SessionContext{Client: p.Interface().Client()}
}

func (s UiView_newSession_Params) HasContext() bool {
	return s.Struct.HasPtr(1)
}

func (s UiView_newSession_Params) SetContext(v SessionContext) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

func (s UiView_newSession_Params) SessionType() uint64 {
	return s.Struct.Uint64(0)
}

func (s UiView_newSession_Params) SetSessionType(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s UiView_newSession_Params) SessionParams() (capnp.Ptr, error) {
	return s.Struct.Ptr(2)
}

func (s UiView_newSession_Params) HasSessionParams() bool {
	return s.Struct.HasPtr(2)
}

func (s UiView_newSession_Params) SetSessionParams(v capnp.Ptr) error {
	return s.Struct.SetPtr(2, v)
}

func (s UiView_newSession_Params) TabId() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s UiView_newSession_Params) HasTabId() bool {
	return s.Struct.HasPtr(3)
}

func (s UiView_newSession_Params) SetTabId(v []byte) error {
	return s.Struct.SetData(3, v)
}

// UiView_newSession_Params_List is a list of UiView_newSession_Params.
type UiView_newSession_Params_List struct{ capnp.List }

// NewUiView_newSession_Params creates a new list of UiView_newSession_Params.
func NewUiView_newSession_Params_List(s *capnp.Segment, sz int32) (UiView_newSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return UiView_newSession_Params_List{l}, err
}

func (s UiView_newSession_Params_List) At(i int) UiView_newSession_Params {
	return UiView_newSession_Params{s.List.Struct(i)}
}

func (s UiView_newSession_Params_List) Set(i int, v UiView_newSession_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newSession_Params_List) String() string {
	str, _ := text.MarshalList(0xf87a2c5a9f996828, s.List)
	return str
}

// UiView_newSession_Params_Future is a wrapper for a UiView_newSession_Params promised by a client call.
type UiView_newSession_Params_Future struct{ *capnp.Future }

func (p UiView_newSession_Params_Future) Struct() (UiView_newSession_Params, error) {
	s, err := p.Future.Struct()
	return UiView_newSession_Params{s}, err
}

func (p UiView_newSession_Params_Future) UserInfo() identity.UserInfo_Future {
	return identity.UserInfo_Future{Future: p.Future.Field(0, nil)}
}

func (p UiView_newSession_Params_Future) Context() SessionContext {
	return SessionContext{Client: p.Future.Field(1, nil).Client()}
}

func (p UiView_newSession_Params_Future) SessionParams() *capnp.Future {
	return p.Future.Field(2, nil)
}

type UiView_newSession_Results struct{ capnp.Struct }

// UiView_newSession_Results_TypeID is the unique identifier for the type UiView_newSession_Results.
const UiView_newSession_Results_TypeID = 0xa8f4ff97289294c7

func NewUiView_newSession_Results(s *capnp.Segment) (UiView_newSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newSession_Results{st}, err
}

func NewRootUiView_newSession_Results(s *capnp.Segment) (UiView_newSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newSession_Results{st}, err
}

func ReadRootUiView_newSession_Results(msg *capnp.Message) (UiView_newSession_Results, error) {
	root, err := msg.Root()
	return UiView_newSession_Results{root.Struct()}, err
}

func (s UiView_newSession_Results) String() string {
	str, _ := text.Marshal(0xa8f4ff97289294c7, s.Struct)
	return str
}

func (s UiView_newSession_Results) Session() UiSession {
	p, _ := s.Struct.Ptr(0)
	return UiSession{Client: p.Interface().Client()}
}

func (s UiView_newSession_Results) HasSession() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newSession_Results) SetSession(v UiSession) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// UiView_newSession_Results_List is a list of UiView_newSession_Results.
type UiView_newSession_Results_List struct{ capnp.List }

// NewUiView_newSession_Results creates a new list of UiView_newSession_Results.
func NewUiView_newSession_Results_List(s *capnp.Segment, sz int32) (UiView_newSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return UiView_newSession_Results_List{l}, err
}

func (s UiView_newSession_Results_List) At(i int) UiView_newSession_Results {
	return UiView_newSession_Results{s.List.Struct(i)}
}

func (s UiView_newSession_Results_List) Set(i int, v UiView_newSession_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newSession_Results_List) String() string {
	str, _ := text.MarshalList(0xa8f4ff97289294c7, s.List)
	return str
}

// UiView_newSession_Results_Future is a wrapper for a UiView_newSession_Results promised by a client call.
type UiView_newSession_Results_Future struct{ *capnp.Future }

func (p UiView_newSession_Results_Future) Struct() (UiView_newSession_Results, error) {
	s, err := p.Future.Struct()
	return UiView_newSession_Results{s}, err
}

func (p UiView_newSession_Results_Future) Session() UiSession {
	return UiSession{Client: p.Future.Field(0, nil).Client()}
}

type UiView_newRequestSession_Params struct{ capnp.Struct }

// UiView_newRequestSession_Params_TypeID is the unique identifier for the type UiView_newRequestSession_Params.
const UiView_newRequestSession_Params_TypeID = 0xbc193a4219598bcb

func NewUiView_newRequestSession_Params(s *capnp.Segment) (UiView_newRequestSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return UiView_newRequestSession_Params{st}, err
}

func NewRootUiView_newRequestSession_Params(s *capnp.Segment) (UiView_newRequestSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return UiView_newRequestSession_Params{st}, err
}

func ReadRootUiView_newRequestSession_Params(msg *capnp.Message) (UiView_newRequestSession_Params, error) {
	root, err := msg.Root()
	return UiView_newRequestSession_Params{root.Struct()}, err
}

func (s UiView_newRequestSession_Params) String() string {
	str, _ := text.Marshal(0xbc193a4219598bcb, s.Struct)
	return str
}

func (s UiView_newRequestSession_Params) UserInfo() (identity.UserInfo, error) {
	p, err := s.Struct.Ptr(0)
	return identity.UserInfo{Struct: p.Struct()}, err
}

func (s UiView_newRequestSession_Params) HasUserInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newRequestSession_Params) SetUserInfo(v identity.UserInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewUserInfo sets the userInfo field to a newly
// allocated identity.UserInfo struct, preferring placement in s's segment.
func (s UiView_newRequestSession_Params) NewUserInfo() (identity.UserInfo, error) {
	ss, err := identity.NewUserInfo(s.Struct.Segment())
	if err != nil {
		return identity.UserInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s UiView_newRequestSession_Params) Context() SessionContext {
	p, _ := s.Struct.Ptr(1)
	return SessionContext{Client: p.Interface().Client()}
}

func (s UiView_newRequestSession_Params) HasContext() bool {
	return s.Struct.HasPtr(1)
}

func (s UiView_newRequestSession_Params) SetContext(v SessionContext) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

func (s UiView_newRequestSession_Params) SessionType() uint64 {
	return s.Struct.Uint64(0)
}

func (s UiView_newRequestSession_Params) SetSessionType(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s UiView_newRequestSession_Params) SessionParams() (capnp.Ptr, error) {
	return s.Struct.Ptr(2)
}

func (s UiView_newRequestSession_Params) HasSessionParams() bool {
	return s.Struct.HasPtr(2)
}

func (s UiView_newRequestSession_Params) SetSessionParams(v capnp.Ptr) error {
	return s.Struct.SetPtr(2, v)
}

func (s UiView_newRequestSession_Params) RequestInfo() (powerbox.PowerboxDescriptor_List, error) {
	p, err := s.Struct.Ptr(3)
	return powerbox.PowerboxDescriptor_List{List: p.List()}, err
}

func (s UiView_newRequestSession_Params) HasRequestInfo() bool {
	return s.Struct.HasPtr(3)
}

func (s UiView_newRequestSession_Params) SetRequestInfo(v powerbox.PowerboxDescriptor_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewRequestInfo sets the requestInfo field to a newly
// allocated powerbox.PowerboxDescriptor_List, preferring placement in s's segment.
func (s UiView_newRequestSession_Params) NewRequestInfo(n int32) (powerbox.PowerboxDescriptor_List, error) {
	l, err := powerbox.NewPowerboxDescriptor_List(s.Struct.Segment(), n)
	if err != nil {
		return powerbox.PowerboxDescriptor_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s UiView_newRequestSession_Params) TabId() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return []byte(p.Data()), err
}

func (s UiView_newRequestSession_Params) HasTabId() bool {
	return s.Struct.HasPtr(4)
}

func (s UiView_newRequestSession_Params) SetTabId(v []byte) error {
	return s.Struct.SetData(4, v)
}

// UiView_newRequestSession_Params_List is a list of UiView_newRequestSession_Params.
type UiView_newRequestSession_Params_List struct{ capnp.List }

// NewUiView_newRequestSession_Params creates a new list of UiView_newRequestSession_Params.
func NewUiView_newRequestSession_Params_List(s *capnp.Segment, sz int32) (UiView_newRequestSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5}, sz)
	return UiView_newRequestSession_Params_List{l}, err
}

func (s UiView_newRequestSession_Params_List) At(i int) UiView_newRequestSession_Params {
	return UiView_newRequestSession_Params{s.List.Struct(i)}
}

func (s UiView_newRequestSession_Params_List) Set(i int, v UiView_newRequestSession_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newRequestSession_Params_List) String() string {
	str, _ := text.MarshalList(0xbc193a4219598bcb, s.List)
	return str
}

// UiView_newRequestSession_Params_Future is a wrapper for a UiView_newRequestSession_Params promised by a client call.
type UiView_newRequestSession_Params_Future struct{ *capnp.Future }

func (p UiView_newRequestSession_Params_Future) Struct() (UiView_newRequestSession_Params, error) {
	s, err := p.Future.Struct()
	return UiView_newRequestSession_Params{s}, err
}

func (p UiView_newRequestSession_Params_Future) UserInfo() identity.UserInfo_Future {
	return identity.UserInfo_Future{Future: p.Future.Field(0, nil)}
}

func (p UiView_newRequestSession_Params_Future) Context() SessionContext {
	return SessionContext{Client: p.Future.Field(1, nil).Client()}
}

func (p UiView_newRequestSession_Params_Future) SessionParams() *capnp.Future {
	return p.Future.Field(2, nil)
}

type UiView_newRequestSession_Results struct{ capnp.Struct }

// UiView_newRequestSession_Results_TypeID is the unique identifier for the type UiView_newRequestSession_Results.
const UiView_newRequestSession_Results_TypeID = 0xa22a2d1cf9579778

func NewUiView_newRequestSession_Results(s *capnp.Segment) (UiView_newRequestSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newRequestSession_Results{st}, err
}

func NewRootUiView_newRequestSession_Results(s *capnp.Segment) (UiView_newRequestSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newRequestSession_Results{st}, err
}

func ReadRootUiView_newRequestSession_Results(msg *capnp.Message) (UiView_newRequestSession_Results, error) {
	root, err := msg.Root()
	return UiView_newRequestSession_Results{root.Struct()}, err
}

func (s UiView_newRequestSession_Results) String() string {
	str, _ := text.Marshal(0xa22a2d1cf9579778, s.Struct)
	return str
}

func (s UiView_newRequestSession_Results) Session() UiSession {
	p, _ := s.Struct.Ptr(0)
	return UiSession{Client: p.Interface().Client()}
}

func (s UiView_newRequestSession_Results) HasSession() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newRequestSession_Results) SetSession(v UiSession) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// UiView_newRequestSession_Results_List is a list of UiView_newRequestSession_Results.
type UiView_newRequestSession_Results_List struct{ capnp.List }

// NewUiView_newRequestSession_Results creates a new list of UiView_newRequestSession_Results.
func NewUiView_newRequestSession_Results_List(s *capnp.Segment, sz int32) (UiView_newRequestSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return UiView_newRequestSession_Results_List{l}, err
}

func (s UiView_newRequestSession_Results_List) At(i int) UiView_newRequestSession_Results {
	return UiView_newRequestSession_Results{s.List.Struct(i)}
}

func (s UiView_newRequestSession_Results_List) Set(i int, v UiView_newRequestSession_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newRequestSession_Results_List) String() string {
	str, _ := text.MarshalList(0xa22a2d1cf9579778, s.List)
	return str
}

// UiView_newRequestSession_Results_Future is a wrapper for a UiView_newRequestSession_Results promised by a client call.
type UiView_newRequestSession_Results_Future struct{ *capnp.Future }

func (p UiView_newRequestSession_Results_Future) Struct() (UiView_newRequestSession_Results, error) {
	s, err := p.Future.Struct()
	return UiView_newRequestSession_Results{s}, err
}

func (p UiView_newRequestSession_Results_Future) Session() UiSession {
	return UiSession{Client: p.Future.Field(0, nil).Client()}
}

type UiView_newOfferSession_Params struct{ capnp.Struct }

// UiView_newOfferSession_Params_TypeID is the unique identifier for the type UiView_newOfferSession_Params.
const UiView_newOfferSession_Params_TypeID = 0xa53aedb3ce8994df

func NewUiView_newOfferSession_Params(s *capnp.Segment) (UiView_newOfferSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return UiView_newOfferSession_Params{st}, err
}

func NewRootUiView_newOfferSession_Params(s *capnp.Segment) (UiView_newOfferSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return UiView_newOfferSession_Params{st}, err
}

func ReadRootUiView_newOfferSession_Params(msg *capnp.Message) (UiView_newOfferSession_Params, error) {
	root, err := msg.Root()
	return UiView_newOfferSession_Params{root.Struct()}, err
}

func (s UiView_newOfferSession_Params) String() string {
	str, _ := text.Marshal(0xa53aedb3ce8994df, s.Struct)
	return str
}

func (s UiView_newOfferSession_Params) UserInfo() (identity.UserInfo, error) {
	p, err := s.Struct.Ptr(0)
	return identity.UserInfo{Struct: p.Struct()}, err
}

func (s UiView_newOfferSession_Params) HasUserInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newOfferSession_Params) SetUserInfo(v identity.UserInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewUserInfo sets the userInfo field to a newly
// allocated identity.UserInfo struct, preferring placement in s's segment.
func (s UiView_newOfferSession_Params) NewUserInfo() (identity.UserInfo, error) {
	ss, err := identity.NewUserInfo(s.Struct.Segment())
	if err != nil {
		return identity.UserInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s UiView_newOfferSession_Params) Context() SessionContext {
	p, _ := s.Struct.Ptr(1)
	return SessionContext{Client: p.Interface().Client()}
}

func (s UiView_newOfferSession_Params) HasContext() bool {
	return s.Struct.HasPtr(1)
}

func (s UiView_newOfferSession_Params) SetContext(v SessionContext) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

func (s UiView_newOfferSession_Params) SessionType() uint64 {
	return s.Struct.Uint64(0)
}

func (s UiView_newOfferSession_Params) SetSessionType(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s UiView_newOfferSession_Params) SessionParams() (capnp.Ptr, error) {
	return s.Struct.Ptr(2)
}

func (s UiView_newOfferSession_Params) HasSessionParams() bool {
	return s.Struct.HasPtr(2)
}

func (s UiView_newOfferSession_Params) SetSessionParams(v capnp.Ptr) error {
	return s.Struct.SetPtr(2, v)
}

func (s UiView_newOfferSession_Params) Offer() (capnp.Ptr, error) {
	return s.Struct.Ptr(3)
}

func (s UiView_newOfferSession_Params) HasOffer() bool {
	return s.Struct.HasPtr(3)
}

func (s UiView_newOfferSession_Params) SetOffer(v capnp.Ptr) error {
	return s.Struct.SetPtr(3, v)
}

func (s UiView_newOfferSession_Params) Descriptor() (powerbox.PowerboxDescriptor, error) {
	p, err := s.Struct.Ptr(4)
	return powerbox.PowerboxDescriptor{Struct: p.Struct()}, err
}

func (s UiView_newOfferSession_Params) HasDescriptor() bool {
	return s.Struct.HasPtr(4)
}

func (s UiView_newOfferSession_Params) SetDescriptor(v powerbox.PowerboxDescriptor) error {
	return s.Struct.SetPtr(4, v.Struct.ToPtr())
}

// NewDescriptor sets the descriptor field to a newly
// allocated powerbox.PowerboxDescriptor struct, preferring placement in s's segment.
func (s UiView_newOfferSession_Params) NewDescriptor() (powerbox.PowerboxDescriptor, error) {
	ss, err := powerbox.NewPowerboxDescriptor(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDescriptor{}, err
	}
	err = s.Struct.SetPtr(4, ss.Struct.ToPtr())
	return ss, err
}

func (s UiView_newOfferSession_Params) TabId() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return []byte(p.Data()), err
}

func (s UiView_newOfferSession_Params) HasTabId() bool {
	return s.Struct.HasPtr(5)
}

func (s UiView_newOfferSession_Params) SetTabId(v []byte) error {
	return s.Struct.SetData(5, v)
}

// UiView_newOfferSession_Params_List is a list of UiView_newOfferSession_Params.
type UiView_newOfferSession_Params_List struct{ capnp.List }

// NewUiView_newOfferSession_Params creates a new list of UiView_newOfferSession_Params.
func NewUiView_newOfferSession_Params_List(s *capnp.Segment, sz int32) (UiView_newOfferSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6}, sz)
	return UiView_newOfferSession_Params_List{l}, err
}

func (s UiView_newOfferSession_Params_List) At(i int) UiView_newOfferSession_Params {
	return UiView_newOfferSession_Params{s.List.Struct(i)}
}

func (s UiView_newOfferSession_Params_List) Set(i int, v UiView_newOfferSession_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newOfferSession_Params_List) String() string {
	str, _ := text.MarshalList(0xa53aedb3ce8994df, s.List)
	return str
}

// UiView_newOfferSession_Params_Future is a wrapper for a UiView_newOfferSession_Params promised by a client call.
type UiView_newOfferSession_Params_Future struct{ *capnp.Future }

func (p UiView_newOfferSession_Params_Future) Struct() (UiView_newOfferSession_Params, error) {
	s, err := p.Future.Struct()
	return UiView_newOfferSession_Params{s}, err
}

func (p UiView_newOfferSession_Params_Future) UserInfo() identity.UserInfo_Future {
	return identity.UserInfo_Future{Future: p.Future.Field(0, nil)}
}

func (p UiView_newOfferSession_Params_Future) Context() SessionContext {
	return SessionContext{Client: p.Future.Field(1, nil).Client()}
}

func (p UiView_newOfferSession_Params_Future) SessionParams() *capnp.Future {
	return p.Future.Field(2, nil)
}

func (p UiView_newOfferSession_Params_Future) Offer() *capnp.Future {
	return p.Future.Field(3, nil)
}

func (p UiView_newOfferSession_Params_Future) Descriptor() powerbox.PowerboxDescriptor_Future {
	return powerbox.PowerboxDescriptor_Future{Future: p.Future.Field(4, nil)}
}

type UiView_newOfferSession_Results struct{ capnp.Struct }

// UiView_newOfferSession_Results_TypeID is the unique identifier for the type UiView_newOfferSession_Results.
const UiView_newOfferSession_Results_TypeID = 0x9eb6708c01ec2079

func NewUiView_newOfferSession_Results(s *capnp.Segment) (UiView_newOfferSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newOfferSession_Results{st}, err
}

func NewRootUiView_newOfferSession_Results(s *capnp.Segment) (UiView_newOfferSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newOfferSession_Results{st}, err
}

func ReadRootUiView_newOfferSession_Results(msg *capnp.Message) (UiView_newOfferSession_Results, error) {
	root, err := msg.Root()
	return UiView_newOfferSession_Results{root.Struct()}, err
}

func (s UiView_newOfferSession_Results) String() string {
	str, _ := text.Marshal(0x9eb6708c01ec2079, s.Struct)
	return str
}

func (s UiView_newOfferSession_Results) Session() UiSession {
	p, _ := s.Struct.Ptr(0)
	return UiSession{Client: p.Interface().Client()}
}

func (s UiView_newOfferSession_Results) HasSession() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newOfferSession_Results) SetSession(v UiSession) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// UiView_newOfferSession_Results_List is a list of UiView_newOfferSession_Results.
type UiView_newOfferSession_Results_List struct{ capnp.List }

// NewUiView_newOfferSession_Results creates a new list of UiView_newOfferSession_Results.
func NewUiView_newOfferSession_Results_List(s *capnp.Segment, sz int32) (UiView_newOfferSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return UiView_newOfferSession_Results_List{l}, err
}

func (s UiView_newOfferSession_Results_List) At(i int) UiView_newOfferSession_Results {
	return UiView_newOfferSession_Results{s.List.Struct(i)}
}

func (s UiView_newOfferSession_Results_List) Set(i int, v UiView_newOfferSession_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newOfferSession_Results_List) String() string {
	str, _ := text.MarshalList(0x9eb6708c01ec2079, s.List)
	return str
}

// UiView_newOfferSession_Results_Future is a wrapper for a UiView_newOfferSession_Results promised by a client call.
type UiView_newOfferSession_Results_Future struct{ *capnp.Future }

func (p UiView_newOfferSession_Results_Future) Struct() (UiView_newOfferSession_Results, error) {
	s, err := p.Future.Struct()
	return UiView_newOfferSession_Results{s}, err
}

func (p UiView_newOfferSession_Results_Future) Session() UiSession {
	return UiSession{Client: p.Future.Field(0, nil).Client()}
}

type UiSession struct{ Client *capnp.Client }

// UiSession_TypeID is the unique identifier for the type UiSession.
const UiSession_TypeID = 0xf63241ee58b5166f

func (c UiSession) AddRef() UiSession {
	return UiSession{
		Client: c.Client.AddRef(),
	}
}

func (c UiSession) Release() {
	c.Client.Release()
}

// A UiSession_Server is a UiSession with a local implementation.
type UiSession_Server interface {
}

// UiSession_NewServer creates a new Server from an implementation of UiSession_Server.
func UiSession_NewServer(s UiSession_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(UiSession_Methods(nil, s), s, c, policy)
}

// UiSession_ServerToClient creates a new Client from an implementation of UiSession_Server.
// The caller is responsible for calling Release on the returned Client.
func UiSession_ServerToClient(s UiSession_Server, policy *server.Policy) UiSession {
	return UiSession{Client: capnp.NewClient(UiSession_NewServer(s, policy))}
}

// UiSession_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func UiSession_Methods(methods []server.Method, s UiSession_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 0)
	}

	return methods
}

type SessionContext struct{ Client *capnp.Client }

// SessionContext_TypeID is the unique identifier for the type SessionContext.
const SessionContext_TypeID = 0xbf3e401d5a63f336

func (c SessionContext) GetSharedPermissions(ctx context.Context, params func(SessionContext_getSharedPermissions_Params) error) (SessionContext_getSharedPermissions_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      0,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "getSharedPermissions",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_getSharedPermissions_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_getSharedPermissions_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) TieToUser(ctx context.Context, params func(SessionContext_tieToUser_Params) error) (SessionContext_tieToUser_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      1,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "tieToUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_tieToUser_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_tieToUser_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) Offer(ctx context.Context, params func(SessionContext_offer_Params) error) (SessionContext_offer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      2,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "offer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_offer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_offer_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) Request(ctx context.Context, params func(SessionContext_request_Params) error) (SessionContext_request_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      3,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "request",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_request_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_request_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) FulfillRequest(ctx context.Context, params func(SessionContext_fulfillRequest_Params) error) (SessionContext_fulfillRequest_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      4,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "fulfillRequest",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_fulfillRequest_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_fulfillRequest_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) Close(ctx context.Context, params func(SessionContext_close_Params) error) (SessionContext_close_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      5,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "close",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_close_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_close_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) OpenView(ctx context.Context, params func(SessionContext_openView_Params) error) (SessionContext_openView_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      6,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "openView",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_openView_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_openView_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) ClaimRequest(ctx context.Context, params func(SessionContext_claimRequest_Params) error) (SessionContext_claimRequest_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      7,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "claimRequest",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_claimRequest_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_claimRequest_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) Activity(ctx context.Context, params func(SessionContext_activity_Params) error) (SessionContext_activity_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      8,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "activity",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_activity_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_activity_Results_Future{Future: ans.Future()}, release
}

func (c SessionContext) AddRef() SessionContext {
	return SessionContext{
		Client: c.Client.AddRef(),
	}
}

func (c SessionContext) Release() {
	c.Client.Release()
}

// A SessionContext_Server is a SessionContext with a local implementation.
type SessionContext_Server interface {
	GetSharedPermissions(context.Context, SessionContext_getSharedPermissions) error

	TieToUser(context.Context, SessionContext_tieToUser) error

	Offer(context.Context, SessionContext_offer) error

	Request(context.Context, SessionContext_request) error

	FulfillRequest(context.Context, SessionContext_fulfillRequest) error

	Close(context.Context, SessionContext_close) error

	OpenView(context.Context, SessionContext_openView) error

	ClaimRequest(context.Context, SessionContext_claimRequest) error

	Activity(context.Context, SessionContext_activity) error
}

// SessionContext_NewServer creates a new Server from an implementation of SessionContext_Server.
func SessionContext_NewServer(s SessionContext_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(SessionContext_Methods(nil, s), s, c, policy)
}

// SessionContext_ServerToClient creates a new Client from an implementation of SessionContext_Server.
// The caller is responsible for calling Release on the returned Client.
func SessionContext_ServerToClient(s SessionContext_Server, policy *server.Policy) SessionContext {
	return SessionContext{Client: capnp.NewClient(SessionContext_NewServer(s, policy))}
}

// SessionContext_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func SessionContext_Methods(methods []server.Method, s SessionContext_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 9)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      0,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "getSharedPermissions",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSharedPermissions(ctx, SessionContext_getSharedPermissions{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      1,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "tieToUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.TieToUser(ctx, SessionContext_tieToUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      2,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "offer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Offer(ctx, SessionContext_offer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      3,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "request",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Request(ctx, SessionContext_request{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      4,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "fulfillRequest",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.FulfillRequest(ctx, SessionContext_fulfillRequest{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      5,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "close",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Close(ctx, SessionContext_close{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      6,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "openView",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OpenView(ctx, SessionContext_openView{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      7,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "claimRequest",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ClaimRequest(ctx, SessionContext_claimRequest{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      8,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "activity",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Activity(ctx, SessionContext_activity{call})
		},
	})

	return methods
}

// SessionContext_getSharedPermissions holds the state for a server call to SessionContext.getSharedPermissions.
// See server.Call for documentation.
type SessionContext_getSharedPermissions struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_getSharedPermissions) Args() SessionContext_getSharedPermissions_Params {
	return SessionContext_getSharedPermissions_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_getSharedPermissions) AllocResults() (SessionContext_getSharedPermissions_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_getSharedPermissions_Results{Struct: r}, err
}

// SessionContext_tieToUser holds the state for a server call to SessionContext.tieToUser.
// See server.Call for documentation.
type SessionContext_tieToUser struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_tieToUser) Args() SessionContext_tieToUser_Params {
	return SessionContext_tieToUser_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_tieToUser) AllocResults() (SessionContext_tieToUser_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_tieToUser_Results{Struct: r}, err
}

// SessionContext_offer holds the state for a server call to SessionContext.offer.
// See server.Call for documentation.
type SessionContext_offer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_offer) Args() SessionContext_offer_Params {
	return SessionContext_offer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_offer) AllocResults() (SessionContext_offer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_offer_Results{Struct: r}, err
}

// SessionContext_request holds the state for a server call to SessionContext.request.
// See server.Call for documentation.
type SessionContext_request struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_request) Args() SessionContext_request_Params {
	return SessionContext_request_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_request) AllocResults() (SessionContext_request_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_request_Results{Struct: r}, err
}

// SessionContext_fulfillRequest holds the state for a server call to SessionContext.fulfillRequest.
// See server.Call for documentation.
type SessionContext_fulfillRequest struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_fulfillRequest) Args() SessionContext_fulfillRequest_Params {
	return SessionContext_fulfillRequest_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_fulfillRequest) AllocResults() (SessionContext_fulfillRequest_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_fulfillRequest_Results{Struct: r}, err
}

// SessionContext_close holds the state for a server call to SessionContext.close.
// See server.Call for documentation.
type SessionContext_close struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_close) Args() SessionContext_close_Params {
	return SessionContext_close_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_close) AllocResults() (SessionContext_close_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_close_Results{Struct: r}, err
}

// SessionContext_openView holds the state for a server call to SessionContext.openView.
// See server.Call for documentation.
type SessionContext_openView struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_openView) Args() SessionContext_openView_Params {
	return SessionContext_openView_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_openView) AllocResults() (SessionContext_openView_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_openView_Results{Struct: r}, err
}

// SessionContext_claimRequest holds the state for a server call to SessionContext.claimRequest.
// See server.Call for documentation.
type SessionContext_claimRequest struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_claimRequest) Args() SessionContext_claimRequest_Params {
	return SessionContext_claimRequest_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_claimRequest) AllocResults() (SessionContext_claimRequest_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_claimRequest_Results{Struct: r}, err
}

// SessionContext_activity holds the state for a server call to SessionContext.activity.
// See server.Call for documentation.
type SessionContext_activity struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_activity) Args() SessionContext_activity_Params {
	return SessionContext_activity_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_activity) AllocResults() (SessionContext_activity_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_activity_Results{Struct: r}, err
}

type SessionContext_getSharedPermissions_Params struct{ capnp.Struct }

// SessionContext_getSharedPermissions_Params_TypeID is the unique identifier for the type SessionContext_getSharedPermissions_Params.
const SessionContext_getSharedPermissions_Params_TypeID = 0xe96859cf77da6e6b

func NewSessionContext_getSharedPermissions_Params(s *capnp.Segment) (SessionContext_getSharedPermissions_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_getSharedPermissions_Params{st}, err
}

func NewRootSessionContext_getSharedPermissions_Params(s *capnp.Segment) (SessionContext_getSharedPermissions_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_getSharedPermissions_Params{st}, err
}

func ReadRootSessionContext_getSharedPermissions_Params(msg *capnp.Message) (SessionContext_getSharedPermissions_Params, error) {
	root, err := msg.Root()
	return SessionContext_getSharedPermissions_Params{root.Struct()}, err
}

func (s SessionContext_getSharedPermissions_Params) String() string {
	str, _ := text.Marshal(0xe96859cf77da6e6b, s.Struct)
	return str
}

// SessionContext_getSharedPermissions_Params_List is a list of SessionContext_getSharedPermissions_Params.
type SessionContext_getSharedPermissions_Params_List struct{ capnp.List }

// NewSessionContext_getSharedPermissions_Params creates a new list of SessionContext_getSharedPermissions_Params.
func NewSessionContext_getSharedPermissions_Params_List(s *capnp.Segment, sz int32) (SessionContext_getSharedPermissions_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_getSharedPermissions_Params_List{l}, err
}

func (s SessionContext_getSharedPermissions_Params_List) At(i int) SessionContext_getSharedPermissions_Params {
	return SessionContext_getSharedPermissions_Params{s.List.Struct(i)}
}

func (s SessionContext_getSharedPermissions_Params_List) Set(i int, v SessionContext_getSharedPermissions_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_getSharedPermissions_Params_List) String() string {
	str, _ := text.MarshalList(0xe96859cf77da6e6b, s.List)
	return str
}

// SessionContext_getSharedPermissions_Params_Future is a wrapper for a SessionContext_getSharedPermissions_Params promised by a client call.
type SessionContext_getSharedPermissions_Params_Future struct{ *capnp.Future }

func (p SessionContext_getSharedPermissions_Params_Future) Struct() (SessionContext_getSharedPermissions_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_getSharedPermissions_Params{s}, err
}

type SessionContext_getSharedPermissions_Results struct{ capnp.Struct }

// SessionContext_getSharedPermissions_Results_TypeID is the unique identifier for the type SessionContext_getSharedPermissions_Results.
const SessionContext_getSharedPermissions_Results_TypeID = 0xb70bd877cecb7b88

func NewSessionContext_getSharedPermissions_Results(s *capnp.Segment) (SessionContext_getSharedPermissions_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_getSharedPermissions_Results{st}, err
}

func NewRootSessionContext_getSharedPermissions_Results(s *capnp.Segment) (SessionContext_getSharedPermissions_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_getSharedPermissions_Results{st}, err
}

func ReadRootSessionContext_getSharedPermissions_Results(msg *capnp.Message) (SessionContext_getSharedPermissions_Results, error) {
	root, err := msg.Root()
	return SessionContext_getSharedPermissions_Results{root.Struct()}, err
}

func (s SessionContext_getSharedPermissions_Results) String() string {
	str, _ := text.Marshal(0xb70bd877cecb7b88, s.Struct)
	return str
}

func (s SessionContext_getSharedPermissions_Results) Var() util.Assignable_Getter {
	p, _ := s.Struct.Ptr(0)
	return util.Assignable_Getter{Client: p.Interface().Client()}
}

func (s SessionContext_getSharedPermissions_Results) HasVar() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_getSharedPermissions_Results) SetVar(v util.Assignable_Getter) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SessionContext_getSharedPermissions_Results_List is a list of SessionContext_getSharedPermissions_Results.
type SessionContext_getSharedPermissions_Results_List struct{ capnp.List }

// NewSessionContext_getSharedPermissions_Results creates a new list of SessionContext_getSharedPermissions_Results.
func NewSessionContext_getSharedPermissions_Results_List(s *capnp.Segment, sz int32) (SessionContext_getSharedPermissions_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SessionContext_getSharedPermissions_Results_List{l}, err
}

func (s SessionContext_getSharedPermissions_Results_List) At(i int) SessionContext_getSharedPermissions_Results {
	return SessionContext_getSharedPermissions_Results{s.List.Struct(i)}
}

func (s SessionContext_getSharedPermissions_Results_List) Set(i int, v SessionContext_getSharedPermissions_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_getSharedPermissions_Results_List) String() string {
	str, _ := text.MarshalList(0xb70bd877cecb7b88, s.List)
	return str
}

// SessionContext_getSharedPermissions_Results_Future is a wrapper for a SessionContext_getSharedPermissions_Results promised by a client call.
type SessionContext_getSharedPermissions_Results_Future struct{ *capnp.Future }

func (p SessionContext_getSharedPermissions_Results_Future) Struct() (SessionContext_getSharedPermissions_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_getSharedPermissions_Results{s}, err
}

func (p SessionContext_getSharedPermissions_Results_Future) Var() util.Assignable_Getter {
	return util.Assignable_Getter{Client: p.Future.Field(0, nil).Client()}
}

type SessionContext_tieToUser_Params struct{ capnp.Struct }

// SessionContext_tieToUser_Params_TypeID is the unique identifier for the type SessionContext_tieToUser_Params.
const SessionContext_tieToUser_Params_TypeID = 0xc41e71e8d893086c

func NewSessionContext_tieToUser_Params(s *capnp.Segment) (SessionContext_tieToUser_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return SessionContext_tieToUser_Params{st}, err
}

func NewRootSessionContext_tieToUser_Params(s *capnp.Segment) (SessionContext_tieToUser_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return SessionContext_tieToUser_Params{st}, err
}

func ReadRootSessionContext_tieToUser_Params(msg *capnp.Message) (SessionContext_tieToUser_Params, error) {
	root, err := msg.Root()
	return SessionContext_tieToUser_Params{root.Struct()}, err
}

func (s SessionContext_tieToUser_Params) String() string {
	str, _ := text.Marshal(0xc41e71e8d893086c, s.Struct)
	return str
}

func (s SessionContext_tieToUser_Params) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_tieToUser_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_tieToUser_Params) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SessionContext_tieToUser_Params) RequiredPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s SessionContext_tieToUser_Params) HasRequiredPermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_tieToUser_Params) SetRequiredPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRequiredPermissions sets the requiredPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s SessionContext_tieToUser_Params) NewRequiredPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s SessionContext_tieToUser_Params) DisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	p, err := s.Struct.Ptr(2)
	return powerbox.PowerboxDisplayInfo{Struct: p.Struct()}, err
}

func (s SessionContext_tieToUser_Params) HasDisplayInfo() bool {
	return s.Struct.HasPtr(2)
}

func (s SessionContext_tieToUser_Params) SetDisplayInfo(v powerbox.PowerboxDisplayInfo) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewDisplayInfo sets the displayInfo field to a newly
// allocated powerbox.PowerboxDisplayInfo struct, preferring placement in s's segment.
func (s SessionContext_tieToUser_Params) NewDisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	ss, err := powerbox.NewPowerboxDisplayInfo(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDisplayInfo{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

// SessionContext_tieToUser_Params_List is a list of SessionContext_tieToUser_Params.
type SessionContext_tieToUser_Params_List struct{ capnp.List }

// NewSessionContext_tieToUser_Params creates a new list of SessionContext_tieToUser_Params.
func NewSessionContext_tieToUser_Params_List(s *capnp.Segment, sz int32) (SessionContext_tieToUser_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return SessionContext_tieToUser_Params_List{l}, err
}

func (s SessionContext_tieToUser_Params_List) At(i int) SessionContext_tieToUser_Params {
	return SessionContext_tieToUser_Params{s.List.Struct(i)}
}

func (s SessionContext_tieToUser_Params_List) Set(i int, v SessionContext_tieToUser_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_tieToUser_Params_List) String() string {
	str, _ := text.MarshalList(0xc41e71e8d893086c, s.List)
	return str
}

// SessionContext_tieToUser_Params_Future is a wrapper for a SessionContext_tieToUser_Params promised by a client call.
type SessionContext_tieToUser_Params_Future struct{ *capnp.Future }

func (p SessionContext_tieToUser_Params_Future) Struct() (SessionContext_tieToUser_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_tieToUser_Params{s}, err
}

func (p SessionContext_tieToUser_Params_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SessionContext_tieToUser_Params_Future) DisplayInfo() powerbox.PowerboxDisplayInfo_Future {
	return powerbox.PowerboxDisplayInfo_Future{Future: p.Future.Field(2, nil)}
}

type SessionContext_tieToUser_Results struct{ capnp.Struct }

// SessionContext_tieToUser_Results_TypeID is the unique identifier for the type SessionContext_tieToUser_Results.
const SessionContext_tieToUser_Results_TypeID = 0xf6f911c4804ba7e5

func NewSessionContext_tieToUser_Results(s *capnp.Segment) (SessionContext_tieToUser_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_tieToUser_Results{st}, err
}

func NewRootSessionContext_tieToUser_Results(s *capnp.Segment) (SessionContext_tieToUser_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_tieToUser_Results{st}, err
}

func ReadRootSessionContext_tieToUser_Results(msg *capnp.Message) (SessionContext_tieToUser_Results, error) {
	root, err := msg.Root()
	return SessionContext_tieToUser_Results{root.Struct()}, err
}

func (s SessionContext_tieToUser_Results) String() string {
	str, _ := text.Marshal(0xf6f911c4804ba7e5, s.Struct)
	return str
}

func (s SessionContext_tieToUser_Results) TiedCap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_tieToUser_Results) HasTiedCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_tieToUser_Results) SetTiedCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// SessionContext_tieToUser_Results_List is a list of SessionContext_tieToUser_Results.
type SessionContext_tieToUser_Results_List struct{ capnp.List }

// NewSessionContext_tieToUser_Results creates a new list of SessionContext_tieToUser_Results.
func NewSessionContext_tieToUser_Results_List(s *capnp.Segment, sz int32) (SessionContext_tieToUser_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SessionContext_tieToUser_Results_List{l}, err
}

func (s SessionContext_tieToUser_Results_List) At(i int) SessionContext_tieToUser_Results {
	return SessionContext_tieToUser_Results{s.List.Struct(i)}
}

func (s SessionContext_tieToUser_Results_List) Set(i int, v SessionContext_tieToUser_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_tieToUser_Results_List) String() string {
	str, _ := text.MarshalList(0xf6f911c4804ba7e5, s.List)
	return str
}

// SessionContext_tieToUser_Results_Future is a wrapper for a SessionContext_tieToUser_Results promised by a client call.
type SessionContext_tieToUser_Results_Future struct{ *capnp.Future }

func (p SessionContext_tieToUser_Results_Future) Struct() (SessionContext_tieToUser_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_tieToUser_Results{s}, err
}

func (p SessionContext_tieToUser_Results_Future) TiedCap() *capnp.Future {
	return p.Future.Field(0, nil)
}

type SessionContext_offer_Params struct{ capnp.Struct }

// SessionContext_offer_Params_TypeID is the unique identifier for the type SessionContext_offer_Params.
const SessionContext_offer_Params_TypeID = 0xfb3d38da0c9eaee6

func NewSessionContext_offer_Params(s *capnp.Segment) (SessionContext_offer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SessionContext_offer_Params{st}, err
}

func NewRootSessionContext_offer_Params(s *capnp.Segment) (SessionContext_offer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SessionContext_offer_Params{st}, err
}

func ReadRootSessionContext_offer_Params(msg *capnp.Message) (SessionContext_offer_Params, error) {
	root, err := msg.Root()
	return SessionContext_offer_Params{root.Struct()}, err
}

func (s SessionContext_offer_Params) String() string {
	str, _ := text.Marshal(0xfb3d38da0c9eaee6, s.Struct)
	return str
}

func (s SessionContext_offer_Params) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_offer_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_offer_Params) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SessionContext_offer_Params) RequiredPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s SessionContext_offer_Params) HasRequiredPermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_offer_Params) SetRequiredPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRequiredPermissions sets the requiredPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s SessionContext_offer_Params) NewRequiredPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s SessionContext_offer_Params) Descriptor() (powerbox.PowerboxDescriptor, error) {
	p, err := s.Struct.Ptr(2)
	return powerbox.PowerboxDescriptor{Struct: p.Struct()}, err
}

func (s SessionContext_offer_Params) HasDescriptor() bool {
	return s.Struct.HasPtr(2)
}

func (s SessionContext_offer_Params) SetDescriptor(v powerbox.PowerboxDescriptor) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewDescriptor sets the descriptor field to a newly
// allocated powerbox.PowerboxDescriptor struct, preferring placement in s's segment.
func (s SessionContext_offer_Params) NewDescriptor() (powerbox.PowerboxDescriptor, error) {
	ss, err := powerbox.NewPowerboxDescriptor(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDescriptor{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s SessionContext_offer_Params) DisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	p, err := s.Struct.Ptr(3)
	return powerbox.PowerboxDisplayInfo{Struct: p.Struct()}, err
}

func (s SessionContext_offer_Params) HasDisplayInfo() bool {
	return s.Struct.HasPtr(3)
}

func (s SessionContext_offer_Params) SetDisplayInfo(v powerbox.PowerboxDisplayInfo) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewDisplayInfo sets the displayInfo field to a newly
// allocated powerbox.PowerboxDisplayInfo struct, preferring placement in s's segment.
func (s SessionContext_offer_Params) NewDisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	ss, err := powerbox.NewPowerboxDisplayInfo(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDisplayInfo{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

// SessionContext_offer_Params_List is a list of SessionContext_offer_Params.
type SessionContext_offer_Params_List struct{ capnp.List }

// NewSessionContext_offer_Params creates a new list of SessionContext_offer_Params.
func NewSessionContext_offer_Params_List(s *capnp.Segment, sz int32) (SessionContext_offer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return SessionContext_offer_Params_List{l}, err
}

func (s SessionContext_offer_Params_List) At(i int) SessionContext_offer_Params {
	return SessionContext_offer_Params{s.List.Struct(i)}
}

func (s SessionContext_offer_Params_List) Set(i int, v SessionContext_offer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_offer_Params_List) String() string {
	str, _ := text.MarshalList(0xfb3d38da0c9eaee6, s.List)
	return str
}

// SessionContext_offer_Params_Future is a wrapper for a SessionContext_offer_Params promised by a client call.
type SessionContext_offer_Params_Future struct{ *capnp.Future }

func (p SessionContext_offer_Params_Future) Struct() (SessionContext_offer_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_offer_Params{s}, err
}

func (p SessionContext_offer_Params_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SessionContext_offer_Params_Future) Descriptor() powerbox.PowerboxDescriptor_Future {
	return powerbox.PowerboxDescriptor_Future{Future: p.Future.Field(2, nil)}
}

func (p SessionContext_offer_Params_Future) DisplayInfo() powerbox.PowerboxDisplayInfo_Future {
	return powerbox.PowerboxDisplayInfo_Future{Future: p.Future.Field(3, nil)}
}

type SessionContext_offer_Results struct{ capnp.Struct }

// SessionContext_offer_Results_TypeID is the unique identifier for the type SessionContext_offer_Results.
const SessionContext_offer_Results_TypeID = 0xfe7135f15d39bd5b

func NewSessionContext_offer_Results(s *capnp.Segment) (SessionContext_offer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_offer_Results{st}, err
}

func NewRootSessionContext_offer_Results(s *capnp.Segment) (SessionContext_offer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_offer_Results{st}, err
}

func ReadRootSessionContext_offer_Results(msg *capnp.Message) (SessionContext_offer_Results, error) {
	root, err := msg.Root()
	return SessionContext_offer_Results{root.Struct()}, err
}

func (s SessionContext_offer_Results) String() string {
	str, _ := text.Marshal(0xfe7135f15d39bd5b, s.Struct)
	return str
}

// SessionContext_offer_Results_List is a list of SessionContext_offer_Results.
type SessionContext_offer_Results_List struct{ capnp.List }

// NewSessionContext_offer_Results creates a new list of SessionContext_offer_Results.
func NewSessionContext_offer_Results_List(s *capnp.Segment, sz int32) (SessionContext_offer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_offer_Results_List{l}, err
}

func (s SessionContext_offer_Results_List) At(i int) SessionContext_offer_Results {
	return SessionContext_offer_Results{s.List.Struct(i)}
}

func (s SessionContext_offer_Results_List) Set(i int, v SessionContext_offer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_offer_Results_List) String() string {
	str, _ := text.MarshalList(0xfe7135f15d39bd5b, s.List)
	return str
}

// SessionContext_offer_Results_Future is a wrapper for a SessionContext_offer_Results promised by a client call.
type SessionContext_offer_Results_Future struct{ *capnp.Future }

func (p SessionContext_offer_Results_Future) Struct() (SessionContext_offer_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_offer_Results{s}, err
}

type SessionContext_request_Params struct{ capnp.Struct }

// SessionContext_request_Params_TypeID is the unique identifier for the type SessionContext_request_Params.
const SessionContext_request_Params_TypeID = 0xf63b8546288ee8e1

func NewSessionContext_request_Params(s *capnp.Segment) (SessionContext_request_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_request_Params{st}, err
}

func NewRootSessionContext_request_Params(s *capnp.Segment) (SessionContext_request_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_request_Params{st}, err
}

func ReadRootSessionContext_request_Params(msg *capnp.Message) (SessionContext_request_Params, error) {
	root, err := msg.Root()
	return SessionContext_request_Params{root.Struct()}, err
}

func (s SessionContext_request_Params) String() string {
	str, _ := text.Marshal(0xf63b8546288ee8e1, s.Struct)
	return str
}

func (s SessionContext_request_Params) Query() (powerbox.PowerboxDescriptor_List, error) {
	p, err := s.Struct.Ptr(0)
	return powerbox.PowerboxDescriptor_List{List: p.List()}, err
}

func (s SessionContext_request_Params) HasQuery() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_request_Params) SetQuery(v powerbox.PowerboxDescriptor_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewQuery sets the query field to a newly
// allocated powerbox.PowerboxDescriptor_List, preferring placement in s's segment.
func (s SessionContext_request_Params) NewQuery(n int32) (powerbox.PowerboxDescriptor_List, error) {
	l, err := powerbox.NewPowerboxDescriptor_List(s.Struct.Segment(), n)
	if err != nil {
		return powerbox.PowerboxDescriptor_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s SessionContext_request_Params) RequiredPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s SessionContext_request_Params) HasRequiredPermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_request_Params) SetRequiredPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRequiredPermissions sets the requiredPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s SessionContext_request_Params) NewRequiredPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// SessionContext_request_Params_List is a list of SessionContext_request_Params.
type SessionContext_request_Params_List struct{ capnp.List }

// NewSessionContext_request_Params creates a new list of SessionContext_request_Params.
func NewSessionContext_request_Params_List(s *capnp.Segment, sz int32) (SessionContext_request_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SessionContext_request_Params_List{l}, err
}

func (s SessionContext_request_Params_List) At(i int) SessionContext_request_Params {
	return SessionContext_request_Params{s.List.Struct(i)}
}

func (s SessionContext_request_Params_List) Set(i int, v SessionContext_request_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_request_Params_List) String() string {
	str, _ := text.MarshalList(0xf63b8546288ee8e1, s.List)
	return str
}

// SessionContext_request_Params_Future is a wrapper for a SessionContext_request_Params promised by a client call.
type SessionContext_request_Params_Future struct{ *capnp.Future }

func (p SessionContext_request_Params_Future) Struct() (SessionContext_request_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_request_Params{s}, err
}

type SessionContext_request_Results struct{ capnp.Struct }

// SessionContext_request_Results_TypeID is the unique identifier for the type SessionContext_request_Results.
const SessionContext_request_Results_TypeID = 0xd42684f756e09afd

func NewSessionContext_request_Results(s *capnp.Segment) (SessionContext_request_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_request_Results{st}, err
}

func NewRootSessionContext_request_Results(s *capnp.Segment) (SessionContext_request_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_request_Results{st}, err
}

func ReadRootSessionContext_request_Results(msg *capnp.Message) (SessionContext_request_Results, error) {
	root, err := msg.Root()
	return SessionContext_request_Results{root.Struct()}, err
}

func (s SessionContext_request_Results) String() string {
	str, _ := text.Marshal(0xd42684f756e09afd, s.Struct)
	return str
}

func (s SessionContext_request_Results) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_request_Results) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_request_Results) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SessionContext_request_Results) Descriptor() (powerbox.PowerboxDescriptor, error) {
	p, err := s.Struct.Ptr(1)
	return powerbox.PowerboxDescriptor{Struct: p.Struct()}, err
}

func (s SessionContext_request_Results) HasDescriptor() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_request_Results) SetDescriptor(v powerbox.PowerboxDescriptor) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDescriptor sets the descriptor field to a newly
// allocated powerbox.PowerboxDescriptor struct, preferring placement in s's segment.
func (s SessionContext_request_Results) NewDescriptor() (powerbox.PowerboxDescriptor, error) {
	ss, err := powerbox.NewPowerboxDescriptor(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDescriptor{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// SessionContext_request_Results_List is a list of SessionContext_request_Results.
type SessionContext_request_Results_List struct{ capnp.List }

// NewSessionContext_request_Results creates a new list of SessionContext_request_Results.
func NewSessionContext_request_Results_List(s *capnp.Segment, sz int32) (SessionContext_request_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SessionContext_request_Results_List{l}, err
}

func (s SessionContext_request_Results_List) At(i int) SessionContext_request_Results {
	return SessionContext_request_Results{s.List.Struct(i)}
}

func (s SessionContext_request_Results_List) Set(i int, v SessionContext_request_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_request_Results_List) String() string {
	str, _ := text.MarshalList(0xd42684f756e09afd, s.List)
	return str
}

// SessionContext_request_Results_Future is a wrapper for a SessionContext_request_Results promised by a client call.
type SessionContext_request_Results_Future struct{ *capnp.Future }

func (p SessionContext_request_Results_Future) Struct() (SessionContext_request_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_request_Results{s}, err
}

func (p SessionContext_request_Results_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SessionContext_request_Results_Future) Descriptor() powerbox.PowerboxDescriptor_Future {
	return powerbox.PowerboxDescriptor_Future{Future: p.Future.Field(1, nil)}
}

type SessionContext_fulfillRequest_Params struct{ capnp.Struct }

// SessionContext_fulfillRequest_Params_TypeID is the unique identifier for the type SessionContext_fulfillRequest_Params.
const SessionContext_fulfillRequest_Params_TypeID = 0x9f6c36ef490dfd92

func NewSessionContext_fulfillRequest_Params(s *capnp.Segment) (SessionContext_fulfillRequest_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SessionContext_fulfillRequest_Params{st}, err
}

func NewRootSessionContext_fulfillRequest_Params(s *capnp.Segment) (SessionContext_fulfillRequest_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SessionContext_fulfillRequest_Params{st}, err
}

func ReadRootSessionContext_fulfillRequest_Params(msg *capnp.Message) (SessionContext_fulfillRequest_Params, error) {
	root, err := msg.Root()
	return SessionContext_fulfillRequest_Params{root.Struct()}, err
}

func (s SessionContext_fulfillRequest_Params) String() string {
	str, _ := text.Marshal(0x9f6c36ef490dfd92, s.Struct)
	return str
}

func (s SessionContext_fulfillRequest_Params) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_fulfillRequest_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_fulfillRequest_Params) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SessionContext_fulfillRequest_Params) RequiredPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s SessionContext_fulfillRequest_Params) HasRequiredPermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_fulfillRequest_Params) SetRequiredPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRequiredPermissions sets the requiredPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s SessionContext_fulfillRequest_Params) NewRequiredPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s SessionContext_fulfillRequest_Params) Descriptor() (powerbox.PowerboxDescriptor, error) {
	p, err := s.Struct.Ptr(2)
	return powerbox.PowerboxDescriptor{Struct: p.Struct()}, err
}

func (s SessionContext_fulfillRequest_Params) HasDescriptor() bool {
	return s.Struct.HasPtr(2)
}

func (s SessionContext_fulfillRequest_Params) SetDescriptor(v powerbox.PowerboxDescriptor) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewDescriptor sets the descriptor field to a newly
// allocated powerbox.PowerboxDescriptor struct, preferring placement in s's segment.
func (s SessionContext_fulfillRequest_Params) NewDescriptor() (powerbox.PowerboxDescriptor, error) {
	ss, err := powerbox.NewPowerboxDescriptor(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDescriptor{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s SessionContext_fulfillRequest_Params) DisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	p, err := s.Struct.Ptr(3)
	return powerbox.PowerboxDisplayInfo{Struct: p.Struct()}, err
}

func (s SessionContext_fulfillRequest_Params) HasDisplayInfo() bool {
	return s.Struct.HasPtr(3)
}

func (s SessionContext_fulfillRequest_Params) SetDisplayInfo(v powerbox.PowerboxDisplayInfo) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewDisplayInfo sets the displayInfo field to a newly
// allocated powerbox.PowerboxDisplayInfo struct, preferring placement in s's segment.
func (s SessionContext_fulfillRequest_Params) NewDisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	ss, err := powerbox.NewPowerboxDisplayInfo(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDisplayInfo{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

// SessionContext_fulfillRequest_Params_List is a list of SessionContext_fulfillRequest_Params.
type SessionContext_fulfillRequest_Params_List struct{ capnp.List }

// NewSessionContext_fulfillRequest_Params creates a new list of SessionContext_fulfillRequest_Params.
func NewSessionContext_fulfillRequest_Params_List(s *capnp.Segment, sz int32) (SessionContext_fulfillRequest_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return SessionContext_fulfillRequest_Params_List{l}, err
}

func (s SessionContext_fulfillRequest_Params_List) At(i int) SessionContext_fulfillRequest_Params {
	return SessionContext_fulfillRequest_Params{s.List.Struct(i)}
}

func (s SessionContext_fulfillRequest_Params_List) Set(i int, v SessionContext_fulfillRequest_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_fulfillRequest_Params_List) String() string {
	str, _ := text.MarshalList(0x9f6c36ef490dfd92, s.List)
	return str
}

// SessionContext_fulfillRequest_Params_Future is a wrapper for a SessionContext_fulfillRequest_Params promised by a client call.
type SessionContext_fulfillRequest_Params_Future struct{ *capnp.Future }

func (p SessionContext_fulfillRequest_Params_Future) Struct() (SessionContext_fulfillRequest_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_fulfillRequest_Params{s}, err
}

func (p SessionContext_fulfillRequest_Params_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SessionContext_fulfillRequest_Params_Future) Descriptor() powerbox.PowerboxDescriptor_Future {
	return powerbox.PowerboxDescriptor_Future{Future: p.Future.Field(2, nil)}
}

func (p SessionContext_fulfillRequest_Params_Future) DisplayInfo() powerbox.PowerboxDisplayInfo_Future {
	return powerbox.PowerboxDisplayInfo_Future{Future: p.Future.Field(3, nil)}
}

type SessionContext_fulfillRequest_Results struct{ capnp.Struct }

// SessionContext_fulfillRequest_Results_TypeID is the unique identifier for the type SessionContext_fulfillRequest_Results.
const SessionContext_fulfillRequest_Results_TypeID = 0xb4ecd69ac97e2de8

func NewSessionContext_fulfillRequest_Results(s *capnp.Segment) (SessionContext_fulfillRequest_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_fulfillRequest_Results{st}, err
}

func NewRootSessionContext_fulfillRequest_Results(s *capnp.Segment) (SessionContext_fulfillRequest_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_fulfillRequest_Results{st}, err
}

func ReadRootSessionContext_fulfillRequest_Results(msg *capnp.Message) (SessionContext_fulfillRequest_Results, error) {
	root, err := msg.Root()
	return SessionContext_fulfillRequest_Results{root.Struct()}, err
}

func (s SessionContext_fulfillRequest_Results) String() string {
	str, _ := text.Marshal(0xb4ecd69ac97e2de8, s.Struct)
	return str
}

// SessionContext_fulfillRequest_Results_List is a list of SessionContext_fulfillRequest_Results.
type SessionContext_fulfillRequest_Results_List struct{ capnp.List }

// NewSessionContext_fulfillRequest_Results creates a new list of SessionContext_fulfillRequest_Results.
func NewSessionContext_fulfillRequest_Results_List(s *capnp.Segment, sz int32) (SessionContext_fulfillRequest_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_fulfillRequest_Results_List{l}, err
}

func (s SessionContext_fulfillRequest_Results_List) At(i int) SessionContext_fulfillRequest_Results {
	return SessionContext_fulfillRequest_Results{s.List.Struct(i)}
}

func (s SessionContext_fulfillRequest_Results_List) Set(i int, v SessionContext_fulfillRequest_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_fulfillRequest_Results_List) String() string {
	str, _ := text.MarshalList(0xb4ecd69ac97e2de8, s.List)
	return str
}

// SessionContext_fulfillRequest_Results_Future is a wrapper for a SessionContext_fulfillRequest_Results promised by a client call.
type SessionContext_fulfillRequest_Results_Future struct{ *capnp.Future }

func (p SessionContext_fulfillRequest_Results_Future) Struct() (SessionContext_fulfillRequest_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_fulfillRequest_Results{s}, err
}

type SessionContext_close_Params struct{ capnp.Struct }

// SessionContext_close_Params_TypeID is the unique identifier for the type SessionContext_close_Params.
const SessionContext_close_Params_TypeID = 0xf12c60ebc67984d4

func NewSessionContext_close_Params(s *capnp.Segment) (SessionContext_close_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_close_Params{st}, err
}

func NewRootSessionContext_close_Params(s *capnp.Segment) (SessionContext_close_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_close_Params{st}, err
}

func ReadRootSessionContext_close_Params(msg *capnp.Message) (SessionContext_close_Params, error) {
	root, err := msg.Root()
	return SessionContext_close_Params{root.Struct()}, err
}

func (s SessionContext_close_Params) String() string {
	str, _ := text.Marshal(0xf12c60ebc67984d4, s.Struct)
	return str
}

// SessionContext_close_Params_List is a list of SessionContext_close_Params.
type SessionContext_close_Params_List struct{ capnp.List }

// NewSessionContext_close_Params creates a new list of SessionContext_close_Params.
func NewSessionContext_close_Params_List(s *capnp.Segment, sz int32) (SessionContext_close_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_close_Params_List{l}, err
}

func (s SessionContext_close_Params_List) At(i int) SessionContext_close_Params {
	return SessionContext_close_Params{s.List.Struct(i)}
}

func (s SessionContext_close_Params_List) Set(i int, v SessionContext_close_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_close_Params_List) String() string {
	str, _ := text.MarshalList(0xf12c60ebc67984d4, s.List)
	return str
}

// SessionContext_close_Params_Future is a wrapper for a SessionContext_close_Params promised by a client call.
type SessionContext_close_Params_Future struct{ *capnp.Future }

func (p SessionContext_close_Params_Future) Struct() (SessionContext_close_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_close_Params{s}, err
}

type SessionContext_close_Results struct{ capnp.Struct }

// SessionContext_close_Results_TypeID is the unique identifier for the type SessionContext_close_Results.
const SessionContext_close_Results_TypeID = 0x9d4102fadb4f069c

func NewSessionContext_close_Results(s *capnp.Segment) (SessionContext_close_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_close_Results{st}, err
}

func NewRootSessionContext_close_Results(s *capnp.Segment) (SessionContext_close_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_close_Results{st}, err
}

func ReadRootSessionContext_close_Results(msg *capnp.Message) (SessionContext_close_Results, error) {
	root, err := msg.Root()
	return SessionContext_close_Results{root.Struct()}, err
}

func (s SessionContext_close_Results) String() string {
	str, _ := text.Marshal(0x9d4102fadb4f069c, s.Struct)
	return str
}

// SessionContext_close_Results_List is a list of SessionContext_close_Results.
type SessionContext_close_Results_List struct{ capnp.List }

// NewSessionContext_close_Results creates a new list of SessionContext_close_Results.
func NewSessionContext_close_Results_List(s *capnp.Segment, sz int32) (SessionContext_close_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_close_Results_List{l}, err
}

func (s SessionContext_close_Results_List) At(i int) SessionContext_close_Results {
	return SessionContext_close_Results{s.List.Struct(i)}
}

func (s SessionContext_close_Results_List) Set(i int, v SessionContext_close_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_close_Results_List) String() string {
	str, _ := text.MarshalList(0x9d4102fadb4f069c, s.List)
	return str
}

// SessionContext_close_Results_Future is a wrapper for a SessionContext_close_Results promised by a client call.
type SessionContext_close_Results_Future struct{ *capnp.Future }

func (p SessionContext_close_Results_Future) Struct() (SessionContext_close_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_close_Results{s}, err
}

type SessionContext_openView_Params struct{ capnp.Struct }

// SessionContext_openView_Params_TypeID is the unique identifier for the type SessionContext_openView_Params.
const SessionContext_openView_Params_TypeID = 0xf37f5e08534c68aa

func NewSessionContext_openView_Params(s *capnp.Segment) (SessionContext_openView_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return SessionContext_openView_Params{st}, err
}

func NewRootSessionContext_openView_Params(s *capnp.Segment) (SessionContext_openView_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return SessionContext_openView_Params{st}, err
}

func ReadRootSessionContext_openView_Params(msg *capnp.Message) (SessionContext_openView_Params, error) {
	root, err := msg.Root()
	return SessionContext_openView_Params{root.Struct()}, err
}

func (s SessionContext_openView_Params) String() string {
	str, _ := text.Marshal(0xf37f5e08534c68aa, s.Struct)
	return str
}

func (s SessionContext_openView_Params) View() UiView {
	p, _ := s.Struct.Ptr(0)
	return UiView{Client: p.Interface().Client()}
}

func (s SessionContext_openView_Params) HasView() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_openView_Params) SetView(v UiView) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s SessionContext_openView_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s SessionContext_openView_Params) HasPath() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_openView_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s SessionContext_openView_Params) SetPath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s SessionContext_openView_Params) NewTab() bool {
	return s.Struct.Bit(0)
}

func (s SessionContext_openView_Params) SetNewTab(v bool) {
	s.Struct.SetBit(0, v)
}

// SessionContext_openView_Params_List is a list of SessionContext_openView_Params.
type SessionContext_openView_Params_List struct{ capnp.List }

// NewSessionContext_openView_Params creates a new list of SessionContext_openView_Params.
func NewSessionContext_openView_Params_List(s *capnp.Segment, sz int32) (SessionContext_openView_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return SessionContext_openView_Params_List{l}, err
}

func (s SessionContext_openView_Params_List) At(i int) SessionContext_openView_Params {
	return SessionContext_openView_Params{s.List.Struct(i)}
}

func (s SessionContext_openView_Params_List) Set(i int, v SessionContext_openView_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_openView_Params_List) String() string {
	str, _ := text.MarshalList(0xf37f5e08534c68aa, s.List)
	return str
}

// SessionContext_openView_Params_Future is a wrapper for a SessionContext_openView_Params promised by a client call.
type SessionContext_openView_Params_Future struct{ *capnp.Future }

func (p SessionContext_openView_Params_Future) Struct() (SessionContext_openView_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_openView_Params{s}, err
}

func (p SessionContext_openView_Params_Future) View() UiView {
	return UiView{Client: p.Future.Field(0, nil).Client()}
}

type SessionContext_openView_Results struct{ capnp.Struct }

// SessionContext_openView_Results_TypeID is the unique identifier for the type SessionContext_openView_Results.
const SessionContext_openView_Results_TypeID = 0xf9d6c8c6d207c123

func NewSessionContext_openView_Results(s *capnp.Segment) (SessionContext_openView_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_openView_Results{st}, err
}

func NewRootSessionContext_openView_Results(s *capnp.Segment) (SessionContext_openView_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_openView_Results{st}, err
}

func ReadRootSessionContext_openView_Results(msg *capnp.Message) (SessionContext_openView_Results, error) {
	root, err := msg.Root()
	return SessionContext_openView_Results{root.Struct()}, err
}

func (s SessionContext_openView_Results) String() string {
	str, _ := text.Marshal(0xf9d6c8c6d207c123, s.Struct)
	return str
}

// SessionContext_openView_Results_List is a list of SessionContext_openView_Results.
type SessionContext_openView_Results_List struct{ capnp.List }

// NewSessionContext_openView_Results creates a new list of SessionContext_openView_Results.
func NewSessionContext_openView_Results_List(s *capnp.Segment, sz int32) (SessionContext_openView_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_openView_Results_List{l}, err
}

func (s SessionContext_openView_Results_List) At(i int) SessionContext_openView_Results {
	return SessionContext_openView_Results{s.List.Struct(i)}
}

func (s SessionContext_openView_Results_List) Set(i int, v SessionContext_openView_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_openView_Results_List) String() string {
	str, _ := text.MarshalList(0xf9d6c8c6d207c123, s.List)
	return str
}

// SessionContext_openView_Results_Future is a wrapper for a SessionContext_openView_Results promised by a client call.
type SessionContext_openView_Results_Future struct{ *capnp.Future }

func (p SessionContext_openView_Results_Future) Struct() (SessionContext_openView_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_openView_Results{s}, err
}

type SessionContext_claimRequest_Params struct{ capnp.Struct }

// SessionContext_claimRequest_Params_TypeID is the unique identifier for the type SessionContext_claimRequest_Params.
const SessionContext_claimRequest_Params_TypeID = 0xda13a4f2919ce2cf

func NewSessionContext_claimRequest_Params(s *capnp.Segment) (SessionContext_claimRequest_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_claimRequest_Params{st}, err
}

func NewRootSessionContext_claimRequest_Params(s *capnp.Segment) (SessionContext_claimRequest_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_claimRequest_Params{st}, err
}

func ReadRootSessionContext_claimRequest_Params(msg *capnp.Message) (SessionContext_claimRequest_Params, error) {
	root, err := msg.Root()
	return SessionContext_claimRequest_Params{root.Struct()}, err
}

func (s SessionContext_claimRequest_Params) String() string {
	str, _ := text.Marshal(0xda13a4f2919ce2cf, s.Struct)
	return str
}

func (s SessionContext_claimRequest_Params) RequestToken() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s SessionContext_claimRequest_Params) HasRequestToken() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_claimRequest_Params) RequestTokenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s SessionContext_claimRequest_Params) SetRequestToken(v string) error {
	return s.Struct.SetText(0, v)
}

func (s SessionContext_claimRequest_Params) RequiredPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s SessionContext_claimRequest_Params) HasRequiredPermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_claimRequest_Params) SetRequiredPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRequiredPermissions sets the requiredPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s SessionContext_claimRequest_Params) NewRequiredPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// SessionContext_claimRequest_Params_List is a list of SessionContext_claimRequest_Params.
type SessionContext_claimRequest_Params_List struct{ capnp.List }

// NewSessionContext_claimRequest_Params creates a new list of SessionContext_claimRequest_Params.
func NewSessionContext_claimRequest_Params_List(s *capnp.Segment, sz int32) (SessionContext_claimRequest_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SessionContext_claimRequest_Params_List{l}, err
}

func (s SessionContext_claimRequest_Params_List) At(i int) SessionContext_claimRequest_Params {
	return SessionContext_claimRequest_Params{s.List.Struct(i)}
}

func (s SessionContext_claimRequest_Params_List) Set(i int, v SessionContext_claimRequest_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_claimRequest_Params_List) String() string {
	str, _ := text.MarshalList(0xda13a4f2919ce2cf, s.List)
	return str
}

// SessionContext_claimRequest_Params_Future is a wrapper for a SessionContext_claimRequest_Params promised by a client call.
type SessionContext_claimRequest_Params_Future struct{ *capnp.Future }

func (p SessionContext_claimRequest_Params_Future) Struct() (SessionContext_claimRequest_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_claimRequest_Params{s}, err
}

type SessionContext_claimRequest_Results struct{ capnp.Struct }

// SessionContext_claimRequest_Results_TypeID is the unique identifier for the type SessionContext_claimRequest_Results.
const SessionContext_claimRequest_Results_TypeID = 0xefea656d4b56b756

func NewSessionContext_claimRequest_Results(s *capnp.Segment) (SessionContext_claimRequest_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_claimRequest_Results{st}, err
}

func NewRootSessionContext_claimRequest_Results(s *capnp.Segment) (SessionContext_claimRequest_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_claimRequest_Results{st}, err
}

func ReadRootSessionContext_claimRequest_Results(msg *capnp.Message) (SessionContext_claimRequest_Results, error) {
	root, err := msg.Root()
	return SessionContext_claimRequest_Results{root.Struct()}, err
}

func (s SessionContext_claimRequest_Results) String() string {
	str, _ := text.Marshal(0xefea656d4b56b756, s.Struct)
	return str
}

func (s SessionContext_claimRequest_Results) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_claimRequest_Results) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_claimRequest_Results) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// SessionContext_claimRequest_Results_List is a list of SessionContext_claimRequest_Results.
type SessionContext_claimRequest_Results_List struct{ capnp.List }

// NewSessionContext_claimRequest_Results creates a new list of SessionContext_claimRequest_Results.
func NewSessionContext_claimRequest_Results_List(s *capnp.Segment, sz int32) (SessionContext_claimRequest_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SessionContext_claimRequest_Results_List{l}, err
}

func (s SessionContext_claimRequest_Results_List) At(i int) SessionContext_claimRequest_Results {
	return SessionContext_claimRequest_Results{s.List.Struct(i)}
}

func (s SessionContext_claimRequest_Results_List) Set(i int, v SessionContext_claimRequest_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_claimRequest_Results_List) String() string {
	str, _ := text.MarshalList(0xefea656d4b56b756, s.List)
	return str
}

// SessionContext_claimRequest_Results_Future is a wrapper for a SessionContext_claimRequest_Results promised by a client call.
type SessionContext_claimRequest_Results_Future struct{ *capnp.Future }

func (p SessionContext_claimRequest_Results_Future) Struct() (SessionContext_claimRequest_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_claimRequest_Results{s}, err
}

func (p SessionContext_claimRequest_Results_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

type SessionContext_activity_Params struct{ capnp.Struct }

// SessionContext_activity_Params_TypeID is the unique identifier for the type SessionContext_activity_Params.
const SessionContext_activity_Params_TypeID = 0x85e320f14a5d23e0

func NewSessionContext_activity_Params(s *capnp.Segment) (SessionContext_activity_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_activity_Params{st}, err
}

func NewRootSessionContext_activity_Params(s *capnp.Segment) (SessionContext_activity_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_activity_Params{st}, err
}

func ReadRootSessionContext_activity_Params(msg *capnp.Message) (SessionContext_activity_Params, error) {
	root, err := msg.Root()
	return SessionContext_activity_Params{root.Struct()}, err
}

func (s SessionContext_activity_Params) String() string {
	str, _ := text.Marshal(0x85e320f14a5d23e0, s.Struct)
	return str
}

func (s SessionContext_activity_Params) Event() (activity.ActivityEvent, error) {
	p, err := s.Struct.Ptr(0)
	return activity.ActivityEvent{Struct: p.Struct()}, err
}

func (s SessionContext_activity_Params) HasEvent() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_activity_Params) SetEvent(v activity.ActivityEvent) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewEvent sets the event field to a newly
// allocated activity.ActivityEvent struct, preferring placement in s's segment.
func (s SessionContext_activity_Params) NewEvent() (activity.ActivityEvent, error) {
	ss, err := activity.NewActivityEvent(s.Struct.Segment())
	if err != nil {
		return activity.ActivityEvent{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// SessionContext_activity_Params_List is a list of SessionContext_activity_Params.
type SessionContext_activity_Params_List struct{ capnp.List }

// NewSessionContext_activity_Params creates a new list of SessionContext_activity_Params.
func NewSessionContext_activity_Params_List(s *capnp.Segment, sz int32) (SessionContext_activity_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SessionContext_activity_Params_List{l}, err
}

func (s SessionContext_activity_Params_List) At(i int) SessionContext_activity_Params {
	return SessionContext_activity_Params{s.List.Struct(i)}
}

func (s SessionContext_activity_Params_List) Set(i int, v SessionContext_activity_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_activity_Params_List) String() string {
	str, _ := text.MarshalList(0x85e320f14a5d23e0, s.List)
	return str
}

// SessionContext_activity_Params_Future is a wrapper for a SessionContext_activity_Params promised by a client call.
type SessionContext_activity_Params_Future struct{ *capnp.Future }

func (p SessionContext_activity_Params_Future) Struct() (SessionContext_activity_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_activity_Params{s}, err
}

func (p SessionContext_activity_Params_Future) Event() activity.ActivityEvent_Future {
	return activity.ActivityEvent_Future{Future: p.Future.Field(0, nil)}
}

type SessionContext_activity_Results struct{ capnp.Struct }

// SessionContext_activity_Results_TypeID is the unique identifier for the type SessionContext_activity_Results.
const SessionContext_activity_Results_TypeID = 0xa93eadc9671ea08b

func NewSessionContext_activity_Results(s *capnp.Segment) (SessionContext_activity_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_activity_Results{st}, err
}

func NewRootSessionContext_activity_Results(s *capnp.Segment) (SessionContext_activity_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_activity_Results{st}, err
}

func ReadRootSessionContext_activity_Results(msg *capnp.Message) (SessionContext_activity_Results, error) {
	root, err := msg.Root()
	return SessionContext_activity_Results{root.Struct()}, err
}

func (s SessionContext_activity_Results) String() string {
	str, _ := text.Marshal(0xa93eadc9671ea08b, s.Struct)
	return str
}

// SessionContext_activity_Results_List is a list of SessionContext_activity_Results.
type SessionContext_activity_Results_List struct{ capnp.List }

// NewSessionContext_activity_Results creates a new list of SessionContext_activity_Results.
func NewSessionContext_activity_Results_List(s *capnp.Segment, sz int32) (SessionContext_activity_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_activity_Results_List{l}, err
}

func (s SessionContext_activity_Results_List) At(i int) SessionContext_activity_Results {
	return SessionContext_activity_Results{s.List.Struct(i)}
}

func (s SessionContext_activity_Results_List) Set(i int, v SessionContext_activity_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_activity_Results_List) String() string {
	str, _ := text.MarshalList(0xa93eadc9671ea08b, s.List)
	return str
}

// SessionContext_activity_Results_Future is a wrapper for a SessionContext_activity_Results promised by a client call.
type SessionContext_activity_Results_Future struct{ *capnp.Future }

func (p SessionContext_activity_Results_Future) Struct() (SessionContext_activity_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_activity_Results{s}, err
}

type PermissionDef struct{ capnp.Struct }

// PermissionDef_TypeID is the unique identifier for the type PermissionDef.
const PermissionDef_TypeID = 0xf144a5e58889dafb

func NewPermissionDef(s *capnp.Segment) (PermissionDef, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return PermissionDef{st}, err
}

func NewRootPermissionDef(s *capnp.Segment) (PermissionDef, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return PermissionDef{st}, err
}

func ReadRootPermissionDef(msg *capnp.Message) (PermissionDef, error) {
	root, err := msg.Root()
	return PermissionDef{root.Struct()}, err
}

func (s PermissionDef) String() string {
	str, _ := text.Marshal(0xf144a5e58889dafb, s.Struct)
	return str
}

func (s PermissionDef) Name() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PermissionDef) HasName() bool {
	return s.Struct.HasPtr(2)
}

func (s PermissionDef) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PermissionDef) SetName(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PermissionDef) Title() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(0)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s PermissionDef) HasTitle() bool {
	return s.Struct.HasPtr(0)
}

func (s PermissionDef) SetTitle(v util.LocalizedText) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTitle sets the title field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s PermissionDef) NewTitle() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s PermissionDef) Description() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(1)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s PermissionDef) HasDescription() bool {
	return s.Struct.HasPtr(1)
}

func (s PermissionDef) SetDescription(v util.LocalizedText) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDescription sets the description field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s PermissionDef) NewDescription() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s PermissionDef) Obsolete() bool {
	return s.Struct.Bit(0)
}

func (s PermissionDef) SetObsolete(v bool) {
	s.Struct.SetBit(0, v)
}

// PermissionDef_List is a list of PermissionDef.
type PermissionDef_List struct{ capnp.List }

// NewPermissionDef creates a new list of PermissionDef.
func NewPermissionDef_List(s *capnp.Segment, sz int32) (PermissionDef_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return PermissionDef_List{l}, err
}

func (s PermissionDef_List) At(i int) PermissionDef { return PermissionDef{s.List.Struct(i)} }

func (s PermissionDef_List) Set(i int, v PermissionDef) error { return s.List.SetStruct(i, v.Struct) }

func (s PermissionDef_List) String() string {
	str, _ := text.MarshalList(0xf144a5e58889dafb, s.List)
	return str
}

// PermissionDef_Future is a wrapper for a PermissionDef promised by a client call.
type PermissionDef_Future struct{ *capnp.Future }

func (p PermissionDef_Future) Struct() (PermissionDef, error) {
	s, err := p.Future.Struct()
	return PermissionDef{s}, err
}

func (p PermissionDef_Future) Title() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(0, nil)}
}

func (p PermissionDef_Future) Description() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(1, nil)}
}

type RoleDef struct{ capnp.Struct }

// RoleDef_TypeID is the unique identifier for the type RoleDef.
const RoleDef_TypeID = 0xcb3f7064eae4dc5a

func NewRoleDef(s *capnp.Segment) (RoleDef, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return RoleDef{st}, err
}

func NewRootRoleDef(s *capnp.Segment) (RoleDef, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return RoleDef{st}, err
}

func ReadRootRoleDef(msg *capnp.Message) (RoleDef, error) {
	root, err := msg.Root()
	return RoleDef{root.Struct()}, err
}

func (s RoleDef) String() string {
	str, _ := text.Marshal(0xcb3f7064eae4dc5a, s.Struct)
	return str
}

func (s RoleDef) Title() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(0)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s RoleDef) HasTitle() bool {
	return s.Struct.HasPtr(0)
}

func (s RoleDef) SetTitle(v util.LocalizedText) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTitle sets the title field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s RoleDef) NewTitle() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s RoleDef) VerbPhrase() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(1)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s RoleDef) HasVerbPhrase() bool {
	return s.Struct.HasPtr(1)
}

func (s RoleDef) SetVerbPhrase(v util.LocalizedText) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewVerbPhrase sets the verbPhrase field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s RoleDef) NewVerbPhrase() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s RoleDef) Description() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(2)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s RoleDef) HasDescription() bool {
	return s.Struct.HasPtr(2)
}

func (s RoleDef) SetDescription(v util.LocalizedText) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewDescription sets the description field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s RoleDef) NewDescription() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s RoleDef) Permissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(3)
	return capnp.BitList{List: p.List()}, err
}

func (s RoleDef) HasPermissions() bool {
	return s.Struct.HasPtr(3)
}

func (s RoleDef) SetPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewPermissions sets the permissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s RoleDef) NewPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s RoleDef) Obsolete() bool {
	return s.Struct.Bit(0)
}

func (s RoleDef) SetObsolete(v bool) {
	s.Struct.SetBit(0, v)
}

func (s RoleDef) Default() bool {
	return s.Struct.Bit(1)
}

func (s RoleDef) SetDefault(v bool) {
	s.Struct.SetBit(1, v)
}

// RoleDef_List is a list of RoleDef.
type RoleDef_List struct{ capnp.List }

// NewRoleDef creates a new list of RoleDef.
func NewRoleDef_List(s *capnp.Segment, sz int32) (RoleDef_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return RoleDef_List{l}, err
}

func (s RoleDef_List) At(i int) RoleDef { return RoleDef{s.List.Struct(i)} }

func (s RoleDef_List) Set(i int, v RoleDef) error { return s.List.SetStruct(i, v.Struct) }

func (s RoleDef_List) String() string {
	str, _ := text.MarshalList(0xcb3f7064eae4dc5a, s.List)
	return str
}

// RoleDef_Future is a wrapper for a RoleDef promised by a client call.
type RoleDef_Future struct{ *capnp.Future }

func (p RoleDef_Future) Struct() (RoleDef, error) {
	s, err := p.Future.Struct()
	return RoleDef{s}, err
}

func (p RoleDef_Future) Title() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(0, nil)}
}

func (p RoleDef_Future) VerbPhrase() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(1, nil)}
}

func (p RoleDef_Future) Description() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(2, nil)}
}

type SharingLink struct{ Client *capnp.Client }

// SharingLink_TypeID is the unique identifier for the type SharingLink.
const SharingLink_TypeID = 0xc05520c9b0994ad3

func (c SharingLink) GetPetname(ctx context.Context, params func(SharingLink_getPetname_Params) error) (SharingLink_getPetname_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc05520c9b0994ad3,
			MethodID:      0,
			InterfaceName: "grain.capnp:SharingLink",
			MethodName:    "getPetname",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SharingLink_getPetname_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SharingLink_getPetname_Results_Future{Future: ans.Future()}, release
}

func (c SharingLink) AddRef() SharingLink {
	return SharingLink{
		Client: c.Client.AddRef(),
	}
}

func (c SharingLink) Release() {
	c.Client.Release()
}

// A SharingLink_Server is a SharingLink with a local implementation.
type SharingLink_Server interface {
	GetPetname(context.Context, SharingLink_getPetname) error
}

// SharingLink_NewServer creates a new Server from an implementation of SharingLink_Server.
func SharingLink_NewServer(s SharingLink_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(SharingLink_Methods(nil, s), s, c, policy)
}

// SharingLink_ServerToClient creates a new Client from an implementation of SharingLink_Server.
// The caller is responsible for calling Release on the returned Client.
func SharingLink_ServerToClient(s SharingLink_Server, policy *server.Policy) SharingLink {
	return SharingLink{Client: capnp.NewClient(SharingLink_NewServer(s, policy))}
}

// SharingLink_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func SharingLink_Methods(methods []server.Method, s SharingLink_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc05520c9b0994ad3,
			MethodID:      0,
			InterfaceName: "grain.capnp:SharingLink",
			MethodName:    "getPetname",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetPetname(ctx, SharingLink_getPetname{call})
		},
	})

	return methods
}

// SharingLink_getPetname holds the state for a server call to SharingLink.getPetname.
// See server.Call for documentation.
type SharingLink_getPetname struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SharingLink_getPetname) Args() SharingLink_getPetname_Params {
	return SharingLink_getPetname_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SharingLink_getPetname) AllocResults() (SharingLink_getPetname_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SharingLink_getPetname_Results{Struct: r}, err
}

type SharingLink_getPetname_Params struct{ capnp.Struct }

// SharingLink_getPetname_Params_TypeID is the unique identifier for the type SharingLink_getPetname_Params.
const SharingLink_getPetname_Params_TypeID = 0xf0931856093654c1

func NewSharingLink_getPetname_Params(s *capnp.Segment) (SharingLink_getPetname_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SharingLink_getPetname_Params{st}, err
}

func NewRootSharingLink_getPetname_Params(s *capnp.Segment) (SharingLink_getPetname_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SharingLink_getPetname_Params{st}, err
}

func ReadRootSharingLink_getPetname_Params(msg *capnp.Message) (SharingLink_getPetname_Params, error) {
	root, err := msg.Root()
	return SharingLink_getPetname_Params{root.Struct()}, err
}

func (s SharingLink_getPetname_Params) String() string {
	str, _ := text.Marshal(0xf0931856093654c1, s.Struct)
	return str
}

// SharingLink_getPetname_Params_List is a list of SharingLink_getPetname_Params.
type SharingLink_getPetname_Params_List struct{ capnp.List }

// NewSharingLink_getPetname_Params creates a new list of SharingLink_getPetname_Params.
func NewSharingLink_getPetname_Params_List(s *capnp.Segment, sz int32) (SharingLink_getPetname_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SharingLink_getPetname_Params_List{l}, err
}

func (s SharingLink_getPetname_Params_List) At(i int) SharingLink_getPetname_Params {
	return SharingLink_getPetname_Params{s.List.Struct(i)}
}

func (s SharingLink_getPetname_Params_List) Set(i int, v SharingLink_getPetname_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SharingLink_getPetname_Params_List) String() string {
	str, _ := text.MarshalList(0xf0931856093654c1, s.List)
	return str
}

// SharingLink_getPetname_Params_Future is a wrapper for a SharingLink_getPetname_Params promised by a client call.
type SharingLink_getPetname_Params_Future struct{ *capnp.Future }

func (p SharingLink_getPetname_Params_Future) Struct() (SharingLink_getPetname_Params, error) {
	s, err := p.Future.Struct()
	return SharingLink_getPetname_Params{s}, err
}

type SharingLink_getPetname_Results struct{ capnp.Struct }

// SharingLink_getPetname_Results_TypeID is the unique identifier for the type SharingLink_getPetname_Results.
const SharingLink_getPetname_Results_TypeID = 0x9ad927034671cad1

func NewSharingLink_getPetname_Results(s *capnp.Segment) (SharingLink_getPetname_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SharingLink_getPetname_Results{st}, err
}

func NewRootSharingLink_getPetname_Results(s *capnp.Segment) (SharingLink_getPetname_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SharingLink_getPetname_Results{st}, err
}

func ReadRootSharingLink_getPetname_Results(msg *capnp.Message) (SharingLink_getPetname_Results, error) {
	root, err := msg.Root()
	return SharingLink_getPetname_Results{root.Struct()}, err
}

func (s SharingLink_getPetname_Results) String() string {
	str, _ := text.Marshal(0x9ad927034671cad1, s.Struct)
	return str
}

func (s SharingLink_getPetname_Results) Name() util.Assignable {
	p, _ := s.Struct.Ptr(0)
	return util.Assignable{Client: p.Interface().Client()}
}

func (s SharingLink_getPetname_Results) HasName() bool {
	return s.Struct.HasPtr(0)
}

func (s SharingLink_getPetname_Results) SetName(v util.Assignable) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SharingLink_getPetname_Results_List is a list of SharingLink_getPetname_Results.
type SharingLink_getPetname_Results_List struct{ capnp.List }

// NewSharingLink_getPetname_Results creates a new list of SharingLink_getPetname_Results.
func NewSharingLink_getPetname_Results_List(s *capnp.Segment, sz int32) (SharingLink_getPetname_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SharingLink_getPetname_Results_List{l}, err
}

func (s SharingLink_getPetname_Results_List) At(i int) SharingLink_getPetname_Results {
	return SharingLink_getPetname_Results{s.List.Struct(i)}
}

func (s SharingLink_getPetname_Results_List) Set(i int, v SharingLink_getPetname_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SharingLink_getPetname_Results_List) String() string {
	str, _ := text.MarshalList(0x9ad927034671cad1, s.List)
	return str
}

// SharingLink_getPetname_Results_Future is a wrapper for a SharingLink_getPetname_Results promised by a client call.
type SharingLink_getPetname_Results_Future struct{ *capnp.Future }

func (p SharingLink_getPetname_Results_Future) Struct() (SharingLink_getPetname_Results, error) {
	s, err := p.Future.Struct()
	return SharingLink_getPetname_Results{s}, err
}

func (p SharingLink_getPetname_Results_Future) Name() util.Assignable {
	return util.Assignable{Client: p.Future.Field(0, nil).Client()}
}

type ViewSharingLink struct{ Client *capnp.Client }

// ViewSharingLink_TypeID is the unique identifier for the type ViewSharingLink.
const ViewSharingLink_TypeID = 0xa4f82f764dc3fee8

func (c ViewSharingLink) GetRoleAssignment(ctx context.Context, params func(ViewSharingLink_getRoleAssignment_Params) error) (ViewSharingLink_getRoleAssignment_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xa4f82f764dc3fee8,
			MethodID:      0,
			InterfaceName: "grain.capnp:ViewSharingLink",
			MethodName:    "getRoleAssignment",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(ViewSharingLink_getRoleAssignment_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return ViewSharingLink_getRoleAssignment_Results_Future{Future: ans.Future()}, release
}
func (c ViewSharingLink) GetPetname(ctx context.Context, params func(SharingLink_getPetname_Params) error) (SharingLink_getPetname_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc05520c9b0994ad3,
			MethodID:      0,
			InterfaceName: "grain.capnp:SharingLink",
			MethodName:    "getPetname",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SharingLink_getPetname_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SharingLink_getPetname_Results_Future{Future: ans.Future()}, release
}

func (c ViewSharingLink) AddRef() ViewSharingLink {
	return ViewSharingLink{
		Client: c.Client.AddRef(),
	}
}

func (c ViewSharingLink) Release() {
	c.Client.Release()
}

// A ViewSharingLink_Server is a ViewSharingLink with a local implementation.
type ViewSharingLink_Server interface {
	GetRoleAssignment(context.Context, ViewSharingLink_getRoleAssignment) error

	GetPetname(context.Context, SharingLink_getPetname) error
}

// ViewSharingLink_NewServer creates a new Server from an implementation of ViewSharingLink_Server.
func ViewSharingLink_NewServer(s ViewSharingLink_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(ViewSharingLink_Methods(nil, s), s, c, policy)
}

// ViewSharingLink_ServerToClient creates a new Client from an implementation of ViewSharingLink_Server.
// The caller is responsible for calling Release on the returned Client.
func ViewSharingLink_ServerToClient(s ViewSharingLink_Server, policy *server.Policy) ViewSharingLink {
	return ViewSharingLink{Client: capnp.NewClient(ViewSharingLink_NewServer(s, policy))}
}

// ViewSharingLink_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func ViewSharingLink_Methods(methods []server.Method, s ViewSharingLink_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa4f82f764dc3fee8,
			MethodID:      0,
			InterfaceName: "grain.capnp:ViewSharingLink",
			MethodName:    "getRoleAssignment",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetRoleAssignment(ctx, ViewSharingLink_getRoleAssignment{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc05520c9b0994ad3,
			MethodID:      0,
			InterfaceName: "grain.capnp:SharingLink",
			MethodName:    "getPetname",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetPetname(ctx, SharingLink_getPetname{call})
		},
	})

	return methods
}

// ViewSharingLink_getRoleAssignment holds the state for a server call to ViewSharingLink.getRoleAssignment.
// See server.Call for documentation.
type ViewSharingLink_getRoleAssignment struct {
	*server.Call
}

// Args returns the call's arguments.
func (c ViewSharingLink_getRoleAssignment) Args() ViewSharingLink_getRoleAssignment_Params {
	return ViewSharingLink_getRoleAssignment_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c ViewSharingLink_getRoleAssignment) AllocResults() (ViewSharingLink_getRoleAssignment_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ViewSharingLink_getRoleAssignment_Results{Struct: r}, err
}

type ViewSharingLink_RoleAssignment struct{ capnp.Struct }
type ViewSharingLink_RoleAssignment_Which uint16

const (
	ViewSharingLink_RoleAssignment_Which_none      ViewSharingLink_RoleAssignment_Which = 0
	ViewSharingLink_RoleAssignment_Which_allAccess ViewSharingLink_RoleAssignment_Which = 1
	ViewSharingLink_RoleAssignment_Which_roleId    ViewSharingLink_RoleAssignment_Which = 2
)

func (w ViewSharingLink_RoleAssignment_Which) String() string {
	const s = "noneallAccessroleId"
	switch w {
	case ViewSharingLink_RoleAssignment_Which_none:
		return s[0:4]
	case ViewSharingLink_RoleAssignment_Which_allAccess:
		return s[4:13]
	case ViewSharingLink_RoleAssignment_Which_roleId:
		return s[13:19]

	}
	return "ViewSharingLink_RoleAssignment_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// ViewSharingLink_RoleAssignment_TypeID is the unique identifier for the type ViewSharingLink_RoleAssignment.
const ViewSharingLink_RoleAssignment_TypeID = 0xf020f2be35e8e2b5

func NewViewSharingLink_RoleAssignment(s *capnp.Segment) (ViewSharingLink_RoleAssignment, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return ViewSharingLink_RoleAssignment{st}, err
}

func NewRootViewSharingLink_RoleAssignment(s *capnp.Segment) (ViewSharingLink_RoleAssignment, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return ViewSharingLink_RoleAssignment{st}, err
}

func ReadRootViewSharingLink_RoleAssignment(msg *capnp.Message) (ViewSharingLink_RoleAssignment, error) {
	root, err := msg.Root()
	return ViewSharingLink_RoleAssignment{root.Struct()}, err
}

func (s ViewSharingLink_RoleAssignment) String() string {
	str, _ := text.Marshal(0xf020f2be35e8e2b5, s.Struct)
	return str
}

func (s ViewSharingLink_RoleAssignment) Which() ViewSharingLink_RoleAssignment_Which {
	return ViewSharingLink_RoleAssignment_Which(s.Struct.Uint16(0))
}
func (s ViewSharingLink_RoleAssignment) SetNone() {
	s.Struct.SetUint16(0, 0)

}

func (s ViewSharingLink_RoleAssignment) SetAllAccess() {
	s.Struct.SetUint16(0, 1)

}

func (s ViewSharingLink_RoleAssignment) RoleId() uint16 {
	if s.Struct.Uint16(0) != 2 {
		panic("Which() != roleId")
	}
	return s.Struct.Uint16(2)
}

func (s ViewSharingLink_RoleAssignment) SetRoleId(v uint16) {
	s.Struct.SetUint16(0, 2)
	s.Struct.SetUint16(2, v)
}

func (s ViewSharingLink_RoleAssignment) AddPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.BitList{List: p.List()}, err
}

func (s ViewSharingLink_RoleAssignment) HasAddPermissions() bool {
	return s.Struct.HasPtr(0)
}

func (s ViewSharingLink_RoleAssignment) SetAddPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAddPermissions sets the addPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s ViewSharingLink_RoleAssignment) NewAddPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s ViewSharingLink_RoleAssignment) RemovePermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s ViewSharingLink_RoleAssignment) HasRemovePermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s ViewSharingLink_RoleAssignment) SetRemovePermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRemovePermissions sets the removePermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s ViewSharingLink_RoleAssignment) NewRemovePermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// ViewSharingLink_RoleAssignment_List is a list of ViewSharingLink_RoleAssignment.
type ViewSharingLink_RoleAssignment_List struct{ capnp.List }

// NewViewSharingLink_RoleAssignment creates a new list of ViewSharingLink_RoleAssignment.
func NewViewSharingLink_RoleAssignment_List(s *capnp.Segment, sz int32) (ViewSharingLink_RoleAssignment_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return ViewSharingLink_RoleAssignment_List{l}, err
}

func (s ViewSharingLink_RoleAssignment_List) At(i int) ViewSharingLink_RoleAssignment {
	return ViewSharingLink_RoleAssignment{s.List.Struct(i)}
}

func (s ViewSharingLink_RoleAssignment_List) Set(i int, v ViewSharingLink_RoleAssignment) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ViewSharingLink_RoleAssignment_List) String() string {
	str, _ := text.MarshalList(0xf020f2be35e8e2b5, s.List)
	return str
}

// ViewSharingLink_RoleAssignment_Future is a wrapper for a ViewSharingLink_RoleAssignment promised by a client call.
type ViewSharingLink_RoleAssignment_Future struct{ *capnp.Future }

func (p ViewSharingLink_RoleAssignment_Future) Struct() (ViewSharingLink_RoleAssignment, error) {
	s, err := p.Future.Struct()
	return ViewSharingLink_RoleAssignment{s}, err
}

type ViewSharingLink_getRoleAssignment_Params struct{ capnp.Struct }

// ViewSharingLink_getRoleAssignment_Params_TypeID is the unique identifier for the type ViewSharingLink_getRoleAssignment_Params.
const ViewSharingLink_getRoleAssignment_Params_TypeID = 0xb8083dd65a24c770

func NewViewSharingLink_getRoleAssignment_Params(s *capnp.Segment) (ViewSharingLink_getRoleAssignment_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ViewSharingLink_getRoleAssignment_Params{st}, err
}

func NewRootViewSharingLink_getRoleAssignment_Params(s *capnp.Segment) (ViewSharingLink_getRoleAssignment_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ViewSharingLink_getRoleAssignment_Params{st}, err
}

func ReadRootViewSharingLink_getRoleAssignment_Params(msg *capnp.Message) (ViewSharingLink_getRoleAssignment_Params, error) {
	root, err := msg.Root()
	return ViewSharingLink_getRoleAssignment_Params{root.Struct()}, err
}

func (s ViewSharingLink_getRoleAssignment_Params) String() string {
	str, _ := text.Marshal(0xb8083dd65a24c770, s.Struct)
	return str
}

// ViewSharingLink_getRoleAssignment_Params_List is a list of ViewSharingLink_getRoleAssignment_Params.
type ViewSharingLink_getRoleAssignment_Params_List struct{ capnp.List }

// NewViewSharingLink_getRoleAssignment_Params creates a new list of ViewSharingLink_getRoleAssignment_Params.
func NewViewSharingLink_getRoleAssignment_Params_List(s *capnp.Segment, sz int32) (ViewSharingLink_getRoleAssignment_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return ViewSharingLink_getRoleAssignment_Params_List{l}, err
}

func (s ViewSharingLink_getRoleAssignment_Params_List) At(i int) ViewSharingLink_getRoleAssignment_Params {
	return ViewSharingLink_getRoleAssignment_Params{s.List.Struct(i)}
}

func (s ViewSharingLink_getRoleAssignment_Params_List) Set(i int, v ViewSharingLink_getRoleAssignment_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ViewSharingLink_getRoleAssignment_Params_List) String() string {
	str, _ := text.MarshalList(0xb8083dd65a24c770, s.List)
	return str
}

// ViewSharingLink_getRoleAssignment_Params_Future is a wrapper for a ViewSharingLink_getRoleAssignment_Params promised by a client call.
type ViewSharingLink_getRoleAssignment_Params_Future struct{ *capnp.Future }

func (p ViewSharingLink_getRoleAssignment_Params_Future) Struct() (ViewSharingLink_getRoleAssignment_Params, error) {
	s, err := p.Future.Struct()
	return ViewSharingLink_getRoleAssignment_Params{s}, err
}

type ViewSharingLink_getRoleAssignment_Results struct{ capnp.Struct }

// ViewSharingLink_getRoleAssignment_Results_TypeID is the unique identifier for the type ViewSharingLink_getRoleAssignment_Results.
const ViewSharingLink_getRoleAssignment_Results_TypeID = 0x9d159666de73f39d

func NewViewSharingLink_getRoleAssignment_Results(s *capnp.Segment) (ViewSharingLink_getRoleAssignment_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ViewSharingLink_getRoleAssignment_Results{st}, err
}

func NewRootViewSharingLink_getRoleAssignment_Results(s *capnp.Segment) (ViewSharingLink_getRoleAssignment_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ViewSharingLink_getRoleAssignment_Results{st}, err
}

func ReadRootViewSharingLink_getRoleAssignment_Results(msg *capnp.Message) (ViewSharingLink_getRoleAssignment_Results, error) {
	root, err := msg.Root()
	return ViewSharingLink_getRoleAssignment_Results{root.Struct()}, err
}

func (s ViewSharingLink_getRoleAssignment_Results) String() string {
	str, _ := text.Marshal(0x9d159666de73f39d, s.Struct)
	return str
}

func (s ViewSharingLink_getRoleAssignment_Results) Var() util.Assignable {
	p, _ := s.Struct.Ptr(0)
	return util.Assignable{Client: p.Interface().Client()}
}

func (s ViewSharingLink_getRoleAssignment_Results) HasVar() bool {
	return s.Struct.HasPtr(0)
}

func (s ViewSharingLink_getRoleAssignment_Results) SetVar(v util.Assignable) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// ViewSharingLink_getRoleAssignment_Results_List is a list of ViewSharingLink_getRoleAssignment_Results.
type ViewSharingLink_getRoleAssignment_Results_List struct{ capnp.List }

// NewViewSharingLink_getRoleAssignment_Results creates a new list of ViewSharingLink_getRoleAssignment_Results.
func NewViewSharingLink_getRoleAssignment_Results_List(s *capnp.Segment, sz int32) (ViewSharingLink_getRoleAssignment_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return ViewSharingLink_getRoleAssignment_Results_List{l}, err
}

func (s ViewSharingLink_getRoleAssignment_Results_List) At(i int) ViewSharingLink_getRoleAssignment_Results {
	return ViewSharingLink_getRoleAssignment_Results{s.List.Struct(i)}
}

func (s ViewSharingLink_getRoleAssignment_Results_List) Set(i int, v ViewSharingLink_getRoleAssignment_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ViewSharingLink_getRoleAssignment_Results_List) String() string {
	str, _ := text.MarshalList(0x9d159666de73f39d, s.List)
	return str
}

// ViewSharingLink_getRoleAssignment_Results_Future is a wrapper for a ViewSharingLink_getRoleAssignment_Results promised by a client call.
type ViewSharingLink_getRoleAssignment_Results_Future struct{ *capnp.Future }

func (p ViewSharingLink_getRoleAssignment_Results_Future) Struct() (ViewSharingLink_getRoleAssignment_Results, error) {
	s, err := p.Future.Struct()
	return ViewSharingLink_getRoleAssignment_Results{s}, err
}

func (p ViewSharingLink_getRoleAssignment_Results_Future) Var() util.Assignable {
	return util.Assignable{Client: p.Future.Field(0, nil).Client()}
}

type GrainInfo struct{ capnp.Struct }

// GrainInfo_TypeID is the unique identifier for the type GrainInfo.
const GrainInfo_TypeID = 0xb5fcc0e153671d68

func NewGrainInfo(s *capnp.Segment) (GrainInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return GrainInfo{st}, err
}

func NewRootGrainInfo(s *capnp.Segment) (GrainInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return GrainInfo{st}, err
}

func ReadRootGrainInfo(msg *capnp.Message) (GrainInfo, error) {
	root, err := msg.Root()
	return GrainInfo{root.Struct()}, err
}

func (s GrainInfo) String() string {
	str, _ := text.Marshal(0xb5fcc0e153671d68, s.Struct)
	return str
}

func (s GrainInfo) AppId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GrainInfo) HasAppId() bool {
	return s.Struct.HasPtr(0)
}

func (s GrainInfo) AppIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GrainInfo) SetAppId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GrainInfo) AppVersion() uint32 {
	return s.Struct.Uint32(0)
}

func (s GrainInfo) SetAppVersion(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s GrainInfo) Title() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GrainInfo) HasTitle() bool {
	return s.Struct.HasPtr(1)
}

func (s GrainInfo) TitleBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GrainInfo) SetTitle(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GrainInfo) OwnerIdentityId() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GrainInfo) HasOwnerIdentityId() bool {
	return s.Struct.HasPtr(2)
}

func (s GrainInfo) OwnerIdentityIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GrainInfo) SetOwnerIdentityId(v string) error {
	return s.Struct.SetText(2, v)
}

func (s GrainInfo) Users() (GrainInfo_User_List, error) {
	p, err := s.Struct.Ptr(3)
	return GrainInfo_User_List{List: p.List()}, err
}

func (s GrainInfo) HasUsers() bool {
	return s.Struct.HasPtr(3)
}

func (s GrainInfo) SetUsers(v GrainInfo_User_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewUsers sets the users field to a newly
// allocated GrainInfo_User_List, preferring placement in s's segment.
func (s GrainInfo) NewUsers(n int32) (GrainInfo_User_List, error) {
	l, err := NewGrainInfo_User_List(s.Struct.Segment(), n)
	if err != nil {
		return GrainInfo_User_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s GrainInfo) OriginalGrainId() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s GrainInfo) HasOriginalGrainId() bool {
	return s.Struct.HasPtr(4)
}

func (s GrainInfo) OriginalGrainIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s GrainInfo) SetOriginalGrainId(v string) error {
	return s.Struct.SetText(4, v)
}

// GrainInfo_List is a list of GrainInfo.
type GrainInfo_List struct{ capnp.List }

// NewGrainInfo creates a new list of GrainInfo.
func NewGrainInfo_List(s *capnp.Segment, sz int32) (GrainInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5}, sz)
	return GrainInfo_List{l}, err
}

func (s GrainInfo_List) At(i int) GrainInfo { return GrainInfo{s.List.Struct(i)} }

func (s GrainInfo_List) Set(i int, v GrainInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s GrainInfo_List) String() string {
	str, _ := text.MarshalList(0xb5fcc0e153671d68, s.List)
	return str
}

// GrainInfo_Future is a wrapper for a GrainInfo promised by a client call.
type GrainInfo_Future struct{ *capnp.Future }

func (p GrainInfo_Future) Struct() (GrainInfo, error) {
	s, err := p.Future.Struct()
	return GrainInfo{s}, err
}

type GrainInfo_User struct{ capnp.Struct }

// GrainInfo_User_TypeID is the unique identifier for the type GrainInfo_User.
const GrainInfo_User_TypeID = 0x9f07b75928ba4e20

func NewGrainInfo_User(s *capnp.Segment) (GrainInfo_User, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GrainInfo_User{st}, err
}

func NewRootGrainInfo_User(s *capnp.Segment) (GrainInfo_User, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GrainInfo_User{st}, err
}

func ReadRootGrainInfo_User(msg *capnp.Message) (GrainInfo_User, error) {
	root, err := msg.Root()
	return GrainInfo_User{root.Struct()}, err
}

func (s GrainInfo_User) String() string {
	str, _ := text.Marshal(0x9f07b75928ba4e20, s.Struct)
	return str
}

func (s GrainInfo_User) IdentityId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GrainInfo_User) HasIdentityId() bool {
	return s.Struct.HasPtr(0)
}

func (s GrainInfo_User) IdentityIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GrainInfo_User) SetIdentityId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GrainInfo_User) CredentialIds() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.TextList{List: p.List()}, err
}

func (s GrainInfo_User) HasCredentialIds() bool {
	return s.Struct.HasPtr(1)
}

func (s GrainInfo_User) SetCredentialIds(v capnp.TextList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewCredentialIds sets the credentialIds field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s GrainInfo_User) NewCredentialIds(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s GrainInfo_User) Profile() (identity.Profile, error) {
	p, err := s.Struct.Ptr(2)
	return identity.Profile{Struct: p.Struct()}, err
}

func (s GrainInfo_User) HasProfile() bool {
	return s.Struct.HasPtr(2)
}

func (s GrainInfo_User) SetProfile(v identity.Profile) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewProfile sets the profile field to a newly
// allocated identity.Profile struct, preferring placement in s's segment.
func (s GrainInfo_User) NewProfile() (identity.Profile, error) {
	ss, err := identity.NewProfile(s.Struct.Segment())
	if err != nil {
		return identity.Profile{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

// GrainInfo_User_List is a list of GrainInfo_User.
type GrainInfo_User_List struct{ capnp.List }

// NewGrainInfo_User creates a new list of GrainInfo_User.
func NewGrainInfo_User_List(s *capnp.Segment, sz int32) (GrainInfo_User_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GrainInfo_User_List{l}, err
}

func (s GrainInfo_User_List) At(i int) GrainInfo_User { return GrainInfo_User{s.List.Struct(i)} }

func (s GrainInfo_User_List) Set(i int, v GrainInfo_User) error { return s.List.SetStruct(i, v.Struct) }

func (s GrainInfo_User_List) String() string {
	str, _ := text.MarshalList(0x9f07b75928ba4e20, s.List)
	return str
}

// GrainInfo_User_Future is a wrapper for a GrainInfo_User promised by a client call.
type GrainInfo_User_Future struct{ *capnp.Future }

func (p GrainInfo_User_Future) Struct() (GrainInfo_User, error) {
	s, err := p.Future.Struct()
	return GrainInfo_User{s}, err
}

func (p GrainInfo_User_Future) Profile() identity.Profile_Future {
	return identity.Profile_Future{Future: p.Future.Field(2, nil)}
}

type AppPersistent struct{ Client *capnp.Client }

// AppPersistent_TypeID is the unique identifier for the type AppPersistent.
const AppPersistent_TypeID = 0xaffa789add8747b8

func (c AppPersistent) Save(ctx context.Context, params func(AppPersistent_save_Params) error) (AppPersistent_save_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xaffa789add8747b8,
			MethodID:      0,
			InterfaceName: "grain.capnp:AppPersistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(AppPersistent_save_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return AppPersistent_save_Results_Future{Future: ans.Future()}, release
}

func (c AppPersistent) AddRef() AppPersistent {
	return AppPersistent{
		Client: c.Client.AddRef(),
	}
}

func (c AppPersistent) Release() {
	c.Client.Release()
}

// A AppPersistent_Server is a AppPersistent with a local implementation.
type AppPersistent_Server interface {
	Save(context.Context, AppPersistent_save) error
}

// AppPersistent_NewServer creates a new Server from an implementation of AppPersistent_Server.
func AppPersistent_NewServer(s AppPersistent_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(AppPersistent_Methods(nil, s), s, c, policy)
}

// AppPersistent_ServerToClient creates a new Client from an implementation of AppPersistent_Server.
// The caller is responsible for calling Release on the returned Client.
func AppPersistent_ServerToClient(s AppPersistent_Server, policy *server.Policy) AppPersistent {
	return AppPersistent{Client: capnp.NewClient(AppPersistent_NewServer(s, policy))}
}

// AppPersistent_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func AppPersistent_Methods(methods []server.Method, s AppPersistent_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaffa789add8747b8,
			MethodID:      0,
			InterfaceName: "grain.capnp:AppPersistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, AppPersistent_save{call})
		},
	})

	return methods
}

// AppPersistent_save holds the state for a server call to AppPersistent.save.
// See server.Call for documentation.
type AppPersistent_save struct {
	*server.Call
}

// Args returns the call's arguments.
func (c AppPersistent_save) Args() AppPersistent_save_Params {
	return AppPersistent_save_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c AppPersistent_save) AllocResults() (AppPersistent_save_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return AppPersistent_save_Results{Struct: r}, err
}

type AppPersistent_save_Params struct{ capnp.Struct }

// AppPersistent_save_Params_TypeID is the unique identifier for the type AppPersistent_save_Params.
const AppPersistent_save_Params_TypeID = 0xf0136e14d8019d3c

func NewAppPersistent_save_Params(s *capnp.Segment) (AppPersistent_save_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return AppPersistent_save_Params{st}, err
}

func NewRootAppPersistent_save_Params(s *capnp.Segment) (AppPersistent_save_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return AppPersistent_save_Params{st}, err
}

func ReadRootAppPersistent_save_Params(msg *capnp.Message) (AppPersistent_save_Params, error) {
	root, err := msg.Root()
	return AppPersistent_save_Params{root.Struct()}, err
}

func (s AppPersistent_save_Params) String() string {
	str, _ := text.Marshal(0xf0136e14d8019d3c, s.Struct)
	return str
}

// AppPersistent_save_Params_List is a list of AppPersistent_save_Params.
type AppPersistent_save_Params_List struct{ capnp.List }

// NewAppPersistent_save_Params creates a new list of AppPersistent_save_Params.
func NewAppPersistent_save_Params_List(s *capnp.Segment, sz int32) (AppPersistent_save_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return AppPersistent_save_Params_List{l}, err
}

func (s AppPersistent_save_Params_List) At(i int) AppPersistent_save_Params {
	return AppPersistent_save_Params{s.List.Struct(i)}
}

func (s AppPersistent_save_Params_List) Set(i int, v AppPersistent_save_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s AppPersistent_save_Params_List) String() string {
	str, _ := text.MarshalList(0xf0136e14d8019d3c, s.List)
	return str
}

// AppPersistent_save_Params_Future is a wrapper for a AppPersistent_save_Params promised by a client call.
type AppPersistent_save_Params_Future struct{ *capnp.Future }

func (p AppPersistent_save_Params_Future) Struct() (AppPersistent_save_Params, error) {
	s, err := p.Future.Struct()
	return AppPersistent_save_Params{s}, err
}

type AppPersistent_save_Results struct{ capnp.Struct }

// AppPersistent_save_Results_TypeID is the unique identifier for the type AppPersistent_save_Results.
const AppPersistent_save_Results_TypeID = 0xba36a34b4eeb483f

func NewAppPersistent_save_Results(s *capnp.Segment) (AppPersistent_save_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return AppPersistent_save_Results{st}, err
}

func NewRootAppPersistent_save_Results(s *capnp.Segment) (AppPersistent_save_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return AppPersistent_save_Results{st}, err
}

func ReadRootAppPersistent_save_Results(msg *capnp.Message) (AppPersistent_save_Results, error) {
	root, err := msg.Root()
	return AppPersistent_save_Results{root.Struct()}, err
}

func (s AppPersistent_save_Results) String() string {
	str, _ := text.Marshal(0xba36a34b4eeb483f, s.Struct)
	return str
}

func (s AppPersistent_save_Results) ObjectId() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s AppPersistent_save_Results) HasObjectId() bool {
	return s.Struct.HasPtr(0)
}

func (s AppPersistent_save_Results) SetObjectId(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s AppPersistent_save_Results) Label() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(1)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s AppPersistent_save_Results) HasLabel() bool {
	return s.Struct.HasPtr(1)
}

func (s AppPersistent_save_Results) SetLabel(v util.LocalizedText) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewLabel sets the label field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s AppPersistent_save_Results) NewLabel() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// AppPersistent_save_Results_List is a list of AppPersistent_save_Results.
type AppPersistent_save_Results_List struct{ capnp.List }

// NewAppPersistent_save_Results creates a new list of AppPersistent_save_Results.
func NewAppPersistent_save_Results_List(s *capnp.Segment, sz int32) (AppPersistent_save_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return AppPersistent_save_Results_List{l}, err
}

func (s AppPersistent_save_Results_List) At(i int) AppPersistent_save_Results {
	return AppPersistent_save_Results{s.List.Struct(i)}
}

func (s AppPersistent_save_Results_List) Set(i int, v AppPersistent_save_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s AppPersistent_save_Results_List) String() string {
	str, _ := text.MarshalList(0xba36a34b4eeb483f, s.List)
	return str
}

// AppPersistent_save_Results_Future is a wrapper for a AppPersistent_save_Results promised by a client call.
type AppPersistent_save_Results_Future struct{ *capnp.Future }

func (p AppPersistent_save_Results_Future) Struct() (AppPersistent_save_Results, error) {
	s, err := p.Future.Struct()
	return AppPersistent_save_Results{s}, err
}

func (p AppPersistent_save_Results_Future) ObjectId() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p AppPersistent_save_Results_Future) Label() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(1, nil)}
}

type MainView struct{ Client *capnp.Client }

// MainView_TypeID is the unique identifier for the type MainView.
const MainView_TypeID = 0xc277e9822ae2c8fc

func (c MainView) Restore(ctx context.Context, params func(MainView_restore_Params) error) (MainView_restore_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc277e9822ae2c8fc,
			MethodID:      0,
			InterfaceName: "grain.capnp:MainView",
			MethodName:    "restore",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(MainView_restore_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return MainView_restore_Results_Future{Future: ans.Future()}, release
}
func (c MainView) Drop(ctx context.Context, params func(MainView_drop_Params) error) (MainView_drop_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc277e9822ae2c8fc,
			MethodID:      1,
			InterfaceName: "grain.capnp:MainView",
			MethodName:    "drop",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(MainView_drop_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return MainView_drop_Results_Future{Future: ans.Future()}, release
}
func (c MainView) GetViewInfo(ctx context.Context, params func(UiView_getViewInfo_Params) error) (UiView_ViewInfo_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      0,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "getViewInfo",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_getViewInfo_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_ViewInfo_Future{Future: ans.Future()}, release
}
func (c MainView) NewSession(ctx context.Context, params func(UiView_newSession_Params) error) (UiView_newSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      1,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newSession_Results_Future{Future: ans.Future()}, release
}
func (c MainView) NewRequestSession(ctx context.Context, params func(UiView_newRequestSession_Params) error) (UiView_newRequestSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      2,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newRequestSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 5}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newRequestSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newRequestSession_Results_Future{Future: ans.Future()}, release
}
func (c MainView) NewOfferSession(ctx context.Context, params func(UiView_newOfferSession_Params) error) (UiView_newOfferSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      3,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newOfferSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 6}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newOfferSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newOfferSession_Results_Future{Future: ans.Future()}, release
}

func (c MainView) AddRef() MainView {
	return MainView{
		Client: c.Client.AddRef(),
	}
}

func (c MainView) Release() {
	c.Client.Release()
}

// A MainView_Server is a MainView with a local implementation.
type MainView_Server interface {
	Restore(context.Context, MainView_restore) error

	Drop(context.Context, MainView_drop) error

	GetViewInfo(context.Context, UiView_getViewInfo) error

	NewSession(context.Context, UiView_newSession) error

	NewRequestSession(context.Context, UiView_newRequestSession) error

	NewOfferSession(context.Context, UiView_newOfferSession) error
}

// MainView_NewServer creates a new Server from an implementation of MainView_Server.
func MainView_NewServer(s MainView_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(MainView_Methods(nil, s), s, c, policy)
}

// MainView_ServerToClient creates a new Client from an implementation of MainView_Server.
// The caller is responsible for calling Release on the returned Client.
func MainView_ServerToClient(s MainView_Server, policy *server.Policy) MainView {
	return MainView{Client: capnp.NewClient(MainView_NewServer(s, policy))}
}

// MainView_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func MainView_Methods(methods []server.Method, s MainView_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 6)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc277e9822ae2c8fc,
			MethodID:      0,
			InterfaceName: "grain.capnp:MainView",
			MethodName:    "restore",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Restore(ctx, MainView_restore{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc277e9822ae2c8fc,
			MethodID:      1,
			InterfaceName: "grain.capnp:MainView",
			MethodName:    "drop",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Drop(ctx, MainView_drop{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      0,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "getViewInfo",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetViewInfo(ctx, UiView_getViewInfo{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      1,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewSession(ctx, UiView_newSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      2,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newRequestSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewRequestSession(ctx, UiView_newRequestSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      3,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newOfferSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewOfferSession(ctx, UiView_newOfferSession{call})
		},
	})

	return methods
}

// MainView_restore holds the state for a server call to MainView.restore.
// See server.Call for documentation.
type MainView_restore struct {
	*server.Call
}

// Args returns the call's arguments.
func (c MainView_restore) Args() MainView_restore_Params {
	return MainView_restore_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c MainView_restore) AllocResults() (MainView_restore_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_restore_Results{Struct: r}, err
}

// MainView_drop holds the state for a server call to MainView.drop.
// See server.Call for documentation.
type MainView_drop struct {
	*server.Call
}

// Args returns the call's arguments.
func (c MainView_drop) Args() MainView_drop_Params {
	return MainView_drop_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c MainView_drop) AllocResults() (MainView_drop_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return MainView_drop_Results{Struct: r}, err
}

type MainView_restore_Params struct{ capnp.Struct }

// MainView_restore_Params_TypeID is the unique identifier for the type MainView_restore_Params.
const MainView_restore_Params_TypeID = 0x9ad62de07dfc6419

func NewMainView_restore_Params(s *capnp.Segment) (MainView_restore_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_restore_Params{st}, err
}

func NewRootMainView_restore_Params(s *capnp.Segment) (MainView_restore_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_restore_Params{st}, err
}

func ReadRootMainView_restore_Params(msg *capnp.Message) (MainView_restore_Params, error) {
	root, err := msg.Root()
	return MainView_restore_Params{root.Struct()}, err
}

func (s MainView_restore_Params) String() string {
	str, _ := text.Marshal(0x9ad62de07dfc6419, s.Struct)
	return str
}

func (s MainView_restore_Params) ObjectId() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s MainView_restore_Params) HasObjectId() bool {
	return s.Struct.HasPtr(0)
}

func (s MainView_restore_Params) SetObjectId(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// MainView_restore_Params_List is a list of MainView_restore_Params.
type MainView_restore_Params_List struct{ capnp.List }

// NewMainView_restore_Params creates a new list of MainView_restore_Params.
func NewMainView_restore_Params_List(s *capnp.Segment, sz int32) (MainView_restore_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return MainView_restore_Params_List{l}, err
}

func (s MainView_restore_Params_List) At(i int) MainView_restore_Params {
	return MainView_restore_Params{s.List.Struct(i)}
}

func (s MainView_restore_Params_List) Set(i int, v MainView_restore_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s MainView_restore_Params_List) String() string {
	str, _ := text.MarshalList(0x9ad62de07dfc6419, s.List)
	return str
}

// MainView_restore_Params_Future is a wrapper for a MainView_restore_Params promised by a client call.
type MainView_restore_Params_Future struct{ *capnp.Future }

func (p MainView_restore_Params_Future) Struct() (MainView_restore_Params, error) {
	s, err := p.Future.Struct()
	return MainView_restore_Params{s}, err
}

func (p MainView_restore_Params_Future) ObjectId() *capnp.Future {
	return p.Future.Field(0, nil)
}

type MainView_restore_Results struct{ capnp.Struct }

// MainView_restore_Results_TypeID is the unique identifier for the type MainView_restore_Results.
const MainView_restore_Results_TypeID = 0x99efcebf23bbae35

func NewMainView_restore_Results(s *capnp.Segment) (MainView_restore_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_restore_Results{st}, err
}

func NewRootMainView_restore_Results(s *capnp.Segment) (MainView_restore_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_restore_Results{st}, err
}

func ReadRootMainView_restore_Results(msg *capnp.Message) (MainView_restore_Results, error) {
	root, err := msg.Root()
	return MainView_restore_Results{root.Struct()}, err
}

func (s MainView_restore_Results) String() string {
	str, _ := text.Marshal(0x99efcebf23bbae35, s.Struct)
	return str
}

func (s MainView_restore_Results) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s MainView_restore_Results) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s MainView_restore_Results) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// MainView_restore_Results_List is a list of MainView_restore_Results.
type MainView_restore_Results_List struct{ capnp.List }

// NewMainView_restore_Results creates a new list of MainView_restore_Results.
func NewMainView_restore_Results_List(s *capnp.Segment, sz int32) (MainView_restore_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return MainView_restore_Results_List{l}, err
}

func (s MainView_restore_Results_List) At(i int) MainView_restore_Results {
	return MainView_restore_Results{s.List.Struct(i)}
}

func (s MainView_restore_Results_List) Set(i int, v MainView_restore_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s MainView_restore_Results_List) String() string {
	str, _ := text.MarshalList(0x99efcebf23bbae35, s.List)
	return str
}

// MainView_restore_Results_Future is a wrapper for a MainView_restore_Results promised by a client call.
type MainView_restore_Results_Future struct{ *capnp.Future }

func (p MainView_restore_Results_Future) Struct() (MainView_restore_Results, error) {
	s, err := p.Future.Struct()
	return MainView_restore_Results{s}, err
}

func (p MainView_restore_Results_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

type MainView_drop_Params struct{ capnp.Struct }

// MainView_drop_Params_TypeID is the unique identifier for the type MainView_drop_Params.
const MainView_drop_Params_TypeID = 0x8c519e0dedc17d73

func NewMainView_drop_Params(s *capnp.Segment) (MainView_drop_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_drop_Params{st}, err
}

func NewRootMainView_drop_Params(s *capnp.Segment) (MainView_drop_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_drop_Params{st}, err
}

func ReadRootMainView_drop_Params(msg *capnp.Message) (MainView_drop_Params, error) {
	root, err := msg.Root()
	return MainView_drop_Params{root.Struct()}, err
}

func (s MainView_drop_Params) String() string {
	str, _ := text.Marshal(0x8c519e0dedc17d73, s.Struct)
	return str
}

func (s MainView_drop_Params) ObjectId() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s MainView_drop_Params) HasObjectId() bool {
	return s.Struct.HasPtr(0)
}

func (s MainView_drop_Params) SetObjectId(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// MainView_drop_Params_List is a list of MainView_drop_Params.
type MainView_drop_Params_List struct{ capnp.List }

// NewMainView_drop_Params creates a new list of MainView_drop_Params.
func NewMainView_drop_Params_List(s *capnp.Segment, sz int32) (MainView_drop_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return MainView_drop_Params_List{l}, err
}

func (s MainView_drop_Params_List) At(i int) MainView_drop_Params {
	return MainView_drop_Params{s.List.Struct(i)}
}

func (s MainView_drop_Params_List) Set(i int, v MainView_drop_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s MainView_drop_Params_List) String() string {
	str, _ := text.MarshalList(0x8c519e0dedc17d73, s.List)
	return str
}

// MainView_drop_Params_Future is a wrapper for a MainView_drop_Params promised by a client call.
type MainView_drop_Params_Future struct{ *capnp.Future }

func (p MainView_drop_Params_Future) Struct() (MainView_drop_Params, error) {
	s, err := p.Future.Struct()
	return MainView_drop_Params{s}, err
}

func (p MainView_drop_Params_Future) ObjectId() *capnp.Future {
	return p.Future.Field(0, nil)
}

type MainView_drop_Results struct{ capnp.Struct }

// MainView_drop_Results_TypeID is the unique identifier for the type MainView_drop_Results.
const MainView_drop_Results_TypeID = 0x9210d9e69d14fa35

func NewMainView_drop_Results(s *capnp.Segment) (MainView_drop_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return MainView_drop_Results{st}, err
}

func NewRootMainView_drop_Results(s *capnp.Segment) (MainView_drop_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return MainView_drop_Results{st}, err
}

func ReadRootMainView_drop_Results(msg *capnp.Message) (MainView_drop_Results, error) {
	root, err := msg.Root()
	return MainView_drop_Results{root.Struct()}, err
}

func (s MainView_drop_Results) String() string {
	str, _ := text.Marshal(0x9210d9e69d14fa35, s.Struct)
	return str
}

// MainView_drop_Results_List is a list of MainView_drop_Results.
type MainView_drop_Results_List struct{ capnp.List }

// NewMainView_drop_Results creates a new list of MainView_drop_Results.
func NewMainView_drop_Results_List(s *capnp.Segment, sz int32) (MainView_drop_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return MainView_drop_Results_List{l}, err
}

func (s MainView_drop_Results_List) At(i int) MainView_drop_Results {
	return MainView_drop_Results{s.List.Struct(i)}
}

func (s MainView_drop_Results_List) Set(i int, v MainView_drop_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s MainView_drop_Results_List) String() string {
	str, _ := text.MarshalList(0x9210d9e69d14fa35, s.List)
	return str
}

// MainView_drop_Results_Future is a wrapper for a MainView_drop_Results promised by a client call.
type MainView_drop_Results_Future struct{ *capnp.Future }

func (p MainView_drop_Results_Future) Struct() (MainView_drop_Results, error) {
	s, err := p.Future.Struct()
	return MainView_drop_Results{s}, err
}

const schema_c8d91463cfc4fb4a = "x\xda\xdcz{x\x14\xe5\xb9\xf8\xfb\xced\xb3\x89\x0d" +
	"\xdd\x0c\x13$\x91\x90p\x89?b*\x81$\x80J\xa5" +
	"\xb9I1\x114\x93\x00\x05~\xd2\x87\xd9\xddI2f" +
	"\xb3\xbb\xcc\xee\x12B\x8b\x88\x07\x8eR\xf1T)\x9e*" +
	"\x8fxA9\x15\x0bmm\xa1\x82\xd5\x0a\xadV\xc0\xe2" +
	"\x05\x11\xc5\x1eZ\xc1jQAE\xad\x8a\x17\xe6<\xef" +
	"7\xf3\xcdN6\x9b\x0b>\xe7\xe9\x1f\xe7\x0f\x1f\xc3\xec" +
	"\xfb}\xdf{\xbfO\xfc\xb6T#Tx\x86\x97\x03\xb4" +
	"\xe4\x0b\x9eLsc\xcd\xdc\xf5\xd7?\xb0t\x15H9" +
	"\x82\xd9\xf8\xc5S\xcf\x07\xf2\x8e\xec\x05@\xf9\xf4\xf9\xef" +
	"\xc8_\x9d\xef\x05\x90\xcf\x9c\xbf\x02\xd0|}\xec\xc2\xc6" +
	"\xd3\xa3\xdeX\x0d\xd2\x08\x04\xf0\xa0\x17\xa0\xaab\xf8\x02" +
	"\x04\x94\xa7\x0d\xaf\x064\x8f\xaa\x97?7\xa7\xe1\xc8M" +
	" \x15X\x00\xb9X\xb5px\x1d\x01h\x0c\xe0\xf9\xef" +
	"M\x92wo]s\x0b(c\x10\x012\xe8\x86\xd5\xc3" +
	"\x0d\x02\xb8\x9d\x01\\\xfb\x928\xfc\x81h\xe3Z\xf7\x0d" +
	"\xbb\x86/#\x80\xa7\x19@l\xf9\x9eSC\xeeQ\xd6" +
	"\x824\xcc\x01xs\xf8y\x04p\x8a\x01\x94\xf8k\xdf" +
	"=89\xb4\x96\x9e\x10\xcd\x95\xa7\x86\x84\xd6DJ\x1f" +
	"\x87a\x82\x17\x01\xaa\xa4\xfcf\x02\x1d\x99\xdf\x05h^" +
	"\xbdzN\xfb\xeeC{o\xb5\x1e\xcb\xa0\xab\xba\xe9\xf7" +
	"\x0c\xf3\xdf\xaf>\xdcp\xc7\xc7\xe5?\x06I\xe6hj" +
	"\xf9\x95\xf4\xcb\xf5\x7f~\xe3\xa5\x87\xf6g\xaes#8" +
	"\x8b~ByN>\xbd?\xf9\xf3\xbc\x8do\x1d\xc9]" +
	"g!\xc8.M\xe4\x0f\xa5\xa3'\xe7\x15\xdc\xb2\xfb\xb6" +
	"qw\xd2\xa5\xe6?\x8e\xb7\xbds\xe7+\xdb\xffb\xb1" +
	"Q^\x98\xff\xb9\xac\xe7\xd3_\x9au\xcb/~7\xf6" +
	"\xc9\xe7\xde\xbf\xcbM\xe6\xea\xfc2z\xe6V\x06P\x10" +
	"\xfcr\xf9\xeb\xe3\x0fop\x03l\xcb\x1fC\x00;\x18" +
	"\xc0\x8b\xfb\x17\x7fW\x1cwd\x03H\xf9\x8e\xb0\x8e\xe4" +
	"3a\xbd\xc9\x006~\x14\xfbk\xeb\x7f\x0e\xdb\x08R" +
	"\xa1\x030\xb9\xe0\xd7\x040\xbd\x80\x00\xee\xce\xbc\xe6/" +
	"\x9f\x0b\xb5\x1b-q3&\xdcQ\xd0H\x94t\x8f:" +
	"\x89k\xa3\xbf\xbd\xc7b\x8fute\x01\xbb\xfbVv" +
	"t\xd4\xd5\x8f\x95\xce\x7f\xd4{/H\xe7\xa3\xd9>\xb2" +
	"\xad\xe5\xd8\xee/w\x80G$\x02\xb7\x15\xbc&\xef*" +
	"\xa0\xbfv\x14\xfc\x12\xd0\\\xf7\xd5\x90\x86\xf7\xa7\x84\xee" +
	"\xb5\xb5\xcab\xf6\x05?\xa2\xcb\x12\x17\xfc\x03\xd0\x1c\xbd" +
	"\xf0\xddc\xeb|\x87\xeeu\xb3\\\x1f\xc1^K\x8c\xa0" +
	"\xd7\x96\xfe\xf4{g\x0a\xc7\x97mr\xa3s\xc7\x88\xeb" +
	"\x08\xe0~\x06p\xed\xcd\x9d\x7f\x9b?\xf5\xa6M.A" +
	"\xef\x19\xb1\x8e(\x89o\xfcS\xc9\xd9\x9ck\x1e\x00%" +
	"\x07\xc5\xa4\xf2{\x04\xc2\xef\x91\x11\xfb\xe5'F\x0c\x07" +
	"\x90\xf7\x8d LO\x9c\xfd\xe3\xac%\x13>{\x10\xa4" +
	"\x1c\xb1\x87\xa1\xcc*<.\xcf/$@\xadp\x86|" +
	"\x07\xfdeFK;\xa6go\x9d\xbc\xd9\xf5\xe6\xea\xc2" +
	"M\xf4\xe6\xdf\xd6\xafy\xee7\xa7\xa6n\x06E&#" +
	"\xf0d\x12\xbe\x89BR\xcc\xaa\x95\x85?F@\xf3\x99" +
	"\xf5\xebJ\x7fj~\xfc\x90\x9b\xa2\x82\"\xa6e\xa3\x8b" +
	"\x88\xa2[\xee+j\xdb\xb7\xed;[\\\xb2\xa9-\xf2" +
	"\xd3\xed\xd2\xf5_<\xf4\xf2\x06\xf5\xe7 \x15\x88I\xf2" +
	"\x00\xab\xc6\x17\x0dEyZ\x11\x11vY\xd1\x0cY\xa5" +
	"\xbfL\xed\xda\xd2\xd5+\xc6l\xdd\xe6\xe6mC\x11\xd3" +
	"3\x85=\xb4s\xc6MG7,\xfd\xfc\x97)4C" +
	".\xca\x8b\x8b\x0e\xca\xcb\xd9}\xddE3\xe4}E^" +
	"y_\x91\xcf|e\xfb=\x8b\xb6~\xf2\xc6#\xee\x1b" +
	"\xf7\x141\xab;\xc0n\\V\xbd\xe0\xe3\x87\x9f\xbfx" +
	"\xbb\x8b1\xa7\x8a6\x10\xea#\xee\xd99\xf6\xe57u" +
	"\xfb\x17\x8f@?\x1d\xb5\x8e\xbe]D\x06{b\xfc\xf5" +
	"\xfb6\x1c>\xb9\xddE\xf5\xacb&GG\xc7\x94\x1c" +
	"D\x97\x1c=\x84\xde\xb4\xe2_\xcb\xd3\x8b\x873\xe8\xef" +
	"\x11{o\xfe\xc1\xb3\xcfu\xbd\xfa\x8dG\xdd\x8el\xc7" +
	"\xa8?0/3\x8ap\x8c>S\xb2\xe0\xf0\xb4\xac\x9d" +
	"\x96m\xb0\x87.\x1c\xfd0=\xe4\xf9\xd9%+\xbfx" +
	":\xb2\xcb\x8d\xe3\xb0\xd1\x0c\xc7\xd1\xa3\x09\xc7\x8b\xbe<" +
	"\xfb\xdeU\x13\x0e\xefr\x91\xb7r\xf4A:Z}\xe5" +
	"\xbbW_\xf5\xc0\x94\xc7@\xba\xc09\x9a\x18=\x95\x8e" +
	".gG\x9f\xbde~A\xdd\xd4\x82\xc7\xb9b\x10\xf2" +
	"UGG\xfbI1\xde\x1e\xcd0w\xfc\x99R\x80." +
	"\xf1\xce\x11\xbc(`V\xd5\x9c\xb1C\xe9\xba\x85c\xe9" +
	":\xed\xad\x87jgL\xfe\xfe\xe3)\xfe&\x8bXr" +
	"\xff\xd8\xe3\xf2\xb6\xb1t\xff\x96\xb1\xcf\xd0\xc5S>\x0a" +
	",\x18Y\xf3\x9d'{\xe9\xf6\xa9\x0b_\x93\xcf\\H" +
	"\x90\xff\xbcp\x86 w\x8f#\xb5y\xa9\xf1\xae_\xed" +
	"\x1b5gw/hu\xdc\x1fd}\x1c\xf3c\xe3f" +
	"\xc8\xb73\xe0o5n\xf1U\xfc\xe3\xe8n\x90\xc6p" +
	"fv\x8f\xbb\x8e8\xf2\xe5\xde\xe3e7\xbe\xdd\xf5\x87" +
	"4\xca\xa5\x8d{X\xeed\x17\xe9\xe3n\x92\xb3K\x87" +
	"\xcbR\xa9\xcf\x0ce\xfd\xe4\xd5\x13\x8b\x8b\x9e\xb2\x05G" +
	"\xfe\xa4*\xbb\x94\x18$\x0f+%\x13]\xf0\xdf\x7f\x7f" +
	"'\x18\xad~6U\x0f\xe8Uy_\xe9&\xf9\xc5R" +
	":s\xa0\x94q\xf3Y!Z\xf6\xfc5\xda\xc14\xef" +
	"_V\xb6_\x9e^\xc6\xec\xaa\xcc+\xca#\xcb\xbd\xf2" +
	"\xc8r\x9f\xf9\xed\xed\xfe\x93W\x8b\x8b\x0f\xba\xa4;\xac" +
	"|?\xd1\xf2A\xc1%\xabvl\xbc\xe7\xa0[\xef\xb3" +
	"\xcbY\xec\x93\xcaI\xa7\xbe\xda\xf0\xfa\xdcOW\xfd\xbf" +
	"C6\xee\x02\x8b\x9e\xe5V\xf4,'y\xcd+\xfe\xd1" +
	"c\xf5\xff\xb5\xee\xb0[\xb56\x963[\xdc\xcc\x00\xfe" +
	"\xf9\xe4\xe1` \xd4\xf1\x8a\xfb\x09\x9c\xc0\xa2\xe7\x90\x09" +
	",\xbc\x1e\xbf\xfb\xf6\x0f\x1f\x94_\xeb\xf1\xc4\x04\x16=" +
	"\xa7M\xa0\x1b\x1c-H\x95\xdb\x8e\x09\x1b\xe4'&\x8c" +
	"\xa3\x181\xc1\x8b\xf2\xad\x13Ip\x0b?Z5u\xd5" +
	"\x93?\x7f\xcb\x8dPb\"\xc3x\xe5D\xba\xae#\xfc" +
	"Z\xd7\xf3\xf3\xdb\xdfv\xd9\xe3\xb1\x89\x8f\x117\xbes" +
	"\xf2\x86\x0f~y\xd1\xe5\xef\xba\x8f\xbe8\xb1\x91\x8e\x1e" +
	"eG\xe7]z\xd3\xdc\xbf\xb5\xde|\xd2M\xcb\xb4\x8a" +
	"\x0d\x040\xab\x82h\xa9x&\xbbn\xe6\xe9\xd3=\x00" +
	":+\xd8\x0d\xdd\x0c\xe0\xca\xcaO/\xfc\xfd\x9e\xfd\xef" +
	"\x81\x94\x93\xe1\xa6\xa5\xea\xae\x8a\x0bP\xdeR\xe1\x05h" +
	"y\xb0B\xc4\x96_U\x08\x08`\xce}t\xeeU\x9d" +
	"\xda;\xef\xbb\x8d\xfe\xfe\x8a\x1b\xe9\xc2m\xec\xc2\xcb7" +
	"\xe2\xabya\xf9\x03\xcb>\x99l\x0fT\xb0\xa0\xbf\xe3" +
	"\xf8\x89\xc9\xbf\xffp\xd4\x07\xa0\x14\xa2+\x0cL\x17\xbc" +
	"\"y\x8e\x8a\x05(\xef\xa3\xf7\xaa\x9e\xae(&\xbd\xda" +
	"3{J\xf6\xdc\xfc\x9f|`\xc5^\xc6\x17O\x15K" +
	",\x0e\xad\xea\xfe\xd3\xbb\x8b.>\xed\xe2\xd8\xe9\xca:" +
	"\xfa\xe5\x8b\xd7\xd6\xdc\xfc\xe6\xe6+N\xa7j.\x8b\x99" +
	"G*\x0f\xcaoV\xd2_\xc7*)$>\xdc>\xb3" +
	"%\xeb\xfb+>\x02e\x04:\x92~\xa2\x8a\x89f_" +
	"\x15\x19B\xe4\xfc\x1d\xf3\xde\xab\xad\xfc\xa4\x97\xa4\xb5I" +
	"\xbf\x96;'1\xc3\x9a\xe4\xa5\xff\x00\xccc'\xfe\xa3" +
	"\xf4\xbb\xab\xbf\xfd\x89[o\x94I\xcc\xa9-\x9cD\xd2" +
	"z\xf3gW\xdd\xf0\x94t\xe6\x137\xef\x8eMb\x11" +
	"\xf6\xd4$\xe2]i\xfb]\xf7.\xb8x\xd9g\xdcu" +
	"1\xca\x86L&\xe5\xad\x1a6\x991\xe5\xd3E[\xd6" +
	"_\xddq\xf63\x97\xe9TLa\xe9\xc4\xd8=\xde\x83" +
	"\x7f\xda{\xf8\x8c\x8b)#\xa7\xb0`\xf6\xd6/\xee\xc9" +
	"y\xed\xd2i_\xb8s\x83\xec)\x96QM!F\xcc" +
	"\x7f\xdc\xf8\xe1\x94Q\x8f\x7f\xe1\xba\xd4s\x09\x93\xd9\xff" +
	"\x7f\xe2\xb2\x85\xa7'/>\xeb\xba\xf4\x14=g\x82\x09" +
	"W\x99m\x86\xaa\x87\xcb\x03\xaa\x10\x0dG\xa7\xb6\x04\xda" +
	"\xb5`\"\xa4\x87\xdb\x9a4\x9f\xa1G\x82M\x88J\x1e" +
	"\x0a\x98!M\x9e\x0a\x80\xa24\xbe\x12\x00Q\xba\xb0\x0e" +
	"P\x1a\xd9\x08\x80\x82T0\x15\xa0\xba=\x920B\xdd" +
	"\xc5AU\x0fu\xaf\xe8\x8c\x84\xe3\xed\xa1nS\x0d\x87" +
	"\x13j(\xd4\x0d\x00\xd5]\x9a\xd6\x11\xeav\x9e\xcb`" +
	"\xcfi\xb1\x98\x1e\x09\xd7G\xc2qmi\xbc\\\x0d\xc4" +
	"\xf5%z\xbc\xbb\xa4I5T\xb13\xa6d\x88\x19\x00" +
	"\x19\x08 \x0d\xa9\x04P\xb2DT\xf2\x04,\xd6\x96h" +
	"\xe18\xe6\x9aW\x85\xd6ny\xe7\xb7\xbb\x7fF\x18\xe5" +
	"\x02\xa6\xdc\xad\x86\x83\xb1x\xc4\xe8\xac\x8d\xea\xe5A-" +
	"\xa4\xc5\xb5 \xbb\xb83\x06\xee\x8b\xc7$/\xf6\x1aZ" +
	"+\x0eE\x977\x04\xc0\xa1\xbd.\xb6x\xa4\x05\x1b#" +
	"\xfe\xf2z5\x14\xf2\xab\x81\x8er#\x11.i\xd6\x8a" +
	"c\x89P\xdc\xc1\x1bQ\x1a\xf2#\x00%WD\xa5P" +
	"@3\xa0\x86\x03Z\xe8\xbb\x09\x8c'\x0c\xad9\x11\x8e" +
	"\x11\xe2  \xf6\x8b{\x9b\x16o\x08j\xe1\xb8\x1e\xef" +
	"n\x08\x964Wk=\xde \x12.H\x92 \xeaA" +
	"\x1c\x02\x02\x0eq])\xd2\x95\xb3T=<W\xd7\xba" +
	"\xca\x83F$\xca\xf9\xd0\x83\x11\x8d\x00J\x8e\x88J\xbe" +
	"\x80f\xc4\x7f\x9d\x16\x887\x04\x19\x03\x10\x93\xe1i@" +
	"\x86\xc4\xec\x7f\x94G\xc2ZK{\x04\xe3J\x16=\x91" +
	"\x87\x02\x80tQ\x19\x80R\"\xa22Q@\x091\x0f" +
	"E\x00\xa6QJ\xa9\x88\xca$\x01}]\xedZ\x18=" +
	" \xa0\x07\xb08\x16R\x03\x1d\x98\x0d\x02f\xf7\xcb!" +
	"\xfefI3\xe3\x0d\xc6z\x92>Gg\x84\xb7iq" +
	"\xfa\x7fC\xb85R\xd2T\xcc\x18\xd0\x13\xae\xe7\x9d\xea" +
	"\x12\xad\x97@S\x151\x1e\xe9\xd0\xc2\x83\xe1w/\xc4" +
	"\x04\x17bM\x91.\xcd\xa8\xf6G\x96\xceV\xdb\xc8\xde" +
	"\xfazL\x8f\x874\xcc\x01\x01s\xfa|\xcc\xd0\x88\x00" +
	"\xc6\x08_*\xe2nE\x0f\xa8Q\x1c\x9a!\x02\xf6\x90" +
	"f\xfa\xbb\x9aT\xc3\xab\xf64\xc6\xaf\xaf*\xed\xaa\xa1" +
	"\x87\xdbf\xea\xe1\x0e\x92G\x93\x16\x0f\xab\x9d\xb6\xdc\xc4" +
	"\x9e\xe8\x96\xd9\xe8^!\xa0\x8f\x80P2\xef\xba}\xcc" +
	"\x9d\xdb\xe7|\xf8\x0e\x00\xd4\xa0\x84\xc5J\x86\x80\xee\x8f" +
	"\x12\x0eW\xc8\xea\xb0ID\xcc5\x1b\x8e\xff\xe0\x12\xe3" +
	"\xd1\x85\xb70\x87\xe5\xc2\xc4C\x98\x10\x89)\xd84G" +
	"BZm,\xa6\xb7\x85;\xb5p<\xad\xf0\xc7$\x91" +
	"\xf2.Q\x8ds\xc7\xc9\x89\x9f)8\xa5s\x87\x81P" +
	"$\xc6u:\x06\xd0\x13\xd6\xd6\x9d\xb0\xd6uMk\xab" +
	"f\xd8G\xd3r\xb2.)\xf8\x151\x0b\x0e\xa5dX" +
	"L\xc1\x84i\xe6\x0c\xfa\x07YJ\xf9\x9c\x98\xa8\x19\xa4" +
	"\x959\xce\x85\xd3\x17\x00(W\x88\xa84\xd9VL\x1f" +
	"g\x19\x00\xcaL\x11\x95v\x01%A\xb0\xec]\xa3\xa7" +
	"\x17\x89\xa8\x84\x044u\xdb\x89\x81\xd8\x10t\xd48`" +
	"h\xec3\x14\xab\xa1\x86`\x0c\xbf\x09\x8cQ\xf4\xf37" +
	"\x01WD\x8dH\xab\x1e\xd20\xd7|\xffK4f\xfd" +
	"\xf1\x85\x97R}\xbd'\x0d\xe3Z\x13\xa1V=\x14j" +
	"\xd6\x16'\xb4X<\xe9\xecr\x1d\x12T\x12\xe4\xb56" +
	"\xb6\x9c\x04m\x13\x80\xd2.\xa2\xb2\xcaE\xc2J\"\xf6" +
	"\x06\x11\x95\xb5\x02J\xa2h\xb9\xac5~\x00\xe5f\x11" +
	"\x95\xf5\xbdl\xc9\xd0\x16'tC\x0bb\x93ft\xea" +
	"\xb1\x98\xee\x8d\x84\x1d\xb2\xd0\"\xcb\x0cj\xb1\x80\xa1G" +
	"\xe3 F\x0c\xcc5\xe7\x15>\xf3\xe4\x03\xbe\xe7Oq" +
	"\xda\x82z,\x1aR\xbb\x1b\xc0\x1bn\x8d`\xaey\xf2" +
	"[o\xfc>{S\xcb\xe6\x81\xe3\\,\xaev\xd7v" +
	"\xa9\x1d\xe9MjjR\x11\xaa\xdb\xd5p0DF\xf5" +
	"z\xdd\xa2E[K>\xbe3\xadF&\xb5\xccf\xa6" +
	"K\xcfz9\x98s\xd33O\x9a \x1d5\xb4\x80\x1a" +
	"\xd7\x82M\x09\x7fH\x8f\xb5[\x92K\xf5\x9a\xeepC" +
	"\x11\x0c\xd1U\xe9c\xa3\xc9C20'\xe5(-\xf9" +
	"\x93\x1a\x11\x95\x99.\x897\x90#\xbbRDe\xb6\x80" +
	"(\xa0\xab\xa8\x94\x94F\x10,\xbf\xd3\xd3\x91\x10\xff\x03" +
	"\xc9\x17PJ>n\x13\xc8\xa3\x11\xb8LVHu9" +
	"^=\xdc\xc1Pw\x1c\x82\x84\xcbL\xee\x81\xa0\xda\xf2" +
	"AJ\x86\xe8\x01pjp\xe4\x8d*IZ\x07\x824" +
	"\xc4kr\xaf\x85\xdcma\xbc\x06\xd9\xbdN]\xea\xc2" +
	"\xa27\xcb\x89\x8a6#\x92\x08\x07ky\xeeE\x8a\xe3" +
	"\x0d\xc5c\x83r7\xb6\x80\x94B\x87\xcf;\x88\xa5\xdb" +
	"ETv\xbb\xf8\xfc\x04\xa9\xc6N\x11\x95\xa7\x88\xcf\x96" +
	"a\xed!\xe1\xed\x16Q\xf93\x19\x96`\x19\xd6>\xf2" +
	"\"{ET\x0e\x09(e\x88y\x98\x01 \xbdHQ" +
	"\xf0\xcf\"*\xaf\x0a(y2\xf2\xd0\x03 \xbdLv" +
	"yHD\xe5u\x01\xa5LO\x1ef\x02HG\x09\xf2" +
	"U\x11\x95\xbf\x0bh&b\x9aA.\x8c\xa4\x94k\xbe" +
	"$-\xfc\xcd\xfb/\xeeZo\xcbpE\xc0\xf2\x15(" +
	"%\xeb}.?\x8b\xb6\xd9\xe0\xed\x8ejN\xf6a\x7f" +
	"m\x02+s\xc0\xa1 \x90\xbd\x17G\x88\x1d.\xfb\xef" +
	"\xdf\xb4\x8b\xe3\xaa\xbf\xa1\x8f\x0c-\xc9\xe2\xa4\x91\xf5\x8e" +
	"@\xe7fd\xfdf\xd9\xbd$-\xf6\x95\xdeb\x87\x95" +
	"\x97x\\=\x0c\xe4\x1dlI\x1a\x03\x82\xe4\xf1z\x8d" +
	"D\xb8\x06\x9b\x10\xfb\xc9\xaa\xec\xe4\xd3g\xa8\x9d\xe7\x98" +
	"T1\x0b\xaa\x8dF\x9b4#\xa6\xc7\xe2\xa4\xe9I\x9c" +
	"x\xbd\x8a\xbc\xb1$Ie\x00\xb59X[\x88\xd2x" +
	"\xaf\x8f\x929\x1e\x9b\x9d6\x1e\xd3\xcct\x1f\x19\x11\xb5" +
	"\x19(\xa1\xdf\xac\x8dF\xaf\xa1\x04\x07\xbc\xf1\x86`\x7f" +
	"\x8e\xb7]54\x92\x9fc\x12iR\x99<\x01}K" +
	"t\xad\x0b\xa5d\xfb\xe1kxE\xee\xda\x07\x15\x078" +
	":Y\x0e:\x17\xf9\x93\xf9\xb6c\xa1\x15\xd7\x01(\x13" +
	"ET.\x17z\xc7\x9f\x7f\xfb\xf4P\xdd\xfe\x0fw9" +
	"\xb17\x1c\x89\xeb\xadz@\x05_\xdcR\xbf\x035k" +
	"v\xfee\xe4\xea\xb3\xe9\xa9\xe978\xf7\xca\x8c\x91\xe7" +
	"\x1f\xc5,\x01a\xce,\xd9D\xc72\xdf\x9c\x98f(" +
	"\xf9\x0e9w\x91\xee\xac\x17Q\xb9O@N\xcdFr" +
	"\x0ew\x8b\xa8<D\x91\x1c-\x87\xb3\x99\x00\xef\x13Q" +
	"\xd9\xear8[n\x04P\x1e\x12Q\xd9\xeer8\x8f" +
	"\x10\xe4V\x11\x95\xbd.\x87\xf34A>%\xa2\xf2\x82" +
	"\x80\xc5j4\xeaJb\xd4ht.\xa9%\x88\x910" +
	"f\x81\x80Y\x90\x9a\xaeG\xba\xc2\x9a\xd1\x10\xd4\xd0\xae" +
	"\xe3\x80\xffRLn\xcaI\x10r\x93\xa4\x02\xb2T!" +
	"b\xe8mzX\x0d\xa1\x95\x92%\x0f:\x0c\xcbL\xc3" +
	"\xe46-N\x91F\x0b\xf2,$\x12\x8e9\x99d\xba" +
	"\x84v\xb6\x93\xd0\x96\xd4\x1d^\xd4\xf2\xc9\x877\x0c*" +
	"\xa1u\xe55_#\xc3\xb6\x1d\xc1@fU\xaf&\x0b" +
	"(\xb7\x1e7\xa7\xd3c\xb2\xb5\x8bET.\x15\xd0d" +
	"\xa7\x83\xf5*\xa0+C\xf3\x85\xf4p\x07J\xae\x00\xd9" +
	"Sg3\xfb\xb1\xc0f\xad\x8d|\x8fA\xc1\x92'\xdb" +
	"\xbd\xcaM\xb7\x93\x8a\xdbu$/\xda]\xd87\xa6\xc3" +
	"\xbe\xd2\x85}ja\xe5\xf8(\xab\xb0*\x0e\xa9~-" +
	"\x94&;\x19\\\x02\xc7\xab:\x97!\x11Fw\x8a\xa8" +
	"<\xe8\xc2\xe8\xfe\xba\xa4%\xf1\xc8\xbd\x99\x1c\xc8\x83\"" +
	"*\xbfr\x19\xd26\xc3\xb6\x99\x9d.C\xda\xe1\xb7\x93" +
	"\x81\x17\\\x86t\xa02\x19\xe3\xff5A\x9a%\xe5Z" +
	",n;4\xc7\xd6\xdc\xc1\xf9\x9b\xfd\x07\xe7t=\x0e" +
	"\xd4H\x9e9\xa6\x89\xaeY\xabtQ\x1d\x08C\xf0\xac" +
	"iq@jL\xf6\x7fVX-\x91\xb8\x19\xd5\x0c=" +
	"\x12\xd4\x03D\xb4/9t\x06D_j\xc4\xb3\xe5\xc7" +
	"\x1a\x17\x84<\xc5\xbcQ\x8e\xc8^$\xfe\xbe \xa2r" +
	"\xd2%\xb2\xb7\x89\xbf\x7f\x17\xb1\x19]e\xccW\xeb\x00" +
	"\x9aQ\xc4\x96BL\xd61r\x01\x1a\x00-\xf9\xf4}" +
	"\x12}\xcf\xc8`X\xcb\x15\xe8\x07h\x99H\xdfg\xd2" +
	"w\x8f\x87\x89Nn\xc0F\x80\x96+\xe9\xfbl\xfa\x9e" +
	"\x99\xc9\xf2.Y\xc1f\x80\x96&\xfa~-}\xf7z" +
	"\xf3\xd8,w>.\x00h\x99G\xdf\xe3( \x11\xce" +
	"\xbc\x11\xb8\x8b\xa2\xdcd\xc3\xd7\x96\x83\x11\x09i\xae\x9f" +
	"\x9dI\x86\xed\x12\x83ZX'\xcf\x86\xdc\xb5a\xaf\x02" +
	"\xabS\x8d\x07\xda\x9b\xb5\xc5PLr\x8f\xf5)r\x0b" +
	"\xf0\x9a\xd6V\xf0\xf6\xf0\xc2\xa9`j4:\x9b\xfc\xb9" +
	"\xa5\xa6i-\xae!\x10\x01\xa4`X\xbdiK\xb1\xff" +
	"\xfb\xbf\xfb\x9c\xab*\xebV\xce\xee\x8e\x82\xe8&\xea[" +
	"\x1b\xf6\xber\xde_/}\x8b\xbf\xd0\xb3\xc4qys" +
	"q)KtJX\xa2\xc3\xc7\x0c\xc8\xe7v\xb2\x84\x0f" +
	"\x83 \x0fA/\xa23\x13B\xde\xa4\x96\x11\x9bA\x90" +
	"\xcexQp\x1a\xc8\xc8\xdb\xc1\xd2\xa9J\x10\xa4c^" +
	"\x14\x9d\xae7\xf2\xc9\x8c\xf4r\x1d\x08\xd2>/z\x9c" +
	"\xa14\xf2\x91\xa3\xf4\xc42\x10\xa4\x1d^\xcctz\xf8" +
	"\xc8\x07\xe4\xd2\x16\xbas\xa3\x17\xbdNc\x1eyO[" +
	"\xba\xbd\x11\x04i\x8d\x173\x9c\xe9\x0c\xf2I\x84\xb4\xfc" +
	":\x10\xa4\x84\x17\xb3\x9c\xd5\x0a\xe4\x83]I\xa7s*" +
	"+vXPC\x1e\xd5|\x14\xd6j\xd0\x8c\xeb\xda\xec" +
	"\xc8\x9c\x98\x06h\xd4\xd8\x19y\x0d\xae\xb0\x8d\xbe\x06M" +
	"\x9er@5\xffT\xccz+5hF\xa2\x1a\xebv" +
	"\xb1hg\x06B\xaa\xdeIj\xe3\xb3O\xf2\\\x19\xec" +
	"\xac0EL\xc9\xe8\x06\xc9d\x94\x8f<\x90\xef\x1dH" +
	"\xd2\x02\x10\xa4lF\x00\xebx\x81\xd8\xa9\xf5\xbcn\x80" +
	"\xc6rj\xa0D\xde\xa8\xf3\x11\xee\xf4t\x16{\x9a\xaf" +
	"B _\x9a\x90*\xea\x00j/\xc6\xda\xcbQ\x9aE" +
	"*\xc2\x97F\x90/gH\xb5\x94)_\x8e\xb53Q" +
	"Z\xe8]a7\xfdx\xdcw\x9ay\xeed\xb9\xc7\xc7" +
	"\x1a\xf4QR\x7f.\x07XJ\x97L\x80a\x10\xa9v" +
	"\xcf\xec\x86\xcb\xdbp\xa2\x98\xab\xce\x1f\x93\xae\xce\xdf\x94" +
	"\xae9E\xce3(\xa2\x12\xfd\x9aM\x9cAvi\x98" +
	"\xb0(\xf3\xf1^\xa1\xb5\x92\xac\xd2\xe7\xaeR\xfa\xe45" +
	"m\xcc\xb5\xdbP\xdb\xfc\xc9<\x15\xc9u#JO7" +
	"&\xd3T\xc9\x83y\xe8A\x94\x0e\xd4%C\xae\x9d\x98" +
	"\xf6\xf6bK4\xc3\xdf\xd4n\xa8 \xc6\xd2\xfd\xec\x14" +
	"\xb6^\xf2\xb8\xbd\x7fO\xeb\xdb9\xaf\"\xfeX$\xa4" +
	"\xc5\x99\xff\xb4'\x1e+\x82Z\xabJ\xe9S\xea\x04D" +
	"HM\xc0\x80\x19\xd7D\xa6\xe1|\x7f\x05\xf9\xee\x84\xbc" +
	"\x18\xd7\x01\xd4\xc7\x11\xebW!\xcaw0G\xc8g\xd3" +
	"\xc8W\x10\xe45\xb8\x1f\xa0\xfe6\xc4\xfa\xfb\x10\xe5G" +
	"\x90<\"\x9f\xcc\"\xdfd\x907S|\xab\x7f\x10\xb1" +
	"~;\xa2\xfc4\x92o\xe4[\x1c\xc8g\xc0\xf2.\x8a" +
	"v\xf5;\x11\xeb\xf7\"\xcaG\x90\xbc$\x9fy#\x1f" +
	"\xd6\xca\x07\xb0\x0e\x80 \xea_E\x94\xdfF\xf2\x97|" +
	"\xc7\x04\xf9\xb0N>\x8ae\x00\x04Q\x7f\x02Q>\x83" +
	"\xe49\xf9\xee\x18\xf29\xa1|\x8a\xddu\x02\xb1\xfe3" +
	"D9[ ?\xc9WD\x90/\x05\xc9_1\xbc\xbe" +
	"D\xac\xcf\x11P\x1e)\x90\xa7\xe5\x93t\xe4\xdbZ\xb2" +
	"$\xd0\x8b9\x02\xd6\x17\x0a(\x8f\x17\xbc\x98\xed\x8c\xa0" +
	"\x91\xaf\xea\xc8\xa3\x85\x0d\x00\xf5%\x02\xd6O\x12P\x9e" +
	".x\xf1<g\xe8\x8e|5M\xbeL0\x00\xea/" +
	"\x15\xb0\xfeJ\x01\xe5\xf9\x82\x17\xbf\xe1lb \xdf)" +
	"\x93g\x09\x8d\xe0@\x98<\x9bF^\xd0b;\xf7\x13" +
	"\xce\xd8\xcd\xed<z|\xacA\xe7\xbc\x90\x9a\x8e\xf7q" +
	"\xa4\xaf{xi\x01_\xe7\xdc\\]\x03\xec:\x97s" +
	"\xa9\x9eu0gzx\xd6A=b\xcf9\xcf\x8d " +
	"\xbbW\x00xn\xc8\xb9\x9b*\x83z\x887\x1b\x91w" +
	"\x1b\xc5x\xf79]\xc0'\xa1P\xccj\xe8s\xa32" +
	"\xd9\x95\xed\x03d\xa0\xa6\xcf9\x14\x86|\xe2\xd0Oe" +
	"\xeb\x9a\xae\xa5N\xa4\x07n\x86\xa5\x0b\x8a\x86\xbb\xa1\"" +
	"\xf6\xac5\xc7\xa4\x8c]\xe9\xe3\xf8\x05\xc9Z3%\xfc" +
	"\x0d0\x9e\x18`h\xca\xdb{\x03\xbd\xef\x1a\xfb\xf6|" +
	"\x7fp\x95m?3r{\xba\xdb\xd7\xc4\xd2\x19D\xb1" +
	"\xf6}\xfeQe\xcb\xb2;W\xed\x1e\xdcD\xce\xca\x0f" +
	"\x19\xa3\xab-\xd1\xb9\xe9\xbc.]MO\xb9\xc7$k" +
	"Z\xc6\x0b\xd1\xd9\xe0cr\xe5\xad\x9cA\xe5\x1b=\xf2" +
	"\x09\xaa\x0bE\xadK\xc9B\xf7v[v\xa3k\xb56" +
	"\xdbo\xf2y7\x00\x98l\xca\xec\x8f,\x05\xefl\xb5" +
	"M\xc9e\xd1\x94/\xf7\"\xbfBZ\xec\x07A\xd2)" +
	"\x86\xf2=\x16\xe4\x1b\x98\xd2BJc\xe7P\xe4\xe4\xeb" +
	"y\xc8\xf7M\xa5\x86u H\xd3)^\xf2\x9dN\xe4" +
	"\xab\xb1\xd2e7\x82 U\xb0\xf4\x97!\xc4\x12\xa6\x1a" +
	"4y\xa7\x1b\xc4H\xd8\xfa'c-\xf2&\x05\xda_" +
	"\xd9\xc4\x01mQ@\xba\xc49}'6\x9d%,\x18" +
	"\\\xcfh\xae\x0eb\xba>-o\x1e9\x8bO\x83h" +
	"x\xa6\xed\xc5\xd9\xca3\x98\xd6\x973\xbe\x1c\xc8\xa0\xfc" +
	"}\x1b\xf4 S\xd5A\x0d\x88\xfe\xd7\x97s\\K\x0b" +
	"\xd6\xa4\xfbkl-t\xeaa\xbd3\xd1\x99\xdc_j" +
	"\x09\xa9b\xa0\xa3\x09\xd1j\x0e\x15\xed\x0c\x1e\x99\xdek" +
	"\x14\xd6\x8fu\xf7\xd7,\x1d\x00\x974\x0d\xc0\xd4}\x93" +
	"\x8ct\x0dRwwT\x0c\xb3\xaa?\x8f\xf5\x97\xd8\xeb" +
	"\xcbIK\x97Z\xd3i\xab\xbfD_W6'\xc7\xd3" +
	"#\x85\xafL\xbb\xd7\xbdf*\x80\xb2JD\xe56\x01" +
	"\xd1\xae\x16n]\x06\xa0\xac\xb5\xeb\x8a\x0c\xb4\xfaS\x9b" +
	"\xd7\xd9\xfd\xef\xa7\x04\xf4\x85#a\x0d2M5\x14\xaa" +
	"\x0d\x04\xb4\x18`\x0c2\xab\x8dHHk\x08\xa2\x17\x04" +
	"\xf4\x02\x9aj\xd0\xd2c\xa8\xb649\xd5K\x19Zg" +
	"d\x89\xd6osf0\x1b!\xa9\x93_o\x9f\xfb\x11" +
	"\xb6yp@\x82K\x1a\xda\x15\x1a\xb2\x92+W\xcc@" +
	"\xb4&\xff\x95\xae\xc9\xbf\xc0'\xff\xaeR\x90\xd8% " +
	"J\x9d\x142B\"*K\x05\xcc\xb5\x9b\x9c\x09\x92A" +
	"TD\xe5\x87\xfd\xd4Q\x03\x15Jij!k\xd0\x9c" +
	"\xda\xd8O\x17\x81x\xbf\xc2\xb1\xc2\xfe&\xdc\x88RC" +
	"YrW\x83\xf5o\x11%e\xaa]\x0d\xcf\xebs\x1e" +
	"\xe5\x8b\xaa\xf1v\x1b!\x90\xf0<\x80\xea\xb0\xd65[" +
	"\xf5\xf7\xaa\xd6\xech\xd4\xa2\x15[\xadW\xc4&\xd1\xd3" +
	"\xdbC\xa7\xcfU\xd2\x0c\xa7*m\xcfV\xe3\xf2l\xd3" +
	"6\xd9\x94]+`\xf1\xe2\x84ft\xf7\xdd\xa9;\xa7" +
	"P\xda\x7fsa\xa0\x1d\x87\xb8\xae\x05\xeb\xfbv\x03\xbd" +
	"\xe7\xb9<3\xcas\xee[NJ\xf6C\x11\x95\x9b]" +
	"\xe4\xae\xaeK\xda4\xef\xb9\xbb7N\x9c\x9e\xfb\xed\x06" +
	"\x80r\x9b\x88\xca\xdd\xae\x9e\xbb\xbb\xa7\xf0/\x9a\x81\xa7" +
	"\xef\x9b\xf7\xbd\x85\xd9\xc7JS_\xaa\x9e~#!\x15" +
	"\x9a\x92\x04'\x9b\xfe\xbf\xb6\xe9\xd3\xc7$\x9d/\x08\x0c" +
	"\x823\x0e\xcf\xff'\x00\x00\xff\xff\xc8~\x82\xa5"

func init() {
	schemas.Register(schema_c8d91463cfc4fb4a,
		0x8478a37e9456409d,
		0x85e320f14a5d23e0,
		0x87d94955ce3c61dd,
		0x8b89acc0133457cf,
		0x8c4a70a31703d35c,
		0x8c519e0dedc17d73,
		0x8c6c35d2eb416224,
		0x8dc8d4c06855854e,
		0x8f2ef49549d64e86,
		0x9206caa8d3e3cc7e,
		0x9210d9e69d14fa35,
		0x982790c08b1958ec,
		0x99efcebf23bbae35,
		0x9ad62de07dfc6419,
		0x9ad927034671cad1,
		0x9d159666de73f39d,
		0x9d4102fadb4f069c,
		0x9eb6708c01ec2079,
		0x9f07b75928ba4e20,
		0x9f6c36ef490dfd92,
		0x9fd40f92e1eb5d21,
		0xa22a2d1cf9579778,
		0xa2873a59df6d885c,
		0xa34f0cfe24c69d74,
		0xa4f82f764dc3fee8,
		0xa535ac09456b2870,
		0xa53aedb3ce8994df,
		0xa8f4ff97289294c7,
		0xa93eadc9671ea08b,
		0xab619ad5a8fb7e11,
		0xadac227f85285c65,
		0xaffa789add8747b8,
		0xb1e3f6ac609eb4d7,
		0xb42ccfaaf45a3f7a,
		0xb469e5d523b89e1b,
		0xb4ecd69ac97e2de8,
		0xb5fcc0e153671d68,
		0xb70bd877cecb7b88,
		0xb8083dd65a24c770,
		0xb96fc5fb8137a705,
		0xb9d62f4beefefc29,
		0xba36a34b4eeb483f,
		0xbc193a4219598bcb,
		0xbc286f896c0ded81,
		0xbc5e354741a8e665,
		0xbf3e401d5a63f336,
		0xc05520c9b0994ad3,
		0xc0dde7310fa94a2b,
		0xc277e9822ae2c8fc,
		0xc41e71e8d893086c,
		0xcb3f7064eae4dc5a,
		0xd2654fcf2a7002cb,
		0xd271034eec62b43b,
		0xd29e9db5843719f0,
		0xd42684f756e09afd,
		0xd692a643ba8a1f58,
		0xd76b6c6364d6bff5,
		0xda13a4f2919ce2cf,
		0xdbb4d798ea67e2e7,
		0xe6abbf843a84f35d,
		0xe96859cf77da6e6b,
		0xeb3c29aff080ec3e,
		0xec8866df56873858,
		0xecf1f14c4209c731,
		0xeecac1be25f73248,
		0xefea656d4b56b756,
		0xf0136e14d8019d3c,
		0xf020f2be35e8e2b5,
		0xf0931856093654c1,
		0xf12c60ebc67984d4,
		0xf144a5e58889dafb,
		0xf37f5e08534c68aa,
		0xf63241ee58b5166f,
		0xf63b8546288ee8e1,
		0xf6f911c4804ba7e5,
		0xf87a2c5a9f996828,
		0xf8fe6b4e94a960f7,
		0xf9d6c8c6d207c123,
		0xfb3d38da0c9eaee6,
		0xfbbc20367c72bc59,
		0xfe7135f15d39bd5b)
}
