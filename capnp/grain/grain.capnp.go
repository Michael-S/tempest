// Code generated by capnpc-go. DO NOT EDIT.

package grain

import (
	context "context"
	strconv "strconv"
	activity "zenhack.net/go/sandstorm/capnp/activity"
	identity "zenhack.net/go/sandstorm/capnp/identity"
	powerbox "zenhack.net/go/sandstorm/capnp/powerbox"
	util "zenhack.net/go/sandstorm/capnp/util"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type SandstormApi struct{ Client *capnp.Client }

// SandstormApi_TypeID is the unique identifier for the type SandstormApi.
const SandstormApi_TypeID = 0xd2654fcf2a7002cb

func (c SandstormApi) DeprecatedPublish(ctx context.Context, params func(SandstormApi_deprecatedPublish_Params) error) (SandstormApi_deprecatedPublish_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      0,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deprecatedPublish",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_deprecatedPublish_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_deprecatedPublish_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) DeprecatedRegisterAction(ctx context.Context, params func(SandstormApi_deprecatedRegisterAction_Params) error) (SandstormApi_deprecatedRegisterAction_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      1,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deprecatedRegisterAction",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_deprecatedRegisterAction_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_deprecatedRegisterAction_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) ShareCap(ctx context.Context, params func(SandstormApi_shareCap_Params) error) (SandstormApi_shareCap_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      2,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "shareCap",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_shareCap_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_shareCap_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) ShareView(ctx context.Context, params func(SandstormApi_shareView_Params) error) (SandstormApi_shareView_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      3,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "shareView",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_shareView_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_shareView_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) Restore(ctx context.Context, params func(SandstormApi_restore_Params) error) (SandstormApi_restore_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      4,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "restore",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_restore_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_restore_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) Drop(ctx context.Context, params func(SandstormApi_drop_Params) error) (SandstormApi_drop_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      5,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "drop",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_drop_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_drop_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) Deleted(ctx context.Context, params func(SandstormApi_deleted_Params) error) (SandstormApi_deleted_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      6,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deleted",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_deleted_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_deleted_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) StayAwake(ctx context.Context, params func(SandstormApi_stayAwake_Params) error) (SandstormApi_stayAwake_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      7,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "stayAwake",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_stayAwake_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_stayAwake_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) Save(ctx context.Context, params func(SandstormApi_save_Params) error) (SandstormApi_save_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      8,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_save_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_save_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) BackgroundActivity(ctx context.Context, params func(SandstormApi_backgroundActivity_Params) error) (SandstormApi_backgroundActivity_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      9,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "backgroundActivity",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_backgroundActivity_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_backgroundActivity_Results_Future{Future: ans.Future()}, release
}
func (c SandstormApi) GetIdentityId(ctx context.Context, params func(SandstormApi_getIdentityId_Params) error) (SandstormApi_getIdentityId_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      10,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "getIdentityId",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormApi_getIdentityId_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SandstormApi_getIdentityId_Results_Future{Future: ans.Future()}, release
}

// A SandstormApi_Server is a SandstormApi with a local implementation.
type SandstormApi_Server interface {
	DeprecatedPublish(context.Context, SandstormApi_deprecatedPublish) error

	DeprecatedRegisterAction(context.Context, SandstormApi_deprecatedRegisterAction) error

	ShareCap(context.Context, SandstormApi_shareCap) error

	ShareView(context.Context, SandstormApi_shareView) error

	Restore(context.Context, SandstormApi_restore) error

	Drop(context.Context, SandstormApi_drop) error

	Deleted(context.Context, SandstormApi_deleted) error

	StayAwake(context.Context, SandstormApi_stayAwake) error

	Save(context.Context, SandstormApi_save) error

	BackgroundActivity(context.Context, SandstormApi_backgroundActivity) error

	GetIdentityId(context.Context, SandstormApi_getIdentityId) error
}

// SandstormApi_NewServer creates a new Server from an implementation of SandstormApi_Server.
func SandstormApi_NewServer(s SandstormApi_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(SandstormApi_Methods(nil, s), s, c, policy)
}

// SandstormApi_ServerToClient creates a new Client from an implementation of SandstormApi_Server.
// The caller is responsible for calling Release on the returned Client.
func SandstormApi_ServerToClient(s SandstormApi_Server, policy *server.Policy) SandstormApi {
	return SandstormApi{Client: capnp.NewClient(SandstormApi_NewServer(s, policy))}
}

// SandstormApi_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func SandstormApi_Methods(methods []server.Method, s SandstormApi_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 11)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      0,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deprecatedPublish",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeprecatedPublish(ctx, SandstormApi_deprecatedPublish{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      1,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deprecatedRegisterAction",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeprecatedRegisterAction(ctx, SandstormApi_deprecatedRegisterAction{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      2,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "shareCap",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ShareCap(ctx, SandstormApi_shareCap{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      3,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "shareView",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ShareView(ctx, SandstormApi_shareView{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      4,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "restore",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Restore(ctx, SandstormApi_restore{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      5,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "drop",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Drop(ctx, SandstormApi_drop{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      6,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "deleted",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Deleted(ctx, SandstormApi_deleted{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      7,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "stayAwake",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.StayAwake(ctx, SandstormApi_stayAwake{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      8,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, SandstormApi_save{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      9,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "backgroundActivity",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.BackgroundActivity(ctx, SandstormApi_backgroundActivity{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd2654fcf2a7002cb,
			MethodID:      10,
			InterfaceName: "grain.capnp:SandstormApi",
			MethodName:    "getIdentityId",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetIdentityId(ctx, SandstormApi_getIdentityId{call})
		},
	})

	return methods
}

// SandstormApi_deprecatedPublish holds the state for a server call to SandstormApi.deprecatedPublish.
// See server.Call for documentation.
type SandstormApi_deprecatedPublish struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_deprecatedPublish) Args() SandstormApi_deprecatedPublish_Params {
	return SandstormApi_deprecatedPublish_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_deprecatedPublish) AllocResults() (SandstormApi_deprecatedPublish_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedPublish_Results{Struct: r}, err
}

// SandstormApi_deprecatedRegisterAction holds the state for a server call to SandstormApi.deprecatedRegisterAction.
// See server.Call for documentation.
type SandstormApi_deprecatedRegisterAction struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_deprecatedRegisterAction) Args() SandstormApi_deprecatedRegisterAction_Params {
	return SandstormApi_deprecatedRegisterAction_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_deprecatedRegisterAction) AllocResults() (SandstormApi_deprecatedRegisterAction_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedRegisterAction_Results{Struct: r}, err
}

// SandstormApi_shareCap holds the state for a server call to SandstormApi.shareCap.
// See server.Call for documentation.
type SandstormApi_shareCap struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_shareCap) Args() SandstormApi_shareCap_Params {
	return SandstormApi_shareCap_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_shareCap) AllocResults() (SandstormApi_shareCap_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareCap_Results{Struct: r}, err
}

// SandstormApi_shareView holds the state for a server call to SandstormApi.shareView.
// See server.Call for documentation.
type SandstormApi_shareView struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_shareView) Args() SandstormApi_shareView_Params {
	return SandstormApi_shareView_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_shareView) AllocResults() (SandstormApi_shareView_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareView_Results{Struct: r}, err
}

// SandstormApi_restore holds the state for a server call to SandstormApi.restore.
// See server.Call for documentation.
type SandstormApi_restore struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_restore) Args() SandstormApi_restore_Params {
	return SandstormApi_restore_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_restore) AllocResults() (SandstormApi_restore_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_restore_Results{Struct: r}, err
}

// SandstormApi_drop holds the state for a server call to SandstormApi.drop.
// See server.Call for documentation.
type SandstormApi_drop struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_drop) Args() SandstormApi_drop_Params {
	return SandstormApi_drop_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_drop) AllocResults() (SandstormApi_drop_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_drop_Results{Struct: r}, err
}

// SandstormApi_deleted holds the state for a server call to SandstormApi.deleted.
// See server.Call for documentation.
type SandstormApi_deleted struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_deleted) Args() SandstormApi_deleted_Params {
	return SandstormApi_deleted_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_deleted) AllocResults() (SandstormApi_deleted_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deleted_Results{Struct: r}, err
}

// SandstormApi_stayAwake holds the state for a server call to SandstormApi.stayAwake.
// See server.Call for documentation.
type SandstormApi_stayAwake struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_stayAwake) Args() SandstormApi_stayAwake_Params {
	return SandstormApi_stayAwake_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_stayAwake) AllocResults() (SandstormApi_stayAwake_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_stayAwake_Results{Struct: r}, err
}

// SandstormApi_save holds the state for a server call to SandstormApi.save.
// See server.Call for documentation.
type SandstormApi_save struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_save) Args() SandstormApi_save_Params {
	return SandstormApi_save_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_save) AllocResults() (SandstormApi_save_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_save_Results{Struct: r}, err
}

// SandstormApi_backgroundActivity holds the state for a server call to SandstormApi.backgroundActivity.
// See server.Call for documentation.
type SandstormApi_backgroundActivity struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_backgroundActivity) Args() SandstormApi_backgroundActivity_Params {
	return SandstormApi_backgroundActivity_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_backgroundActivity) AllocResults() (SandstormApi_backgroundActivity_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_backgroundActivity_Results{Struct: r}, err
}

// SandstormApi_getIdentityId holds the state for a server call to SandstormApi.getIdentityId.
// See server.Call for documentation.
type SandstormApi_getIdentityId struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormApi_getIdentityId) Args() SandstormApi_getIdentityId_Params {
	return SandstormApi_getIdentityId_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SandstormApi_getIdentityId) AllocResults() (SandstormApi_getIdentityId_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_getIdentityId_Results{Struct: r}, err
}

type SandstormApi_deprecatedPublish_Params struct{ capnp.Struct }

// SandstormApi_deprecatedPublish_Params_TypeID is the unique identifier for the type SandstormApi_deprecatedPublish_Params.
const SandstormApi_deprecatedPublish_Params_TypeID = 0xa2873a59df6d885c

func NewSandstormApi_deprecatedPublish_Params(s *capnp.Segment) (SandstormApi_deprecatedPublish_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedPublish_Params{st}, err
}

func NewRootSandstormApi_deprecatedPublish_Params(s *capnp.Segment) (SandstormApi_deprecatedPublish_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedPublish_Params{st}, err
}

func ReadRootSandstormApi_deprecatedPublish_Params(msg *capnp.Message) (SandstormApi_deprecatedPublish_Params, error) {
	root, err := msg.Root()
	return SandstormApi_deprecatedPublish_Params{root.Struct()}, err
}

func (s SandstormApi_deprecatedPublish_Params) String() string {
	str, _ := text.Marshal(0xa2873a59df6d885c, s.Struct)
	return str
}

// SandstormApi_deprecatedPublish_Params_List is a list of SandstormApi_deprecatedPublish_Params.
type SandstormApi_deprecatedPublish_Params_List struct{ capnp.List }

// NewSandstormApi_deprecatedPublish_Params creates a new list of SandstormApi_deprecatedPublish_Params.
func NewSandstormApi_deprecatedPublish_Params_List(s *capnp.Segment, sz int32) (SandstormApi_deprecatedPublish_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_deprecatedPublish_Params_List{l}, err
}

func (s SandstormApi_deprecatedPublish_Params_List) At(i int) SandstormApi_deprecatedPublish_Params {
	return SandstormApi_deprecatedPublish_Params{s.List.Struct(i)}
}

func (s SandstormApi_deprecatedPublish_Params_List) Set(i int, v SandstormApi_deprecatedPublish_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deprecatedPublish_Params_List) String() string {
	str, _ := text.MarshalList(0xa2873a59df6d885c, s.List)
	return str
}

// SandstormApi_deprecatedPublish_Params_Future is a wrapper for a SandstormApi_deprecatedPublish_Params promised by a client call.
type SandstormApi_deprecatedPublish_Params_Future struct{ *capnp.Future }

func (p SandstormApi_deprecatedPublish_Params_Future) Struct() (SandstormApi_deprecatedPublish_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deprecatedPublish_Params{s}, err
}

type SandstormApi_deprecatedPublish_Results struct{ capnp.Struct }

// SandstormApi_deprecatedPublish_Results_TypeID is the unique identifier for the type SandstormApi_deprecatedPublish_Results.
const SandstormApi_deprecatedPublish_Results_TypeID = 0xb42ccfaaf45a3f7a

func NewSandstormApi_deprecatedPublish_Results(s *capnp.Segment) (SandstormApi_deprecatedPublish_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedPublish_Results{st}, err
}

func NewRootSandstormApi_deprecatedPublish_Results(s *capnp.Segment) (SandstormApi_deprecatedPublish_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedPublish_Results{st}, err
}

func ReadRootSandstormApi_deprecatedPublish_Results(msg *capnp.Message) (SandstormApi_deprecatedPublish_Results, error) {
	root, err := msg.Root()
	return SandstormApi_deprecatedPublish_Results{root.Struct()}, err
}

func (s SandstormApi_deprecatedPublish_Results) String() string {
	str, _ := text.Marshal(0xb42ccfaaf45a3f7a, s.Struct)
	return str
}

// SandstormApi_deprecatedPublish_Results_List is a list of SandstormApi_deprecatedPublish_Results.
type SandstormApi_deprecatedPublish_Results_List struct{ capnp.List }

// NewSandstormApi_deprecatedPublish_Results creates a new list of SandstormApi_deprecatedPublish_Results.
func NewSandstormApi_deprecatedPublish_Results_List(s *capnp.Segment, sz int32) (SandstormApi_deprecatedPublish_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_deprecatedPublish_Results_List{l}, err
}

func (s SandstormApi_deprecatedPublish_Results_List) At(i int) SandstormApi_deprecatedPublish_Results {
	return SandstormApi_deprecatedPublish_Results{s.List.Struct(i)}
}

func (s SandstormApi_deprecatedPublish_Results_List) Set(i int, v SandstormApi_deprecatedPublish_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deprecatedPublish_Results_List) String() string {
	str, _ := text.MarshalList(0xb42ccfaaf45a3f7a, s.List)
	return str
}

// SandstormApi_deprecatedPublish_Results_Future is a wrapper for a SandstormApi_deprecatedPublish_Results promised by a client call.
type SandstormApi_deprecatedPublish_Results_Future struct{ *capnp.Future }

func (p SandstormApi_deprecatedPublish_Results_Future) Struct() (SandstormApi_deprecatedPublish_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deprecatedPublish_Results{s}, err
}

type SandstormApi_deprecatedRegisterAction_Params struct{ capnp.Struct }

// SandstormApi_deprecatedRegisterAction_Params_TypeID is the unique identifier for the type SandstormApi_deprecatedRegisterAction_Params.
const SandstormApi_deprecatedRegisterAction_Params_TypeID = 0xd271034eec62b43b

func NewSandstormApi_deprecatedRegisterAction_Params(s *capnp.Segment) (SandstormApi_deprecatedRegisterAction_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedRegisterAction_Params{st}, err
}

func NewRootSandstormApi_deprecatedRegisterAction_Params(s *capnp.Segment) (SandstormApi_deprecatedRegisterAction_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedRegisterAction_Params{st}, err
}

func ReadRootSandstormApi_deprecatedRegisterAction_Params(msg *capnp.Message) (SandstormApi_deprecatedRegisterAction_Params, error) {
	root, err := msg.Root()
	return SandstormApi_deprecatedRegisterAction_Params{root.Struct()}, err
}

func (s SandstormApi_deprecatedRegisterAction_Params) String() string {
	str, _ := text.Marshal(0xd271034eec62b43b, s.Struct)
	return str
}

// SandstormApi_deprecatedRegisterAction_Params_List is a list of SandstormApi_deprecatedRegisterAction_Params.
type SandstormApi_deprecatedRegisterAction_Params_List struct{ capnp.List }

// NewSandstormApi_deprecatedRegisterAction_Params creates a new list of SandstormApi_deprecatedRegisterAction_Params.
func NewSandstormApi_deprecatedRegisterAction_Params_List(s *capnp.Segment, sz int32) (SandstormApi_deprecatedRegisterAction_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_deprecatedRegisterAction_Params_List{l}, err
}

func (s SandstormApi_deprecatedRegisterAction_Params_List) At(i int) SandstormApi_deprecatedRegisterAction_Params {
	return SandstormApi_deprecatedRegisterAction_Params{s.List.Struct(i)}
}

func (s SandstormApi_deprecatedRegisterAction_Params_List) Set(i int, v SandstormApi_deprecatedRegisterAction_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deprecatedRegisterAction_Params_List) String() string {
	str, _ := text.MarshalList(0xd271034eec62b43b, s.List)
	return str
}

// SandstormApi_deprecatedRegisterAction_Params_Future is a wrapper for a SandstormApi_deprecatedRegisterAction_Params promised by a client call.
type SandstormApi_deprecatedRegisterAction_Params_Future struct{ *capnp.Future }

func (p SandstormApi_deprecatedRegisterAction_Params_Future) Struct() (SandstormApi_deprecatedRegisterAction_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deprecatedRegisterAction_Params{s}, err
}

type SandstormApi_deprecatedRegisterAction_Results struct{ capnp.Struct }

// SandstormApi_deprecatedRegisterAction_Results_TypeID is the unique identifier for the type SandstormApi_deprecatedRegisterAction_Results.
const SandstormApi_deprecatedRegisterAction_Results_TypeID = 0xb9d62f4beefefc29

func NewSandstormApi_deprecatedRegisterAction_Results(s *capnp.Segment) (SandstormApi_deprecatedRegisterAction_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedRegisterAction_Results{st}, err
}

func NewRootSandstormApi_deprecatedRegisterAction_Results(s *capnp.Segment) (SandstormApi_deprecatedRegisterAction_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deprecatedRegisterAction_Results{st}, err
}

func ReadRootSandstormApi_deprecatedRegisterAction_Results(msg *capnp.Message) (SandstormApi_deprecatedRegisterAction_Results, error) {
	root, err := msg.Root()
	return SandstormApi_deprecatedRegisterAction_Results{root.Struct()}, err
}

func (s SandstormApi_deprecatedRegisterAction_Results) String() string {
	str, _ := text.Marshal(0xb9d62f4beefefc29, s.Struct)
	return str
}

// SandstormApi_deprecatedRegisterAction_Results_List is a list of SandstormApi_deprecatedRegisterAction_Results.
type SandstormApi_deprecatedRegisterAction_Results_List struct{ capnp.List }

// NewSandstormApi_deprecatedRegisterAction_Results creates a new list of SandstormApi_deprecatedRegisterAction_Results.
func NewSandstormApi_deprecatedRegisterAction_Results_List(s *capnp.Segment, sz int32) (SandstormApi_deprecatedRegisterAction_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_deprecatedRegisterAction_Results_List{l}, err
}

func (s SandstormApi_deprecatedRegisterAction_Results_List) At(i int) SandstormApi_deprecatedRegisterAction_Results {
	return SandstormApi_deprecatedRegisterAction_Results{s.List.Struct(i)}
}

func (s SandstormApi_deprecatedRegisterAction_Results_List) Set(i int, v SandstormApi_deprecatedRegisterAction_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deprecatedRegisterAction_Results_List) String() string {
	str, _ := text.MarshalList(0xb9d62f4beefefc29, s.List)
	return str
}

// SandstormApi_deprecatedRegisterAction_Results_Future is a wrapper for a SandstormApi_deprecatedRegisterAction_Results promised by a client call.
type SandstormApi_deprecatedRegisterAction_Results_Future struct{ *capnp.Future }

func (p SandstormApi_deprecatedRegisterAction_Results_Future) Struct() (SandstormApi_deprecatedRegisterAction_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deprecatedRegisterAction_Results{s}, err
}

type SandstormApi_shareCap_Params struct{ capnp.Struct }

// SandstormApi_shareCap_Params_TypeID is the unique identifier for the type SandstormApi_shareCap_Params.
const SandstormApi_shareCap_Params_TypeID = 0xeb3c29aff080ec3e

func NewSandstormApi_shareCap_Params(s *capnp.Segment) (SandstormApi_shareCap_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareCap_Params{st}, err
}

func NewRootSandstormApi_shareCap_Params(s *capnp.Segment) (SandstormApi_shareCap_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareCap_Params{st}, err
}

func ReadRootSandstormApi_shareCap_Params(msg *capnp.Message) (SandstormApi_shareCap_Params, error) {
	root, err := msg.Root()
	return SandstormApi_shareCap_Params{root.Struct()}, err
}

func (s SandstormApi_shareCap_Params) String() string {
	str, _ := text.Marshal(0xeb3c29aff080ec3e, s.Struct)
	return str
}

func (s SandstormApi_shareCap_Params) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SandstormApi_shareCap_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_shareCap_Params) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SandstormApi_shareCap_Params) DisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	p, err := s.Struct.Ptr(1)
	return powerbox.PowerboxDisplayInfo{Struct: p.Struct()}, err
}

func (s SandstormApi_shareCap_Params) HasDisplayInfo() bool {
	return s.Struct.HasPtr(1)
}

func (s SandstormApi_shareCap_Params) SetDisplayInfo(v powerbox.PowerboxDisplayInfo) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDisplayInfo sets the displayInfo field to a newly
// allocated powerbox.PowerboxDisplayInfo struct, preferring placement in s's segment.
func (s SandstormApi_shareCap_Params) NewDisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	ss, err := powerbox.NewPowerboxDisplayInfo(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDisplayInfo{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// SandstormApi_shareCap_Params_List is a list of SandstormApi_shareCap_Params.
type SandstormApi_shareCap_Params_List struct{ capnp.List }

// NewSandstormApi_shareCap_Params creates a new list of SandstormApi_shareCap_Params.
func NewSandstormApi_shareCap_Params_List(s *capnp.Segment, sz int32) (SandstormApi_shareCap_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SandstormApi_shareCap_Params_List{l}, err
}

func (s SandstormApi_shareCap_Params_List) At(i int) SandstormApi_shareCap_Params {
	return SandstormApi_shareCap_Params{s.List.Struct(i)}
}

func (s SandstormApi_shareCap_Params_List) Set(i int, v SandstormApi_shareCap_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_shareCap_Params_List) String() string {
	str, _ := text.MarshalList(0xeb3c29aff080ec3e, s.List)
	return str
}

// SandstormApi_shareCap_Params_Future is a wrapper for a SandstormApi_shareCap_Params promised by a client call.
type SandstormApi_shareCap_Params_Future struct{ *capnp.Future }

func (p SandstormApi_shareCap_Params_Future) Struct() (SandstormApi_shareCap_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_shareCap_Params{s}, err
}

func (p SandstormApi_shareCap_Params_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SandstormApi_shareCap_Params_Future) DisplayInfo() powerbox.PowerboxDisplayInfo_Future {
	return powerbox.PowerboxDisplayInfo_Future{Future: p.Future.Field(1, nil)}
}

type SandstormApi_shareCap_Results struct{ capnp.Struct }

// SandstormApi_shareCap_Results_TypeID is the unique identifier for the type SandstormApi_shareCap_Results.
const SandstormApi_shareCap_Results_TypeID = 0xb96fc5fb8137a705

func NewSandstormApi_shareCap_Results(s *capnp.Segment) (SandstormApi_shareCap_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareCap_Results{st}, err
}

func NewRootSandstormApi_shareCap_Results(s *capnp.Segment) (SandstormApi_shareCap_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareCap_Results{st}, err
}

func ReadRootSandstormApi_shareCap_Results(msg *capnp.Message) (SandstormApi_shareCap_Results, error) {
	root, err := msg.Root()
	return SandstormApi_shareCap_Results{root.Struct()}, err
}

func (s SandstormApi_shareCap_Results) String() string {
	str, _ := text.Marshal(0xb96fc5fb8137a705, s.Struct)
	return str
}

func (s SandstormApi_shareCap_Results) SharedCap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SandstormApi_shareCap_Results) HasSharedCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_shareCap_Results) SetSharedCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SandstormApi_shareCap_Results) Link() SharingLink {
	p, _ := s.Struct.Ptr(1)
	return SharingLink{Client: p.Interface().Client()}
}

func (s SandstormApi_shareCap_Results) HasLink() bool {
	return s.Struct.HasPtr(1)
}

func (s SandstormApi_shareCap_Results) SetLink(v SharingLink) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

// SandstormApi_shareCap_Results_List is a list of SandstormApi_shareCap_Results.
type SandstormApi_shareCap_Results_List struct{ capnp.List }

// NewSandstormApi_shareCap_Results creates a new list of SandstormApi_shareCap_Results.
func NewSandstormApi_shareCap_Results_List(s *capnp.Segment, sz int32) (SandstormApi_shareCap_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SandstormApi_shareCap_Results_List{l}, err
}

func (s SandstormApi_shareCap_Results_List) At(i int) SandstormApi_shareCap_Results {
	return SandstormApi_shareCap_Results{s.List.Struct(i)}
}

func (s SandstormApi_shareCap_Results_List) Set(i int, v SandstormApi_shareCap_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_shareCap_Results_List) String() string {
	str, _ := text.MarshalList(0xb96fc5fb8137a705, s.List)
	return str
}

// SandstormApi_shareCap_Results_Future is a wrapper for a SandstormApi_shareCap_Results promised by a client call.
type SandstormApi_shareCap_Results_Future struct{ *capnp.Future }

func (p SandstormApi_shareCap_Results_Future) Struct() (SandstormApi_shareCap_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_shareCap_Results{s}, err
}

func (p SandstormApi_shareCap_Results_Future) SharedCap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SandstormApi_shareCap_Results_Future) Link() SharingLink {
	return SharingLink{Client: p.Future.Field(1, nil).Client()}
}

type SandstormApi_shareView_Params struct{ capnp.Struct }

// SandstormApi_shareView_Params_TypeID is the unique identifier for the type SandstormApi_shareView_Params.
const SandstormApi_shareView_Params_TypeID = 0xb1e3f6ac609eb4d7

func NewSandstormApi_shareView_Params(s *capnp.Segment) (SandstormApi_shareView_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_shareView_Params{st}, err
}

func NewRootSandstormApi_shareView_Params(s *capnp.Segment) (SandstormApi_shareView_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_shareView_Params{st}, err
}

func ReadRootSandstormApi_shareView_Params(msg *capnp.Message) (SandstormApi_shareView_Params, error) {
	root, err := msg.Root()
	return SandstormApi_shareView_Params{root.Struct()}, err
}

func (s SandstormApi_shareView_Params) String() string {
	str, _ := text.Marshal(0xb1e3f6ac609eb4d7, s.Struct)
	return str
}

func (s SandstormApi_shareView_Params) View() UiView {
	p, _ := s.Struct.Ptr(0)
	return UiView{Client: p.Interface().Client()}
}

func (s SandstormApi_shareView_Params) HasView() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_shareView_Params) SetView(v UiView) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SandstormApi_shareView_Params_List is a list of SandstormApi_shareView_Params.
type SandstormApi_shareView_Params_List struct{ capnp.List }

// NewSandstormApi_shareView_Params creates a new list of SandstormApi_shareView_Params.
func NewSandstormApi_shareView_Params_List(s *capnp.Segment, sz int32) (SandstormApi_shareView_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_shareView_Params_List{l}, err
}

func (s SandstormApi_shareView_Params_List) At(i int) SandstormApi_shareView_Params {
	return SandstormApi_shareView_Params{s.List.Struct(i)}
}

func (s SandstormApi_shareView_Params_List) Set(i int, v SandstormApi_shareView_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_shareView_Params_List) String() string {
	str, _ := text.MarshalList(0xb1e3f6ac609eb4d7, s.List)
	return str
}

// SandstormApi_shareView_Params_Future is a wrapper for a SandstormApi_shareView_Params promised by a client call.
type SandstormApi_shareView_Params_Future struct{ *capnp.Future }

func (p SandstormApi_shareView_Params_Future) Struct() (SandstormApi_shareView_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_shareView_Params{s}, err
}

func (p SandstormApi_shareView_Params_Future) View() UiView {
	return UiView{Client: p.Future.Field(0, nil).Client()}
}

type SandstormApi_shareView_Results struct{ capnp.Struct }

// SandstormApi_shareView_Results_TypeID is the unique identifier for the type SandstormApi_shareView_Results.
const SandstormApi_shareView_Results_TypeID = 0xe6abbf843a84f35d

func NewSandstormApi_shareView_Results(s *capnp.Segment) (SandstormApi_shareView_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareView_Results{st}, err
}

func NewRootSandstormApi_shareView_Results(s *capnp.Segment) (SandstormApi_shareView_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_shareView_Results{st}, err
}

func ReadRootSandstormApi_shareView_Results(msg *capnp.Message) (SandstormApi_shareView_Results, error) {
	root, err := msg.Root()
	return SandstormApi_shareView_Results{root.Struct()}, err
}

func (s SandstormApi_shareView_Results) String() string {
	str, _ := text.Marshal(0xe6abbf843a84f35d, s.Struct)
	return str
}

func (s SandstormApi_shareView_Results) SharedView() UiView {
	p, _ := s.Struct.Ptr(0)
	return UiView{Client: p.Interface().Client()}
}

func (s SandstormApi_shareView_Results) HasSharedView() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_shareView_Results) SetSharedView(v UiView) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s SandstormApi_shareView_Results) Link() ViewSharingLink {
	p, _ := s.Struct.Ptr(1)
	return ViewSharingLink{Client: p.Interface().Client()}
}

func (s SandstormApi_shareView_Results) HasLink() bool {
	return s.Struct.HasPtr(1)
}

func (s SandstormApi_shareView_Results) SetLink(v ViewSharingLink) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

// SandstormApi_shareView_Results_List is a list of SandstormApi_shareView_Results.
type SandstormApi_shareView_Results_List struct{ capnp.List }

// NewSandstormApi_shareView_Results creates a new list of SandstormApi_shareView_Results.
func NewSandstormApi_shareView_Results_List(s *capnp.Segment, sz int32) (SandstormApi_shareView_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SandstormApi_shareView_Results_List{l}, err
}

func (s SandstormApi_shareView_Results_List) At(i int) SandstormApi_shareView_Results {
	return SandstormApi_shareView_Results{s.List.Struct(i)}
}

func (s SandstormApi_shareView_Results_List) Set(i int, v SandstormApi_shareView_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_shareView_Results_List) String() string {
	str, _ := text.MarshalList(0xe6abbf843a84f35d, s.List)
	return str
}

// SandstormApi_shareView_Results_Future is a wrapper for a SandstormApi_shareView_Results promised by a client call.
type SandstormApi_shareView_Results_Future struct{ *capnp.Future }

func (p SandstormApi_shareView_Results_Future) Struct() (SandstormApi_shareView_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_shareView_Results{s}, err
}

func (p SandstormApi_shareView_Results_Future) SharedView() UiView {
	return UiView{Client: p.Future.Field(0, nil).Client()}
}

func (p SandstormApi_shareView_Results_Future) Link() ViewSharingLink {
	return ViewSharingLink{Client: p.Future.Field(1, nil).Client()}
}

type SandstormApi_restore_Params struct{ capnp.Struct }

// SandstormApi_restore_Params_TypeID is the unique identifier for the type SandstormApi_restore_Params.
const SandstormApi_restore_Params_TypeID = 0xd29e9db5843719f0

func NewSandstormApi_restore_Params(s *capnp.Segment) (SandstormApi_restore_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_restore_Params{st}, err
}

func NewRootSandstormApi_restore_Params(s *capnp.Segment) (SandstormApi_restore_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_restore_Params{st}, err
}

func ReadRootSandstormApi_restore_Params(msg *capnp.Message) (SandstormApi_restore_Params, error) {
	root, err := msg.Root()
	return SandstormApi_restore_Params{root.Struct()}, err
}

func (s SandstormApi_restore_Params) String() string {
	str, _ := text.Marshal(0xd29e9db5843719f0, s.Struct)
	return str
}

func (s SandstormApi_restore_Params) Token() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormApi_restore_Params) HasToken() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_restore_Params) SetToken(v []byte) error {
	return s.Struct.SetData(0, v)
}

// SandstormApi_restore_Params_List is a list of SandstormApi_restore_Params.
type SandstormApi_restore_Params_List struct{ capnp.List }

// NewSandstormApi_restore_Params creates a new list of SandstormApi_restore_Params.
func NewSandstormApi_restore_Params_List(s *capnp.Segment, sz int32) (SandstormApi_restore_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_restore_Params_List{l}, err
}

func (s SandstormApi_restore_Params_List) At(i int) SandstormApi_restore_Params {
	return SandstormApi_restore_Params{s.List.Struct(i)}
}

func (s SandstormApi_restore_Params_List) Set(i int, v SandstormApi_restore_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_restore_Params_List) String() string {
	str, _ := text.MarshalList(0xd29e9db5843719f0, s.List)
	return str
}

// SandstormApi_restore_Params_Future is a wrapper for a SandstormApi_restore_Params promised by a client call.
type SandstormApi_restore_Params_Future struct{ *capnp.Future }

func (p SandstormApi_restore_Params_Future) Struct() (SandstormApi_restore_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_restore_Params{s}, err
}

type SandstormApi_restore_Results struct{ capnp.Struct }

// SandstormApi_restore_Results_TypeID is the unique identifier for the type SandstormApi_restore_Results.
const SandstormApi_restore_Results_TypeID = 0xecf1f14c4209c731

func NewSandstormApi_restore_Results(s *capnp.Segment) (SandstormApi_restore_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_restore_Results{st}, err
}

func NewRootSandstormApi_restore_Results(s *capnp.Segment) (SandstormApi_restore_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_restore_Results{st}, err
}

func ReadRootSandstormApi_restore_Results(msg *capnp.Message) (SandstormApi_restore_Results, error) {
	root, err := msg.Root()
	return SandstormApi_restore_Results{root.Struct()}, err
}

func (s SandstormApi_restore_Results) String() string {
	str, _ := text.Marshal(0xecf1f14c4209c731, s.Struct)
	return str
}

func (s SandstormApi_restore_Results) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SandstormApi_restore_Results) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_restore_Results) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// SandstormApi_restore_Results_List is a list of SandstormApi_restore_Results.
type SandstormApi_restore_Results_List struct{ capnp.List }

// NewSandstormApi_restore_Results creates a new list of SandstormApi_restore_Results.
func NewSandstormApi_restore_Results_List(s *capnp.Segment, sz int32) (SandstormApi_restore_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_restore_Results_List{l}, err
}

func (s SandstormApi_restore_Results_List) At(i int) SandstormApi_restore_Results {
	return SandstormApi_restore_Results{s.List.Struct(i)}
}

func (s SandstormApi_restore_Results_List) Set(i int, v SandstormApi_restore_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_restore_Results_List) String() string {
	str, _ := text.MarshalList(0xecf1f14c4209c731, s.List)
	return str
}

// SandstormApi_restore_Results_Future is a wrapper for a SandstormApi_restore_Results promised by a client call.
type SandstormApi_restore_Results_Future struct{ *capnp.Future }

func (p SandstormApi_restore_Results_Future) Struct() (SandstormApi_restore_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_restore_Results{s}, err
}

func (p SandstormApi_restore_Results_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

type SandstormApi_drop_Params struct{ capnp.Struct }

// SandstormApi_drop_Params_TypeID is the unique identifier for the type SandstormApi_drop_Params.
const SandstormApi_drop_Params_TypeID = 0xadac227f85285c65

func NewSandstormApi_drop_Params(s *capnp.Segment) (SandstormApi_drop_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_drop_Params{st}, err
}

func NewRootSandstormApi_drop_Params(s *capnp.Segment) (SandstormApi_drop_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_drop_Params{st}, err
}

func ReadRootSandstormApi_drop_Params(msg *capnp.Message) (SandstormApi_drop_Params, error) {
	root, err := msg.Root()
	return SandstormApi_drop_Params{root.Struct()}, err
}

func (s SandstormApi_drop_Params) String() string {
	str, _ := text.Marshal(0xadac227f85285c65, s.Struct)
	return str
}

func (s SandstormApi_drop_Params) Token() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormApi_drop_Params) HasToken() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_drop_Params) SetToken(v []byte) error {
	return s.Struct.SetData(0, v)
}

// SandstormApi_drop_Params_List is a list of SandstormApi_drop_Params.
type SandstormApi_drop_Params_List struct{ capnp.List }

// NewSandstormApi_drop_Params creates a new list of SandstormApi_drop_Params.
func NewSandstormApi_drop_Params_List(s *capnp.Segment, sz int32) (SandstormApi_drop_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_drop_Params_List{l}, err
}

func (s SandstormApi_drop_Params_List) At(i int) SandstormApi_drop_Params {
	return SandstormApi_drop_Params{s.List.Struct(i)}
}

func (s SandstormApi_drop_Params_List) Set(i int, v SandstormApi_drop_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_drop_Params_List) String() string {
	str, _ := text.MarshalList(0xadac227f85285c65, s.List)
	return str
}

// SandstormApi_drop_Params_Future is a wrapper for a SandstormApi_drop_Params promised by a client call.
type SandstormApi_drop_Params_Future struct{ *capnp.Future }

func (p SandstormApi_drop_Params_Future) Struct() (SandstormApi_drop_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_drop_Params{s}, err
}

type SandstormApi_drop_Results struct{ capnp.Struct }

// SandstormApi_drop_Results_TypeID is the unique identifier for the type SandstormApi_drop_Results.
const SandstormApi_drop_Results_TypeID = 0xfbbc20367c72bc59

func NewSandstormApi_drop_Results(s *capnp.Segment) (SandstormApi_drop_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_drop_Results{st}, err
}

func NewRootSandstormApi_drop_Results(s *capnp.Segment) (SandstormApi_drop_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_drop_Results{st}, err
}

func ReadRootSandstormApi_drop_Results(msg *capnp.Message) (SandstormApi_drop_Results, error) {
	root, err := msg.Root()
	return SandstormApi_drop_Results{root.Struct()}, err
}

func (s SandstormApi_drop_Results) String() string {
	str, _ := text.Marshal(0xfbbc20367c72bc59, s.Struct)
	return str
}

// SandstormApi_drop_Results_List is a list of SandstormApi_drop_Results.
type SandstormApi_drop_Results_List struct{ capnp.List }

// NewSandstormApi_drop_Results creates a new list of SandstormApi_drop_Results.
func NewSandstormApi_drop_Results_List(s *capnp.Segment, sz int32) (SandstormApi_drop_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_drop_Results_List{l}, err
}

func (s SandstormApi_drop_Results_List) At(i int) SandstormApi_drop_Results {
	return SandstormApi_drop_Results{s.List.Struct(i)}
}

func (s SandstormApi_drop_Results_List) Set(i int, v SandstormApi_drop_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_drop_Results_List) String() string {
	str, _ := text.MarshalList(0xfbbc20367c72bc59, s.List)
	return str
}

// SandstormApi_drop_Results_Future is a wrapper for a SandstormApi_drop_Results promised by a client call.
type SandstormApi_drop_Results_Future struct{ *capnp.Future }

func (p SandstormApi_drop_Results_Future) Struct() (SandstormApi_drop_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_drop_Results{s}, err
}

type SandstormApi_deleted_Params struct{ capnp.Struct }

// SandstormApi_deleted_Params_TypeID is the unique identifier for the type SandstormApi_deleted_Params.
const SandstormApi_deleted_Params_TypeID = 0x87d94955ce3c61dd

func NewSandstormApi_deleted_Params(s *capnp.Segment) (SandstormApi_deleted_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_deleted_Params{st}, err
}

func NewRootSandstormApi_deleted_Params(s *capnp.Segment) (SandstormApi_deleted_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_deleted_Params{st}, err
}

func ReadRootSandstormApi_deleted_Params(msg *capnp.Message) (SandstormApi_deleted_Params, error) {
	root, err := msg.Root()
	return SandstormApi_deleted_Params{root.Struct()}, err
}

func (s SandstormApi_deleted_Params) String() string {
	str, _ := text.Marshal(0x87d94955ce3c61dd, s.Struct)
	return str
}

func (s SandstormApi_deleted_Params) Ref() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SandstormApi_deleted_Params) HasRef() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_deleted_Params) SetRef(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// SandstormApi_deleted_Params_List is a list of SandstormApi_deleted_Params.
type SandstormApi_deleted_Params_List struct{ capnp.List }

// NewSandstormApi_deleted_Params creates a new list of SandstormApi_deleted_Params.
func NewSandstormApi_deleted_Params_List(s *capnp.Segment, sz int32) (SandstormApi_deleted_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_deleted_Params_List{l}, err
}

func (s SandstormApi_deleted_Params_List) At(i int) SandstormApi_deleted_Params {
	return SandstormApi_deleted_Params{s.List.Struct(i)}
}

func (s SandstormApi_deleted_Params_List) Set(i int, v SandstormApi_deleted_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deleted_Params_List) String() string {
	str, _ := text.MarshalList(0x87d94955ce3c61dd, s.List)
	return str
}

// SandstormApi_deleted_Params_Future is a wrapper for a SandstormApi_deleted_Params promised by a client call.
type SandstormApi_deleted_Params_Future struct{ *capnp.Future }

func (p SandstormApi_deleted_Params_Future) Struct() (SandstormApi_deleted_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deleted_Params{s}, err
}

func (p SandstormApi_deleted_Params_Future) Ref() *capnp.Future {
	return p.Future.Field(0, nil)
}

type SandstormApi_deleted_Results struct{ capnp.Struct }

// SandstormApi_deleted_Results_TypeID is the unique identifier for the type SandstormApi_deleted_Results.
const SandstormApi_deleted_Results_TypeID = 0xf8fe6b4e94a960f7

func NewSandstormApi_deleted_Results(s *capnp.Segment) (SandstormApi_deleted_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deleted_Results{st}, err
}

func NewRootSandstormApi_deleted_Results(s *capnp.Segment) (SandstormApi_deleted_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_deleted_Results{st}, err
}

func ReadRootSandstormApi_deleted_Results(msg *capnp.Message) (SandstormApi_deleted_Results, error) {
	root, err := msg.Root()
	return SandstormApi_deleted_Results{root.Struct()}, err
}

func (s SandstormApi_deleted_Results) String() string {
	str, _ := text.Marshal(0xf8fe6b4e94a960f7, s.Struct)
	return str
}

// SandstormApi_deleted_Results_List is a list of SandstormApi_deleted_Results.
type SandstormApi_deleted_Results_List struct{ capnp.List }

// NewSandstormApi_deleted_Results creates a new list of SandstormApi_deleted_Results.
func NewSandstormApi_deleted_Results_List(s *capnp.Segment, sz int32) (SandstormApi_deleted_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_deleted_Results_List{l}, err
}

func (s SandstormApi_deleted_Results_List) At(i int) SandstormApi_deleted_Results {
	return SandstormApi_deleted_Results{s.List.Struct(i)}
}

func (s SandstormApi_deleted_Results_List) Set(i int, v SandstormApi_deleted_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_deleted_Results_List) String() string {
	str, _ := text.MarshalList(0xf8fe6b4e94a960f7, s.List)
	return str
}

// SandstormApi_deleted_Results_Future is a wrapper for a SandstormApi_deleted_Results promised by a client call.
type SandstormApi_deleted_Results_Future struct{ *capnp.Future }

func (p SandstormApi_deleted_Results_Future) Struct() (SandstormApi_deleted_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_deleted_Results{s}, err
}

type SandstormApi_stayAwake_Params struct{ capnp.Struct }

// SandstormApi_stayAwake_Params_TypeID is the unique identifier for the type SandstormApi_stayAwake_Params.
const SandstormApi_stayAwake_Params_TypeID = 0xb469e5d523b89e1b

func NewSandstormApi_stayAwake_Params(s *capnp.Segment) (SandstormApi_stayAwake_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_stayAwake_Params{st}, err
}

func NewRootSandstormApi_stayAwake_Params(s *capnp.Segment) (SandstormApi_stayAwake_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_stayAwake_Params{st}, err
}

func ReadRootSandstormApi_stayAwake_Params(msg *capnp.Message) (SandstormApi_stayAwake_Params, error) {
	root, err := msg.Root()
	return SandstormApi_stayAwake_Params{root.Struct()}, err
}

func (s SandstormApi_stayAwake_Params) String() string {
	str, _ := text.Marshal(0xb469e5d523b89e1b, s.Struct)
	return str
}

func (s SandstormApi_stayAwake_Params) DisplayInfo() (activity.NotificationDisplayInfo, error) {
	p, err := s.Struct.Ptr(0)
	return activity.NotificationDisplayInfo{Struct: p.Struct()}, err
}

func (s SandstormApi_stayAwake_Params) HasDisplayInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_stayAwake_Params) SetDisplayInfo(v activity.NotificationDisplayInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDisplayInfo sets the displayInfo field to a newly
// allocated activity.NotificationDisplayInfo struct, preferring placement in s's segment.
func (s SandstormApi_stayAwake_Params) NewDisplayInfo() (activity.NotificationDisplayInfo, error) {
	ss, err := activity.NewNotificationDisplayInfo(s.Struct.Segment())
	if err != nil {
		return activity.NotificationDisplayInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s SandstormApi_stayAwake_Params) Notification() activity.OngoingNotification {
	p, _ := s.Struct.Ptr(1)
	return activity.OngoingNotification{Client: p.Interface().Client()}
}

func (s SandstormApi_stayAwake_Params) HasNotification() bool {
	return s.Struct.HasPtr(1)
}

func (s SandstormApi_stayAwake_Params) SetNotification(v activity.OngoingNotification) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

// SandstormApi_stayAwake_Params_List is a list of SandstormApi_stayAwake_Params.
type SandstormApi_stayAwake_Params_List struct{ capnp.List }

// NewSandstormApi_stayAwake_Params creates a new list of SandstormApi_stayAwake_Params.
func NewSandstormApi_stayAwake_Params_List(s *capnp.Segment, sz int32) (SandstormApi_stayAwake_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SandstormApi_stayAwake_Params_List{l}, err
}

func (s SandstormApi_stayAwake_Params_List) At(i int) SandstormApi_stayAwake_Params {
	return SandstormApi_stayAwake_Params{s.List.Struct(i)}
}

func (s SandstormApi_stayAwake_Params_List) Set(i int, v SandstormApi_stayAwake_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_stayAwake_Params_List) String() string {
	str, _ := text.MarshalList(0xb469e5d523b89e1b, s.List)
	return str
}

// SandstormApi_stayAwake_Params_Future is a wrapper for a SandstormApi_stayAwake_Params promised by a client call.
type SandstormApi_stayAwake_Params_Future struct{ *capnp.Future }

func (p SandstormApi_stayAwake_Params_Future) Struct() (SandstormApi_stayAwake_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_stayAwake_Params{s}, err
}

func (p SandstormApi_stayAwake_Params_Future) DisplayInfo() activity.NotificationDisplayInfo_Future {
	return activity.NotificationDisplayInfo_Future{Future: p.Future.Field(0, nil)}
}

func (p SandstormApi_stayAwake_Params_Future) Notification() activity.OngoingNotification {
	return activity.OngoingNotification{Client: p.Future.Field(1, nil).Client()}
}

type SandstormApi_stayAwake_Results struct{ capnp.Struct }

// SandstormApi_stayAwake_Results_TypeID is the unique identifier for the type SandstormApi_stayAwake_Results.
const SandstormApi_stayAwake_Results_TypeID = 0x9fd40f92e1eb5d21

func NewSandstormApi_stayAwake_Results(s *capnp.Segment) (SandstormApi_stayAwake_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_stayAwake_Results{st}, err
}

func NewRootSandstormApi_stayAwake_Results(s *capnp.Segment) (SandstormApi_stayAwake_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_stayAwake_Results{st}, err
}

func ReadRootSandstormApi_stayAwake_Results(msg *capnp.Message) (SandstormApi_stayAwake_Results, error) {
	root, err := msg.Root()
	return SandstormApi_stayAwake_Results{root.Struct()}, err
}

func (s SandstormApi_stayAwake_Results) String() string {
	str, _ := text.Marshal(0x9fd40f92e1eb5d21, s.Struct)
	return str
}

func (s SandstormApi_stayAwake_Results) Handle() util.Handle {
	p, _ := s.Struct.Ptr(0)
	return util.Handle{Client: p.Interface().Client()}
}

func (s SandstormApi_stayAwake_Results) HasHandle() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_stayAwake_Results) SetHandle(v util.Handle) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SandstormApi_stayAwake_Results_List is a list of SandstormApi_stayAwake_Results.
type SandstormApi_stayAwake_Results_List struct{ capnp.List }

// NewSandstormApi_stayAwake_Results creates a new list of SandstormApi_stayAwake_Results.
func NewSandstormApi_stayAwake_Results_List(s *capnp.Segment, sz int32) (SandstormApi_stayAwake_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_stayAwake_Results_List{l}, err
}

func (s SandstormApi_stayAwake_Results_List) At(i int) SandstormApi_stayAwake_Results {
	return SandstormApi_stayAwake_Results{s.List.Struct(i)}
}

func (s SandstormApi_stayAwake_Results_List) Set(i int, v SandstormApi_stayAwake_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_stayAwake_Results_List) String() string {
	str, _ := text.MarshalList(0x9fd40f92e1eb5d21, s.List)
	return str
}

// SandstormApi_stayAwake_Results_Future is a wrapper for a SandstormApi_stayAwake_Results promised by a client call.
type SandstormApi_stayAwake_Results_Future struct{ *capnp.Future }

func (p SandstormApi_stayAwake_Results_Future) Struct() (SandstormApi_stayAwake_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_stayAwake_Results{s}, err
}

func (p SandstormApi_stayAwake_Results_Future) Handle() util.Handle {
	return util.Handle{Client: p.Future.Field(0, nil).Client()}
}

type SandstormApi_save_Params struct{ capnp.Struct }

// SandstormApi_save_Params_TypeID is the unique identifier for the type SandstormApi_save_Params.
const SandstormApi_save_Params_TypeID = 0xd692a643ba8a1f58

func NewSandstormApi_save_Params(s *capnp.Segment) (SandstormApi_save_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_save_Params{st}, err
}

func NewRootSandstormApi_save_Params(s *capnp.Segment) (SandstormApi_save_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormApi_save_Params{st}, err
}

func ReadRootSandstormApi_save_Params(msg *capnp.Message) (SandstormApi_save_Params, error) {
	root, err := msg.Root()
	return SandstormApi_save_Params{root.Struct()}, err
}

func (s SandstormApi_save_Params) String() string {
	str, _ := text.Marshal(0xd692a643ba8a1f58, s.Struct)
	return str
}

func (s SandstormApi_save_Params) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SandstormApi_save_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_save_Params) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SandstormApi_save_Params) Label() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(1)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s SandstormApi_save_Params) HasLabel() bool {
	return s.Struct.HasPtr(1)
}

func (s SandstormApi_save_Params) SetLabel(v util.LocalizedText) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewLabel sets the label field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s SandstormApi_save_Params) NewLabel() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// SandstormApi_save_Params_List is a list of SandstormApi_save_Params.
type SandstormApi_save_Params_List struct{ capnp.List }

// NewSandstormApi_save_Params creates a new list of SandstormApi_save_Params.
func NewSandstormApi_save_Params_List(s *capnp.Segment, sz int32) (SandstormApi_save_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SandstormApi_save_Params_List{l}, err
}

func (s SandstormApi_save_Params_List) At(i int) SandstormApi_save_Params {
	return SandstormApi_save_Params{s.List.Struct(i)}
}

func (s SandstormApi_save_Params_List) Set(i int, v SandstormApi_save_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_save_Params_List) String() string {
	str, _ := text.MarshalList(0xd692a643ba8a1f58, s.List)
	return str
}

// SandstormApi_save_Params_Future is a wrapper for a SandstormApi_save_Params promised by a client call.
type SandstormApi_save_Params_Future struct{ *capnp.Future }

func (p SandstormApi_save_Params_Future) Struct() (SandstormApi_save_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_save_Params{s}, err
}

func (p SandstormApi_save_Params_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SandstormApi_save_Params_Future) Label() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(1, nil)}
}

type SandstormApi_save_Results struct{ capnp.Struct }

// SandstormApi_save_Results_TypeID is the unique identifier for the type SandstormApi_save_Results.
const SandstormApi_save_Results_TypeID = 0x9206caa8d3e3cc7e

func NewSandstormApi_save_Results(s *capnp.Segment) (SandstormApi_save_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_save_Results{st}, err
}

func NewRootSandstormApi_save_Results(s *capnp.Segment) (SandstormApi_save_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_save_Results{st}, err
}

func ReadRootSandstormApi_save_Results(msg *capnp.Message) (SandstormApi_save_Results, error) {
	root, err := msg.Root()
	return SandstormApi_save_Results{root.Struct()}, err
}

func (s SandstormApi_save_Results) String() string {
	str, _ := text.Marshal(0x9206caa8d3e3cc7e, s.Struct)
	return str
}

func (s SandstormApi_save_Results) Token() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormApi_save_Results) HasToken() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_save_Results) SetToken(v []byte) error {
	return s.Struct.SetData(0, v)
}

// SandstormApi_save_Results_List is a list of SandstormApi_save_Results.
type SandstormApi_save_Results_List struct{ capnp.List }

// NewSandstormApi_save_Results creates a new list of SandstormApi_save_Results.
func NewSandstormApi_save_Results_List(s *capnp.Segment, sz int32) (SandstormApi_save_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_save_Results_List{l}, err
}

func (s SandstormApi_save_Results_List) At(i int) SandstormApi_save_Results {
	return SandstormApi_save_Results{s.List.Struct(i)}
}

func (s SandstormApi_save_Results_List) Set(i int, v SandstormApi_save_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_save_Results_List) String() string {
	str, _ := text.MarshalList(0x9206caa8d3e3cc7e, s.List)
	return str
}

// SandstormApi_save_Results_Future is a wrapper for a SandstormApi_save_Results promised by a client call.
type SandstormApi_save_Results_Future struct{ *capnp.Future }

func (p SandstormApi_save_Results_Future) Struct() (SandstormApi_save_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_save_Results{s}, err
}

type SandstormApi_backgroundActivity_Params struct{ capnp.Struct }

// SandstormApi_backgroundActivity_Params_TypeID is the unique identifier for the type SandstormApi_backgroundActivity_Params.
const SandstormApi_backgroundActivity_Params_TypeID = 0xec8866df56873858

func NewSandstormApi_backgroundActivity_Params(s *capnp.Segment) (SandstormApi_backgroundActivity_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_backgroundActivity_Params{st}, err
}

func NewRootSandstormApi_backgroundActivity_Params(s *capnp.Segment) (SandstormApi_backgroundActivity_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_backgroundActivity_Params{st}, err
}

func ReadRootSandstormApi_backgroundActivity_Params(msg *capnp.Message) (SandstormApi_backgroundActivity_Params, error) {
	root, err := msg.Root()
	return SandstormApi_backgroundActivity_Params{root.Struct()}, err
}

func (s SandstormApi_backgroundActivity_Params) String() string {
	str, _ := text.Marshal(0xec8866df56873858, s.Struct)
	return str
}

func (s SandstormApi_backgroundActivity_Params) Event() (activity.ActivityEvent, error) {
	p, err := s.Struct.Ptr(0)
	return activity.ActivityEvent{Struct: p.Struct()}, err
}

func (s SandstormApi_backgroundActivity_Params) HasEvent() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_backgroundActivity_Params) SetEvent(v activity.ActivityEvent) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewEvent sets the event field to a newly
// allocated activity.ActivityEvent struct, preferring placement in s's segment.
func (s SandstormApi_backgroundActivity_Params) NewEvent() (activity.ActivityEvent, error) {
	ss, err := activity.NewActivityEvent(s.Struct.Segment())
	if err != nil {
		return activity.ActivityEvent{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// SandstormApi_backgroundActivity_Params_List is a list of SandstormApi_backgroundActivity_Params.
type SandstormApi_backgroundActivity_Params_List struct{ capnp.List }

// NewSandstormApi_backgroundActivity_Params creates a new list of SandstormApi_backgroundActivity_Params.
func NewSandstormApi_backgroundActivity_Params_List(s *capnp.Segment, sz int32) (SandstormApi_backgroundActivity_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_backgroundActivity_Params_List{l}, err
}

func (s SandstormApi_backgroundActivity_Params_List) At(i int) SandstormApi_backgroundActivity_Params {
	return SandstormApi_backgroundActivity_Params{s.List.Struct(i)}
}

func (s SandstormApi_backgroundActivity_Params_List) Set(i int, v SandstormApi_backgroundActivity_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_backgroundActivity_Params_List) String() string {
	str, _ := text.MarshalList(0xec8866df56873858, s.List)
	return str
}

// SandstormApi_backgroundActivity_Params_Future is a wrapper for a SandstormApi_backgroundActivity_Params promised by a client call.
type SandstormApi_backgroundActivity_Params_Future struct{ *capnp.Future }

func (p SandstormApi_backgroundActivity_Params_Future) Struct() (SandstormApi_backgroundActivity_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_backgroundActivity_Params{s}, err
}

func (p SandstormApi_backgroundActivity_Params_Future) Event() activity.ActivityEvent_Future {
	return activity.ActivityEvent_Future{Future: p.Future.Field(0, nil)}
}

type SandstormApi_backgroundActivity_Results struct{ capnp.Struct }

// SandstormApi_backgroundActivity_Results_TypeID is the unique identifier for the type SandstormApi_backgroundActivity_Results.
const SandstormApi_backgroundActivity_Results_TypeID = 0xa535ac09456b2870

func NewSandstormApi_backgroundActivity_Results(s *capnp.Segment) (SandstormApi_backgroundActivity_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_backgroundActivity_Results{st}, err
}

func NewRootSandstormApi_backgroundActivity_Results(s *capnp.Segment) (SandstormApi_backgroundActivity_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormApi_backgroundActivity_Results{st}, err
}

func ReadRootSandstormApi_backgroundActivity_Results(msg *capnp.Message) (SandstormApi_backgroundActivity_Results, error) {
	root, err := msg.Root()
	return SandstormApi_backgroundActivity_Results{root.Struct()}, err
}

func (s SandstormApi_backgroundActivity_Results) String() string {
	str, _ := text.Marshal(0xa535ac09456b2870, s.Struct)
	return str
}

// SandstormApi_backgroundActivity_Results_List is a list of SandstormApi_backgroundActivity_Results.
type SandstormApi_backgroundActivity_Results_List struct{ capnp.List }

// NewSandstormApi_backgroundActivity_Results creates a new list of SandstormApi_backgroundActivity_Results.
func NewSandstormApi_backgroundActivity_Results_List(s *capnp.Segment, sz int32) (SandstormApi_backgroundActivity_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SandstormApi_backgroundActivity_Results_List{l}, err
}

func (s SandstormApi_backgroundActivity_Results_List) At(i int) SandstormApi_backgroundActivity_Results {
	return SandstormApi_backgroundActivity_Results{s.List.Struct(i)}
}

func (s SandstormApi_backgroundActivity_Results_List) Set(i int, v SandstormApi_backgroundActivity_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_backgroundActivity_Results_List) String() string {
	str, _ := text.MarshalList(0xa535ac09456b2870, s.List)
	return str
}

// SandstormApi_backgroundActivity_Results_Future is a wrapper for a SandstormApi_backgroundActivity_Results promised by a client call.
type SandstormApi_backgroundActivity_Results_Future struct{ *capnp.Future }

func (p SandstormApi_backgroundActivity_Results_Future) Struct() (SandstormApi_backgroundActivity_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_backgroundActivity_Results{s}, err
}

type SandstormApi_getIdentityId_Params struct{ capnp.Struct }

// SandstormApi_getIdentityId_Params_TypeID is the unique identifier for the type SandstormApi_getIdentityId_Params.
const SandstormApi_getIdentityId_Params_TypeID = 0xd76b6c6364d6bff5

func NewSandstormApi_getIdentityId_Params(s *capnp.Segment) (SandstormApi_getIdentityId_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_getIdentityId_Params{st}, err
}

func NewRootSandstormApi_getIdentityId_Params(s *capnp.Segment) (SandstormApi_getIdentityId_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_getIdentityId_Params{st}, err
}

func ReadRootSandstormApi_getIdentityId_Params(msg *capnp.Message) (SandstormApi_getIdentityId_Params, error) {
	root, err := msg.Root()
	return SandstormApi_getIdentityId_Params{root.Struct()}, err
}

func (s SandstormApi_getIdentityId_Params) String() string {
	str, _ := text.Marshal(0xd76b6c6364d6bff5, s.Struct)
	return str
}

func (s SandstormApi_getIdentityId_Params) Identity() identity.Identity {
	p, _ := s.Struct.Ptr(0)
	return identity.Identity{Client: p.Interface().Client()}
}

func (s SandstormApi_getIdentityId_Params) HasIdentity() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_getIdentityId_Params) SetIdentity(v identity.Identity) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SandstormApi_getIdentityId_Params_List is a list of SandstormApi_getIdentityId_Params.
type SandstormApi_getIdentityId_Params_List struct{ capnp.List }

// NewSandstormApi_getIdentityId_Params creates a new list of SandstormApi_getIdentityId_Params.
func NewSandstormApi_getIdentityId_Params_List(s *capnp.Segment, sz int32) (SandstormApi_getIdentityId_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_getIdentityId_Params_List{l}, err
}

func (s SandstormApi_getIdentityId_Params_List) At(i int) SandstormApi_getIdentityId_Params {
	return SandstormApi_getIdentityId_Params{s.List.Struct(i)}
}

func (s SandstormApi_getIdentityId_Params_List) Set(i int, v SandstormApi_getIdentityId_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_getIdentityId_Params_List) String() string {
	str, _ := text.MarshalList(0xd76b6c6364d6bff5, s.List)
	return str
}

// SandstormApi_getIdentityId_Params_Future is a wrapper for a SandstormApi_getIdentityId_Params promised by a client call.
type SandstormApi_getIdentityId_Params_Future struct{ *capnp.Future }

func (p SandstormApi_getIdentityId_Params_Future) Struct() (SandstormApi_getIdentityId_Params, error) {
	s, err := p.Future.Struct()
	return SandstormApi_getIdentityId_Params{s}, err
}

func (p SandstormApi_getIdentityId_Params_Future) Identity() identity.Identity {
	return identity.Identity{Client: p.Future.Field(0, nil).Client()}
}

type SandstormApi_getIdentityId_Results struct{ capnp.Struct }

// SandstormApi_getIdentityId_Results_TypeID is the unique identifier for the type SandstormApi_getIdentityId_Results.
const SandstormApi_getIdentityId_Results_TypeID = 0x8c4a70a31703d35c

func NewSandstormApi_getIdentityId_Results(s *capnp.Segment) (SandstormApi_getIdentityId_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_getIdentityId_Results{st}, err
}

func NewRootSandstormApi_getIdentityId_Results(s *capnp.Segment) (SandstormApi_getIdentityId_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormApi_getIdentityId_Results{st}, err
}

func ReadRootSandstormApi_getIdentityId_Results(msg *capnp.Message) (SandstormApi_getIdentityId_Results, error) {
	root, err := msg.Root()
	return SandstormApi_getIdentityId_Results{root.Struct()}, err
}

func (s SandstormApi_getIdentityId_Results) String() string {
	str, _ := text.Marshal(0x8c4a70a31703d35c, s.Struct)
	return str
}

func (s SandstormApi_getIdentityId_Results) Id() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormApi_getIdentityId_Results) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s SandstormApi_getIdentityId_Results) SetId(v []byte) error {
	return s.Struct.SetData(0, v)
}

// SandstormApi_getIdentityId_Results_List is a list of SandstormApi_getIdentityId_Results.
type SandstormApi_getIdentityId_Results_List struct{ capnp.List }

// NewSandstormApi_getIdentityId_Results creates a new list of SandstormApi_getIdentityId_Results.
func NewSandstormApi_getIdentityId_Results_List(s *capnp.Segment, sz int32) (SandstormApi_getIdentityId_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SandstormApi_getIdentityId_Results_List{l}, err
}

func (s SandstormApi_getIdentityId_Results_List) At(i int) SandstormApi_getIdentityId_Results {
	return SandstormApi_getIdentityId_Results{s.List.Struct(i)}
}

func (s SandstormApi_getIdentityId_Results_List) Set(i int, v SandstormApi_getIdentityId_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SandstormApi_getIdentityId_Results_List) String() string {
	str, _ := text.MarshalList(0x8c4a70a31703d35c, s.List)
	return str
}

// SandstormApi_getIdentityId_Results_Future is a wrapper for a SandstormApi_getIdentityId_Results promised by a client call.
type SandstormApi_getIdentityId_Results_Future struct{ *capnp.Future }

func (p SandstormApi_getIdentityId_Results_Future) Struct() (SandstormApi_getIdentityId_Results, error) {
	s, err := p.Future.Struct()
	return SandstormApi_getIdentityId_Results{s}, err
}

type UiView struct{ Client *capnp.Client }

// UiView_TypeID is the unique identifier for the type UiView.
const UiView_TypeID = 0xdbb4d798ea67e2e7

func (c UiView) GetViewInfo(ctx context.Context, params func(UiView_getViewInfo_Params) error) (UiView_ViewInfo_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      0,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "getViewInfo",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_getViewInfo_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_ViewInfo_Future{Future: ans.Future()}, release
}
func (c UiView) NewSession(ctx context.Context, params func(UiView_newSession_Params) error) (UiView_newSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      1,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newSession_Results_Future{Future: ans.Future()}, release
}
func (c UiView) NewRequestSession(ctx context.Context, params func(UiView_newRequestSession_Params) error) (UiView_newRequestSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      2,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newRequestSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 5}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newRequestSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newRequestSession_Results_Future{Future: ans.Future()}, release
}
func (c UiView) NewOfferSession(ctx context.Context, params func(UiView_newOfferSession_Params) error) (UiView_newOfferSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      3,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newOfferSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 6}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newOfferSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newOfferSession_Results_Future{Future: ans.Future()}, release
}

// A UiView_Server is a UiView with a local implementation.
type UiView_Server interface {
	GetViewInfo(context.Context, UiView_getViewInfo) error

	NewSession(context.Context, UiView_newSession) error

	NewRequestSession(context.Context, UiView_newRequestSession) error

	NewOfferSession(context.Context, UiView_newOfferSession) error
}

// UiView_NewServer creates a new Server from an implementation of UiView_Server.
func UiView_NewServer(s UiView_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(UiView_Methods(nil, s), s, c, policy)
}

// UiView_ServerToClient creates a new Client from an implementation of UiView_Server.
// The caller is responsible for calling Release on the returned Client.
func UiView_ServerToClient(s UiView_Server, policy *server.Policy) UiView {
	return UiView{Client: capnp.NewClient(UiView_NewServer(s, policy))}
}

// UiView_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func UiView_Methods(methods []server.Method, s UiView_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 4)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      0,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "getViewInfo",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetViewInfo(ctx, UiView_getViewInfo{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      1,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewSession(ctx, UiView_newSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      2,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newRequestSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewRequestSession(ctx, UiView_newRequestSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      3,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newOfferSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewOfferSession(ctx, UiView_newOfferSession{call})
		},
	})

	return methods
}

// UiView_getViewInfo holds the state for a server call to UiView.getViewInfo.
// See server.Call for documentation.
type UiView_getViewInfo struct {
	*server.Call
}

// Args returns the call's arguments.
func (c UiView_getViewInfo) Args() UiView_getViewInfo_Params {
	return UiView_getViewInfo_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c UiView_getViewInfo) AllocResults() (UiView_ViewInfo, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 8})
	return UiView_ViewInfo{Struct: r}, err
}

// UiView_newSession holds the state for a server call to UiView.newSession.
// See server.Call for documentation.
type UiView_newSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c UiView_newSession) Args() UiView_newSession_Params {
	return UiView_newSession_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c UiView_newSession) AllocResults() (UiView_newSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newSession_Results{Struct: r}, err
}

// UiView_newRequestSession holds the state for a server call to UiView.newRequestSession.
// See server.Call for documentation.
type UiView_newRequestSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c UiView_newRequestSession) Args() UiView_newRequestSession_Params {
	return UiView_newRequestSession_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c UiView_newRequestSession) AllocResults() (UiView_newRequestSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newRequestSession_Results{Struct: r}, err
}

// UiView_newOfferSession holds the state for a server call to UiView.newOfferSession.
// See server.Call for documentation.
type UiView_newOfferSession struct {
	*server.Call
}

// Args returns the call's arguments.
func (c UiView_newOfferSession) Args() UiView_newOfferSession_Params {
	return UiView_newOfferSession_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c UiView_newOfferSession) AllocResults() (UiView_newOfferSession_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newOfferSession_Results{Struct: r}, err
}

type UiView_ViewInfo struct{ capnp.Struct }

// UiView_ViewInfo_TypeID is the unique identifier for the type UiView_ViewInfo.
const UiView_ViewInfo_TypeID = 0xbc5e354741a8e665

func NewUiView_ViewInfo(s *capnp.Segment) (UiView_ViewInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8})
	return UiView_ViewInfo{st}, err
}

func NewRootUiView_ViewInfo(s *capnp.Segment) (UiView_ViewInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8})
	return UiView_ViewInfo{st}, err
}

func ReadRootUiView_ViewInfo(msg *capnp.Message) (UiView_ViewInfo, error) {
	root, err := msg.Root()
	return UiView_ViewInfo{root.Struct()}, err
}

func (s UiView_ViewInfo) String() string {
	str, _ := text.Marshal(0xbc5e354741a8e665, s.Struct)
	return str
}

func (s UiView_ViewInfo) Permissions() (PermissionDef_List, error) {
	p, err := s.Struct.Ptr(0)
	return PermissionDef_List{List: p.List()}, err
}

func (s UiView_ViewInfo) HasPermissions() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_ViewInfo) SetPermissions(v PermissionDef_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewPermissions sets the permissions field to a newly
// allocated PermissionDef_List, preferring placement in s's segment.
func (s UiView_ViewInfo) NewPermissions(n int32) (PermissionDef_List, error) {
	l, err := NewPermissionDef_List(s.Struct.Segment(), n)
	if err != nil {
		return PermissionDef_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s UiView_ViewInfo) Roles() (RoleDef_List, error) {
	p, err := s.Struct.Ptr(1)
	return RoleDef_List{List: p.List()}, err
}

func (s UiView_ViewInfo) HasRoles() bool {
	return s.Struct.HasPtr(1)
}

func (s UiView_ViewInfo) SetRoles(v RoleDef_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRoles sets the roles field to a newly
// allocated RoleDef_List, preferring placement in s's segment.
func (s UiView_ViewInfo) NewRoles(n int32) (RoleDef_List, error) {
	l, err := NewRoleDef_List(s.Struct.Segment(), n)
	if err != nil {
		return RoleDef_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s UiView_ViewInfo) DeniedPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.BitList{List: p.List()}, err
}

func (s UiView_ViewInfo) HasDeniedPermissions() bool {
	return s.Struct.HasPtr(2)
}

func (s UiView_ViewInfo) SetDeniedPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewDeniedPermissions sets the deniedPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s UiView_ViewInfo) NewDeniedPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s UiView_ViewInfo) MatchRequests() (powerbox.PowerboxDescriptor_List, error) {
	p, err := s.Struct.Ptr(3)
	return powerbox.PowerboxDescriptor_List{List: p.List()}, err
}

func (s UiView_ViewInfo) HasMatchRequests() bool {
	return s.Struct.HasPtr(3)
}

func (s UiView_ViewInfo) SetMatchRequests(v powerbox.PowerboxDescriptor_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewMatchRequests sets the matchRequests field to a newly
// allocated powerbox.PowerboxDescriptor_List, preferring placement in s's segment.
func (s UiView_ViewInfo) NewMatchRequests(n int32) (powerbox.PowerboxDescriptor_List, error) {
	l, err := powerbox.NewPowerboxDescriptor_List(s.Struct.Segment(), n)
	if err != nil {
		return powerbox.PowerboxDescriptor_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s UiView_ViewInfo) MatchOffers() (powerbox.PowerboxDescriptor_List, error) {
	p, err := s.Struct.Ptr(4)
	return powerbox.PowerboxDescriptor_List{List: p.List()}, err
}

func (s UiView_ViewInfo) HasMatchOffers() bool {
	return s.Struct.HasPtr(4)
}

func (s UiView_ViewInfo) SetMatchOffers(v powerbox.PowerboxDescriptor_List) error {
	return s.Struct.SetPtr(4, v.List.ToPtr())
}

// NewMatchOffers sets the matchOffers field to a newly
// allocated powerbox.PowerboxDescriptor_List, preferring placement in s's segment.
func (s UiView_ViewInfo) NewMatchOffers(n int32) (powerbox.PowerboxDescriptor_List, error) {
	l, err := powerbox.NewPowerboxDescriptor_List(s.Struct.Segment(), n)
	if err != nil {
		return powerbox.PowerboxDescriptor_List{}, err
	}
	err = s.Struct.SetPtr(4, l.List.ToPtr())
	return l, err
}

func (s UiView_ViewInfo) AppTitle() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(5)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s UiView_ViewInfo) HasAppTitle() bool {
	return s.Struct.HasPtr(5)
}

func (s UiView_ViewInfo) SetAppTitle(v util.LocalizedText) error {
	return s.Struct.SetPtr(5, v.Struct.ToPtr())
}

// NewAppTitle sets the appTitle field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s UiView_ViewInfo) NewAppTitle() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(5, ss.Struct.ToPtr())
	return ss, err
}

func (s UiView_ViewInfo) GrainIcon() util.StaticAsset {
	p, _ := s.Struct.Ptr(6)
	return util.StaticAsset{Client: p.Interface().Client()}
}

func (s UiView_ViewInfo) HasGrainIcon() bool {
	return s.Struct.HasPtr(6)
}

func (s UiView_ViewInfo) SetGrainIcon(v util.StaticAsset) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(6, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(6, in.ToPtr())
}

func (s UiView_ViewInfo) EventTypes() (activity.ActivityTypeDef_List, error) {
	p, err := s.Struct.Ptr(7)
	return activity.ActivityTypeDef_List{List: p.List()}, err
}

func (s UiView_ViewInfo) HasEventTypes() bool {
	return s.Struct.HasPtr(7)
}

func (s UiView_ViewInfo) SetEventTypes(v activity.ActivityTypeDef_List) error {
	return s.Struct.SetPtr(7, v.List.ToPtr())
}

// NewEventTypes sets the eventTypes field to a newly
// allocated activity.ActivityTypeDef_List, preferring placement in s's segment.
func (s UiView_ViewInfo) NewEventTypes(n int32) (activity.ActivityTypeDef_List, error) {
	l, err := activity.NewActivityTypeDef_List(s.Struct.Segment(), n)
	if err != nil {
		return activity.ActivityTypeDef_List{}, err
	}
	err = s.Struct.SetPtr(7, l.List.ToPtr())
	return l, err
}

// UiView_ViewInfo_List is a list of UiView_ViewInfo.
type UiView_ViewInfo_List struct{ capnp.List }

// NewUiView_ViewInfo creates a new list of UiView_ViewInfo.
func NewUiView_ViewInfo_List(s *capnp.Segment, sz int32) (UiView_ViewInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8}, sz)
	return UiView_ViewInfo_List{l}, err
}

func (s UiView_ViewInfo_List) At(i int) UiView_ViewInfo { return UiView_ViewInfo{s.List.Struct(i)} }

func (s UiView_ViewInfo_List) Set(i int, v UiView_ViewInfo) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_ViewInfo_List) String() string {
	str, _ := text.MarshalList(0xbc5e354741a8e665, s.List)
	return str
}

// UiView_ViewInfo_Future is a wrapper for a UiView_ViewInfo promised by a client call.
type UiView_ViewInfo_Future struct{ *capnp.Future }

func (p UiView_ViewInfo_Future) Struct() (UiView_ViewInfo, error) {
	s, err := p.Future.Struct()
	return UiView_ViewInfo{s}, err
}

func (p UiView_ViewInfo_Future) AppTitle() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(5, nil)}
}

func (p UiView_ViewInfo_Future) GrainIcon() util.StaticAsset {
	return util.StaticAsset{Client: p.Future.Field(6, nil).Client()}
}

type UiView_PowerboxTag struct{ capnp.Struct }

// UiView_PowerboxTag_TypeID is the unique identifier for the type UiView_PowerboxTag.
const UiView_PowerboxTag_TypeID = 0x982790c08b1958ec

func NewUiView_PowerboxTag(s *capnp.Segment) (UiView_PowerboxTag, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_PowerboxTag{st}, err
}

func NewRootUiView_PowerboxTag(s *capnp.Segment) (UiView_PowerboxTag, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_PowerboxTag{st}, err
}

func ReadRootUiView_PowerboxTag(msg *capnp.Message) (UiView_PowerboxTag, error) {
	root, err := msg.Root()
	return UiView_PowerboxTag{root.Struct()}, err
}

func (s UiView_PowerboxTag) String() string {
	str, _ := text.Marshal(0x982790c08b1958ec, s.Struct)
	return str
}

func (s UiView_PowerboxTag) Title() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s UiView_PowerboxTag) HasTitle() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_PowerboxTag) TitleBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s UiView_PowerboxTag) SetTitle(v string) error {
	return s.Struct.SetText(0, v)
}

// UiView_PowerboxTag_List is a list of UiView_PowerboxTag.
type UiView_PowerboxTag_List struct{ capnp.List }

// NewUiView_PowerboxTag creates a new list of UiView_PowerboxTag.
func NewUiView_PowerboxTag_List(s *capnp.Segment, sz int32) (UiView_PowerboxTag_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return UiView_PowerboxTag_List{l}, err
}

func (s UiView_PowerboxTag_List) At(i int) UiView_PowerboxTag {
	return UiView_PowerboxTag{s.List.Struct(i)}
}

func (s UiView_PowerboxTag_List) Set(i int, v UiView_PowerboxTag) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_PowerboxTag_List) String() string {
	str, _ := text.MarshalList(0x982790c08b1958ec, s.List)
	return str
}

// UiView_PowerboxTag_Future is a wrapper for a UiView_PowerboxTag promised by a client call.
type UiView_PowerboxTag_Future struct{ *capnp.Future }

func (p UiView_PowerboxTag_Future) Struct() (UiView_PowerboxTag, error) {
	s, err := p.Future.Struct()
	return UiView_PowerboxTag{s}, err
}

type UiView_getViewInfo_Params struct{ capnp.Struct }

// UiView_getViewInfo_Params_TypeID is the unique identifier for the type UiView_getViewInfo_Params.
const UiView_getViewInfo_Params_TypeID = 0x8f2ef49549d64e86

func NewUiView_getViewInfo_Params(s *capnp.Segment) (UiView_getViewInfo_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return UiView_getViewInfo_Params{st}, err
}

func NewRootUiView_getViewInfo_Params(s *capnp.Segment) (UiView_getViewInfo_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return UiView_getViewInfo_Params{st}, err
}

func ReadRootUiView_getViewInfo_Params(msg *capnp.Message) (UiView_getViewInfo_Params, error) {
	root, err := msg.Root()
	return UiView_getViewInfo_Params{root.Struct()}, err
}

func (s UiView_getViewInfo_Params) String() string {
	str, _ := text.Marshal(0x8f2ef49549d64e86, s.Struct)
	return str
}

// UiView_getViewInfo_Params_List is a list of UiView_getViewInfo_Params.
type UiView_getViewInfo_Params_List struct{ capnp.List }

// NewUiView_getViewInfo_Params creates a new list of UiView_getViewInfo_Params.
func NewUiView_getViewInfo_Params_List(s *capnp.Segment, sz int32) (UiView_getViewInfo_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return UiView_getViewInfo_Params_List{l}, err
}

func (s UiView_getViewInfo_Params_List) At(i int) UiView_getViewInfo_Params {
	return UiView_getViewInfo_Params{s.List.Struct(i)}
}

func (s UiView_getViewInfo_Params_List) Set(i int, v UiView_getViewInfo_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_getViewInfo_Params_List) String() string {
	str, _ := text.MarshalList(0x8f2ef49549d64e86, s.List)
	return str
}

// UiView_getViewInfo_Params_Future is a wrapper for a UiView_getViewInfo_Params promised by a client call.
type UiView_getViewInfo_Params_Future struct{ *capnp.Future }

func (p UiView_getViewInfo_Params_Future) Struct() (UiView_getViewInfo_Params, error) {
	s, err := p.Future.Struct()
	return UiView_getViewInfo_Params{s}, err
}

type UiView_newSession_Params struct{ capnp.Struct }

// UiView_newSession_Params_TypeID is the unique identifier for the type UiView_newSession_Params.
const UiView_newSession_Params_TypeID = 0xf87a2c5a9f996828

func NewUiView_newSession_Params(s *capnp.Segment) (UiView_newSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return UiView_newSession_Params{st}, err
}

func NewRootUiView_newSession_Params(s *capnp.Segment) (UiView_newSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return UiView_newSession_Params{st}, err
}

func ReadRootUiView_newSession_Params(msg *capnp.Message) (UiView_newSession_Params, error) {
	root, err := msg.Root()
	return UiView_newSession_Params{root.Struct()}, err
}

func (s UiView_newSession_Params) String() string {
	str, _ := text.Marshal(0xf87a2c5a9f996828, s.Struct)
	return str
}

func (s UiView_newSession_Params) UserInfo() (identity.UserInfo, error) {
	p, err := s.Struct.Ptr(0)
	return identity.UserInfo{Struct: p.Struct()}, err
}

func (s UiView_newSession_Params) HasUserInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newSession_Params) SetUserInfo(v identity.UserInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewUserInfo sets the userInfo field to a newly
// allocated identity.UserInfo struct, preferring placement in s's segment.
func (s UiView_newSession_Params) NewUserInfo() (identity.UserInfo, error) {
	ss, err := identity.NewUserInfo(s.Struct.Segment())
	if err != nil {
		return identity.UserInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s UiView_newSession_Params) Context() SessionContext {
	p, _ := s.Struct.Ptr(1)
	return SessionContext{Client: p.Interface().Client()}
}

func (s UiView_newSession_Params) HasContext() bool {
	return s.Struct.HasPtr(1)
}

func (s UiView_newSession_Params) SetContext(v SessionContext) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

func (s UiView_newSession_Params) SessionType() uint64 {
	return s.Struct.Uint64(0)
}

func (s UiView_newSession_Params) SetSessionType(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s UiView_newSession_Params) SessionParams() (capnp.Ptr, error) {
	return s.Struct.Ptr(2)
}

func (s UiView_newSession_Params) HasSessionParams() bool {
	return s.Struct.HasPtr(2)
}

func (s UiView_newSession_Params) SetSessionParams(v capnp.Ptr) error {
	return s.Struct.SetPtr(2, v)
}

func (s UiView_newSession_Params) TabId() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s UiView_newSession_Params) HasTabId() bool {
	return s.Struct.HasPtr(3)
}

func (s UiView_newSession_Params) SetTabId(v []byte) error {
	return s.Struct.SetData(3, v)
}

// UiView_newSession_Params_List is a list of UiView_newSession_Params.
type UiView_newSession_Params_List struct{ capnp.List }

// NewUiView_newSession_Params creates a new list of UiView_newSession_Params.
func NewUiView_newSession_Params_List(s *capnp.Segment, sz int32) (UiView_newSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return UiView_newSession_Params_List{l}, err
}

func (s UiView_newSession_Params_List) At(i int) UiView_newSession_Params {
	return UiView_newSession_Params{s.List.Struct(i)}
}

func (s UiView_newSession_Params_List) Set(i int, v UiView_newSession_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newSession_Params_List) String() string {
	str, _ := text.MarshalList(0xf87a2c5a9f996828, s.List)
	return str
}

// UiView_newSession_Params_Future is a wrapper for a UiView_newSession_Params promised by a client call.
type UiView_newSession_Params_Future struct{ *capnp.Future }

func (p UiView_newSession_Params_Future) Struct() (UiView_newSession_Params, error) {
	s, err := p.Future.Struct()
	return UiView_newSession_Params{s}, err
}

func (p UiView_newSession_Params_Future) UserInfo() identity.UserInfo_Future {
	return identity.UserInfo_Future{Future: p.Future.Field(0, nil)}
}

func (p UiView_newSession_Params_Future) Context() SessionContext {
	return SessionContext{Client: p.Future.Field(1, nil).Client()}
}

func (p UiView_newSession_Params_Future) SessionParams() *capnp.Future {
	return p.Future.Field(2, nil)
}

type UiView_newSession_Results struct{ capnp.Struct }

// UiView_newSession_Results_TypeID is the unique identifier for the type UiView_newSession_Results.
const UiView_newSession_Results_TypeID = 0xa8f4ff97289294c7

func NewUiView_newSession_Results(s *capnp.Segment) (UiView_newSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newSession_Results{st}, err
}

func NewRootUiView_newSession_Results(s *capnp.Segment) (UiView_newSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newSession_Results{st}, err
}

func ReadRootUiView_newSession_Results(msg *capnp.Message) (UiView_newSession_Results, error) {
	root, err := msg.Root()
	return UiView_newSession_Results{root.Struct()}, err
}

func (s UiView_newSession_Results) String() string {
	str, _ := text.Marshal(0xa8f4ff97289294c7, s.Struct)
	return str
}

func (s UiView_newSession_Results) Session() UiSession {
	p, _ := s.Struct.Ptr(0)
	return UiSession{Client: p.Interface().Client()}
}

func (s UiView_newSession_Results) HasSession() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newSession_Results) SetSession(v UiSession) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// UiView_newSession_Results_List is a list of UiView_newSession_Results.
type UiView_newSession_Results_List struct{ capnp.List }

// NewUiView_newSession_Results creates a new list of UiView_newSession_Results.
func NewUiView_newSession_Results_List(s *capnp.Segment, sz int32) (UiView_newSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return UiView_newSession_Results_List{l}, err
}

func (s UiView_newSession_Results_List) At(i int) UiView_newSession_Results {
	return UiView_newSession_Results{s.List.Struct(i)}
}

func (s UiView_newSession_Results_List) Set(i int, v UiView_newSession_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newSession_Results_List) String() string {
	str, _ := text.MarshalList(0xa8f4ff97289294c7, s.List)
	return str
}

// UiView_newSession_Results_Future is a wrapper for a UiView_newSession_Results promised by a client call.
type UiView_newSession_Results_Future struct{ *capnp.Future }

func (p UiView_newSession_Results_Future) Struct() (UiView_newSession_Results, error) {
	s, err := p.Future.Struct()
	return UiView_newSession_Results{s}, err
}

func (p UiView_newSession_Results_Future) Session() UiSession {
	return UiSession{Client: p.Future.Field(0, nil).Client()}
}

type UiView_newRequestSession_Params struct{ capnp.Struct }

// UiView_newRequestSession_Params_TypeID is the unique identifier for the type UiView_newRequestSession_Params.
const UiView_newRequestSession_Params_TypeID = 0xbc193a4219598bcb

func NewUiView_newRequestSession_Params(s *capnp.Segment) (UiView_newRequestSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return UiView_newRequestSession_Params{st}, err
}

func NewRootUiView_newRequestSession_Params(s *capnp.Segment) (UiView_newRequestSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return UiView_newRequestSession_Params{st}, err
}

func ReadRootUiView_newRequestSession_Params(msg *capnp.Message) (UiView_newRequestSession_Params, error) {
	root, err := msg.Root()
	return UiView_newRequestSession_Params{root.Struct()}, err
}

func (s UiView_newRequestSession_Params) String() string {
	str, _ := text.Marshal(0xbc193a4219598bcb, s.Struct)
	return str
}

func (s UiView_newRequestSession_Params) UserInfo() (identity.UserInfo, error) {
	p, err := s.Struct.Ptr(0)
	return identity.UserInfo{Struct: p.Struct()}, err
}

func (s UiView_newRequestSession_Params) HasUserInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newRequestSession_Params) SetUserInfo(v identity.UserInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewUserInfo sets the userInfo field to a newly
// allocated identity.UserInfo struct, preferring placement in s's segment.
func (s UiView_newRequestSession_Params) NewUserInfo() (identity.UserInfo, error) {
	ss, err := identity.NewUserInfo(s.Struct.Segment())
	if err != nil {
		return identity.UserInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s UiView_newRequestSession_Params) Context() SessionContext {
	p, _ := s.Struct.Ptr(1)
	return SessionContext{Client: p.Interface().Client()}
}

func (s UiView_newRequestSession_Params) HasContext() bool {
	return s.Struct.HasPtr(1)
}

func (s UiView_newRequestSession_Params) SetContext(v SessionContext) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

func (s UiView_newRequestSession_Params) SessionType() uint64 {
	return s.Struct.Uint64(0)
}

func (s UiView_newRequestSession_Params) SetSessionType(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s UiView_newRequestSession_Params) SessionParams() (capnp.Ptr, error) {
	return s.Struct.Ptr(2)
}

func (s UiView_newRequestSession_Params) HasSessionParams() bool {
	return s.Struct.HasPtr(2)
}

func (s UiView_newRequestSession_Params) SetSessionParams(v capnp.Ptr) error {
	return s.Struct.SetPtr(2, v)
}

func (s UiView_newRequestSession_Params) RequestInfo() (powerbox.PowerboxDescriptor_List, error) {
	p, err := s.Struct.Ptr(3)
	return powerbox.PowerboxDescriptor_List{List: p.List()}, err
}

func (s UiView_newRequestSession_Params) HasRequestInfo() bool {
	return s.Struct.HasPtr(3)
}

func (s UiView_newRequestSession_Params) SetRequestInfo(v powerbox.PowerboxDescriptor_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewRequestInfo sets the requestInfo field to a newly
// allocated powerbox.PowerboxDescriptor_List, preferring placement in s's segment.
func (s UiView_newRequestSession_Params) NewRequestInfo(n int32) (powerbox.PowerboxDescriptor_List, error) {
	l, err := powerbox.NewPowerboxDescriptor_List(s.Struct.Segment(), n)
	if err != nil {
		return powerbox.PowerboxDescriptor_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s UiView_newRequestSession_Params) TabId() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return []byte(p.Data()), err
}

func (s UiView_newRequestSession_Params) HasTabId() bool {
	return s.Struct.HasPtr(4)
}

func (s UiView_newRequestSession_Params) SetTabId(v []byte) error {
	return s.Struct.SetData(4, v)
}

// UiView_newRequestSession_Params_List is a list of UiView_newRequestSession_Params.
type UiView_newRequestSession_Params_List struct{ capnp.List }

// NewUiView_newRequestSession_Params creates a new list of UiView_newRequestSession_Params.
func NewUiView_newRequestSession_Params_List(s *capnp.Segment, sz int32) (UiView_newRequestSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5}, sz)
	return UiView_newRequestSession_Params_List{l}, err
}

func (s UiView_newRequestSession_Params_List) At(i int) UiView_newRequestSession_Params {
	return UiView_newRequestSession_Params{s.List.Struct(i)}
}

func (s UiView_newRequestSession_Params_List) Set(i int, v UiView_newRequestSession_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newRequestSession_Params_List) String() string {
	str, _ := text.MarshalList(0xbc193a4219598bcb, s.List)
	return str
}

// UiView_newRequestSession_Params_Future is a wrapper for a UiView_newRequestSession_Params promised by a client call.
type UiView_newRequestSession_Params_Future struct{ *capnp.Future }

func (p UiView_newRequestSession_Params_Future) Struct() (UiView_newRequestSession_Params, error) {
	s, err := p.Future.Struct()
	return UiView_newRequestSession_Params{s}, err
}

func (p UiView_newRequestSession_Params_Future) UserInfo() identity.UserInfo_Future {
	return identity.UserInfo_Future{Future: p.Future.Field(0, nil)}
}

func (p UiView_newRequestSession_Params_Future) Context() SessionContext {
	return SessionContext{Client: p.Future.Field(1, nil).Client()}
}

func (p UiView_newRequestSession_Params_Future) SessionParams() *capnp.Future {
	return p.Future.Field(2, nil)
}

type UiView_newRequestSession_Results struct{ capnp.Struct }

// UiView_newRequestSession_Results_TypeID is the unique identifier for the type UiView_newRequestSession_Results.
const UiView_newRequestSession_Results_TypeID = 0xa22a2d1cf9579778

func NewUiView_newRequestSession_Results(s *capnp.Segment) (UiView_newRequestSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newRequestSession_Results{st}, err
}

func NewRootUiView_newRequestSession_Results(s *capnp.Segment) (UiView_newRequestSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newRequestSession_Results{st}, err
}

func ReadRootUiView_newRequestSession_Results(msg *capnp.Message) (UiView_newRequestSession_Results, error) {
	root, err := msg.Root()
	return UiView_newRequestSession_Results{root.Struct()}, err
}

func (s UiView_newRequestSession_Results) String() string {
	str, _ := text.Marshal(0xa22a2d1cf9579778, s.Struct)
	return str
}

func (s UiView_newRequestSession_Results) Session() UiSession {
	p, _ := s.Struct.Ptr(0)
	return UiSession{Client: p.Interface().Client()}
}

func (s UiView_newRequestSession_Results) HasSession() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newRequestSession_Results) SetSession(v UiSession) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// UiView_newRequestSession_Results_List is a list of UiView_newRequestSession_Results.
type UiView_newRequestSession_Results_List struct{ capnp.List }

// NewUiView_newRequestSession_Results creates a new list of UiView_newRequestSession_Results.
func NewUiView_newRequestSession_Results_List(s *capnp.Segment, sz int32) (UiView_newRequestSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return UiView_newRequestSession_Results_List{l}, err
}

func (s UiView_newRequestSession_Results_List) At(i int) UiView_newRequestSession_Results {
	return UiView_newRequestSession_Results{s.List.Struct(i)}
}

func (s UiView_newRequestSession_Results_List) Set(i int, v UiView_newRequestSession_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newRequestSession_Results_List) String() string {
	str, _ := text.MarshalList(0xa22a2d1cf9579778, s.List)
	return str
}

// UiView_newRequestSession_Results_Future is a wrapper for a UiView_newRequestSession_Results promised by a client call.
type UiView_newRequestSession_Results_Future struct{ *capnp.Future }

func (p UiView_newRequestSession_Results_Future) Struct() (UiView_newRequestSession_Results, error) {
	s, err := p.Future.Struct()
	return UiView_newRequestSession_Results{s}, err
}

func (p UiView_newRequestSession_Results_Future) Session() UiSession {
	return UiSession{Client: p.Future.Field(0, nil).Client()}
}

type UiView_newOfferSession_Params struct{ capnp.Struct }

// UiView_newOfferSession_Params_TypeID is the unique identifier for the type UiView_newOfferSession_Params.
const UiView_newOfferSession_Params_TypeID = 0xa53aedb3ce8994df

func NewUiView_newOfferSession_Params(s *capnp.Segment) (UiView_newOfferSession_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return UiView_newOfferSession_Params{st}, err
}

func NewRootUiView_newOfferSession_Params(s *capnp.Segment) (UiView_newOfferSession_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return UiView_newOfferSession_Params{st}, err
}

func ReadRootUiView_newOfferSession_Params(msg *capnp.Message) (UiView_newOfferSession_Params, error) {
	root, err := msg.Root()
	return UiView_newOfferSession_Params{root.Struct()}, err
}

func (s UiView_newOfferSession_Params) String() string {
	str, _ := text.Marshal(0xa53aedb3ce8994df, s.Struct)
	return str
}

func (s UiView_newOfferSession_Params) UserInfo() (identity.UserInfo, error) {
	p, err := s.Struct.Ptr(0)
	return identity.UserInfo{Struct: p.Struct()}, err
}

func (s UiView_newOfferSession_Params) HasUserInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newOfferSession_Params) SetUserInfo(v identity.UserInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewUserInfo sets the userInfo field to a newly
// allocated identity.UserInfo struct, preferring placement in s's segment.
func (s UiView_newOfferSession_Params) NewUserInfo() (identity.UserInfo, error) {
	ss, err := identity.NewUserInfo(s.Struct.Segment())
	if err != nil {
		return identity.UserInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s UiView_newOfferSession_Params) Context() SessionContext {
	p, _ := s.Struct.Ptr(1)
	return SessionContext{Client: p.Interface().Client()}
}

func (s UiView_newOfferSession_Params) HasContext() bool {
	return s.Struct.HasPtr(1)
}

func (s UiView_newOfferSession_Params) SetContext(v SessionContext) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

func (s UiView_newOfferSession_Params) SessionType() uint64 {
	return s.Struct.Uint64(0)
}

func (s UiView_newOfferSession_Params) SetSessionType(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s UiView_newOfferSession_Params) SessionParams() (capnp.Ptr, error) {
	return s.Struct.Ptr(2)
}

func (s UiView_newOfferSession_Params) HasSessionParams() bool {
	return s.Struct.HasPtr(2)
}

func (s UiView_newOfferSession_Params) SetSessionParams(v capnp.Ptr) error {
	return s.Struct.SetPtr(2, v)
}

func (s UiView_newOfferSession_Params) Offer() (capnp.Ptr, error) {
	return s.Struct.Ptr(3)
}

func (s UiView_newOfferSession_Params) HasOffer() bool {
	return s.Struct.HasPtr(3)
}

func (s UiView_newOfferSession_Params) SetOffer(v capnp.Ptr) error {
	return s.Struct.SetPtr(3, v)
}

func (s UiView_newOfferSession_Params) Descriptor() (powerbox.PowerboxDescriptor, error) {
	p, err := s.Struct.Ptr(4)
	return powerbox.PowerboxDescriptor{Struct: p.Struct()}, err
}

func (s UiView_newOfferSession_Params) HasDescriptor() bool {
	return s.Struct.HasPtr(4)
}

func (s UiView_newOfferSession_Params) SetDescriptor(v powerbox.PowerboxDescriptor) error {
	return s.Struct.SetPtr(4, v.Struct.ToPtr())
}

// NewDescriptor sets the descriptor field to a newly
// allocated powerbox.PowerboxDescriptor struct, preferring placement in s's segment.
func (s UiView_newOfferSession_Params) NewDescriptor() (powerbox.PowerboxDescriptor, error) {
	ss, err := powerbox.NewPowerboxDescriptor(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDescriptor{}, err
	}
	err = s.Struct.SetPtr(4, ss.Struct.ToPtr())
	return ss, err
}

func (s UiView_newOfferSession_Params) TabId() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return []byte(p.Data()), err
}

func (s UiView_newOfferSession_Params) HasTabId() bool {
	return s.Struct.HasPtr(5)
}

func (s UiView_newOfferSession_Params) SetTabId(v []byte) error {
	return s.Struct.SetData(5, v)
}

// UiView_newOfferSession_Params_List is a list of UiView_newOfferSession_Params.
type UiView_newOfferSession_Params_List struct{ capnp.List }

// NewUiView_newOfferSession_Params creates a new list of UiView_newOfferSession_Params.
func NewUiView_newOfferSession_Params_List(s *capnp.Segment, sz int32) (UiView_newOfferSession_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6}, sz)
	return UiView_newOfferSession_Params_List{l}, err
}

func (s UiView_newOfferSession_Params_List) At(i int) UiView_newOfferSession_Params {
	return UiView_newOfferSession_Params{s.List.Struct(i)}
}

func (s UiView_newOfferSession_Params_List) Set(i int, v UiView_newOfferSession_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newOfferSession_Params_List) String() string {
	str, _ := text.MarshalList(0xa53aedb3ce8994df, s.List)
	return str
}

// UiView_newOfferSession_Params_Future is a wrapper for a UiView_newOfferSession_Params promised by a client call.
type UiView_newOfferSession_Params_Future struct{ *capnp.Future }

func (p UiView_newOfferSession_Params_Future) Struct() (UiView_newOfferSession_Params, error) {
	s, err := p.Future.Struct()
	return UiView_newOfferSession_Params{s}, err
}

func (p UiView_newOfferSession_Params_Future) UserInfo() identity.UserInfo_Future {
	return identity.UserInfo_Future{Future: p.Future.Field(0, nil)}
}

func (p UiView_newOfferSession_Params_Future) Context() SessionContext {
	return SessionContext{Client: p.Future.Field(1, nil).Client()}
}

func (p UiView_newOfferSession_Params_Future) SessionParams() *capnp.Future {
	return p.Future.Field(2, nil)
}

func (p UiView_newOfferSession_Params_Future) Offer() *capnp.Future {
	return p.Future.Field(3, nil)
}

func (p UiView_newOfferSession_Params_Future) Descriptor() powerbox.PowerboxDescriptor_Future {
	return powerbox.PowerboxDescriptor_Future{Future: p.Future.Field(4, nil)}
}

type UiView_newOfferSession_Results struct{ capnp.Struct }

// UiView_newOfferSession_Results_TypeID is the unique identifier for the type UiView_newOfferSession_Results.
const UiView_newOfferSession_Results_TypeID = 0x9eb6708c01ec2079

func NewUiView_newOfferSession_Results(s *capnp.Segment) (UiView_newOfferSession_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newOfferSession_Results{st}, err
}

func NewRootUiView_newOfferSession_Results(s *capnp.Segment) (UiView_newOfferSession_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UiView_newOfferSession_Results{st}, err
}

func ReadRootUiView_newOfferSession_Results(msg *capnp.Message) (UiView_newOfferSession_Results, error) {
	root, err := msg.Root()
	return UiView_newOfferSession_Results{root.Struct()}, err
}

func (s UiView_newOfferSession_Results) String() string {
	str, _ := text.Marshal(0x9eb6708c01ec2079, s.Struct)
	return str
}

func (s UiView_newOfferSession_Results) Session() UiSession {
	p, _ := s.Struct.Ptr(0)
	return UiSession{Client: p.Interface().Client()}
}

func (s UiView_newOfferSession_Results) HasSession() bool {
	return s.Struct.HasPtr(0)
}

func (s UiView_newOfferSession_Results) SetSession(v UiSession) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// UiView_newOfferSession_Results_List is a list of UiView_newOfferSession_Results.
type UiView_newOfferSession_Results_List struct{ capnp.List }

// NewUiView_newOfferSession_Results creates a new list of UiView_newOfferSession_Results.
func NewUiView_newOfferSession_Results_List(s *capnp.Segment, sz int32) (UiView_newOfferSession_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return UiView_newOfferSession_Results_List{l}, err
}

func (s UiView_newOfferSession_Results_List) At(i int) UiView_newOfferSession_Results {
	return UiView_newOfferSession_Results{s.List.Struct(i)}
}

func (s UiView_newOfferSession_Results_List) Set(i int, v UiView_newOfferSession_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UiView_newOfferSession_Results_List) String() string {
	str, _ := text.MarshalList(0x9eb6708c01ec2079, s.List)
	return str
}

// UiView_newOfferSession_Results_Future is a wrapper for a UiView_newOfferSession_Results promised by a client call.
type UiView_newOfferSession_Results_Future struct{ *capnp.Future }

func (p UiView_newOfferSession_Results_Future) Struct() (UiView_newOfferSession_Results, error) {
	s, err := p.Future.Struct()
	return UiView_newOfferSession_Results{s}, err
}

func (p UiView_newOfferSession_Results_Future) Session() UiSession {
	return UiSession{Client: p.Future.Field(0, nil).Client()}
}

type UiSession struct{ Client *capnp.Client }

// UiSession_TypeID is the unique identifier for the type UiSession.
const UiSession_TypeID = 0xf63241ee58b5166f

// A UiSession_Server is a UiSession with a local implementation.
type UiSession_Server interface {
}

// UiSession_NewServer creates a new Server from an implementation of UiSession_Server.
func UiSession_NewServer(s UiSession_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(UiSession_Methods(nil, s), s, c, policy)
}

// UiSession_ServerToClient creates a new Client from an implementation of UiSession_Server.
// The caller is responsible for calling Release on the returned Client.
func UiSession_ServerToClient(s UiSession_Server, policy *server.Policy) UiSession {
	return UiSession{Client: capnp.NewClient(UiSession_NewServer(s, policy))}
}

// UiSession_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func UiSession_Methods(methods []server.Method, s UiSession_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 0)
	}

	return methods
}

type SessionContext struct{ Client *capnp.Client }

// SessionContext_TypeID is the unique identifier for the type SessionContext.
const SessionContext_TypeID = 0xbf3e401d5a63f336

func (c SessionContext) GetSharedPermissions(ctx context.Context, params func(SessionContext_getSharedPermissions_Params) error) (SessionContext_getSharedPermissions_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      0,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "getSharedPermissions",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_getSharedPermissions_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_getSharedPermissions_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) TieToUser(ctx context.Context, params func(SessionContext_tieToUser_Params) error) (SessionContext_tieToUser_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      1,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "tieToUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_tieToUser_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_tieToUser_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) Offer(ctx context.Context, params func(SessionContext_offer_Params) error) (SessionContext_offer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      2,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "offer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_offer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_offer_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) Request(ctx context.Context, params func(SessionContext_request_Params) error) (SessionContext_request_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      3,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "request",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_request_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_request_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) FulfillRequest(ctx context.Context, params func(SessionContext_fulfillRequest_Params) error) (SessionContext_fulfillRequest_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      4,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "fulfillRequest",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_fulfillRequest_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_fulfillRequest_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) Close(ctx context.Context, params func(SessionContext_close_Params) error) (SessionContext_close_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      5,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "close",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_close_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_close_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) OpenView(ctx context.Context, params func(SessionContext_openView_Params) error) (SessionContext_openView_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      6,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "openView",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_openView_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_openView_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) ClaimRequest(ctx context.Context, params func(SessionContext_claimRequest_Params) error) (SessionContext_claimRequest_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      7,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "claimRequest",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_claimRequest_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_claimRequest_Results_Future{Future: ans.Future()}, release
}
func (c SessionContext) Activity(ctx context.Context, params func(SessionContext_activity_Params) error) (SessionContext_activity_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      8,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "activity",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SessionContext_activity_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SessionContext_activity_Results_Future{Future: ans.Future()}, release
}

// A SessionContext_Server is a SessionContext with a local implementation.
type SessionContext_Server interface {
	GetSharedPermissions(context.Context, SessionContext_getSharedPermissions) error

	TieToUser(context.Context, SessionContext_tieToUser) error

	Offer(context.Context, SessionContext_offer) error

	Request(context.Context, SessionContext_request) error

	FulfillRequest(context.Context, SessionContext_fulfillRequest) error

	Close(context.Context, SessionContext_close) error

	OpenView(context.Context, SessionContext_openView) error

	ClaimRequest(context.Context, SessionContext_claimRequest) error

	Activity(context.Context, SessionContext_activity) error
}

// SessionContext_NewServer creates a new Server from an implementation of SessionContext_Server.
func SessionContext_NewServer(s SessionContext_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(SessionContext_Methods(nil, s), s, c, policy)
}

// SessionContext_ServerToClient creates a new Client from an implementation of SessionContext_Server.
// The caller is responsible for calling Release on the returned Client.
func SessionContext_ServerToClient(s SessionContext_Server, policy *server.Policy) SessionContext {
	return SessionContext{Client: capnp.NewClient(SessionContext_NewServer(s, policy))}
}

// SessionContext_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func SessionContext_Methods(methods []server.Method, s SessionContext_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 9)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      0,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "getSharedPermissions",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSharedPermissions(ctx, SessionContext_getSharedPermissions{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      1,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "tieToUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.TieToUser(ctx, SessionContext_tieToUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      2,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "offer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Offer(ctx, SessionContext_offer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      3,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "request",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Request(ctx, SessionContext_request{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      4,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "fulfillRequest",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.FulfillRequest(ctx, SessionContext_fulfillRequest{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      5,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "close",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Close(ctx, SessionContext_close{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      6,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "openView",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OpenView(ctx, SessionContext_openView{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      7,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "claimRequest",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ClaimRequest(ctx, SessionContext_claimRequest{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      8,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "activity",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Activity(ctx, SessionContext_activity{call})
		},
	})

	return methods
}

// SessionContext_getSharedPermissions holds the state for a server call to SessionContext.getSharedPermissions.
// See server.Call for documentation.
type SessionContext_getSharedPermissions struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_getSharedPermissions) Args() SessionContext_getSharedPermissions_Params {
	return SessionContext_getSharedPermissions_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_getSharedPermissions) AllocResults() (SessionContext_getSharedPermissions_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_getSharedPermissions_Results{Struct: r}, err
}

// SessionContext_tieToUser holds the state for a server call to SessionContext.tieToUser.
// See server.Call for documentation.
type SessionContext_tieToUser struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_tieToUser) Args() SessionContext_tieToUser_Params {
	return SessionContext_tieToUser_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_tieToUser) AllocResults() (SessionContext_tieToUser_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_tieToUser_Results{Struct: r}, err
}

// SessionContext_offer holds the state for a server call to SessionContext.offer.
// See server.Call for documentation.
type SessionContext_offer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_offer) Args() SessionContext_offer_Params {
	return SessionContext_offer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_offer) AllocResults() (SessionContext_offer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_offer_Results{Struct: r}, err
}

// SessionContext_request holds the state for a server call to SessionContext.request.
// See server.Call for documentation.
type SessionContext_request struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_request) Args() SessionContext_request_Params {
	return SessionContext_request_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_request) AllocResults() (SessionContext_request_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_request_Results{Struct: r}, err
}

// SessionContext_fulfillRequest holds the state for a server call to SessionContext.fulfillRequest.
// See server.Call for documentation.
type SessionContext_fulfillRequest struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_fulfillRequest) Args() SessionContext_fulfillRequest_Params {
	return SessionContext_fulfillRequest_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_fulfillRequest) AllocResults() (SessionContext_fulfillRequest_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_fulfillRequest_Results{Struct: r}, err
}

// SessionContext_close holds the state for a server call to SessionContext.close.
// See server.Call for documentation.
type SessionContext_close struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_close) Args() SessionContext_close_Params {
	return SessionContext_close_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_close) AllocResults() (SessionContext_close_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_close_Results{Struct: r}, err
}

// SessionContext_openView holds the state for a server call to SessionContext.openView.
// See server.Call for documentation.
type SessionContext_openView struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_openView) Args() SessionContext_openView_Params {
	return SessionContext_openView_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_openView) AllocResults() (SessionContext_openView_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_openView_Results{Struct: r}, err
}

// SessionContext_claimRequest holds the state for a server call to SessionContext.claimRequest.
// See server.Call for documentation.
type SessionContext_claimRequest struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_claimRequest) Args() SessionContext_claimRequest_Params {
	return SessionContext_claimRequest_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_claimRequest) AllocResults() (SessionContext_claimRequest_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_claimRequest_Results{Struct: r}, err
}

// SessionContext_activity holds the state for a server call to SessionContext.activity.
// See server.Call for documentation.
type SessionContext_activity struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SessionContext_activity) Args() SessionContext_activity_Params {
	return SessionContext_activity_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SessionContext_activity) AllocResults() (SessionContext_activity_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_activity_Results{Struct: r}, err
}

type SessionContext_getSharedPermissions_Params struct{ capnp.Struct }

// SessionContext_getSharedPermissions_Params_TypeID is the unique identifier for the type SessionContext_getSharedPermissions_Params.
const SessionContext_getSharedPermissions_Params_TypeID = 0xe96859cf77da6e6b

func NewSessionContext_getSharedPermissions_Params(s *capnp.Segment) (SessionContext_getSharedPermissions_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_getSharedPermissions_Params{st}, err
}

func NewRootSessionContext_getSharedPermissions_Params(s *capnp.Segment) (SessionContext_getSharedPermissions_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_getSharedPermissions_Params{st}, err
}

func ReadRootSessionContext_getSharedPermissions_Params(msg *capnp.Message) (SessionContext_getSharedPermissions_Params, error) {
	root, err := msg.Root()
	return SessionContext_getSharedPermissions_Params{root.Struct()}, err
}

func (s SessionContext_getSharedPermissions_Params) String() string {
	str, _ := text.Marshal(0xe96859cf77da6e6b, s.Struct)
	return str
}

// SessionContext_getSharedPermissions_Params_List is a list of SessionContext_getSharedPermissions_Params.
type SessionContext_getSharedPermissions_Params_List struct{ capnp.List }

// NewSessionContext_getSharedPermissions_Params creates a new list of SessionContext_getSharedPermissions_Params.
func NewSessionContext_getSharedPermissions_Params_List(s *capnp.Segment, sz int32) (SessionContext_getSharedPermissions_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_getSharedPermissions_Params_List{l}, err
}

func (s SessionContext_getSharedPermissions_Params_List) At(i int) SessionContext_getSharedPermissions_Params {
	return SessionContext_getSharedPermissions_Params{s.List.Struct(i)}
}

func (s SessionContext_getSharedPermissions_Params_List) Set(i int, v SessionContext_getSharedPermissions_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_getSharedPermissions_Params_List) String() string {
	str, _ := text.MarshalList(0xe96859cf77da6e6b, s.List)
	return str
}

// SessionContext_getSharedPermissions_Params_Future is a wrapper for a SessionContext_getSharedPermissions_Params promised by a client call.
type SessionContext_getSharedPermissions_Params_Future struct{ *capnp.Future }

func (p SessionContext_getSharedPermissions_Params_Future) Struct() (SessionContext_getSharedPermissions_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_getSharedPermissions_Params{s}, err
}

type SessionContext_getSharedPermissions_Results struct{ capnp.Struct }

// SessionContext_getSharedPermissions_Results_TypeID is the unique identifier for the type SessionContext_getSharedPermissions_Results.
const SessionContext_getSharedPermissions_Results_TypeID = 0xb70bd877cecb7b88

func NewSessionContext_getSharedPermissions_Results(s *capnp.Segment) (SessionContext_getSharedPermissions_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_getSharedPermissions_Results{st}, err
}

func NewRootSessionContext_getSharedPermissions_Results(s *capnp.Segment) (SessionContext_getSharedPermissions_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_getSharedPermissions_Results{st}, err
}

func ReadRootSessionContext_getSharedPermissions_Results(msg *capnp.Message) (SessionContext_getSharedPermissions_Results, error) {
	root, err := msg.Root()
	return SessionContext_getSharedPermissions_Results{root.Struct()}, err
}

func (s SessionContext_getSharedPermissions_Results) String() string {
	str, _ := text.Marshal(0xb70bd877cecb7b88, s.Struct)
	return str
}

func (s SessionContext_getSharedPermissions_Results) Var() util.Assignable_Getter {
	p, _ := s.Struct.Ptr(0)
	return util.Assignable_Getter{Client: p.Interface().Client()}
}

func (s SessionContext_getSharedPermissions_Results) HasVar() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_getSharedPermissions_Results) SetVar(v util.Assignable_Getter) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SessionContext_getSharedPermissions_Results_List is a list of SessionContext_getSharedPermissions_Results.
type SessionContext_getSharedPermissions_Results_List struct{ capnp.List }

// NewSessionContext_getSharedPermissions_Results creates a new list of SessionContext_getSharedPermissions_Results.
func NewSessionContext_getSharedPermissions_Results_List(s *capnp.Segment, sz int32) (SessionContext_getSharedPermissions_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SessionContext_getSharedPermissions_Results_List{l}, err
}

func (s SessionContext_getSharedPermissions_Results_List) At(i int) SessionContext_getSharedPermissions_Results {
	return SessionContext_getSharedPermissions_Results{s.List.Struct(i)}
}

func (s SessionContext_getSharedPermissions_Results_List) Set(i int, v SessionContext_getSharedPermissions_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_getSharedPermissions_Results_List) String() string {
	str, _ := text.MarshalList(0xb70bd877cecb7b88, s.List)
	return str
}

// SessionContext_getSharedPermissions_Results_Future is a wrapper for a SessionContext_getSharedPermissions_Results promised by a client call.
type SessionContext_getSharedPermissions_Results_Future struct{ *capnp.Future }

func (p SessionContext_getSharedPermissions_Results_Future) Struct() (SessionContext_getSharedPermissions_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_getSharedPermissions_Results{s}, err
}

func (p SessionContext_getSharedPermissions_Results_Future) Var() util.Assignable_Getter {
	return util.Assignable_Getter{Client: p.Future.Field(0, nil).Client()}
}

type SessionContext_tieToUser_Params struct{ capnp.Struct }

// SessionContext_tieToUser_Params_TypeID is the unique identifier for the type SessionContext_tieToUser_Params.
const SessionContext_tieToUser_Params_TypeID = 0xc41e71e8d893086c

func NewSessionContext_tieToUser_Params(s *capnp.Segment) (SessionContext_tieToUser_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return SessionContext_tieToUser_Params{st}, err
}

func NewRootSessionContext_tieToUser_Params(s *capnp.Segment) (SessionContext_tieToUser_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return SessionContext_tieToUser_Params{st}, err
}

func ReadRootSessionContext_tieToUser_Params(msg *capnp.Message) (SessionContext_tieToUser_Params, error) {
	root, err := msg.Root()
	return SessionContext_tieToUser_Params{root.Struct()}, err
}

func (s SessionContext_tieToUser_Params) String() string {
	str, _ := text.Marshal(0xc41e71e8d893086c, s.Struct)
	return str
}

func (s SessionContext_tieToUser_Params) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_tieToUser_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_tieToUser_Params) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SessionContext_tieToUser_Params) RequiredPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s SessionContext_tieToUser_Params) HasRequiredPermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_tieToUser_Params) SetRequiredPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRequiredPermissions sets the requiredPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s SessionContext_tieToUser_Params) NewRequiredPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s SessionContext_tieToUser_Params) DisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	p, err := s.Struct.Ptr(2)
	return powerbox.PowerboxDisplayInfo{Struct: p.Struct()}, err
}

func (s SessionContext_tieToUser_Params) HasDisplayInfo() bool {
	return s.Struct.HasPtr(2)
}

func (s SessionContext_tieToUser_Params) SetDisplayInfo(v powerbox.PowerboxDisplayInfo) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewDisplayInfo sets the displayInfo field to a newly
// allocated powerbox.PowerboxDisplayInfo struct, preferring placement in s's segment.
func (s SessionContext_tieToUser_Params) NewDisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	ss, err := powerbox.NewPowerboxDisplayInfo(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDisplayInfo{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

// SessionContext_tieToUser_Params_List is a list of SessionContext_tieToUser_Params.
type SessionContext_tieToUser_Params_List struct{ capnp.List }

// NewSessionContext_tieToUser_Params creates a new list of SessionContext_tieToUser_Params.
func NewSessionContext_tieToUser_Params_List(s *capnp.Segment, sz int32) (SessionContext_tieToUser_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return SessionContext_tieToUser_Params_List{l}, err
}

func (s SessionContext_tieToUser_Params_List) At(i int) SessionContext_tieToUser_Params {
	return SessionContext_tieToUser_Params{s.List.Struct(i)}
}

func (s SessionContext_tieToUser_Params_List) Set(i int, v SessionContext_tieToUser_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_tieToUser_Params_List) String() string {
	str, _ := text.MarshalList(0xc41e71e8d893086c, s.List)
	return str
}

// SessionContext_tieToUser_Params_Future is a wrapper for a SessionContext_tieToUser_Params promised by a client call.
type SessionContext_tieToUser_Params_Future struct{ *capnp.Future }

func (p SessionContext_tieToUser_Params_Future) Struct() (SessionContext_tieToUser_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_tieToUser_Params{s}, err
}

func (p SessionContext_tieToUser_Params_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SessionContext_tieToUser_Params_Future) DisplayInfo() powerbox.PowerboxDisplayInfo_Future {
	return powerbox.PowerboxDisplayInfo_Future{Future: p.Future.Field(2, nil)}
}

type SessionContext_tieToUser_Results struct{ capnp.Struct }

// SessionContext_tieToUser_Results_TypeID is the unique identifier for the type SessionContext_tieToUser_Results.
const SessionContext_tieToUser_Results_TypeID = 0xf6f911c4804ba7e5

func NewSessionContext_tieToUser_Results(s *capnp.Segment) (SessionContext_tieToUser_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_tieToUser_Results{st}, err
}

func NewRootSessionContext_tieToUser_Results(s *capnp.Segment) (SessionContext_tieToUser_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_tieToUser_Results{st}, err
}

func ReadRootSessionContext_tieToUser_Results(msg *capnp.Message) (SessionContext_tieToUser_Results, error) {
	root, err := msg.Root()
	return SessionContext_tieToUser_Results{root.Struct()}, err
}

func (s SessionContext_tieToUser_Results) String() string {
	str, _ := text.Marshal(0xf6f911c4804ba7e5, s.Struct)
	return str
}

func (s SessionContext_tieToUser_Results) TiedCap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_tieToUser_Results) HasTiedCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_tieToUser_Results) SetTiedCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// SessionContext_tieToUser_Results_List is a list of SessionContext_tieToUser_Results.
type SessionContext_tieToUser_Results_List struct{ capnp.List }

// NewSessionContext_tieToUser_Results creates a new list of SessionContext_tieToUser_Results.
func NewSessionContext_tieToUser_Results_List(s *capnp.Segment, sz int32) (SessionContext_tieToUser_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SessionContext_tieToUser_Results_List{l}, err
}

func (s SessionContext_tieToUser_Results_List) At(i int) SessionContext_tieToUser_Results {
	return SessionContext_tieToUser_Results{s.List.Struct(i)}
}

func (s SessionContext_tieToUser_Results_List) Set(i int, v SessionContext_tieToUser_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_tieToUser_Results_List) String() string {
	str, _ := text.MarshalList(0xf6f911c4804ba7e5, s.List)
	return str
}

// SessionContext_tieToUser_Results_Future is a wrapper for a SessionContext_tieToUser_Results promised by a client call.
type SessionContext_tieToUser_Results_Future struct{ *capnp.Future }

func (p SessionContext_tieToUser_Results_Future) Struct() (SessionContext_tieToUser_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_tieToUser_Results{s}, err
}

func (p SessionContext_tieToUser_Results_Future) TiedCap() *capnp.Future {
	return p.Future.Field(0, nil)
}

type SessionContext_offer_Params struct{ capnp.Struct }

// SessionContext_offer_Params_TypeID is the unique identifier for the type SessionContext_offer_Params.
const SessionContext_offer_Params_TypeID = 0xfb3d38da0c9eaee6

func NewSessionContext_offer_Params(s *capnp.Segment) (SessionContext_offer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SessionContext_offer_Params{st}, err
}

func NewRootSessionContext_offer_Params(s *capnp.Segment) (SessionContext_offer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SessionContext_offer_Params{st}, err
}

func ReadRootSessionContext_offer_Params(msg *capnp.Message) (SessionContext_offer_Params, error) {
	root, err := msg.Root()
	return SessionContext_offer_Params{root.Struct()}, err
}

func (s SessionContext_offer_Params) String() string {
	str, _ := text.Marshal(0xfb3d38da0c9eaee6, s.Struct)
	return str
}

func (s SessionContext_offer_Params) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_offer_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_offer_Params) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SessionContext_offer_Params) RequiredPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s SessionContext_offer_Params) HasRequiredPermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_offer_Params) SetRequiredPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRequiredPermissions sets the requiredPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s SessionContext_offer_Params) NewRequiredPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s SessionContext_offer_Params) Descriptor() (powerbox.PowerboxDescriptor, error) {
	p, err := s.Struct.Ptr(2)
	return powerbox.PowerboxDescriptor{Struct: p.Struct()}, err
}

func (s SessionContext_offer_Params) HasDescriptor() bool {
	return s.Struct.HasPtr(2)
}

func (s SessionContext_offer_Params) SetDescriptor(v powerbox.PowerboxDescriptor) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewDescriptor sets the descriptor field to a newly
// allocated powerbox.PowerboxDescriptor struct, preferring placement in s's segment.
func (s SessionContext_offer_Params) NewDescriptor() (powerbox.PowerboxDescriptor, error) {
	ss, err := powerbox.NewPowerboxDescriptor(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDescriptor{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s SessionContext_offer_Params) DisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	p, err := s.Struct.Ptr(3)
	return powerbox.PowerboxDisplayInfo{Struct: p.Struct()}, err
}

func (s SessionContext_offer_Params) HasDisplayInfo() bool {
	return s.Struct.HasPtr(3)
}

func (s SessionContext_offer_Params) SetDisplayInfo(v powerbox.PowerboxDisplayInfo) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewDisplayInfo sets the displayInfo field to a newly
// allocated powerbox.PowerboxDisplayInfo struct, preferring placement in s's segment.
func (s SessionContext_offer_Params) NewDisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	ss, err := powerbox.NewPowerboxDisplayInfo(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDisplayInfo{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

// SessionContext_offer_Params_List is a list of SessionContext_offer_Params.
type SessionContext_offer_Params_List struct{ capnp.List }

// NewSessionContext_offer_Params creates a new list of SessionContext_offer_Params.
func NewSessionContext_offer_Params_List(s *capnp.Segment, sz int32) (SessionContext_offer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return SessionContext_offer_Params_List{l}, err
}

func (s SessionContext_offer_Params_List) At(i int) SessionContext_offer_Params {
	return SessionContext_offer_Params{s.List.Struct(i)}
}

func (s SessionContext_offer_Params_List) Set(i int, v SessionContext_offer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_offer_Params_List) String() string {
	str, _ := text.MarshalList(0xfb3d38da0c9eaee6, s.List)
	return str
}

// SessionContext_offer_Params_Future is a wrapper for a SessionContext_offer_Params promised by a client call.
type SessionContext_offer_Params_Future struct{ *capnp.Future }

func (p SessionContext_offer_Params_Future) Struct() (SessionContext_offer_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_offer_Params{s}, err
}

func (p SessionContext_offer_Params_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SessionContext_offer_Params_Future) Descriptor() powerbox.PowerboxDescriptor_Future {
	return powerbox.PowerboxDescriptor_Future{Future: p.Future.Field(2, nil)}
}

func (p SessionContext_offer_Params_Future) DisplayInfo() powerbox.PowerboxDisplayInfo_Future {
	return powerbox.PowerboxDisplayInfo_Future{Future: p.Future.Field(3, nil)}
}

type SessionContext_offer_Results struct{ capnp.Struct }

// SessionContext_offer_Results_TypeID is the unique identifier for the type SessionContext_offer_Results.
const SessionContext_offer_Results_TypeID = 0xfe7135f15d39bd5b

func NewSessionContext_offer_Results(s *capnp.Segment) (SessionContext_offer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_offer_Results{st}, err
}

func NewRootSessionContext_offer_Results(s *capnp.Segment) (SessionContext_offer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_offer_Results{st}, err
}

func ReadRootSessionContext_offer_Results(msg *capnp.Message) (SessionContext_offer_Results, error) {
	root, err := msg.Root()
	return SessionContext_offer_Results{root.Struct()}, err
}

func (s SessionContext_offer_Results) String() string {
	str, _ := text.Marshal(0xfe7135f15d39bd5b, s.Struct)
	return str
}

// SessionContext_offer_Results_List is a list of SessionContext_offer_Results.
type SessionContext_offer_Results_List struct{ capnp.List }

// NewSessionContext_offer_Results creates a new list of SessionContext_offer_Results.
func NewSessionContext_offer_Results_List(s *capnp.Segment, sz int32) (SessionContext_offer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_offer_Results_List{l}, err
}

func (s SessionContext_offer_Results_List) At(i int) SessionContext_offer_Results {
	return SessionContext_offer_Results{s.List.Struct(i)}
}

func (s SessionContext_offer_Results_List) Set(i int, v SessionContext_offer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_offer_Results_List) String() string {
	str, _ := text.MarshalList(0xfe7135f15d39bd5b, s.List)
	return str
}

// SessionContext_offer_Results_Future is a wrapper for a SessionContext_offer_Results promised by a client call.
type SessionContext_offer_Results_Future struct{ *capnp.Future }

func (p SessionContext_offer_Results_Future) Struct() (SessionContext_offer_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_offer_Results{s}, err
}

type SessionContext_request_Params struct{ capnp.Struct }

// SessionContext_request_Params_TypeID is the unique identifier for the type SessionContext_request_Params.
const SessionContext_request_Params_TypeID = 0xf63b8546288ee8e1

func NewSessionContext_request_Params(s *capnp.Segment) (SessionContext_request_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_request_Params{st}, err
}

func NewRootSessionContext_request_Params(s *capnp.Segment) (SessionContext_request_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_request_Params{st}, err
}

func ReadRootSessionContext_request_Params(msg *capnp.Message) (SessionContext_request_Params, error) {
	root, err := msg.Root()
	return SessionContext_request_Params{root.Struct()}, err
}

func (s SessionContext_request_Params) String() string {
	str, _ := text.Marshal(0xf63b8546288ee8e1, s.Struct)
	return str
}

func (s SessionContext_request_Params) Query() (powerbox.PowerboxDescriptor_List, error) {
	p, err := s.Struct.Ptr(0)
	return powerbox.PowerboxDescriptor_List{List: p.List()}, err
}

func (s SessionContext_request_Params) HasQuery() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_request_Params) SetQuery(v powerbox.PowerboxDescriptor_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewQuery sets the query field to a newly
// allocated powerbox.PowerboxDescriptor_List, preferring placement in s's segment.
func (s SessionContext_request_Params) NewQuery(n int32) (powerbox.PowerboxDescriptor_List, error) {
	l, err := powerbox.NewPowerboxDescriptor_List(s.Struct.Segment(), n)
	if err != nil {
		return powerbox.PowerboxDescriptor_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s SessionContext_request_Params) RequiredPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s SessionContext_request_Params) HasRequiredPermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_request_Params) SetRequiredPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRequiredPermissions sets the requiredPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s SessionContext_request_Params) NewRequiredPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// SessionContext_request_Params_List is a list of SessionContext_request_Params.
type SessionContext_request_Params_List struct{ capnp.List }

// NewSessionContext_request_Params creates a new list of SessionContext_request_Params.
func NewSessionContext_request_Params_List(s *capnp.Segment, sz int32) (SessionContext_request_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SessionContext_request_Params_List{l}, err
}

func (s SessionContext_request_Params_List) At(i int) SessionContext_request_Params {
	return SessionContext_request_Params{s.List.Struct(i)}
}

func (s SessionContext_request_Params_List) Set(i int, v SessionContext_request_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_request_Params_List) String() string {
	str, _ := text.MarshalList(0xf63b8546288ee8e1, s.List)
	return str
}

// SessionContext_request_Params_Future is a wrapper for a SessionContext_request_Params promised by a client call.
type SessionContext_request_Params_Future struct{ *capnp.Future }

func (p SessionContext_request_Params_Future) Struct() (SessionContext_request_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_request_Params{s}, err
}

type SessionContext_request_Results struct{ capnp.Struct }

// SessionContext_request_Results_TypeID is the unique identifier for the type SessionContext_request_Results.
const SessionContext_request_Results_TypeID = 0xd42684f756e09afd

func NewSessionContext_request_Results(s *capnp.Segment) (SessionContext_request_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_request_Results{st}, err
}

func NewRootSessionContext_request_Results(s *capnp.Segment) (SessionContext_request_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_request_Results{st}, err
}

func ReadRootSessionContext_request_Results(msg *capnp.Message) (SessionContext_request_Results, error) {
	root, err := msg.Root()
	return SessionContext_request_Results{root.Struct()}, err
}

func (s SessionContext_request_Results) String() string {
	str, _ := text.Marshal(0xd42684f756e09afd, s.Struct)
	return str
}

func (s SessionContext_request_Results) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_request_Results) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_request_Results) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SessionContext_request_Results) Descriptor() (powerbox.PowerboxDescriptor, error) {
	p, err := s.Struct.Ptr(1)
	return powerbox.PowerboxDescriptor{Struct: p.Struct()}, err
}

func (s SessionContext_request_Results) HasDescriptor() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_request_Results) SetDescriptor(v powerbox.PowerboxDescriptor) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDescriptor sets the descriptor field to a newly
// allocated powerbox.PowerboxDescriptor struct, preferring placement in s's segment.
func (s SessionContext_request_Results) NewDescriptor() (powerbox.PowerboxDescriptor, error) {
	ss, err := powerbox.NewPowerboxDescriptor(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDescriptor{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// SessionContext_request_Results_List is a list of SessionContext_request_Results.
type SessionContext_request_Results_List struct{ capnp.List }

// NewSessionContext_request_Results creates a new list of SessionContext_request_Results.
func NewSessionContext_request_Results_List(s *capnp.Segment, sz int32) (SessionContext_request_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SessionContext_request_Results_List{l}, err
}

func (s SessionContext_request_Results_List) At(i int) SessionContext_request_Results {
	return SessionContext_request_Results{s.List.Struct(i)}
}

func (s SessionContext_request_Results_List) Set(i int, v SessionContext_request_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_request_Results_List) String() string {
	str, _ := text.MarshalList(0xd42684f756e09afd, s.List)
	return str
}

// SessionContext_request_Results_Future is a wrapper for a SessionContext_request_Results promised by a client call.
type SessionContext_request_Results_Future struct{ *capnp.Future }

func (p SessionContext_request_Results_Future) Struct() (SessionContext_request_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_request_Results{s}, err
}

func (p SessionContext_request_Results_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SessionContext_request_Results_Future) Descriptor() powerbox.PowerboxDescriptor_Future {
	return powerbox.PowerboxDescriptor_Future{Future: p.Future.Field(1, nil)}
}

type SessionContext_fulfillRequest_Params struct{ capnp.Struct }

// SessionContext_fulfillRequest_Params_TypeID is the unique identifier for the type SessionContext_fulfillRequest_Params.
const SessionContext_fulfillRequest_Params_TypeID = 0x9f6c36ef490dfd92

func NewSessionContext_fulfillRequest_Params(s *capnp.Segment) (SessionContext_fulfillRequest_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SessionContext_fulfillRequest_Params{st}, err
}

func NewRootSessionContext_fulfillRequest_Params(s *capnp.Segment) (SessionContext_fulfillRequest_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SessionContext_fulfillRequest_Params{st}, err
}

func ReadRootSessionContext_fulfillRequest_Params(msg *capnp.Message) (SessionContext_fulfillRequest_Params, error) {
	root, err := msg.Root()
	return SessionContext_fulfillRequest_Params{root.Struct()}, err
}

func (s SessionContext_fulfillRequest_Params) String() string {
	str, _ := text.Marshal(0x9f6c36ef490dfd92, s.Struct)
	return str
}

func (s SessionContext_fulfillRequest_Params) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_fulfillRequest_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_fulfillRequest_Params) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s SessionContext_fulfillRequest_Params) RequiredPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s SessionContext_fulfillRequest_Params) HasRequiredPermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_fulfillRequest_Params) SetRequiredPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRequiredPermissions sets the requiredPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s SessionContext_fulfillRequest_Params) NewRequiredPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s SessionContext_fulfillRequest_Params) Descriptor() (powerbox.PowerboxDescriptor, error) {
	p, err := s.Struct.Ptr(2)
	return powerbox.PowerboxDescriptor{Struct: p.Struct()}, err
}

func (s SessionContext_fulfillRequest_Params) HasDescriptor() bool {
	return s.Struct.HasPtr(2)
}

func (s SessionContext_fulfillRequest_Params) SetDescriptor(v powerbox.PowerboxDescriptor) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewDescriptor sets the descriptor field to a newly
// allocated powerbox.PowerboxDescriptor struct, preferring placement in s's segment.
func (s SessionContext_fulfillRequest_Params) NewDescriptor() (powerbox.PowerboxDescriptor, error) {
	ss, err := powerbox.NewPowerboxDescriptor(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDescriptor{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s SessionContext_fulfillRequest_Params) DisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	p, err := s.Struct.Ptr(3)
	return powerbox.PowerboxDisplayInfo{Struct: p.Struct()}, err
}

func (s SessionContext_fulfillRequest_Params) HasDisplayInfo() bool {
	return s.Struct.HasPtr(3)
}

func (s SessionContext_fulfillRequest_Params) SetDisplayInfo(v powerbox.PowerboxDisplayInfo) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewDisplayInfo sets the displayInfo field to a newly
// allocated powerbox.PowerboxDisplayInfo struct, preferring placement in s's segment.
func (s SessionContext_fulfillRequest_Params) NewDisplayInfo() (powerbox.PowerboxDisplayInfo, error) {
	ss, err := powerbox.NewPowerboxDisplayInfo(s.Struct.Segment())
	if err != nil {
		return powerbox.PowerboxDisplayInfo{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

// SessionContext_fulfillRequest_Params_List is a list of SessionContext_fulfillRequest_Params.
type SessionContext_fulfillRequest_Params_List struct{ capnp.List }

// NewSessionContext_fulfillRequest_Params creates a new list of SessionContext_fulfillRequest_Params.
func NewSessionContext_fulfillRequest_Params_List(s *capnp.Segment, sz int32) (SessionContext_fulfillRequest_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return SessionContext_fulfillRequest_Params_List{l}, err
}

func (s SessionContext_fulfillRequest_Params_List) At(i int) SessionContext_fulfillRequest_Params {
	return SessionContext_fulfillRequest_Params{s.List.Struct(i)}
}

func (s SessionContext_fulfillRequest_Params_List) Set(i int, v SessionContext_fulfillRequest_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_fulfillRequest_Params_List) String() string {
	str, _ := text.MarshalList(0x9f6c36ef490dfd92, s.List)
	return str
}

// SessionContext_fulfillRequest_Params_Future is a wrapper for a SessionContext_fulfillRequest_Params promised by a client call.
type SessionContext_fulfillRequest_Params_Future struct{ *capnp.Future }

func (p SessionContext_fulfillRequest_Params_Future) Struct() (SessionContext_fulfillRequest_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_fulfillRequest_Params{s}, err
}

func (p SessionContext_fulfillRequest_Params_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p SessionContext_fulfillRequest_Params_Future) Descriptor() powerbox.PowerboxDescriptor_Future {
	return powerbox.PowerboxDescriptor_Future{Future: p.Future.Field(2, nil)}
}

func (p SessionContext_fulfillRequest_Params_Future) DisplayInfo() powerbox.PowerboxDisplayInfo_Future {
	return powerbox.PowerboxDisplayInfo_Future{Future: p.Future.Field(3, nil)}
}

type SessionContext_fulfillRequest_Results struct{ capnp.Struct }

// SessionContext_fulfillRequest_Results_TypeID is the unique identifier for the type SessionContext_fulfillRequest_Results.
const SessionContext_fulfillRequest_Results_TypeID = 0xb4ecd69ac97e2de8

func NewSessionContext_fulfillRequest_Results(s *capnp.Segment) (SessionContext_fulfillRequest_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_fulfillRequest_Results{st}, err
}

func NewRootSessionContext_fulfillRequest_Results(s *capnp.Segment) (SessionContext_fulfillRequest_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_fulfillRequest_Results{st}, err
}

func ReadRootSessionContext_fulfillRequest_Results(msg *capnp.Message) (SessionContext_fulfillRequest_Results, error) {
	root, err := msg.Root()
	return SessionContext_fulfillRequest_Results{root.Struct()}, err
}

func (s SessionContext_fulfillRequest_Results) String() string {
	str, _ := text.Marshal(0xb4ecd69ac97e2de8, s.Struct)
	return str
}

// SessionContext_fulfillRequest_Results_List is a list of SessionContext_fulfillRequest_Results.
type SessionContext_fulfillRequest_Results_List struct{ capnp.List }

// NewSessionContext_fulfillRequest_Results creates a new list of SessionContext_fulfillRequest_Results.
func NewSessionContext_fulfillRequest_Results_List(s *capnp.Segment, sz int32) (SessionContext_fulfillRequest_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_fulfillRequest_Results_List{l}, err
}

func (s SessionContext_fulfillRequest_Results_List) At(i int) SessionContext_fulfillRequest_Results {
	return SessionContext_fulfillRequest_Results{s.List.Struct(i)}
}

func (s SessionContext_fulfillRequest_Results_List) Set(i int, v SessionContext_fulfillRequest_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_fulfillRequest_Results_List) String() string {
	str, _ := text.MarshalList(0xb4ecd69ac97e2de8, s.List)
	return str
}

// SessionContext_fulfillRequest_Results_Future is a wrapper for a SessionContext_fulfillRequest_Results promised by a client call.
type SessionContext_fulfillRequest_Results_Future struct{ *capnp.Future }

func (p SessionContext_fulfillRequest_Results_Future) Struct() (SessionContext_fulfillRequest_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_fulfillRequest_Results{s}, err
}

type SessionContext_close_Params struct{ capnp.Struct }

// SessionContext_close_Params_TypeID is the unique identifier for the type SessionContext_close_Params.
const SessionContext_close_Params_TypeID = 0xf12c60ebc67984d4

func NewSessionContext_close_Params(s *capnp.Segment) (SessionContext_close_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_close_Params{st}, err
}

func NewRootSessionContext_close_Params(s *capnp.Segment) (SessionContext_close_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_close_Params{st}, err
}

func ReadRootSessionContext_close_Params(msg *capnp.Message) (SessionContext_close_Params, error) {
	root, err := msg.Root()
	return SessionContext_close_Params{root.Struct()}, err
}

func (s SessionContext_close_Params) String() string {
	str, _ := text.Marshal(0xf12c60ebc67984d4, s.Struct)
	return str
}

// SessionContext_close_Params_List is a list of SessionContext_close_Params.
type SessionContext_close_Params_List struct{ capnp.List }

// NewSessionContext_close_Params creates a new list of SessionContext_close_Params.
func NewSessionContext_close_Params_List(s *capnp.Segment, sz int32) (SessionContext_close_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_close_Params_List{l}, err
}

func (s SessionContext_close_Params_List) At(i int) SessionContext_close_Params {
	return SessionContext_close_Params{s.List.Struct(i)}
}

func (s SessionContext_close_Params_List) Set(i int, v SessionContext_close_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_close_Params_List) String() string {
	str, _ := text.MarshalList(0xf12c60ebc67984d4, s.List)
	return str
}

// SessionContext_close_Params_Future is a wrapper for a SessionContext_close_Params promised by a client call.
type SessionContext_close_Params_Future struct{ *capnp.Future }

func (p SessionContext_close_Params_Future) Struct() (SessionContext_close_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_close_Params{s}, err
}

type SessionContext_close_Results struct{ capnp.Struct }

// SessionContext_close_Results_TypeID is the unique identifier for the type SessionContext_close_Results.
const SessionContext_close_Results_TypeID = 0x9d4102fadb4f069c

func NewSessionContext_close_Results(s *capnp.Segment) (SessionContext_close_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_close_Results{st}, err
}

func NewRootSessionContext_close_Results(s *capnp.Segment) (SessionContext_close_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_close_Results{st}, err
}

func ReadRootSessionContext_close_Results(msg *capnp.Message) (SessionContext_close_Results, error) {
	root, err := msg.Root()
	return SessionContext_close_Results{root.Struct()}, err
}

func (s SessionContext_close_Results) String() string {
	str, _ := text.Marshal(0x9d4102fadb4f069c, s.Struct)
	return str
}

// SessionContext_close_Results_List is a list of SessionContext_close_Results.
type SessionContext_close_Results_List struct{ capnp.List }

// NewSessionContext_close_Results creates a new list of SessionContext_close_Results.
func NewSessionContext_close_Results_List(s *capnp.Segment, sz int32) (SessionContext_close_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_close_Results_List{l}, err
}

func (s SessionContext_close_Results_List) At(i int) SessionContext_close_Results {
	return SessionContext_close_Results{s.List.Struct(i)}
}

func (s SessionContext_close_Results_List) Set(i int, v SessionContext_close_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_close_Results_List) String() string {
	str, _ := text.MarshalList(0x9d4102fadb4f069c, s.List)
	return str
}

// SessionContext_close_Results_Future is a wrapper for a SessionContext_close_Results promised by a client call.
type SessionContext_close_Results_Future struct{ *capnp.Future }

func (p SessionContext_close_Results_Future) Struct() (SessionContext_close_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_close_Results{s}, err
}

type SessionContext_openView_Params struct{ capnp.Struct }

// SessionContext_openView_Params_TypeID is the unique identifier for the type SessionContext_openView_Params.
const SessionContext_openView_Params_TypeID = 0xf37f5e08534c68aa

func NewSessionContext_openView_Params(s *capnp.Segment) (SessionContext_openView_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return SessionContext_openView_Params{st}, err
}

func NewRootSessionContext_openView_Params(s *capnp.Segment) (SessionContext_openView_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return SessionContext_openView_Params{st}, err
}

func ReadRootSessionContext_openView_Params(msg *capnp.Message) (SessionContext_openView_Params, error) {
	root, err := msg.Root()
	return SessionContext_openView_Params{root.Struct()}, err
}

func (s SessionContext_openView_Params) String() string {
	str, _ := text.Marshal(0xf37f5e08534c68aa, s.Struct)
	return str
}

func (s SessionContext_openView_Params) View() UiView {
	p, _ := s.Struct.Ptr(0)
	return UiView{Client: p.Interface().Client()}
}

func (s SessionContext_openView_Params) HasView() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_openView_Params) SetView(v UiView) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s SessionContext_openView_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s SessionContext_openView_Params) HasPath() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_openView_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s SessionContext_openView_Params) SetPath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s SessionContext_openView_Params) NewTab() bool {
	return s.Struct.Bit(0)
}

func (s SessionContext_openView_Params) SetNewTab(v bool) {
	s.Struct.SetBit(0, v)
}

// SessionContext_openView_Params_List is a list of SessionContext_openView_Params.
type SessionContext_openView_Params_List struct{ capnp.List }

// NewSessionContext_openView_Params creates a new list of SessionContext_openView_Params.
func NewSessionContext_openView_Params_List(s *capnp.Segment, sz int32) (SessionContext_openView_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return SessionContext_openView_Params_List{l}, err
}

func (s SessionContext_openView_Params_List) At(i int) SessionContext_openView_Params {
	return SessionContext_openView_Params{s.List.Struct(i)}
}

func (s SessionContext_openView_Params_List) Set(i int, v SessionContext_openView_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_openView_Params_List) String() string {
	str, _ := text.MarshalList(0xf37f5e08534c68aa, s.List)
	return str
}

// SessionContext_openView_Params_Future is a wrapper for a SessionContext_openView_Params promised by a client call.
type SessionContext_openView_Params_Future struct{ *capnp.Future }

func (p SessionContext_openView_Params_Future) Struct() (SessionContext_openView_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_openView_Params{s}, err
}

func (p SessionContext_openView_Params_Future) View() UiView {
	return UiView{Client: p.Future.Field(0, nil).Client()}
}

type SessionContext_openView_Results struct{ capnp.Struct }

// SessionContext_openView_Results_TypeID is the unique identifier for the type SessionContext_openView_Results.
const SessionContext_openView_Results_TypeID = 0xf9d6c8c6d207c123

func NewSessionContext_openView_Results(s *capnp.Segment) (SessionContext_openView_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_openView_Results{st}, err
}

func NewRootSessionContext_openView_Results(s *capnp.Segment) (SessionContext_openView_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_openView_Results{st}, err
}

func ReadRootSessionContext_openView_Results(msg *capnp.Message) (SessionContext_openView_Results, error) {
	root, err := msg.Root()
	return SessionContext_openView_Results{root.Struct()}, err
}

func (s SessionContext_openView_Results) String() string {
	str, _ := text.Marshal(0xf9d6c8c6d207c123, s.Struct)
	return str
}

// SessionContext_openView_Results_List is a list of SessionContext_openView_Results.
type SessionContext_openView_Results_List struct{ capnp.List }

// NewSessionContext_openView_Results creates a new list of SessionContext_openView_Results.
func NewSessionContext_openView_Results_List(s *capnp.Segment, sz int32) (SessionContext_openView_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_openView_Results_List{l}, err
}

func (s SessionContext_openView_Results_List) At(i int) SessionContext_openView_Results {
	return SessionContext_openView_Results{s.List.Struct(i)}
}

func (s SessionContext_openView_Results_List) Set(i int, v SessionContext_openView_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_openView_Results_List) String() string {
	str, _ := text.MarshalList(0xf9d6c8c6d207c123, s.List)
	return str
}

// SessionContext_openView_Results_Future is a wrapper for a SessionContext_openView_Results promised by a client call.
type SessionContext_openView_Results_Future struct{ *capnp.Future }

func (p SessionContext_openView_Results_Future) Struct() (SessionContext_openView_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_openView_Results{s}, err
}

type SessionContext_claimRequest_Params struct{ capnp.Struct }

// SessionContext_claimRequest_Params_TypeID is the unique identifier for the type SessionContext_claimRequest_Params.
const SessionContext_claimRequest_Params_TypeID = 0xda13a4f2919ce2cf

func NewSessionContext_claimRequest_Params(s *capnp.Segment) (SessionContext_claimRequest_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_claimRequest_Params{st}, err
}

func NewRootSessionContext_claimRequest_Params(s *capnp.Segment) (SessionContext_claimRequest_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SessionContext_claimRequest_Params{st}, err
}

func ReadRootSessionContext_claimRequest_Params(msg *capnp.Message) (SessionContext_claimRequest_Params, error) {
	root, err := msg.Root()
	return SessionContext_claimRequest_Params{root.Struct()}, err
}

func (s SessionContext_claimRequest_Params) String() string {
	str, _ := text.Marshal(0xda13a4f2919ce2cf, s.Struct)
	return str
}

func (s SessionContext_claimRequest_Params) RequestToken() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s SessionContext_claimRequest_Params) HasRequestToken() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_claimRequest_Params) RequestTokenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s SessionContext_claimRequest_Params) SetRequestToken(v string) error {
	return s.Struct.SetText(0, v)
}

func (s SessionContext_claimRequest_Params) RequiredPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s SessionContext_claimRequest_Params) HasRequiredPermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s SessionContext_claimRequest_Params) SetRequiredPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRequiredPermissions sets the requiredPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s SessionContext_claimRequest_Params) NewRequiredPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// SessionContext_claimRequest_Params_List is a list of SessionContext_claimRequest_Params.
type SessionContext_claimRequest_Params_List struct{ capnp.List }

// NewSessionContext_claimRequest_Params creates a new list of SessionContext_claimRequest_Params.
func NewSessionContext_claimRequest_Params_List(s *capnp.Segment, sz int32) (SessionContext_claimRequest_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SessionContext_claimRequest_Params_List{l}, err
}

func (s SessionContext_claimRequest_Params_List) At(i int) SessionContext_claimRequest_Params {
	return SessionContext_claimRequest_Params{s.List.Struct(i)}
}

func (s SessionContext_claimRequest_Params_List) Set(i int, v SessionContext_claimRequest_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_claimRequest_Params_List) String() string {
	str, _ := text.MarshalList(0xda13a4f2919ce2cf, s.List)
	return str
}

// SessionContext_claimRequest_Params_Future is a wrapper for a SessionContext_claimRequest_Params promised by a client call.
type SessionContext_claimRequest_Params_Future struct{ *capnp.Future }

func (p SessionContext_claimRequest_Params_Future) Struct() (SessionContext_claimRequest_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_claimRequest_Params{s}, err
}

type SessionContext_claimRequest_Results struct{ capnp.Struct }

// SessionContext_claimRequest_Results_TypeID is the unique identifier for the type SessionContext_claimRequest_Results.
const SessionContext_claimRequest_Results_TypeID = 0xefea656d4b56b756

func NewSessionContext_claimRequest_Results(s *capnp.Segment) (SessionContext_claimRequest_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_claimRequest_Results{st}, err
}

func NewRootSessionContext_claimRequest_Results(s *capnp.Segment) (SessionContext_claimRequest_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_claimRequest_Results{st}, err
}

func ReadRootSessionContext_claimRequest_Results(msg *capnp.Message) (SessionContext_claimRequest_Results, error) {
	root, err := msg.Root()
	return SessionContext_claimRequest_Results{root.Struct()}, err
}

func (s SessionContext_claimRequest_Results) String() string {
	str, _ := text.Marshal(0xefea656d4b56b756, s.Struct)
	return str
}

func (s SessionContext_claimRequest_Results) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s SessionContext_claimRequest_Results) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_claimRequest_Results) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// SessionContext_claimRequest_Results_List is a list of SessionContext_claimRequest_Results.
type SessionContext_claimRequest_Results_List struct{ capnp.List }

// NewSessionContext_claimRequest_Results creates a new list of SessionContext_claimRequest_Results.
func NewSessionContext_claimRequest_Results_List(s *capnp.Segment, sz int32) (SessionContext_claimRequest_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SessionContext_claimRequest_Results_List{l}, err
}

func (s SessionContext_claimRequest_Results_List) At(i int) SessionContext_claimRequest_Results {
	return SessionContext_claimRequest_Results{s.List.Struct(i)}
}

func (s SessionContext_claimRequest_Results_List) Set(i int, v SessionContext_claimRequest_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_claimRequest_Results_List) String() string {
	str, _ := text.MarshalList(0xefea656d4b56b756, s.List)
	return str
}

// SessionContext_claimRequest_Results_Future is a wrapper for a SessionContext_claimRequest_Results promised by a client call.
type SessionContext_claimRequest_Results_Future struct{ *capnp.Future }

func (p SessionContext_claimRequest_Results_Future) Struct() (SessionContext_claimRequest_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_claimRequest_Results{s}, err
}

func (p SessionContext_claimRequest_Results_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

type SessionContext_activity_Params struct{ capnp.Struct }

// SessionContext_activity_Params_TypeID is the unique identifier for the type SessionContext_activity_Params.
const SessionContext_activity_Params_TypeID = 0x85e320f14a5d23e0

func NewSessionContext_activity_Params(s *capnp.Segment) (SessionContext_activity_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_activity_Params{st}, err
}

func NewRootSessionContext_activity_Params(s *capnp.Segment) (SessionContext_activity_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SessionContext_activity_Params{st}, err
}

func ReadRootSessionContext_activity_Params(msg *capnp.Message) (SessionContext_activity_Params, error) {
	root, err := msg.Root()
	return SessionContext_activity_Params{root.Struct()}, err
}

func (s SessionContext_activity_Params) String() string {
	str, _ := text.Marshal(0x85e320f14a5d23e0, s.Struct)
	return str
}

func (s SessionContext_activity_Params) Event() (activity.ActivityEvent, error) {
	p, err := s.Struct.Ptr(0)
	return activity.ActivityEvent{Struct: p.Struct()}, err
}

func (s SessionContext_activity_Params) HasEvent() bool {
	return s.Struct.HasPtr(0)
}

func (s SessionContext_activity_Params) SetEvent(v activity.ActivityEvent) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewEvent sets the event field to a newly
// allocated activity.ActivityEvent struct, preferring placement in s's segment.
func (s SessionContext_activity_Params) NewEvent() (activity.ActivityEvent, error) {
	ss, err := activity.NewActivityEvent(s.Struct.Segment())
	if err != nil {
		return activity.ActivityEvent{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// SessionContext_activity_Params_List is a list of SessionContext_activity_Params.
type SessionContext_activity_Params_List struct{ capnp.List }

// NewSessionContext_activity_Params creates a new list of SessionContext_activity_Params.
func NewSessionContext_activity_Params_List(s *capnp.Segment, sz int32) (SessionContext_activity_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SessionContext_activity_Params_List{l}, err
}

func (s SessionContext_activity_Params_List) At(i int) SessionContext_activity_Params {
	return SessionContext_activity_Params{s.List.Struct(i)}
}

func (s SessionContext_activity_Params_List) Set(i int, v SessionContext_activity_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_activity_Params_List) String() string {
	str, _ := text.MarshalList(0x85e320f14a5d23e0, s.List)
	return str
}

// SessionContext_activity_Params_Future is a wrapper for a SessionContext_activity_Params promised by a client call.
type SessionContext_activity_Params_Future struct{ *capnp.Future }

func (p SessionContext_activity_Params_Future) Struct() (SessionContext_activity_Params, error) {
	s, err := p.Future.Struct()
	return SessionContext_activity_Params{s}, err
}

func (p SessionContext_activity_Params_Future) Event() activity.ActivityEvent_Future {
	return activity.ActivityEvent_Future{Future: p.Future.Field(0, nil)}
}

type SessionContext_activity_Results struct{ capnp.Struct }

// SessionContext_activity_Results_TypeID is the unique identifier for the type SessionContext_activity_Results.
const SessionContext_activity_Results_TypeID = 0xa93eadc9671ea08b

func NewSessionContext_activity_Results(s *capnp.Segment) (SessionContext_activity_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_activity_Results{st}, err
}

func NewRootSessionContext_activity_Results(s *capnp.Segment) (SessionContext_activity_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SessionContext_activity_Results{st}, err
}

func ReadRootSessionContext_activity_Results(msg *capnp.Message) (SessionContext_activity_Results, error) {
	root, err := msg.Root()
	return SessionContext_activity_Results{root.Struct()}, err
}

func (s SessionContext_activity_Results) String() string {
	str, _ := text.Marshal(0xa93eadc9671ea08b, s.Struct)
	return str
}

// SessionContext_activity_Results_List is a list of SessionContext_activity_Results.
type SessionContext_activity_Results_List struct{ capnp.List }

// NewSessionContext_activity_Results creates a new list of SessionContext_activity_Results.
func NewSessionContext_activity_Results_List(s *capnp.Segment, sz int32) (SessionContext_activity_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SessionContext_activity_Results_List{l}, err
}

func (s SessionContext_activity_Results_List) At(i int) SessionContext_activity_Results {
	return SessionContext_activity_Results{s.List.Struct(i)}
}

func (s SessionContext_activity_Results_List) Set(i int, v SessionContext_activity_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SessionContext_activity_Results_List) String() string {
	str, _ := text.MarshalList(0xa93eadc9671ea08b, s.List)
	return str
}

// SessionContext_activity_Results_Future is a wrapper for a SessionContext_activity_Results promised by a client call.
type SessionContext_activity_Results_Future struct{ *capnp.Future }

func (p SessionContext_activity_Results_Future) Struct() (SessionContext_activity_Results, error) {
	s, err := p.Future.Struct()
	return SessionContext_activity_Results{s}, err
}

type PermissionDef struct{ capnp.Struct }

// PermissionDef_TypeID is the unique identifier for the type PermissionDef.
const PermissionDef_TypeID = 0xf144a5e58889dafb

func NewPermissionDef(s *capnp.Segment) (PermissionDef, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return PermissionDef{st}, err
}

func NewRootPermissionDef(s *capnp.Segment) (PermissionDef, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return PermissionDef{st}, err
}

func ReadRootPermissionDef(msg *capnp.Message) (PermissionDef, error) {
	root, err := msg.Root()
	return PermissionDef{root.Struct()}, err
}

func (s PermissionDef) String() string {
	str, _ := text.Marshal(0xf144a5e58889dafb, s.Struct)
	return str
}

func (s PermissionDef) Name() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PermissionDef) HasName() bool {
	return s.Struct.HasPtr(2)
}

func (s PermissionDef) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PermissionDef) SetName(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PermissionDef) Title() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(0)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s PermissionDef) HasTitle() bool {
	return s.Struct.HasPtr(0)
}

func (s PermissionDef) SetTitle(v util.LocalizedText) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTitle sets the title field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s PermissionDef) NewTitle() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s PermissionDef) Description() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(1)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s PermissionDef) HasDescription() bool {
	return s.Struct.HasPtr(1)
}

func (s PermissionDef) SetDescription(v util.LocalizedText) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDescription sets the description field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s PermissionDef) NewDescription() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s PermissionDef) Obsolete() bool {
	return s.Struct.Bit(0)
}

func (s PermissionDef) SetObsolete(v bool) {
	s.Struct.SetBit(0, v)
}

// PermissionDef_List is a list of PermissionDef.
type PermissionDef_List struct{ capnp.List }

// NewPermissionDef creates a new list of PermissionDef.
func NewPermissionDef_List(s *capnp.Segment, sz int32) (PermissionDef_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return PermissionDef_List{l}, err
}

func (s PermissionDef_List) At(i int) PermissionDef { return PermissionDef{s.List.Struct(i)} }

func (s PermissionDef_List) Set(i int, v PermissionDef) error { return s.List.SetStruct(i, v.Struct) }

func (s PermissionDef_List) String() string {
	str, _ := text.MarshalList(0xf144a5e58889dafb, s.List)
	return str
}

// PermissionDef_Future is a wrapper for a PermissionDef promised by a client call.
type PermissionDef_Future struct{ *capnp.Future }

func (p PermissionDef_Future) Struct() (PermissionDef, error) {
	s, err := p.Future.Struct()
	return PermissionDef{s}, err
}

func (p PermissionDef_Future) Title() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(0, nil)}
}

func (p PermissionDef_Future) Description() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(1, nil)}
}

type RoleDef struct{ capnp.Struct }

// RoleDef_TypeID is the unique identifier for the type RoleDef.
const RoleDef_TypeID = 0xcb3f7064eae4dc5a

func NewRoleDef(s *capnp.Segment) (RoleDef, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return RoleDef{st}, err
}

func NewRootRoleDef(s *capnp.Segment) (RoleDef, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return RoleDef{st}, err
}

func ReadRootRoleDef(msg *capnp.Message) (RoleDef, error) {
	root, err := msg.Root()
	return RoleDef{root.Struct()}, err
}

func (s RoleDef) String() string {
	str, _ := text.Marshal(0xcb3f7064eae4dc5a, s.Struct)
	return str
}

func (s RoleDef) Title() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(0)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s RoleDef) HasTitle() bool {
	return s.Struct.HasPtr(0)
}

func (s RoleDef) SetTitle(v util.LocalizedText) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTitle sets the title field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s RoleDef) NewTitle() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s RoleDef) VerbPhrase() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(1)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s RoleDef) HasVerbPhrase() bool {
	return s.Struct.HasPtr(1)
}

func (s RoleDef) SetVerbPhrase(v util.LocalizedText) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewVerbPhrase sets the verbPhrase field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s RoleDef) NewVerbPhrase() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s RoleDef) Description() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(2)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s RoleDef) HasDescription() bool {
	return s.Struct.HasPtr(2)
}

func (s RoleDef) SetDescription(v util.LocalizedText) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewDescription sets the description field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s RoleDef) NewDescription() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s RoleDef) Permissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(3)
	return capnp.BitList{List: p.List()}, err
}

func (s RoleDef) HasPermissions() bool {
	return s.Struct.HasPtr(3)
}

func (s RoleDef) SetPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewPermissions sets the permissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s RoleDef) NewPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s RoleDef) Obsolete() bool {
	return s.Struct.Bit(0)
}

func (s RoleDef) SetObsolete(v bool) {
	s.Struct.SetBit(0, v)
}

func (s RoleDef) Default() bool {
	return s.Struct.Bit(1)
}

func (s RoleDef) SetDefault(v bool) {
	s.Struct.SetBit(1, v)
}

// RoleDef_List is a list of RoleDef.
type RoleDef_List struct{ capnp.List }

// NewRoleDef creates a new list of RoleDef.
func NewRoleDef_List(s *capnp.Segment, sz int32) (RoleDef_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return RoleDef_List{l}, err
}

func (s RoleDef_List) At(i int) RoleDef { return RoleDef{s.List.Struct(i)} }

func (s RoleDef_List) Set(i int, v RoleDef) error { return s.List.SetStruct(i, v.Struct) }

func (s RoleDef_List) String() string {
	str, _ := text.MarshalList(0xcb3f7064eae4dc5a, s.List)
	return str
}

// RoleDef_Future is a wrapper for a RoleDef promised by a client call.
type RoleDef_Future struct{ *capnp.Future }

func (p RoleDef_Future) Struct() (RoleDef, error) {
	s, err := p.Future.Struct()
	return RoleDef{s}, err
}

func (p RoleDef_Future) Title() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(0, nil)}
}

func (p RoleDef_Future) VerbPhrase() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(1, nil)}
}

func (p RoleDef_Future) Description() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(2, nil)}
}

type SharingLink struct{ Client *capnp.Client }

// SharingLink_TypeID is the unique identifier for the type SharingLink.
const SharingLink_TypeID = 0xc05520c9b0994ad3

func (c SharingLink) GetPetname(ctx context.Context, params func(SharingLink_getPetname_Params) error) (SharingLink_getPetname_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc05520c9b0994ad3,
			MethodID:      0,
			InterfaceName: "grain.capnp:SharingLink",
			MethodName:    "getPetname",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SharingLink_getPetname_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SharingLink_getPetname_Results_Future{Future: ans.Future()}, release
}

// A SharingLink_Server is a SharingLink with a local implementation.
type SharingLink_Server interface {
	GetPetname(context.Context, SharingLink_getPetname) error
}

// SharingLink_NewServer creates a new Server from an implementation of SharingLink_Server.
func SharingLink_NewServer(s SharingLink_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(SharingLink_Methods(nil, s), s, c, policy)
}

// SharingLink_ServerToClient creates a new Client from an implementation of SharingLink_Server.
// The caller is responsible for calling Release on the returned Client.
func SharingLink_ServerToClient(s SharingLink_Server, policy *server.Policy) SharingLink {
	return SharingLink{Client: capnp.NewClient(SharingLink_NewServer(s, policy))}
}

// SharingLink_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func SharingLink_Methods(methods []server.Method, s SharingLink_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc05520c9b0994ad3,
			MethodID:      0,
			InterfaceName: "grain.capnp:SharingLink",
			MethodName:    "getPetname",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetPetname(ctx, SharingLink_getPetname{call})
		},
	})

	return methods
}

// SharingLink_getPetname holds the state for a server call to SharingLink.getPetname.
// See server.Call for documentation.
type SharingLink_getPetname struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SharingLink_getPetname) Args() SharingLink_getPetname_Params {
	return SharingLink_getPetname_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c SharingLink_getPetname) AllocResults() (SharingLink_getPetname_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SharingLink_getPetname_Results{Struct: r}, err
}

type SharingLink_getPetname_Params struct{ capnp.Struct }

// SharingLink_getPetname_Params_TypeID is the unique identifier for the type SharingLink_getPetname_Params.
const SharingLink_getPetname_Params_TypeID = 0xf0931856093654c1

func NewSharingLink_getPetname_Params(s *capnp.Segment) (SharingLink_getPetname_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SharingLink_getPetname_Params{st}, err
}

func NewRootSharingLink_getPetname_Params(s *capnp.Segment) (SharingLink_getPetname_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SharingLink_getPetname_Params{st}, err
}

func ReadRootSharingLink_getPetname_Params(msg *capnp.Message) (SharingLink_getPetname_Params, error) {
	root, err := msg.Root()
	return SharingLink_getPetname_Params{root.Struct()}, err
}

func (s SharingLink_getPetname_Params) String() string {
	str, _ := text.Marshal(0xf0931856093654c1, s.Struct)
	return str
}

// SharingLink_getPetname_Params_List is a list of SharingLink_getPetname_Params.
type SharingLink_getPetname_Params_List struct{ capnp.List }

// NewSharingLink_getPetname_Params creates a new list of SharingLink_getPetname_Params.
func NewSharingLink_getPetname_Params_List(s *capnp.Segment, sz int32) (SharingLink_getPetname_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return SharingLink_getPetname_Params_List{l}, err
}

func (s SharingLink_getPetname_Params_List) At(i int) SharingLink_getPetname_Params {
	return SharingLink_getPetname_Params{s.List.Struct(i)}
}

func (s SharingLink_getPetname_Params_List) Set(i int, v SharingLink_getPetname_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SharingLink_getPetname_Params_List) String() string {
	str, _ := text.MarshalList(0xf0931856093654c1, s.List)
	return str
}

// SharingLink_getPetname_Params_Future is a wrapper for a SharingLink_getPetname_Params promised by a client call.
type SharingLink_getPetname_Params_Future struct{ *capnp.Future }

func (p SharingLink_getPetname_Params_Future) Struct() (SharingLink_getPetname_Params, error) {
	s, err := p.Future.Struct()
	return SharingLink_getPetname_Params{s}, err
}

type SharingLink_getPetname_Results struct{ capnp.Struct }

// SharingLink_getPetname_Results_TypeID is the unique identifier for the type SharingLink_getPetname_Results.
const SharingLink_getPetname_Results_TypeID = 0x9ad927034671cad1

func NewSharingLink_getPetname_Results(s *capnp.Segment) (SharingLink_getPetname_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SharingLink_getPetname_Results{st}, err
}

func NewRootSharingLink_getPetname_Results(s *capnp.Segment) (SharingLink_getPetname_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SharingLink_getPetname_Results{st}, err
}

func ReadRootSharingLink_getPetname_Results(msg *capnp.Message) (SharingLink_getPetname_Results, error) {
	root, err := msg.Root()
	return SharingLink_getPetname_Results{root.Struct()}, err
}

func (s SharingLink_getPetname_Results) String() string {
	str, _ := text.Marshal(0x9ad927034671cad1, s.Struct)
	return str
}

func (s SharingLink_getPetname_Results) Name() util.Assignable {
	p, _ := s.Struct.Ptr(0)
	return util.Assignable{Client: p.Interface().Client()}
}

func (s SharingLink_getPetname_Results) HasName() bool {
	return s.Struct.HasPtr(0)
}

func (s SharingLink_getPetname_Results) SetName(v util.Assignable) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// SharingLink_getPetname_Results_List is a list of SharingLink_getPetname_Results.
type SharingLink_getPetname_Results_List struct{ capnp.List }

// NewSharingLink_getPetname_Results creates a new list of SharingLink_getPetname_Results.
func NewSharingLink_getPetname_Results_List(s *capnp.Segment, sz int32) (SharingLink_getPetname_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SharingLink_getPetname_Results_List{l}, err
}

func (s SharingLink_getPetname_Results_List) At(i int) SharingLink_getPetname_Results {
	return SharingLink_getPetname_Results{s.List.Struct(i)}
}

func (s SharingLink_getPetname_Results_List) Set(i int, v SharingLink_getPetname_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SharingLink_getPetname_Results_List) String() string {
	str, _ := text.MarshalList(0x9ad927034671cad1, s.List)
	return str
}

// SharingLink_getPetname_Results_Future is a wrapper for a SharingLink_getPetname_Results promised by a client call.
type SharingLink_getPetname_Results_Future struct{ *capnp.Future }

func (p SharingLink_getPetname_Results_Future) Struct() (SharingLink_getPetname_Results, error) {
	s, err := p.Future.Struct()
	return SharingLink_getPetname_Results{s}, err
}

func (p SharingLink_getPetname_Results_Future) Name() util.Assignable {
	return util.Assignable{Client: p.Future.Field(0, nil).Client()}
}

type ViewSharingLink struct{ Client *capnp.Client }

// ViewSharingLink_TypeID is the unique identifier for the type ViewSharingLink.
const ViewSharingLink_TypeID = 0xa4f82f764dc3fee8

func (c ViewSharingLink) GetRoleAssignment(ctx context.Context, params func(ViewSharingLink_getRoleAssignment_Params) error) (ViewSharingLink_getRoleAssignment_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xa4f82f764dc3fee8,
			MethodID:      0,
			InterfaceName: "grain.capnp:ViewSharingLink",
			MethodName:    "getRoleAssignment",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(ViewSharingLink_getRoleAssignment_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return ViewSharingLink_getRoleAssignment_Results_Future{Future: ans.Future()}, release
}
func (c ViewSharingLink) GetPetname(ctx context.Context, params func(SharingLink_getPetname_Params) error) (SharingLink_getPetname_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc05520c9b0994ad3,
			MethodID:      0,
			InterfaceName: "grain.capnp:SharingLink",
			MethodName:    "getPetname",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SharingLink_getPetname_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return SharingLink_getPetname_Results_Future{Future: ans.Future()}, release
}

// A ViewSharingLink_Server is a ViewSharingLink with a local implementation.
type ViewSharingLink_Server interface {
	GetRoleAssignment(context.Context, ViewSharingLink_getRoleAssignment) error

	GetPetname(context.Context, SharingLink_getPetname) error
}

// ViewSharingLink_NewServer creates a new Server from an implementation of ViewSharingLink_Server.
func ViewSharingLink_NewServer(s ViewSharingLink_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(ViewSharingLink_Methods(nil, s), s, c, policy)
}

// ViewSharingLink_ServerToClient creates a new Client from an implementation of ViewSharingLink_Server.
// The caller is responsible for calling Release on the returned Client.
func ViewSharingLink_ServerToClient(s ViewSharingLink_Server, policy *server.Policy) ViewSharingLink {
	return ViewSharingLink{Client: capnp.NewClient(ViewSharingLink_NewServer(s, policy))}
}

// ViewSharingLink_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func ViewSharingLink_Methods(methods []server.Method, s ViewSharingLink_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa4f82f764dc3fee8,
			MethodID:      0,
			InterfaceName: "grain.capnp:ViewSharingLink",
			MethodName:    "getRoleAssignment",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetRoleAssignment(ctx, ViewSharingLink_getRoleAssignment{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc05520c9b0994ad3,
			MethodID:      0,
			InterfaceName: "grain.capnp:SharingLink",
			MethodName:    "getPetname",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetPetname(ctx, SharingLink_getPetname{call})
		},
	})

	return methods
}

// ViewSharingLink_getRoleAssignment holds the state for a server call to ViewSharingLink.getRoleAssignment.
// See server.Call for documentation.
type ViewSharingLink_getRoleAssignment struct {
	*server.Call
}

// Args returns the call's arguments.
func (c ViewSharingLink_getRoleAssignment) Args() ViewSharingLink_getRoleAssignment_Params {
	return ViewSharingLink_getRoleAssignment_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c ViewSharingLink_getRoleAssignment) AllocResults() (ViewSharingLink_getRoleAssignment_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ViewSharingLink_getRoleAssignment_Results{Struct: r}, err
}

type ViewSharingLink_RoleAssignment struct{ capnp.Struct }
type ViewSharingLink_RoleAssignment_Which uint16

const (
	ViewSharingLink_RoleAssignment_Which_none      ViewSharingLink_RoleAssignment_Which = 0
	ViewSharingLink_RoleAssignment_Which_allAccess ViewSharingLink_RoleAssignment_Which = 1
	ViewSharingLink_RoleAssignment_Which_roleId    ViewSharingLink_RoleAssignment_Which = 2
)

func (w ViewSharingLink_RoleAssignment_Which) String() string {
	const s = "noneallAccessroleId"
	switch w {
	case ViewSharingLink_RoleAssignment_Which_none:
		return s[0:4]
	case ViewSharingLink_RoleAssignment_Which_allAccess:
		return s[4:13]
	case ViewSharingLink_RoleAssignment_Which_roleId:
		return s[13:19]

	}
	return "ViewSharingLink_RoleAssignment_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// ViewSharingLink_RoleAssignment_TypeID is the unique identifier for the type ViewSharingLink_RoleAssignment.
const ViewSharingLink_RoleAssignment_TypeID = 0xf020f2be35e8e2b5

func NewViewSharingLink_RoleAssignment(s *capnp.Segment) (ViewSharingLink_RoleAssignment, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return ViewSharingLink_RoleAssignment{st}, err
}

func NewRootViewSharingLink_RoleAssignment(s *capnp.Segment) (ViewSharingLink_RoleAssignment, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return ViewSharingLink_RoleAssignment{st}, err
}

func ReadRootViewSharingLink_RoleAssignment(msg *capnp.Message) (ViewSharingLink_RoleAssignment, error) {
	root, err := msg.Root()
	return ViewSharingLink_RoleAssignment{root.Struct()}, err
}

func (s ViewSharingLink_RoleAssignment) String() string {
	str, _ := text.Marshal(0xf020f2be35e8e2b5, s.Struct)
	return str
}

func (s ViewSharingLink_RoleAssignment) Which() ViewSharingLink_RoleAssignment_Which {
	return ViewSharingLink_RoleAssignment_Which(s.Struct.Uint16(0))
}
func (s ViewSharingLink_RoleAssignment) SetNone() {
	s.Struct.SetUint16(0, 0)

}

func (s ViewSharingLink_RoleAssignment) SetAllAccess() {
	s.Struct.SetUint16(0, 1)

}

func (s ViewSharingLink_RoleAssignment) RoleId() uint16 {
	if s.Struct.Uint16(0) != 2 {
		panic("Which() != roleId")
	}
	return s.Struct.Uint16(2)
}

func (s ViewSharingLink_RoleAssignment) SetRoleId(v uint16) {
	s.Struct.SetUint16(0, 2)
	s.Struct.SetUint16(2, v)
}

func (s ViewSharingLink_RoleAssignment) AddPermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.BitList{List: p.List()}, err
}

func (s ViewSharingLink_RoleAssignment) HasAddPermissions() bool {
	return s.Struct.HasPtr(0)
}

func (s ViewSharingLink_RoleAssignment) SetAddPermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAddPermissions sets the addPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s ViewSharingLink_RoleAssignment) NewAddPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s ViewSharingLink_RoleAssignment) RemovePermissions() (capnp.BitList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.BitList{List: p.List()}, err
}

func (s ViewSharingLink_RoleAssignment) HasRemovePermissions() bool {
	return s.Struct.HasPtr(1)
}

func (s ViewSharingLink_RoleAssignment) SetRemovePermissions(v capnp.BitList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRemovePermissions sets the removePermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s ViewSharingLink_RoleAssignment) NewRemovePermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// ViewSharingLink_RoleAssignment_List is a list of ViewSharingLink_RoleAssignment.
type ViewSharingLink_RoleAssignment_List struct{ capnp.List }

// NewViewSharingLink_RoleAssignment creates a new list of ViewSharingLink_RoleAssignment.
func NewViewSharingLink_RoleAssignment_List(s *capnp.Segment, sz int32) (ViewSharingLink_RoleAssignment_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return ViewSharingLink_RoleAssignment_List{l}, err
}

func (s ViewSharingLink_RoleAssignment_List) At(i int) ViewSharingLink_RoleAssignment {
	return ViewSharingLink_RoleAssignment{s.List.Struct(i)}
}

func (s ViewSharingLink_RoleAssignment_List) Set(i int, v ViewSharingLink_RoleAssignment) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ViewSharingLink_RoleAssignment_List) String() string {
	str, _ := text.MarshalList(0xf020f2be35e8e2b5, s.List)
	return str
}

// ViewSharingLink_RoleAssignment_Future is a wrapper for a ViewSharingLink_RoleAssignment promised by a client call.
type ViewSharingLink_RoleAssignment_Future struct{ *capnp.Future }

func (p ViewSharingLink_RoleAssignment_Future) Struct() (ViewSharingLink_RoleAssignment, error) {
	s, err := p.Future.Struct()
	return ViewSharingLink_RoleAssignment{s}, err
}

type ViewSharingLink_getRoleAssignment_Params struct{ capnp.Struct }

// ViewSharingLink_getRoleAssignment_Params_TypeID is the unique identifier for the type ViewSharingLink_getRoleAssignment_Params.
const ViewSharingLink_getRoleAssignment_Params_TypeID = 0xb8083dd65a24c770

func NewViewSharingLink_getRoleAssignment_Params(s *capnp.Segment) (ViewSharingLink_getRoleAssignment_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ViewSharingLink_getRoleAssignment_Params{st}, err
}

func NewRootViewSharingLink_getRoleAssignment_Params(s *capnp.Segment) (ViewSharingLink_getRoleAssignment_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return ViewSharingLink_getRoleAssignment_Params{st}, err
}

func ReadRootViewSharingLink_getRoleAssignment_Params(msg *capnp.Message) (ViewSharingLink_getRoleAssignment_Params, error) {
	root, err := msg.Root()
	return ViewSharingLink_getRoleAssignment_Params{root.Struct()}, err
}

func (s ViewSharingLink_getRoleAssignment_Params) String() string {
	str, _ := text.Marshal(0xb8083dd65a24c770, s.Struct)
	return str
}

// ViewSharingLink_getRoleAssignment_Params_List is a list of ViewSharingLink_getRoleAssignment_Params.
type ViewSharingLink_getRoleAssignment_Params_List struct{ capnp.List }

// NewViewSharingLink_getRoleAssignment_Params creates a new list of ViewSharingLink_getRoleAssignment_Params.
func NewViewSharingLink_getRoleAssignment_Params_List(s *capnp.Segment, sz int32) (ViewSharingLink_getRoleAssignment_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return ViewSharingLink_getRoleAssignment_Params_List{l}, err
}

func (s ViewSharingLink_getRoleAssignment_Params_List) At(i int) ViewSharingLink_getRoleAssignment_Params {
	return ViewSharingLink_getRoleAssignment_Params{s.List.Struct(i)}
}

func (s ViewSharingLink_getRoleAssignment_Params_List) Set(i int, v ViewSharingLink_getRoleAssignment_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ViewSharingLink_getRoleAssignment_Params_List) String() string {
	str, _ := text.MarshalList(0xb8083dd65a24c770, s.List)
	return str
}

// ViewSharingLink_getRoleAssignment_Params_Future is a wrapper for a ViewSharingLink_getRoleAssignment_Params promised by a client call.
type ViewSharingLink_getRoleAssignment_Params_Future struct{ *capnp.Future }

func (p ViewSharingLink_getRoleAssignment_Params_Future) Struct() (ViewSharingLink_getRoleAssignment_Params, error) {
	s, err := p.Future.Struct()
	return ViewSharingLink_getRoleAssignment_Params{s}, err
}

type ViewSharingLink_getRoleAssignment_Results struct{ capnp.Struct }

// ViewSharingLink_getRoleAssignment_Results_TypeID is the unique identifier for the type ViewSharingLink_getRoleAssignment_Results.
const ViewSharingLink_getRoleAssignment_Results_TypeID = 0x9d159666de73f39d

func NewViewSharingLink_getRoleAssignment_Results(s *capnp.Segment) (ViewSharingLink_getRoleAssignment_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ViewSharingLink_getRoleAssignment_Results{st}, err
}

func NewRootViewSharingLink_getRoleAssignment_Results(s *capnp.Segment) (ViewSharingLink_getRoleAssignment_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ViewSharingLink_getRoleAssignment_Results{st}, err
}

func ReadRootViewSharingLink_getRoleAssignment_Results(msg *capnp.Message) (ViewSharingLink_getRoleAssignment_Results, error) {
	root, err := msg.Root()
	return ViewSharingLink_getRoleAssignment_Results{root.Struct()}, err
}

func (s ViewSharingLink_getRoleAssignment_Results) String() string {
	str, _ := text.Marshal(0x9d159666de73f39d, s.Struct)
	return str
}

func (s ViewSharingLink_getRoleAssignment_Results) Var() util.Assignable {
	p, _ := s.Struct.Ptr(0)
	return util.Assignable{Client: p.Interface().Client()}
}

func (s ViewSharingLink_getRoleAssignment_Results) HasVar() bool {
	return s.Struct.HasPtr(0)
}

func (s ViewSharingLink_getRoleAssignment_Results) SetVar(v util.Assignable) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// ViewSharingLink_getRoleAssignment_Results_List is a list of ViewSharingLink_getRoleAssignment_Results.
type ViewSharingLink_getRoleAssignment_Results_List struct{ capnp.List }

// NewViewSharingLink_getRoleAssignment_Results creates a new list of ViewSharingLink_getRoleAssignment_Results.
func NewViewSharingLink_getRoleAssignment_Results_List(s *capnp.Segment, sz int32) (ViewSharingLink_getRoleAssignment_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return ViewSharingLink_getRoleAssignment_Results_List{l}, err
}

func (s ViewSharingLink_getRoleAssignment_Results_List) At(i int) ViewSharingLink_getRoleAssignment_Results {
	return ViewSharingLink_getRoleAssignment_Results{s.List.Struct(i)}
}

func (s ViewSharingLink_getRoleAssignment_Results_List) Set(i int, v ViewSharingLink_getRoleAssignment_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ViewSharingLink_getRoleAssignment_Results_List) String() string {
	str, _ := text.MarshalList(0x9d159666de73f39d, s.List)
	return str
}

// ViewSharingLink_getRoleAssignment_Results_Future is a wrapper for a ViewSharingLink_getRoleAssignment_Results promised by a client call.
type ViewSharingLink_getRoleAssignment_Results_Future struct{ *capnp.Future }

func (p ViewSharingLink_getRoleAssignment_Results_Future) Struct() (ViewSharingLink_getRoleAssignment_Results, error) {
	s, err := p.Future.Struct()
	return ViewSharingLink_getRoleAssignment_Results{s}, err
}

func (p ViewSharingLink_getRoleAssignment_Results_Future) Var() util.Assignable {
	return util.Assignable{Client: p.Future.Field(0, nil).Client()}
}

type GrainInfo struct{ capnp.Struct }

// GrainInfo_TypeID is the unique identifier for the type GrainInfo.
const GrainInfo_TypeID = 0xb5fcc0e153671d68

func NewGrainInfo(s *capnp.Segment) (GrainInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return GrainInfo{st}, err
}

func NewRootGrainInfo(s *capnp.Segment) (GrainInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return GrainInfo{st}, err
}

func ReadRootGrainInfo(msg *capnp.Message) (GrainInfo, error) {
	root, err := msg.Root()
	return GrainInfo{root.Struct()}, err
}

func (s GrainInfo) String() string {
	str, _ := text.Marshal(0xb5fcc0e153671d68, s.Struct)
	return str
}

func (s GrainInfo) AppId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GrainInfo) HasAppId() bool {
	return s.Struct.HasPtr(0)
}

func (s GrainInfo) AppIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GrainInfo) SetAppId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GrainInfo) AppVersion() uint32 {
	return s.Struct.Uint32(0)
}

func (s GrainInfo) SetAppVersion(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s GrainInfo) Title() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GrainInfo) HasTitle() bool {
	return s.Struct.HasPtr(1)
}

func (s GrainInfo) TitleBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GrainInfo) SetTitle(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GrainInfo) OwnerIdentityId() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GrainInfo) HasOwnerIdentityId() bool {
	return s.Struct.HasPtr(2)
}

func (s GrainInfo) OwnerIdentityIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GrainInfo) SetOwnerIdentityId(v string) error {
	return s.Struct.SetText(2, v)
}

// GrainInfo_List is a list of GrainInfo.
type GrainInfo_List struct{ capnp.List }

// NewGrainInfo creates a new list of GrainInfo.
func NewGrainInfo_List(s *capnp.Segment, sz int32) (GrainInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return GrainInfo_List{l}, err
}

func (s GrainInfo_List) At(i int) GrainInfo { return GrainInfo{s.List.Struct(i)} }

func (s GrainInfo_List) Set(i int, v GrainInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s GrainInfo_List) String() string {
	str, _ := text.MarshalList(0xb5fcc0e153671d68, s.List)
	return str
}

// GrainInfo_Future is a wrapper for a GrainInfo promised by a client call.
type GrainInfo_Future struct{ *capnp.Future }

func (p GrainInfo_Future) Struct() (GrainInfo, error) {
	s, err := p.Future.Struct()
	return GrainInfo{s}, err
}

type AppPersistent struct{ Client *capnp.Client }

// AppPersistent_TypeID is the unique identifier for the type AppPersistent.
const AppPersistent_TypeID = 0xaffa789add8747b8

func (c AppPersistent) Save(ctx context.Context, params func(AppPersistent_save_Params) error) (AppPersistent_save_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xaffa789add8747b8,
			MethodID:      0,
			InterfaceName: "grain.capnp:AppPersistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(AppPersistent_save_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return AppPersistent_save_Results_Future{Future: ans.Future()}, release
}

// A AppPersistent_Server is a AppPersistent with a local implementation.
type AppPersistent_Server interface {
	Save(context.Context, AppPersistent_save) error
}

// AppPersistent_NewServer creates a new Server from an implementation of AppPersistent_Server.
func AppPersistent_NewServer(s AppPersistent_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(AppPersistent_Methods(nil, s), s, c, policy)
}

// AppPersistent_ServerToClient creates a new Client from an implementation of AppPersistent_Server.
// The caller is responsible for calling Release on the returned Client.
func AppPersistent_ServerToClient(s AppPersistent_Server, policy *server.Policy) AppPersistent {
	return AppPersistent{Client: capnp.NewClient(AppPersistent_NewServer(s, policy))}
}

// AppPersistent_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func AppPersistent_Methods(methods []server.Method, s AppPersistent_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaffa789add8747b8,
			MethodID:      0,
			InterfaceName: "grain.capnp:AppPersistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, AppPersistent_save{call})
		},
	})

	return methods
}

// AppPersistent_save holds the state for a server call to AppPersistent.save.
// See server.Call for documentation.
type AppPersistent_save struct {
	*server.Call
}

// Args returns the call's arguments.
func (c AppPersistent_save) Args() AppPersistent_save_Params {
	return AppPersistent_save_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c AppPersistent_save) AllocResults() (AppPersistent_save_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return AppPersistent_save_Results{Struct: r}, err
}

type AppPersistent_save_Params struct{ capnp.Struct }

// AppPersistent_save_Params_TypeID is the unique identifier for the type AppPersistent_save_Params.
const AppPersistent_save_Params_TypeID = 0xf0136e14d8019d3c

func NewAppPersistent_save_Params(s *capnp.Segment) (AppPersistent_save_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return AppPersistent_save_Params{st}, err
}

func NewRootAppPersistent_save_Params(s *capnp.Segment) (AppPersistent_save_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return AppPersistent_save_Params{st}, err
}

func ReadRootAppPersistent_save_Params(msg *capnp.Message) (AppPersistent_save_Params, error) {
	root, err := msg.Root()
	return AppPersistent_save_Params{root.Struct()}, err
}

func (s AppPersistent_save_Params) String() string {
	str, _ := text.Marshal(0xf0136e14d8019d3c, s.Struct)
	return str
}

// AppPersistent_save_Params_List is a list of AppPersistent_save_Params.
type AppPersistent_save_Params_List struct{ capnp.List }

// NewAppPersistent_save_Params creates a new list of AppPersistent_save_Params.
func NewAppPersistent_save_Params_List(s *capnp.Segment, sz int32) (AppPersistent_save_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return AppPersistent_save_Params_List{l}, err
}

func (s AppPersistent_save_Params_List) At(i int) AppPersistent_save_Params {
	return AppPersistent_save_Params{s.List.Struct(i)}
}

func (s AppPersistent_save_Params_List) Set(i int, v AppPersistent_save_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s AppPersistent_save_Params_List) String() string {
	str, _ := text.MarshalList(0xf0136e14d8019d3c, s.List)
	return str
}

// AppPersistent_save_Params_Future is a wrapper for a AppPersistent_save_Params promised by a client call.
type AppPersistent_save_Params_Future struct{ *capnp.Future }

func (p AppPersistent_save_Params_Future) Struct() (AppPersistent_save_Params, error) {
	s, err := p.Future.Struct()
	return AppPersistent_save_Params{s}, err
}

type AppPersistent_save_Results struct{ capnp.Struct }

// AppPersistent_save_Results_TypeID is the unique identifier for the type AppPersistent_save_Results.
const AppPersistent_save_Results_TypeID = 0xba36a34b4eeb483f

func NewAppPersistent_save_Results(s *capnp.Segment) (AppPersistent_save_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return AppPersistent_save_Results{st}, err
}

func NewRootAppPersistent_save_Results(s *capnp.Segment) (AppPersistent_save_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return AppPersistent_save_Results{st}, err
}

func ReadRootAppPersistent_save_Results(msg *capnp.Message) (AppPersistent_save_Results, error) {
	root, err := msg.Root()
	return AppPersistent_save_Results{root.Struct()}, err
}

func (s AppPersistent_save_Results) String() string {
	str, _ := text.Marshal(0xba36a34b4eeb483f, s.Struct)
	return str
}

func (s AppPersistent_save_Results) ObjectId() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s AppPersistent_save_Results) HasObjectId() bool {
	return s.Struct.HasPtr(0)
}

func (s AppPersistent_save_Results) SetObjectId(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s AppPersistent_save_Results) Label() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(1)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s AppPersistent_save_Results) HasLabel() bool {
	return s.Struct.HasPtr(1)
}

func (s AppPersistent_save_Results) SetLabel(v util.LocalizedText) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewLabel sets the label field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s AppPersistent_save_Results) NewLabel() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// AppPersistent_save_Results_List is a list of AppPersistent_save_Results.
type AppPersistent_save_Results_List struct{ capnp.List }

// NewAppPersistent_save_Results creates a new list of AppPersistent_save_Results.
func NewAppPersistent_save_Results_List(s *capnp.Segment, sz int32) (AppPersistent_save_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return AppPersistent_save_Results_List{l}, err
}

func (s AppPersistent_save_Results_List) At(i int) AppPersistent_save_Results {
	return AppPersistent_save_Results{s.List.Struct(i)}
}

func (s AppPersistent_save_Results_List) Set(i int, v AppPersistent_save_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s AppPersistent_save_Results_List) String() string {
	str, _ := text.MarshalList(0xba36a34b4eeb483f, s.List)
	return str
}

// AppPersistent_save_Results_Future is a wrapper for a AppPersistent_save_Results promised by a client call.
type AppPersistent_save_Results_Future struct{ *capnp.Future }

func (p AppPersistent_save_Results_Future) Struct() (AppPersistent_save_Results, error) {
	s, err := p.Future.Struct()
	return AppPersistent_save_Results{s}, err
}

func (p AppPersistent_save_Results_Future) ObjectId() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p AppPersistent_save_Results_Future) Label() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(1, nil)}
}

type MainView struct{ Client *capnp.Client }

// MainView_TypeID is the unique identifier for the type MainView.
const MainView_TypeID = 0xc277e9822ae2c8fc

func (c MainView) Restore(ctx context.Context, params func(MainView_restore_Params) error) (MainView_restore_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc277e9822ae2c8fc,
			MethodID:      0,
			InterfaceName: "grain.capnp:MainView",
			MethodName:    "restore",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(MainView_restore_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return MainView_restore_Results_Future{Future: ans.Future()}, release
}
func (c MainView) Drop(ctx context.Context, params func(MainView_drop_Params) error) (MainView_drop_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc277e9822ae2c8fc,
			MethodID:      1,
			InterfaceName: "grain.capnp:MainView",
			MethodName:    "drop",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(MainView_drop_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return MainView_drop_Results_Future{Future: ans.Future()}, release
}
func (c MainView) GetViewInfo(ctx context.Context, params func(UiView_getViewInfo_Params) error) (UiView_ViewInfo_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      0,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "getViewInfo",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_getViewInfo_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_ViewInfo_Future{Future: ans.Future()}, release
}
func (c MainView) NewSession(ctx context.Context, params func(UiView_newSession_Params) error) (UiView_newSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      1,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newSession_Results_Future{Future: ans.Future()}, release
}
func (c MainView) NewRequestSession(ctx context.Context, params func(UiView_newRequestSession_Params) error) (UiView_newRequestSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      2,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newRequestSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 5}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newRequestSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newRequestSession_Results_Future{Future: ans.Future()}, release
}
func (c MainView) NewOfferSession(ctx context.Context, params func(UiView_newOfferSession_Params) error) (UiView_newOfferSession_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      3,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newOfferSession",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 6}
		s.PlaceArgs = func(s capnp.Struct) error { return params(UiView_newOfferSession_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return UiView_newOfferSession_Results_Future{Future: ans.Future()}, release
}

// A MainView_Server is a MainView with a local implementation.
type MainView_Server interface {
	Restore(context.Context, MainView_restore) error

	Drop(context.Context, MainView_drop) error

	GetViewInfo(context.Context, UiView_getViewInfo) error

	NewSession(context.Context, UiView_newSession) error

	NewRequestSession(context.Context, UiView_newRequestSession) error

	NewOfferSession(context.Context, UiView_newOfferSession) error
}

// MainView_NewServer creates a new Server from an implementation of MainView_Server.
func MainView_NewServer(s MainView_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(MainView_Methods(nil, s), s, c, policy)
}

// MainView_ServerToClient creates a new Client from an implementation of MainView_Server.
// The caller is responsible for calling Release on the returned Client.
func MainView_ServerToClient(s MainView_Server, policy *server.Policy) MainView {
	return MainView{Client: capnp.NewClient(MainView_NewServer(s, policy))}
}

// MainView_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func MainView_Methods(methods []server.Method, s MainView_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 6)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc277e9822ae2c8fc,
			MethodID:      0,
			InterfaceName: "grain.capnp:MainView",
			MethodName:    "restore",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Restore(ctx, MainView_restore{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc277e9822ae2c8fc,
			MethodID:      1,
			InterfaceName: "grain.capnp:MainView",
			MethodName:    "drop",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Drop(ctx, MainView_drop{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      0,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "getViewInfo",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetViewInfo(ctx, UiView_getViewInfo{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      1,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewSession(ctx, UiView_newSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      2,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newRequestSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewRequestSession(ctx, UiView_newRequestSession{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdbb4d798ea67e2e7,
			MethodID:      3,
			InterfaceName: "grain.capnp:UiView",
			MethodName:    "newOfferSession",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NewOfferSession(ctx, UiView_newOfferSession{call})
		},
	})

	return methods
}

// MainView_restore holds the state for a server call to MainView.restore.
// See server.Call for documentation.
type MainView_restore struct {
	*server.Call
}

// Args returns the call's arguments.
func (c MainView_restore) Args() MainView_restore_Params {
	return MainView_restore_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c MainView_restore) AllocResults() (MainView_restore_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_restore_Results{Struct: r}, err
}

// MainView_drop holds the state for a server call to MainView.drop.
// See server.Call for documentation.
type MainView_drop struct {
	*server.Call
}

// Args returns the call's arguments.
func (c MainView_drop) Args() MainView_drop_Params {
	return MainView_drop_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c MainView_drop) AllocResults() (MainView_drop_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return MainView_drop_Results{Struct: r}, err
}

type MainView_restore_Params struct{ capnp.Struct }

// MainView_restore_Params_TypeID is the unique identifier for the type MainView_restore_Params.
const MainView_restore_Params_TypeID = 0x9ad62de07dfc6419

func NewMainView_restore_Params(s *capnp.Segment) (MainView_restore_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_restore_Params{st}, err
}

func NewRootMainView_restore_Params(s *capnp.Segment) (MainView_restore_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_restore_Params{st}, err
}

func ReadRootMainView_restore_Params(msg *capnp.Message) (MainView_restore_Params, error) {
	root, err := msg.Root()
	return MainView_restore_Params{root.Struct()}, err
}

func (s MainView_restore_Params) String() string {
	str, _ := text.Marshal(0x9ad62de07dfc6419, s.Struct)
	return str
}

func (s MainView_restore_Params) ObjectId() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s MainView_restore_Params) HasObjectId() bool {
	return s.Struct.HasPtr(0)
}

func (s MainView_restore_Params) SetObjectId(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// MainView_restore_Params_List is a list of MainView_restore_Params.
type MainView_restore_Params_List struct{ capnp.List }

// NewMainView_restore_Params creates a new list of MainView_restore_Params.
func NewMainView_restore_Params_List(s *capnp.Segment, sz int32) (MainView_restore_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return MainView_restore_Params_List{l}, err
}

func (s MainView_restore_Params_List) At(i int) MainView_restore_Params {
	return MainView_restore_Params{s.List.Struct(i)}
}

func (s MainView_restore_Params_List) Set(i int, v MainView_restore_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s MainView_restore_Params_List) String() string {
	str, _ := text.MarshalList(0x9ad62de07dfc6419, s.List)
	return str
}

// MainView_restore_Params_Future is a wrapper for a MainView_restore_Params promised by a client call.
type MainView_restore_Params_Future struct{ *capnp.Future }

func (p MainView_restore_Params_Future) Struct() (MainView_restore_Params, error) {
	s, err := p.Future.Struct()
	return MainView_restore_Params{s}, err
}

func (p MainView_restore_Params_Future) ObjectId() *capnp.Future {
	return p.Future.Field(0, nil)
}

type MainView_restore_Results struct{ capnp.Struct }

// MainView_restore_Results_TypeID is the unique identifier for the type MainView_restore_Results.
const MainView_restore_Results_TypeID = 0x99efcebf23bbae35

func NewMainView_restore_Results(s *capnp.Segment) (MainView_restore_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_restore_Results{st}, err
}

func NewRootMainView_restore_Results(s *capnp.Segment) (MainView_restore_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_restore_Results{st}, err
}

func ReadRootMainView_restore_Results(msg *capnp.Message) (MainView_restore_Results, error) {
	root, err := msg.Root()
	return MainView_restore_Results{root.Struct()}, err
}

func (s MainView_restore_Results) String() string {
	str, _ := text.Marshal(0x99efcebf23bbae35, s.Struct)
	return str
}

func (s MainView_restore_Results) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s MainView_restore_Results) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s MainView_restore_Results) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// MainView_restore_Results_List is a list of MainView_restore_Results.
type MainView_restore_Results_List struct{ capnp.List }

// NewMainView_restore_Results creates a new list of MainView_restore_Results.
func NewMainView_restore_Results_List(s *capnp.Segment, sz int32) (MainView_restore_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return MainView_restore_Results_List{l}, err
}

func (s MainView_restore_Results_List) At(i int) MainView_restore_Results {
	return MainView_restore_Results{s.List.Struct(i)}
}

func (s MainView_restore_Results_List) Set(i int, v MainView_restore_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s MainView_restore_Results_List) String() string {
	str, _ := text.MarshalList(0x99efcebf23bbae35, s.List)
	return str
}

// MainView_restore_Results_Future is a wrapper for a MainView_restore_Results promised by a client call.
type MainView_restore_Results_Future struct{ *capnp.Future }

func (p MainView_restore_Results_Future) Struct() (MainView_restore_Results, error) {
	s, err := p.Future.Struct()
	return MainView_restore_Results{s}, err
}

func (p MainView_restore_Results_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

type MainView_drop_Params struct{ capnp.Struct }

// MainView_drop_Params_TypeID is the unique identifier for the type MainView_drop_Params.
const MainView_drop_Params_TypeID = 0x8c519e0dedc17d73

func NewMainView_drop_Params(s *capnp.Segment) (MainView_drop_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_drop_Params{st}, err
}

func NewRootMainView_drop_Params(s *capnp.Segment) (MainView_drop_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return MainView_drop_Params{st}, err
}

func ReadRootMainView_drop_Params(msg *capnp.Message) (MainView_drop_Params, error) {
	root, err := msg.Root()
	return MainView_drop_Params{root.Struct()}, err
}

func (s MainView_drop_Params) String() string {
	str, _ := text.Marshal(0x8c519e0dedc17d73, s.Struct)
	return str
}

func (s MainView_drop_Params) ObjectId() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s MainView_drop_Params) HasObjectId() bool {
	return s.Struct.HasPtr(0)
}

func (s MainView_drop_Params) SetObjectId(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// MainView_drop_Params_List is a list of MainView_drop_Params.
type MainView_drop_Params_List struct{ capnp.List }

// NewMainView_drop_Params creates a new list of MainView_drop_Params.
func NewMainView_drop_Params_List(s *capnp.Segment, sz int32) (MainView_drop_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return MainView_drop_Params_List{l}, err
}

func (s MainView_drop_Params_List) At(i int) MainView_drop_Params {
	return MainView_drop_Params{s.List.Struct(i)}
}

func (s MainView_drop_Params_List) Set(i int, v MainView_drop_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s MainView_drop_Params_List) String() string {
	str, _ := text.MarshalList(0x8c519e0dedc17d73, s.List)
	return str
}

// MainView_drop_Params_Future is a wrapper for a MainView_drop_Params promised by a client call.
type MainView_drop_Params_Future struct{ *capnp.Future }

func (p MainView_drop_Params_Future) Struct() (MainView_drop_Params, error) {
	s, err := p.Future.Struct()
	return MainView_drop_Params{s}, err
}

func (p MainView_drop_Params_Future) ObjectId() *capnp.Future {
	return p.Future.Field(0, nil)
}

type MainView_drop_Results struct{ capnp.Struct }

// MainView_drop_Results_TypeID is the unique identifier for the type MainView_drop_Results.
const MainView_drop_Results_TypeID = 0x9210d9e69d14fa35

func NewMainView_drop_Results(s *capnp.Segment) (MainView_drop_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return MainView_drop_Results{st}, err
}

func NewRootMainView_drop_Results(s *capnp.Segment) (MainView_drop_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return MainView_drop_Results{st}, err
}

func ReadRootMainView_drop_Results(msg *capnp.Message) (MainView_drop_Results, error) {
	root, err := msg.Root()
	return MainView_drop_Results{root.Struct()}, err
}

func (s MainView_drop_Results) String() string {
	str, _ := text.Marshal(0x9210d9e69d14fa35, s.Struct)
	return str
}

// MainView_drop_Results_List is a list of MainView_drop_Results.
type MainView_drop_Results_List struct{ capnp.List }

// NewMainView_drop_Results creates a new list of MainView_drop_Results.
func NewMainView_drop_Results_List(s *capnp.Segment, sz int32) (MainView_drop_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return MainView_drop_Results_List{l}, err
}

func (s MainView_drop_Results_List) At(i int) MainView_drop_Results {
	return MainView_drop_Results{s.List.Struct(i)}
}

func (s MainView_drop_Results_List) Set(i int, v MainView_drop_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s MainView_drop_Results_List) String() string {
	str, _ := text.MarshalList(0x9210d9e69d14fa35, s.List)
	return str
}

// MainView_drop_Results_Future is a wrapper for a MainView_drop_Results promised by a client call.
type MainView_drop_Results_Future struct{ *capnp.Future }

func (p MainView_drop_Results_Future) Struct() (MainView_drop_Results, error) {
	s, err := p.Future.Struct()
	return MainView_drop_Results{s}, err
}

const schema_c8d91463cfc4fb4a = "x\xda\xdczkxT\xe5\xb5\xffZ{'\x19\xe2\x9f" +
	"4\xd9\xee\x04B\x08\x06\x03\xfeMB\xc2U\xbcP4" +
	"7)M\x04\xcdN\x02\x85\x1c\xf1aOf'\x19\x99" +
	"\xcc\x0c3\x13B\xa8\x14\xf1\xc0\x11*\x9eJJO\x81" +
	"G\xb0\xa2\x1c\xc1#\xb5ZR\xc1JE\x8f\x96\x8b\x17" +
	"*\x02\x82\x96\xaa(\x16\x15\xaaxG\x85}\x9e\xf5\xce" +
	"~\xf7\xbcs\xc9\x8d\xe7<\xfdp>\xf8\x18\xf6\xacw" +
	"\xed\xf5\xae\xcbo\xdd\xf6\xd8\xb6\xf42i\\\xf2\xd7\x85" +
	"\x00u\xa709\xc5|g\xc4\x9c\xea\xb3\xc3\xdf[\x0e" +
	"\xcaP\x04HF\x07\xc0\x84w3\x1b\x10P=\x93Y" +
	"\x0ah\x1e\xd7'\xbf:\xa3\xea\xd8\xdd\xa0\x0c\x09\x13d" +
	"\xe0\x84\xb4\xac\x0a\"\xc8\xca\"\x82[_\x97\x07?\xe4" +
	"\xaf^%\x12L\xccZD\x04\xe5\x8c \xb8\xf8\xb93" +
	"i\x1b\xb5U\xa0d\xd9\x04z\xd6%D\xe0f\x04\xff" +
	"v\xf3\x91\xaa_}1\xfa\x17\xa0\xa8\x08\x90D\"\xdc" +
	"\x9b5\x1e!\xc9\xfc\xd9\xcb\xef\xbd\xbee\x7fJ\xa7\xc8" +
	"\xbb\x8d~Bu1;:\xf1\xdb\xcc\x0d\x1f\x1c\xcb\xe8" +
	"\x0c\xf3N\xa2\xdf7d]JGO\xcf\x1ar\xcf\xee" +
	"\xfb\xae\\KL\xcd\xbf\x9fh\xfeh\xed\x1b\xdb\xdf\x0a" +
	"_P]\x9e\xf5\xad\xba:\x8b\xfe\xba7\xcc\xe5\xb7\x7f" +
	"\x1c\xf1\xec\xab\x9f\xac\x13%\xdc\x96UD\xaf\xe9b\x04" +
	"C\\\xdf/~\xa7\xe4\xc8z\x91\xe0pV>\x11\x1c" +
	"g\x04\xaf\xed\x9f\xff#\xf9\xcac\xebA\xc9\xb6\xd5\x88" +
	"\x83\x98\x1a\xd3\x06\x11\xc1\x86\xcf\x83\x7fk\xfa\x8f\xac\x0d" +
	"\xa0\xe4\xda\x04s\x06=I\x04\xad\x8c\xe0\xfe\x94[\xde" +
	"\xfaV*\xdf\x106\x04S\xc2\xaeA\xd5t\x93\x8e\xe1" +
	"\xa7q\x95\xff\x0f\x1b\xc3\xea\x09\x1f\xdd\x1a\xe6\xdd\xc5\x8e" +
	"v\x9eO\xab\xfa\xe4j\xcf\x03\x96\x0d\xd9\xd9\xc3\x83~" +
	"N\x04'\x07\xfd\x1d\xd0\xbc|\xce\xc7\xefv\xa6\x1fz" +
	"@T\xe3\xb1\xc1\x8c\xc3\xc9\xc1\xc4a\xe1\xaf\x7fr." +
	"\xb7\xa4h\x93\xf8\x8a\xe4\xec\xdb\x89@\xc9fF^\xd1" +
	"\xfa\xf6\xecIwo\x0as`z\x1e\x97\xddI\xd2\x9d" +
	"\xba\xf0\xdf\xd3\x17\x8c\xf9\xe6aP\x06\xcaf\xf5w/" +
	"\x1ch\xcc<\xb6\x17\x00\xd5\xcb\xb3O\xa8%\xd9\x83\x01" +
	"\xd4\xeb\xb2\xa7\xaan\xfa\xcb\xf4\x17\xcc\x9b\x92\xfa\xd8\xc4" +
	"\xcd\x02\x9b\xd9\xd9\x9b\x88\xcd\xdbkV\xbe\xfa\xfb3\x93" +
	"6\x83\xa6\"\x89\x90B\"Te\xd7\"\xe0\x84\x19\xd9" +
	"\xbf@@s\xcf\x9a\xce\x82_\x9b_l\x11\x85<3" +
	"\x849\xc3\x97CH\xc8{~sY\xf3\xbem7l" +
	"\x15T\x98\x95\xe3$\xee\xc6\xad\x05\xcb\x97\xe4?\xb6M" +
	"T\x00\xe60\x03\xa7\xe6\xd0\xd1\x1dS\xef>\xbe~\xe1" +
	"\xb7\x8f\xc7\xdc\x022P-\xcc9\xa8N\xcc!g\x19" +
	"\x973U]\x9a\xe3P\x97\xe6\xa4\x9bol\xdf8\xf7" +
	"\xb1\xaf\xde{B\xe4\xd8\x91C\xe2\xaa\xcb\x19\xc7E\xa5" +
	"\x0d_<z\xa0x\xbbp\xd5\xcd9\xebI\x98\xa1\x1b" +
	"w\x8c8|\xd2m\xfd\x92,\xd1O\xbf\x0a\x1f}0" +
	"\xa7\x1d\xd0<U\xf2\xb3}\xeb\x8f\x9c\xde.\xdc#y" +
	"(Sv\xcb\xb0\xe6\xbaww\x7f\xdf\x05\xda@\xc4\x88" +
	"\x9c\xc92\x89\xf7e\xce\x93\xeay&\xe8\xb9\x1c\xb2\xfa" +
	"\x8a\x9f\xbe\xf4j\xfb\xd1\xff\xf7\x94\x18\xda\x87\x87>\xcf" +
	"\xac>\x94D\xf4\xef\x19\xd9p\xe4\xfa\x01;\xc2>\xc9" +
	"\xde3%\xf7QzO\xf2#\xd7,\xfd\xeeE\xdfN" +
	"Q\xc4\x89\xb9L\xc4\xf2\\\x12\xb1\xf0\xfb\x0b\xff\xb8i" +
	"\xcc\x91\x9d\xc2\xed\x1e\xcc=HGK\x7f\xfc\xf1\xcd7" +
	"=t\xf5\xd3\xa0\xe4Dn\x97;\x89\x8en`G_" +
	"\xbag\xf6\x90\x8aIC\x9e\xe1\x96N\xa6\xf7\x9e\xcfu" +
	"\x92\xa5S\x87\xfd\x84,m|\xb0\xa5|\xea\xc4\xdb\x9e" +
	"\x89\x89\xdd\x01t\xb7\xb6\xcbN\xa8K/\xa33\x8b/" +
	"\xdbC\xc4W\x7f\xde\xd80\xac\xec\x86g\xe3\x1c\xf0\xb9" +
	"\xe1o\xaa\xaf\x0c'\xca}\xc3\xa7J\xea\xf4|\x07\x80" +
	"\xf9z\xf5\xba\xdf\xed\x1b>cw\x1c\xf5\xc4\xfc\xe7\xd5" +
	"\xeb\x89D\xbd.\x7f\xaaj0\xe2\xef\xf7\x9e(\xba\xeb" +
	"\xc3\xf6\xe7\x13x\xc5\xf4\xfcG\xd5\x19\x8c\\\xcb\xbf[" +
	"=\x9b?X=\x97\x9fnz\x06\xfc\xf2\xe8\xa9\xf9\x97" +
	"\xbd`\xa9\x9c\xcc2\xe1l>]M=\x9f\xff8\xa0" +
	"\xd9\xf0\xd7\xf7?r\xf9K_\x8a5 )_}b" +
	"\xc4&u\xe7\x08:\xd35\x82\xe9\xe1%\xc9_t\xe0" +
	"\x16\xe3`\x82\xf7_~\xc5~\xb5\xe4\x0a\xa2-\xbcb" +
	"\x8f\xa4\xbeX\xe0P_,H7\x7f\xb8\xddy\xfaf" +
	"y\xfeA\xc1.\xbb\x0a\xf6\x93]>\x1dr\xcd\xb2\xae" +
	"\x0d\x1b\x0f\x8a\x0e\xfbD\x01\xc3\xf1\x9d\x05\xe4\x0d\xe7\xd7" +
	"\xbf3\xf3\xebe\xff\xff\x90%\xbbD\xbc\x8f\x15\x84A" +
	"\xa2\x80\x0c7+\xef\xe7OW\xfeg\xe7\x11\xd1)\xa6" +
	"\x14\xb2 \x9a^H\x04_>{\xc4\xd5\xe8\x99\xf7\x86" +
	"\xf8\x8a\xad\x85\x01\x06T\x85\xf4\x8a\x03'\xee_\xfd\xd9" +
	"\xc3\xea\x9bQ\xaf(d\xa9\xe2$\xe3`\xdb:\xd6:" +
	"s\x8a\xd6\xabF\xd1\x95\x00\x13\x96\x169P\x9d8\x8a" +
	"\xcc3\xe7\xf3e\x93\x96=\xfb_\x1f\x88\x02\x0d\x1b\xc5" +
	"$.\x1cE\xec\xe6y\xdfl?0\xbb\xe5C!\x90" +
	"V\x8ez\x9a\xb4q\xc3\xe9;?}\xbcp\xf2\xc7\xe2" +
	"\xd1\x8eQ\xd5,|\xd9\xd1Y\xd7\xde=\xf3\xed\xa6\x15" +
	"\xa7\xc5\xbb\x9c\x1c\xb5\x9e\x81\xcd(\xba\xcb\xb8=\xa9\x15" +
	"\xd3\xce\x9e\x8d\"\xc8*f\x1c./&\x82\x99O\xcd" +
	"\xbc\xa9\xd5\xf8\xe8\x131\xfc\xca\x8b\xefb\xeab\x04\x93" +
	"7\xe0\xd1L\xaf\xfai8R\x98\xadZ\x8bY\xda\xeb" +
	":qj\xe2\x9f>\x1b\xfe)h\xb9\x88\x11\x84\x9d\"" +
	"9d\x80\x093\x8a\x1bPu\x17\x13?\xa38\x8f\xfc" +
	"\xe4\xb9\xfa\xabSgf\xff\xf2\xd3p\xf6a\xf7\xdc\\" +
	"RK\x9c\x0e-\xeb\xf8\xf3\xc7s\x8b\xcf\x0a\x1aX]" +
	"RA\xbf|\xf7\xe6\xca\x15'7\xdfx6!\x94t" +
	"\x94\x1cT\x97\x97\xd0_KK\x08J\x1em\x99V7" +
	"\xe0\xb6%\x9f\x836\x14m\xcb\xcd\x19\xcdT\xed\x1eM" +
	"\x8e\xed\x1b\xd45\xeb\x1f\xe5\xe3\xbf\x8a\xb3\\\xf2\x98'" +
	"\xd5\xb41\xc4*u\x8c\x83\xfe\x030\xdf=\xf5\xef\x05" +
	"?Z\xfe\xc3\xafD?8;\x9a\xc1\xcb\xf9\xd1\xa4\xfd" +
	"\x93\x8f\xdct\xe7\x0b\xca\xb9\xafD\xdd-\x1d\xc3\xf2\xd1" +
	"\xbdcHw\x05-\xeb\x1eh(^\xf4\x0d\x07\x11v" +
	"\xb3mc\xc8\x19't\x8daJ\xf9z\xee\xd657" +
	"\xcf\xbb\xf0\x8d\x10\x0a\xaf\x8de\x09u\xc4s\x8e\x83\x7f" +
	"\xde{\xe4\x9c\x98j\xc7\xb2<\xf1\xc1o7\x0e|\xf3" +
	"\xda\xeb\xbf\x133\xe9\xd6\xb1,H\x9e\x18K\x8a\x98\xfd" +
	"L\xe0\x8e\xab\x87?\xf3\x9d\x88\xea\xe3\x98\xcd\xfee\xd7" +
	"us\xceN\x9c\x7fA`z\xef\xb8j\x04\x13L\x98" +
	"h6\x07t\xb7wt\xa3\x9e\xe4\xf7\xfa'\xd5\x19\xc1" +
	"\xa0\xdb\xe7\xad\xf4yC\xc6\xc2\xd0h\xbd1\xe4^\xe0" +
	"\x0eu\x8c\xac\xd1\x03\xba\xdc\x1a\xd4\x92\xe4$\x80$\x04" +
	"P\xd2\xc6\x03h\x03d\xd42%\xcc3\x16\x18\xde\x10" +
	"f\x987yVm\xfd\xe8\x0f\xbb\x1f\x01@\xcc\x00\x8c" +
	"\xe1\xad{]\xc1\x90/\xd0Z\xeew\x8fv\x19\x1e#" +
	"d\xb8\x18\xe3\xd6 \x88\x8c\xf3#\x8c\x1d\x01\xa3\x09/" +
	"E\x01n\x00\xf0\xd2\x1e\x197\x1b\xa1*\x97\xe1\x0d\xb9" +
	"C\x1dU\xae\x91\xb5\xa5F\xb0\xcd\x13\x8a\x12<'\xc2" +
	"_v\xbb0\x0d$L\x13X\xca\xc4r\xba\xee\xf6\xce" +
	"t\x1b\xed\xa3]\x01\x9f\x9f\x0b\x19%e5\x806P" +
	"F-[B\xd3\xe7\xbc\xddh\x0cU\xb9\x98t\x88\x11" +
	"p\x8e\x91\x96\xb1\x9e\xe1f\x8c\x9b\x8d\x10\xfd\xbf\xca\xdb" +
	"\xe4\x1bY\x93\xc7^\x10M\x17u\xab\xa0\xbe\xc0\x18Y" +
	"k\xe4\xc5]F\xb4B\xc87\xcf\xf0\xf6\xe5>\xb5L" +
	")\x18y\xa1$\x08V\xe3k7\x02\xa5N\xdf\xc2z" +
	"\xbd\xb9\x06\xb1\xdb\x97\xb9C\x1e\x03\x07\x82\x84\x03\xbb}" +
	"Y\xc0\xa0\x0b\x90\xe0\xc1\xf4X\xc1E+7\xea~\xbc" +
	"4I\x06\x8c\xd7V\x1c\xaf\x1a=\xe0\xd0\xa3=\xf1b" +
	"L\x11v\x9c\x16=\xe0\xf66Os{\xe7\x91=j" +
	"\x8c\x90Wo5\xc2\xea\x91\xa3\xc5-\xb2\xc4\xbdQ\xc2" +
	"t\"B\xc5\\\xb7:\x7f\xed\xf6\x19\x9f}\x04\x00e" +
	"\xa8`\x9e\x96$\xa1\xf8P\xc1\xc1Z\x12\"b\x8d\x8c" +
	"\x98aV\x9d\xf8\xe95\x81\xa7\xe6\xdcC\xb1\xa1\x08\x92" +
	"$\x93$t\xc5\x18ij}\x1e\xa3<\x18t7{" +
	"[\x0do(\xa1\xf1\xf3#B9\x16\xe8\x81\xfe\xcbd" +
	"\xa3y\x8cL\x89\xb0\xa0\xd1\xe3\x0bZ\xba\x09\x05\x01\xa2" +
	"i-\xdf\xf1\x1a\xed\xb745\x19\x01\xebhBMV" +
	"D\x0c\xbf$\x18\xa6C%\x02\xd2\x89\xb4\x13#IS" +
	"\x9b\xa7\xc9\xed\xf1\xd4\x1a\xf3\xdb\x8c`(\x12\x9d\x19\xf6" +
	"Kt\xd2\xcc\xad2j-\x12*\x88\x99\x04\xc4\x8a\xb1" +
	"\x09@k\x91Q[&\xa1\"I\x99(\x01(K\x1b" +
	"\x00\xb4;e\xd4VI\xa8\xc8r&\xca\x00\xcaJ'" +
	"\x80\xb6BFmM\x9cs\x06\x8c\xf9m\xee\x80\xe1\xc2" +
	"\x1a#\xd0\xea\x0e\x06\xdd\x0e\x9f7\x88?\x00\xa6P\x04" +
	"\x89\xfe4]F\xb01\xe0\xf6\x87@\xf6\x050\xc3\x9c" +
	"\x95\xbb\xe7\xd9\x87\xd2\x0f\x9c\xe1\xa8\xe8r\x07\xfd\x1e\xbd" +
	"\xa3\x0a\x1c\xde&\x1ff\x98\xa7G\xbd\xf7\xa7\xd4Mu" +
	"\x9b{G\xcd`H\xef(o\xd7\xe7%\xf6\xd1I\x11" +
	"\xcd\x96\xb6\xe8^\x97\x87\xbc\xf4\x9d\x8a\xb9s\x1f\x1b\xf9" +
	"\xc5\xda\x84&\x8e\x98\xcdR\xa6`\xb8\xb8\x88\xbd\x18\xc3" +
	"EC\xbe?`4\xea!\xc3U\xd3\xe6\xf4\xb8\x83-" +
	"a\xcb\xc5\xc2\x90\x18\x0a\x0e\xb7w\x1e\xf9k\xc4Q\x15" +
	"\\d\xf2\xc8\x80\xd2plhIr2upV\xcf" +
	"\x80\xbc\xa1U\x94N\x90\x944\x87\xc9\xa3\x09y8a" +
	"\xa8\x0c\x19_\xbb\xe6\x16\x1c:^r\xa7\xde8\xaf9" +
	"\xe0k\xf3\xba\xcayB$\xfd;<\xa1`\x9f\xc2\xc0" +
	"\xba\xa7\x96k+\xb3\x8b0k\xbb\x8c\xdan\xc1Aw" +
	"\x91\x86w\xc8\xa8\xbd !Z\xfe\xf9\x1c\xb9\xe2n\x19" +
	"\xb5\x97\xc9?\xa5\xb0\x7f\xee\x0b\x00h{e\xd4\x0eI" +
	"\xa8$\xc9\x99\x98\x04\xa0\xbcF\xe8\xfc\xb2\x8c\xdaQ\x09" +
	"\x95\xe4\xa4LL\x06P\x0e\x93{\x1f\x92Q{GB" +
	"%%9\x13S\x00\x94\xe3DyTF\xed}\x09\xcd" +
	"\xb6\xa0\x11\xa0$D\x00\x99a\xbe\xae\xcc\xf9\xfd'\xaf" +
	"\xed\\c\xb9\xe2\x92\xc6p\xc8\xa1\x12\xe9e,;[" +
	"\x1eP\x0f\x8e\x0e\xbf\x81\xa9 aj\xe4i\x0d\x843" +
	"\x1a^\x0a\x12\x85M\x9e\x8f\xd4!\x84Q\xcf\x11\x92\x17" +
	"\xd2\x9dU\xddd\xe6\x88\x8a#\xbe\x1a\x8f\x8c\xfd\xf3\xd5" +
	"\x1eK\x9f8K\xc7gg\xabHH\x0f\xe8\xad\xfdL" +
	"\xce\xcc\xe3\xcb\xfd\xfe\x1a#\x10t\x07C\xe4\x99\xe1\x9c" +
	"K\x0e\xcd\xabp\xe4\x8d\xab\xa2\x14\x01\x94\x0f\xc4\xf2\\" +
	"TJ\x1c\xe9T\x14p\x8c\xb7\xa7\x04\xcc\x93\x12=," +
	"\xc3\x1a\xc4\xf2$T\xd0i\x96\xfb\xfd\xb7P\xa2\x04G" +
	"\xa8\xca\xd5\x13\xde\xb4\xe8\x01\x83\xf4m\xbbp\x82\x94\x98" +
	")a\xfa\x02\xb7\xd1\x8eJ\xa4I\xba\x080\xe0\x88\xd6" +
	"'\xf8\xe3\xe2\x0c\xb0\xc5)\xa4@)\x90Q\xbbJ\x88" +
	"\xa8q\xb7\x03hce\xd4&K\xf1\xb0\xfb\xaf_\x1f" +
	"\xaa\xd8\xff\xd9\xce\xd79\xecz}!w\x93\xbbQ\x87" +
	"\xf4P\xd8]^)[\xb9\xe3\xada\xcb/\\DN" +
	"\x8a\xab\xb0\x90\xceL\x0d\xe8\xee</E\x1b\x19YH" +
	"W\xe3#\xe9\xca\xceV\x14\xb9.\x195?e+\x0c" +
	"\xa3A\xebx+\x85\x85\x044\x98\x7f\x17\x80\xe6\x97Q" +
	"\xbbC\xc2<\xdd\xef\xafr\xd9e\x99\xee\xf7\xcf$\xcf" +
	"\x02\xd9\xe7\xc5\x01 \xe1\x00\x88\xad\xdc|\xed^#P" +
	"\xe52\xd0*\x99!\xae\xa6KIp\xddf#D\x18" +
	"m\xb8x\x1a\xf4y\x83vm\x90\xa8D\xa9\xb7K\x94" +
	"\x91\x15G\xe6\xd6}\xf5\xd9\x9d}*Q\x84\xc4z\x11" +
	"5\x93\x15\x92\xbd9x\xa5\x1e)\x89E\x8f\xaaM\xe4" +
	"Q\xe4\xf5\xc52j\xd7Jh\xb2\xd3\xaeJ\x1dP(" +
	"\x11\xd2=n\xef<T\x84\xd4\x12\xed=)=\xc4B" +
	"\xad\xd1L(\x10\xa04\xc3\xcb'\xd1\x8b\xe4X\xb8\x08" +
	"Y\x9d\x01os\x04\xe9\xab\x13I?^\x90>\xb6T" +
	"\xb6\xd1\"\\*\xe7yt\xa7\xe1\x89)\\3\xfa\\" +
	"A\xf0:=\xdb\x96h\x1dI\xb4VF\xedaA\xa2" +
	"\x07\x09\xa9\xef\x97Q\xdb\x12\xc9y\x9b)\x94\x1f\x96Q" +
	"\xfb\x9d\xe0\xe5\xdb(\xe7=&\xa3\xb6C\xc8y]N" +
	"+\x8d\xfeE\xc8y\xaf\x8c\x8fd\xc7\x7fNzcU" +
	"\xa1\x11\x0cY\xd0b9mtZ\xfbA\xb7iMl" +
	"\xbeXK\xe8\xb0\x00b\xb8\xad\xba\xd7\xe8\x9e\x7f\x91Q" +
	";-\xa8\xeeC\xba\xe7\xfb2\xd6\xa2P\xcf\x9e\xef\x04" +
	"\xa8E\x19\xebr1R\xd0\xaaC0\x00P\x97M\xcf" +
	"\xaf\xa2\xe7IIL\x7f\xea8t\x02\xd4\x8d\xa5\xe7\xd3" +
	"\xe8yr2S\xa1Z\x85\xd5\x00u?\xa6\xe7\xf5\xf4" +
	"<%\x85U\x0e\xaa\x86\xb5\x00u5\xf4\xfcVz\xee" +
	"pd\xb2\xad\xc5ll\x00\xa8\x9bE\xcfC(\xa1\xe9" +
	"\xb7P\x01\xc4\xea8#2\xd8\xb1\xf4\x11\xf0y\x0c\xe1" +
	"g{\x02\x19\xfe\xd9t\x19^7!\x0cr\x88\xc1\xb8" +
	"J\xbbU\x0f5\xb6\xd4\x1a\xf3!\x8f\xf4\x1f\xecV\xf5" +
	"a\xc2[\x9a\x9a\xc0a\x04z \xd3\xfd\xfez\x82\xc7" +
	"\xb0\xbb$\xf4\xfc\xaaF\x1f \xa5\x87\xd2M[\xf3\x9c" +
	"\xb7\xfd\xf1[\xee2l\x08R\xdf\xe1\x07Y\xbc\xd4\xa8" +
	"\xf5{\xdf\xb8\xe4o\xd7~\xc0\xdf\x10eu\x11U\xe5" +
	"\x85,\xf5\x8fd\xa9\x9f\x8f\x07\x91O\xcaU\x05\x1f\x05" +
	"IMC\x07\xa2=\xcbE>\x8cR\x11kAR\xce" +
	"9P\xb2\x07E\xc8\xc7>\xca\x99\xf1 )\xef:P" +
	"\xb6\xa7[\xc8'\xaa\xca\xe1\x0a\x90\x94}\x0eL\xb6W" +
	"5\xc8g\xfc\xca\xaeE )]\x0eL\xb1gu\xc8" +
	"WA\xcaV\xe2\xb9\xc1\x81\x0e{\x00\x87|v\xa5\xac" +
	"\xae\x06IY\xe9\xc0${\xaa\x8a|\xe2\xa8,\xbe\x1d" +
	"$\xa5\xcd\x81\x03\xec\xf5\x1e\xf2\xdd\x88\xe2\xa6s:+" +
	"\xd7YrA\x9e]\xd2)\xbd\x94\xa1\x19r\x1b\xf5\xbe" +
	"\x19A\x030Pf\xd5\x94e\xb8\xc4\x0a\xbe24y" +
	"\x12\x86R\xfe(\x8fu\xadeh\xfa\xfc\x06\x9b#\xb0" +
	"\xacc6ztw+\xb9M\xbau\x92W{`\xd5" +
	"I1f\x8ad\x19\x88\x94g|\xb4\x89|\xc3\xa6(" +
	"\x0d )\xa9\xec\x02l\x96\x00r\xab\x11\xcd\x0e\xf9L" +
	"#\x9d\x84!^\x03\x18/\xbe\xc5C\xbe\xefS\xc6U" +
	"\x00\x94\x17c\xf9dT\xa6\x93\xcd\xf9\xaa\x12\xf9^Q" +
	")\xa7bp2\x96OCe\x8ec\x895\x1f\xe1\x09" +
	"\xd5\x9e{\x88\xf5`\xd4\xc32L\xa7\xba\xb5?\x07X" +
	"\xcb\x14\xa9\xf1\xa0\x0f\xd5dt\xd9\xc0\x0d\x18\xb0\xd3\xc3" +
	"@\x1b\xe3\xa6P\xa9P&\xa36M\xc0\xb8*\xea\xd9" +
	"\xa7Y\x8d<\xc78\xc3\x19)\x8d.\xaa=\xefc\xff" +
	"\xcd\x8cE%\x85\xe3F\xa3\x89l%\xe42\xc2\xde5" +
	"2j\xbf\x11\x84\xdd\xd0\x10\xc9e\xb6\xb0\xd1\xc9\xcc\x1a" +
	"0lsZ\xc9l\xaf\x84HX\x8c\xa8\xbcH\xe9\xf1" +
	"\x05\x9e\xcb0\x13\x93\x11\x95W*\"\xb9\xcc*\xdc\xe2" +
	"ai\x81\x11p\xd6\xb4\x04t\x90\x83\x89~\xb6{-" +
	"\x07Ah\xfc\xef\x09\xc1\x9a\xeb\xca\xe7\x0c\xfa<F\x88" +
	"\x01\"=C\xc0%.\xa3I\xa7\xba\xc4\xfawL\xac" +
	"\x08\x95\x0d\xb0h)f\x1e\xce\xd7\xb4\xc8\xb7\x8f\xaa\x86" +
	"\x9d\x00\x95\xf5\x88\x95.D\xb5\x8d!\x1b_\x12!\xdf" +
	"\xe2\xa9n\xdc\x0fP\xe9G\xac\xbc\x13Q]\x8d\x04q" +
	"|E\x82|\x19\xa8.\xa7\x84U\xb9\x0c\xb1r\x0d\xa2" +
	"\xba\x19\x09\xec\xf8\x1e\x14\xf92F]G\xe9\xabr-" +
	"b\xe5\x16Du'\x12\xec\xf1\xe5\x13\xf2\xad\x89\xba\x0d" +
	"+\x00\x88\xa2r\x07\xa2\xba\x0f\x09\x00\xf9\x96\x16\xf9\x94" +
	"]\xdd\x85E\x00DQ\xb9\x17Q=\x86\x04\x85\xfc\x83" +
	"\x04\xe4\x03~\xf5\x15\xc6k/b\xe5QD\xf5C$" +
	"\xe0\xe3KV\xe4\xbbo\xf58\x93\xeb\xaf\x88\x95\xa7\x11" +
	"\xd5\xf3H\xd0\xc9WZ\xc8?4P\xcf\xb27\x9eF" +
	"\xac\xfc\x1eQM\x93\x1c\x98j\xef\x82\x90\xaf\xafU\x94" +
	"\xd6\x03T&IX\x99)\xa1z\x85\xe4\xc0K\xec\xed" +
	"\x17\xf2\x0f\"\xd4!R\x00\xa02[\xc2\xca\x02\x09\xd5" +
	"\xeb$\x87\xc9\x8bP\xe4\x1d\x19\xb6p\x14\xb0\x87\xef\"" +
	"4D=,C\xfb\xbc\x14[\xc5vs\xa4;>\xbc" +
	"\"\x87\x8b97\xd3m\x00\xb6\xf7\xe7\\,n\xf6\xe5" +
	"L\x14n\xf6\xe9%\xd6\xb6\xa3\x7f\x17\xb2\x9a]\xc0\xfe" +
	"\x09'N\x05\xfa\xf4\">\xddB>\xde\x92C\x1d\xfd" +
	"b\xc0W.\x90\xc7:\xc8\xfe\x9c\xedm$\xd1\x8ff" +
	"\x89\x8f\x81{\xe8\xf6\x84\x1dB\xec\xd2\xa9\xf7QM\xa2" +
	"|\x16\x10\xdb}9\xba\xff\xa2t6RFm\xac\x90" +
	"!J\x1a\"\xfdWL\xe6\xeaef\xdc\xcbj\x88\x0f" +
	"\x9fz{\xff\xf8HS\x18\xfd\xfe\xbeu{=l\xda" +
	"\xac\x1dVw{\x19\xb7EIyD1\xb3\x8fk[" +
	"\x17\xad]\xb6\xbbo{\x87p\xad\xc6\x14]\x1a6\x9d" +
	"x\xcf\xdb\x13\xf5\xb9T6\\%\xa3V#\xd9\xcdY" +
	"=\xa43\xbb\xf2\xf1F\x9fJ\x85\xa8R\x80z4\xd9" +
	"h\xd7\x06\xa0\xf8\x1dHj\xb5\xf0AW\xaa\xd3\xe4[" +
	"=\x000\xd9.\xcd\xe9[\x08\x8ez\xbdY\xcb`\x89" +
	"\x90\x7fR\x86\x9c\x852\xdf\x09\x92\xe2\xa6\xf4\xc7w\xc7" +
	"\xc8?(R\xe6PI9\x83\x92\x1e\xff8\x05\xf9\x17" +
	"QJU'H\xca\x14Ju\xfc\x13%\xe4\x1fd)" +
	"\xd7\xdd\x05\x922\x8e\x95\xa2L V\xeb\x94\xa1\xc9\xe7" +
	"\xa6 \xfb\xbc\xe1\x7f2\xd5\"o\xdc\xd1z\xca\xe6\xd7" +
	"h\x99\"\xa6&\xeeiN\x98(\x12\x1a\xfa6G\x99" +
	"\xe9\x069\xd1\x14\x91\x0fT\xec\x8f\x0d\xfa0\x8eK8" +
	"\x9f\xb2\x9c\xa7/\xe3 {\xa7\xd4[@9\xbb\x0f\xe8" +
	">V\x99}Z7\xfc\xaf\xef\xdf\x85\xd5lx\x9f\xd7" +
	"\xbf\xddlro\x81\xda\xd3,\xb0\x97\x95o\x82\xf9V" +
	"\xec\x82<)\xd1\xfcO\x1c\xfe\xc9^\xd6Lg\xcaI" +
	"\x03M\x93\xbd}19\xdc\xc2\xf0\xf6/\x0d/\x98a" +
	"\xfb-\xad\x8d\xac\xff\x86I\xe7Mk\xce\xbar\x12\x80" +
	"\xb6LF\xed>\x09\xd1\xaa\xd9\xef]\x04\xa0\xad\xb2\xaa" +
	"\xfb$\x0c\x0f\xa06w\x02h[\xc2+\x9bt\xaf\xcf" +
	"k@\x8a\xa9{<\xe5\x8d\x8dF\x100\x08)\xa5\x01" +
	"\x9f\xc7\xa8r\xa1\x03$t\x00\x9a\xba+\xec\x92P\x1a" +
	"v\xcaX\xc0\x09\x18\xad\xbe\x05F\x8f3\x8f\xbe\xac\xb0" +
	"c7k\x8en\x17\xba\x96\xa7sB\xa2\x8b\xc4\xcc\x8d" +
	"\x066Y\xa3j\xc4\xb8Q5\x1bKcLCF\xea" +
	"\x92\x10\x95VB\x7f\x8f\x8c\xdaB\x093\xac\x19^[" +
	"\x910\xa9\xee\xae\x9b\xe9\xad]I\xd0\x91\x847\xf2\xb1" +
	"s\xebD\xc9\x84\x8f\x01\xec\x80\x12\xfa\xcf\xa2\xd8\xfe\x13" +
	"Q\xa9\xa2\x877\x86\x13\x09\x1bO\"*\xda$\xab'" +
	"\x9d\xd5\xed\xe2#\xdd\xaf\x87Z,\x81@\xc1K\x00J" +
	"\xbdF{\xbd\xee\x8c\xeb\x99\xac\xc4Rg\xe4\x85'\x8b" +
	"\x885rr<\xd8&.;\x12lA\xc6[ U" +
	"&\x80\xd4\xf5\x9b\xac\x9b\xdd*a\xde\xfc6#\xd0\xd1" +
	"\xfd\x00\xac_Y\xb1\xe7\x16\xbf\xb7\x1dr\xc8m\xb8*" +
	"\xbb\x87\x81\xf8E\x1f/r2m~\x8b\xc9\xc9\xee\x90" +
	"Q[!\\wyE$\xa6\xf9HY\xdc\xe8\xdb#" +
	"\xe5\xd5\x01\x00\xed>\x19\xb5\xfb\x85\x91\xb2\xd8\xd9\xff\x93" +
	"\x96\xa3\x89\xc7\xc2\xdd\x7f3\xd5\xcd7\x18\xdd\xb9z\xe2" +
	"Uu,5\xe5{\xbb0\xfe\xbf\xf6%E7+[" +
	"\xbe9\xee\x83fl\x9d\xffO\x00\x00\x00\xff\xff\xa4," +
	"\xbbN"

func init() {
	schemas.Register(schema_c8d91463cfc4fb4a,
		0x85e320f14a5d23e0,
		0x87d94955ce3c61dd,
		0x8c4a70a31703d35c,
		0x8c519e0dedc17d73,
		0x8f2ef49549d64e86,
		0x9206caa8d3e3cc7e,
		0x9210d9e69d14fa35,
		0x982790c08b1958ec,
		0x99efcebf23bbae35,
		0x9ad62de07dfc6419,
		0x9ad927034671cad1,
		0x9d159666de73f39d,
		0x9d4102fadb4f069c,
		0x9eb6708c01ec2079,
		0x9f6c36ef490dfd92,
		0x9fd40f92e1eb5d21,
		0xa22a2d1cf9579778,
		0xa2873a59df6d885c,
		0xa4f82f764dc3fee8,
		0xa535ac09456b2870,
		0xa53aedb3ce8994df,
		0xa8f4ff97289294c7,
		0xa93eadc9671ea08b,
		0xadac227f85285c65,
		0xaffa789add8747b8,
		0xb1e3f6ac609eb4d7,
		0xb42ccfaaf45a3f7a,
		0xb469e5d523b89e1b,
		0xb4ecd69ac97e2de8,
		0xb5fcc0e153671d68,
		0xb70bd877cecb7b88,
		0xb8083dd65a24c770,
		0xb96fc5fb8137a705,
		0xb9d62f4beefefc29,
		0xba36a34b4eeb483f,
		0xbc193a4219598bcb,
		0xbc5e354741a8e665,
		0xbf3e401d5a63f336,
		0xc05520c9b0994ad3,
		0xc277e9822ae2c8fc,
		0xc41e71e8d893086c,
		0xcb3f7064eae4dc5a,
		0xd2654fcf2a7002cb,
		0xd271034eec62b43b,
		0xd29e9db5843719f0,
		0xd42684f756e09afd,
		0xd692a643ba8a1f58,
		0xd76b6c6364d6bff5,
		0xda13a4f2919ce2cf,
		0xdbb4d798ea67e2e7,
		0xe6abbf843a84f35d,
		0xe96859cf77da6e6b,
		0xeb3c29aff080ec3e,
		0xec8866df56873858,
		0xecf1f14c4209c731,
		0xefea656d4b56b756,
		0xf0136e14d8019d3c,
		0xf020f2be35e8e2b5,
		0xf0931856093654c1,
		0xf12c60ebc67984d4,
		0xf144a5e58889dafb,
		0xf37f5e08534c68aa,
		0xf63241ee58b5166f,
		0xf63b8546288ee8e1,
		0xf6f911c4804ba7e5,
		0xf87a2c5a9f996828,
		0xf8fe6b4e94a960f7,
		0xf9d6c8c6d207c123,
		0xfb3d38da0c9eaee6,
		0xfbbc20367c72bc59,
		0xfe7135f15d39bd5b)
}
