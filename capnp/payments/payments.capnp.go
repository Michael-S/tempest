// Code generated by capnpc-go. DO NOT EDIT.

package payments

import (
	context "context"
	strconv "strconv"
	supervisor "zenhack.net/go/sandstorm/capnp/supervisor"
	util "zenhack.net/go/sandstorm/capnp/util"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
	persistent "zombiezen.com/go/capnproto2/std/capnp/persistent"
)

type PaymentSource struct{ Client *capnp.Client }

// PaymentSource_TypeID is the unique identifier for the type PaymentSource.
const PaymentSource_TypeID = 0xf9692c357124ed70

func (c PaymentSource) GetTitle(ctx context.Context, params func(PaymentSource_getTitle_Params) error) (PaymentSource_getTitle_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xf9692c357124ed70,
			MethodID:      0,
			InterfaceName: "payments.capnp:PaymentSource",
			MethodName:    "getTitle",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(PaymentSource_getTitle_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return PaymentSource_getTitle_Results_Future{Future: ans.Future()}, release
}

// A PaymentSource_Server is a PaymentSource with a local implementation.
type PaymentSource_Server interface {
	GetTitle(context.Context, PaymentSource_getTitle) error
}

// PaymentSource_NewServer creates a new Server from an implementation of PaymentSource_Server.
func PaymentSource_NewServer(s PaymentSource_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(PaymentSource_Methods(nil, s), s, c, policy)
}

// PaymentSource_ServerToClient creates a new Client from an implementation of PaymentSource_Server.
// The caller is responsible for calling Release on the returned Client.
func PaymentSource_ServerToClient(s PaymentSource_Server, policy *server.Policy) PaymentSource {
	return PaymentSource{Client: capnp.NewClient(PaymentSource_NewServer(s, policy))}
}

// PaymentSource_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func PaymentSource_Methods(methods []server.Method, s PaymentSource_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf9692c357124ed70,
			MethodID:      0,
			InterfaceName: "payments.capnp:PaymentSource",
			MethodName:    "getTitle",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetTitle(ctx, PaymentSource_getTitle{call})
		},
	})

	return methods
}

// PaymentSource_getTitle holds the state for a server call to PaymentSource.getTitle.
// See server.Call for documentation.
type PaymentSource_getTitle struct {
	*server.Call
}

// Args returns the call's arguments.
func (c PaymentSource_getTitle) Args() PaymentSource_getTitle_Params {
	return PaymentSource_getTitle_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c PaymentSource_getTitle) AllocResults() (PaymentSource_getTitle_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PaymentSource_getTitle_Results{Struct: r}, err
}

type PaymentSource_getTitle_Params struct{ capnp.Struct }

// PaymentSource_getTitle_Params_TypeID is the unique identifier for the type PaymentSource_getTitle_Params.
const PaymentSource_getTitle_Params_TypeID = 0xcb2516f79343cbe3

func NewPaymentSource_getTitle_Params(s *capnp.Segment) (PaymentSource_getTitle_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return PaymentSource_getTitle_Params{st}, err
}

func NewRootPaymentSource_getTitle_Params(s *capnp.Segment) (PaymentSource_getTitle_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return PaymentSource_getTitle_Params{st}, err
}

func ReadRootPaymentSource_getTitle_Params(msg *capnp.Message) (PaymentSource_getTitle_Params, error) {
	root, err := msg.Root()
	return PaymentSource_getTitle_Params{root.Struct()}, err
}

func (s PaymentSource_getTitle_Params) String() string {
	str, _ := text.Marshal(0xcb2516f79343cbe3, s.Struct)
	return str
}

// PaymentSource_getTitle_Params_List is a list of PaymentSource_getTitle_Params.
type PaymentSource_getTitle_Params_List struct{ capnp.List }

// NewPaymentSource_getTitle_Params creates a new list of PaymentSource_getTitle_Params.
func NewPaymentSource_getTitle_Params_List(s *capnp.Segment, sz int32) (PaymentSource_getTitle_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return PaymentSource_getTitle_Params_List{l}, err
}

func (s PaymentSource_getTitle_Params_List) At(i int) PaymentSource_getTitle_Params {
	return PaymentSource_getTitle_Params{s.List.Struct(i)}
}

func (s PaymentSource_getTitle_Params_List) Set(i int, v PaymentSource_getTitle_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PaymentSource_getTitle_Params_List) String() string {
	str, _ := text.MarshalList(0xcb2516f79343cbe3, s.List)
	return str
}

// PaymentSource_getTitle_Params_Future is a wrapper for a PaymentSource_getTitle_Params promised by a client call.
type PaymentSource_getTitle_Params_Future struct{ *capnp.Future }

func (p PaymentSource_getTitle_Params_Future) Struct() (PaymentSource_getTitle_Params, error) {
	s, err := p.Future.Struct()
	return PaymentSource_getTitle_Params{s}, err
}

type PaymentSource_getTitle_Results struct{ capnp.Struct }

// PaymentSource_getTitle_Results_TypeID is the unique identifier for the type PaymentSource_getTitle_Results.
const PaymentSource_getTitle_Results_TypeID = 0xaf4ce1881ecae0ae

func NewPaymentSource_getTitle_Results(s *capnp.Segment) (PaymentSource_getTitle_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PaymentSource_getTitle_Results{st}, err
}

func NewRootPaymentSource_getTitle_Results(s *capnp.Segment) (PaymentSource_getTitle_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PaymentSource_getTitle_Results{st}, err
}

func ReadRootPaymentSource_getTitle_Results(msg *capnp.Message) (PaymentSource_getTitle_Results, error) {
	root, err := msg.Root()
	return PaymentSource_getTitle_Results{root.Struct()}, err
}

func (s PaymentSource_getTitle_Results) String() string {
	str, _ := text.Marshal(0xaf4ce1881ecae0ae, s.Struct)
	return str
}

func (s PaymentSource_getTitle_Results) Title() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(0)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s PaymentSource_getTitle_Results) HasTitle() bool {
	return s.Struct.HasPtr(0)
}

func (s PaymentSource_getTitle_Results) SetTitle(v util.LocalizedText) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTitle sets the title field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s PaymentSource_getTitle_Results) NewTitle() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// PaymentSource_getTitle_Results_List is a list of PaymentSource_getTitle_Results.
type PaymentSource_getTitle_Results_List struct{ capnp.List }

// NewPaymentSource_getTitle_Results creates a new list of PaymentSource_getTitle_Results.
func NewPaymentSource_getTitle_Results_List(s *capnp.Segment, sz int32) (PaymentSource_getTitle_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PaymentSource_getTitle_Results_List{l}, err
}

func (s PaymentSource_getTitle_Results_List) At(i int) PaymentSource_getTitle_Results {
	return PaymentSource_getTitle_Results{s.List.Struct(i)}
}

func (s PaymentSource_getTitle_Results_List) Set(i int, v PaymentSource_getTitle_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PaymentSource_getTitle_Results_List) String() string {
	str, _ := text.MarshalList(0xaf4ce1881ecae0ae, s.List)
	return str
}

// PaymentSource_getTitle_Results_Future is a wrapper for a PaymentSource_getTitle_Results promised by a client call.
type PaymentSource_getTitle_Results_Future struct{ *capnp.Future }

func (p PaymentSource_getTitle_Results_Future) Struct() (PaymentSource_getTitle_Results, error) {
	s, err := p.Future.Struct()
	return PaymentSource_getTitle_Results{s}, err
}

func (p PaymentSource_getTitle_Results_Future) Title() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(0, nil)}
}

type PaymentAcceptor struct{ Client *capnp.Client }

// PaymentAcceptor_TypeID is the unique identifier for the type PaymentAcceptor.
const PaymentAcceptor_TypeID = 0xd562e38729bbd911

func (c PaymentAcceptor) CreatePayment(ctx context.Context, params func(PaymentAcceptor_createPayment_Params) error) (PaymentAcceptor_CreatePaymentResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd562e38729bbd911,
			MethodID:      0,
			InterfaceName: "payments.capnp:PaymentAcceptor",
			MethodName:    "createPayment",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(PaymentAcceptor_createPayment_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return PaymentAcceptor_CreatePaymentResults_Future{Future: ans.Future()}, release
}

// A PaymentAcceptor_Server is a PaymentAcceptor with a local implementation.
type PaymentAcceptor_Server interface {
	CreatePayment(context.Context, PaymentAcceptor_createPayment) error
}

// PaymentAcceptor_NewServer creates a new Server from an implementation of PaymentAcceptor_Server.
func PaymentAcceptor_NewServer(s PaymentAcceptor_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(PaymentAcceptor_Methods(nil, s), s, c, policy)
}

// PaymentAcceptor_ServerToClient creates a new Client from an implementation of PaymentAcceptor_Server.
// The caller is responsible for calling Release on the returned Client.
func PaymentAcceptor_ServerToClient(s PaymentAcceptor_Server, policy *server.Policy) PaymentAcceptor {
	return PaymentAcceptor{Client: capnp.NewClient(PaymentAcceptor_NewServer(s, policy))}
}

// PaymentAcceptor_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func PaymentAcceptor_Methods(methods []server.Method, s PaymentAcceptor_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd562e38729bbd911,
			MethodID:      0,
			InterfaceName: "payments.capnp:PaymentAcceptor",
			MethodName:    "createPayment",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.CreatePayment(ctx, PaymentAcceptor_createPayment{call})
		},
	})

	return methods
}

// PaymentAcceptor_createPayment holds the state for a server call to PaymentAcceptor.createPayment.
// See server.Call for documentation.
type PaymentAcceptor_createPayment struct {
	*server.Call
}

// Args returns the call's arguments.
func (c PaymentAcceptor_createPayment) Args() PaymentAcceptor_createPayment_Params {
	return PaymentAcceptor_createPayment_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c PaymentAcceptor_createPayment) AllocResults() (PaymentAcceptor_CreatePaymentResults, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return PaymentAcceptor_CreatePaymentResults{Struct: r}, err
}

type PaymentAcceptor_CreatePaymentResults struct{ capnp.Struct }
type PaymentAcceptor_CreatePaymentResults_success PaymentAcceptor_CreatePaymentResults
type PaymentAcceptor_CreatePaymentResults_failed PaymentAcceptor_CreatePaymentResults
type PaymentAcceptor_CreatePaymentResults_Which uint16

const (
	PaymentAcceptor_CreatePaymentResults_Which_success PaymentAcceptor_CreatePaymentResults_Which = 0
	PaymentAcceptor_CreatePaymentResults_Which_failed  PaymentAcceptor_CreatePaymentResults_Which = 1
)

func (w PaymentAcceptor_CreatePaymentResults_Which) String() string {
	const s = "successfailed"
	switch w {
	case PaymentAcceptor_CreatePaymentResults_Which_success:
		return s[0:7]
	case PaymentAcceptor_CreatePaymentResults_Which_failed:
		return s[7:13]

	}
	return "PaymentAcceptor_CreatePaymentResults_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// PaymentAcceptor_CreatePaymentResults_TypeID is the unique identifier for the type PaymentAcceptor_CreatePaymentResults.
const PaymentAcceptor_CreatePaymentResults_TypeID = 0xeedba0c4417e0460

func NewPaymentAcceptor_CreatePaymentResults(s *capnp.Segment) (PaymentAcceptor_CreatePaymentResults, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return PaymentAcceptor_CreatePaymentResults{st}, err
}

func NewRootPaymentAcceptor_CreatePaymentResults(s *capnp.Segment) (PaymentAcceptor_CreatePaymentResults, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return PaymentAcceptor_CreatePaymentResults{st}, err
}

func ReadRootPaymentAcceptor_CreatePaymentResults(msg *capnp.Message) (PaymentAcceptor_CreatePaymentResults, error) {
	root, err := msg.Root()
	return PaymentAcceptor_CreatePaymentResults{root.Struct()}, err
}

func (s PaymentAcceptor_CreatePaymentResults) String() string {
	str, _ := text.Marshal(0xeedba0c4417e0460, s.Struct)
	return str
}

func (s PaymentAcceptor_CreatePaymentResults) Which() PaymentAcceptor_CreatePaymentResults_Which {
	return PaymentAcceptor_CreatePaymentResults_Which(s.Struct.Uint16(0))
}
func (s PaymentAcceptor_CreatePaymentResults) Success() PaymentAcceptor_CreatePaymentResults_success {
	return PaymentAcceptor_CreatePaymentResults_success(s)
}

func (s PaymentAcceptor_CreatePaymentResults) SetSuccess() {
	s.Struct.SetUint16(0, 0)
}

func (s PaymentAcceptor_CreatePaymentResults_success) Payment() Payment {
	p, _ := s.Struct.Ptr(0)
	return Payment{Client: p.Interface().Client()}
}

func (s PaymentAcceptor_CreatePaymentResults_success) HasPayment() bool {
	return s.Struct.HasPtr(0)
}

func (s PaymentAcceptor_CreatePaymentResults_success) SetPayment(v Payment) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s PaymentAcceptor_CreatePaymentResults) Failed() PaymentAcceptor_CreatePaymentResults_failed {
	return PaymentAcceptor_CreatePaymentResults_failed(s)
}

func (s PaymentAcceptor_CreatePaymentResults) SetFailed() {
	s.Struct.SetUint16(0, 1)
}

func (s PaymentAcceptor_CreatePaymentResults_failed) Description() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(0)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s PaymentAcceptor_CreatePaymentResults_failed) HasDescription() bool {
	return s.Struct.HasPtr(0)
}

func (s PaymentAcceptor_CreatePaymentResults_failed) SetDescription(v util.LocalizedText) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDescription sets the description field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s PaymentAcceptor_CreatePaymentResults_failed) NewDescription() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// PaymentAcceptor_CreatePaymentResults_List is a list of PaymentAcceptor_CreatePaymentResults.
type PaymentAcceptor_CreatePaymentResults_List struct{ capnp.List }

// NewPaymentAcceptor_CreatePaymentResults creates a new list of PaymentAcceptor_CreatePaymentResults.
func NewPaymentAcceptor_CreatePaymentResults_List(s *capnp.Segment, sz int32) (PaymentAcceptor_CreatePaymentResults_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return PaymentAcceptor_CreatePaymentResults_List{l}, err
}

func (s PaymentAcceptor_CreatePaymentResults_List) At(i int) PaymentAcceptor_CreatePaymentResults {
	return PaymentAcceptor_CreatePaymentResults{s.List.Struct(i)}
}

func (s PaymentAcceptor_CreatePaymentResults_List) Set(i int, v PaymentAcceptor_CreatePaymentResults) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PaymentAcceptor_CreatePaymentResults_List) String() string {
	str, _ := text.MarshalList(0xeedba0c4417e0460, s.List)
	return str
}

// PaymentAcceptor_CreatePaymentResults_Future is a wrapper for a PaymentAcceptor_CreatePaymentResults promised by a client call.
type PaymentAcceptor_CreatePaymentResults_Future struct{ *capnp.Future }

func (p PaymentAcceptor_CreatePaymentResults_Future) Struct() (PaymentAcceptor_CreatePaymentResults, error) {
	s, err := p.Future.Struct()
	return PaymentAcceptor_CreatePaymentResults{s}, err
}

func (p PaymentAcceptor_CreatePaymentResults_Future) Success() PaymentAcceptor_CreatePaymentResults_success_Future {
	return PaymentAcceptor_CreatePaymentResults_success_Future{p.Future}
}

// PaymentAcceptor_CreatePaymentResults_success_Future is a wrapper for a PaymentAcceptor_CreatePaymentResults_success promised by a client call.
type PaymentAcceptor_CreatePaymentResults_success_Future struct{ *capnp.Future }

func (p PaymentAcceptor_CreatePaymentResults_success_Future) Struct() (PaymentAcceptor_CreatePaymentResults_success, error) {
	s, err := p.Future.Struct()
	return PaymentAcceptor_CreatePaymentResults_success{s}, err
}

func (p PaymentAcceptor_CreatePaymentResults_success_Future) Payment() Payment {
	return Payment{Client: p.Future.Field(0, nil).Client()}
}

func (p PaymentAcceptor_CreatePaymentResults_Future) Failed() PaymentAcceptor_CreatePaymentResults_failed_Future {
	return PaymentAcceptor_CreatePaymentResults_failed_Future{p.Future}
}

// PaymentAcceptor_CreatePaymentResults_failed_Future is a wrapper for a PaymentAcceptor_CreatePaymentResults_failed promised by a client call.
type PaymentAcceptor_CreatePaymentResults_failed_Future struct{ *capnp.Future }

func (p PaymentAcceptor_CreatePaymentResults_failed_Future) Struct() (PaymentAcceptor_CreatePaymentResults_failed, error) {
	s, err := p.Future.Struct()
	return PaymentAcceptor_CreatePaymentResults_failed{s}, err
}

func (p PaymentAcceptor_CreatePaymentResults_failed_Future) Description() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(0, nil)}
}

type PaymentAcceptor_Invoice struct{ capnp.Struct }

// PaymentAcceptor_Invoice_TypeID is the unique identifier for the type PaymentAcceptor_Invoice.
const PaymentAcceptor_Invoice_TypeID = 0x91d6a3469f738613

func NewPaymentAcceptor_Invoice(s *capnp.Segment) (PaymentAcceptor_Invoice, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PaymentAcceptor_Invoice{st}, err
}

func NewRootPaymentAcceptor_Invoice(s *capnp.Segment) (PaymentAcceptor_Invoice, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PaymentAcceptor_Invoice{st}, err
}

func ReadRootPaymentAcceptor_Invoice(msg *capnp.Message) (PaymentAcceptor_Invoice, error) {
	root, err := msg.Root()
	return PaymentAcceptor_Invoice{root.Struct()}, err
}

func (s PaymentAcceptor_Invoice) String() string {
	str, _ := text.Marshal(0x91d6a3469f738613, s.Struct)
	return str
}

func (s PaymentAcceptor_Invoice) Items() (PaymentAcceptor_Invoice_Item_List, error) {
	p, err := s.Struct.Ptr(0)
	return PaymentAcceptor_Invoice_Item_List{List: p.List()}, err
}

func (s PaymentAcceptor_Invoice) HasItems() bool {
	return s.Struct.HasPtr(0)
}

func (s PaymentAcceptor_Invoice) SetItems(v PaymentAcceptor_Invoice_Item_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewItems sets the items field to a newly
// allocated PaymentAcceptor_Invoice_Item_List, preferring placement in s's segment.
func (s PaymentAcceptor_Invoice) NewItems(n int32) (PaymentAcceptor_Invoice_Item_List, error) {
	l, err := NewPaymentAcceptor_Invoice_Item_List(s.Struct.Segment(), n)
	if err != nil {
		return PaymentAcceptor_Invoice_Item_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// PaymentAcceptor_Invoice_List is a list of PaymentAcceptor_Invoice.
type PaymentAcceptor_Invoice_List struct{ capnp.List }

// NewPaymentAcceptor_Invoice creates a new list of PaymentAcceptor_Invoice.
func NewPaymentAcceptor_Invoice_List(s *capnp.Segment, sz int32) (PaymentAcceptor_Invoice_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PaymentAcceptor_Invoice_List{l}, err
}

func (s PaymentAcceptor_Invoice_List) At(i int) PaymentAcceptor_Invoice {
	return PaymentAcceptor_Invoice{s.List.Struct(i)}
}

func (s PaymentAcceptor_Invoice_List) Set(i int, v PaymentAcceptor_Invoice) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PaymentAcceptor_Invoice_List) String() string {
	str, _ := text.MarshalList(0x91d6a3469f738613, s.List)
	return str
}

// PaymentAcceptor_Invoice_Future is a wrapper for a PaymentAcceptor_Invoice promised by a client call.
type PaymentAcceptor_Invoice_Future struct{ *capnp.Future }

func (p PaymentAcceptor_Invoice_Future) Struct() (PaymentAcceptor_Invoice, error) {
	s, err := p.Future.Struct()
	return PaymentAcceptor_Invoice{s}, err
}

type PaymentAcceptor_Invoice_Item struct{ capnp.Struct }

// PaymentAcceptor_Invoice_Item_TypeID is the unique identifier for the type PaymentAcceptor_Invoice_Item.
const PaymentAcceptor_Invoice_Item_TypeID = 0xfe043eafc75e52c0

func NewPaymentAcceptor_Invoice_Item(s *capnp.Segment) (PaymentAcceptor_Invoice_Item, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return PaymentAcceptor_Invoice_Item{st}, err
}

func NewRootPaymentAcceptor_Invoice_Item(s *capnp.Segment) (PaymentAcceptor_Invoice_Item, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return PaymentAcceptor_Invoice_Item{st}, err
}

func ReadRootPaymentAcceptor_Invoice_Item(msg *capnp.Message) (PaymentAcceptor_Invoice_Item, error) {
	root, err := msg.Root()
	return PaymentAcceptor_Invoice_Item{root.Struct()}, err
}

func (s PaymentAcceptor_Invoice_Item) String() string {
	str, _ := text.Marshal(0xfe043eafc75e52c0, s.Struct)
	return str
}

func (s PaymentAcceptor_Invoice_Item) Title() (util.LocalizedText, error) {
	p, err := s.Struct.Ptr(0)
	return util.LocalizedText{Struct: p.Struct()}, err
}

func (s PaymentAcceptor_Invoice_Item) HasTitle() bool {
	return s.Struct.HasPtr(0)
}

func (s PaymentAcceptor_Invoice_Item) SetTitle(v util.LocalizedText) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTitle sets the title field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s PaymentAcceptor_Invoice_Item) NewTitle() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(s.Struct.Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s PaymentAcceptor_Invoice_Item) AmountCents() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s PaymentAcceptor_Invoice_Item) SetAmountCents(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// PaymentAcceptor_Invoice_Item_List is a list of PaymentAcceptor_Invoice_Item.
type PaymentAcceptor_Invoice_Item_List struct{ capnp.List }

// NewPaymentAcceptor_Invoice_Item creates a new list of PaymentAcceptor_Invoice_Item.
func NewPaymentAcceptor_Invoice_Item_List(s *capnp.Segment, sz int32) (PaymentAcceptor_Invoice_Item_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return PaymentAcceptor_Invoice_Item_List{l}, err
}

func (s PaymentAcceptor_Invoice_Item_List) At(i int) PaymentAcceptor_Invoice_Item {
	return PaymentAcceptor_Invoice_Item{s.List.Struct(i)}
}

func (s PaymentAcceptor_Invoice_Item_List) Set(i int, v PaymentAcceptor_Invoice_Item) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PaymentAcceptor_Invoice_Item_List) String() string {
	str, _ := text.MarshalList(0xfe043eafc75e52c0, s.List)
	return str
}

// PaymentAcceptor_Invoice_Item_Future is a wrapper for a PaymentAcceptor_Invoice_Item promised by a client call.
type PaymentAcceptor_Invoice_Item_Future struct{ *capnp.Future }

func (p PaymentAcceptor_Invoice_Item_Future) Struct() (PaymentAcceptor_Invoice_Item, error) {
	s, err := p.Future.Struct()
	return PaymentAcceptor_Invoice_Item{s}, err
}

func (p PaymentAcceptor_Invoice_Item_Future) Title() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(0, nil)}
}

type PaymentAcceptor_createPayment_Params struct{ capnp.Struct }

// PaymentAcceptor_createPayment_Params_TypeID is the unique identifier for the type PaymentAcceptor_createPayment_Params.
const PaymentAcceptor_createPayment_Params_TypeID = 0x9fe16028dd10ba82

func NewPaymentAcceptor_createPayment_Params(s *capnp.Segment) (PaymentAcceptor_createPayment_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return PaymentAcceptor_createPayment_Params{st}, err
}

func NewRootPaymentAcceptor_createPayment_Params(s *capnp.Segment) (PaymentAcceptor_createPayment_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return PaymentAcceptor_createPayment_Params{st}, err
}

func ReadRootPaymentAcceptor_createPayment_Params(msg *capnp.Message) (PaymentAcceptor_createPayment_Params, error) {
	root, err := msg.Root()
	return PaymentAcceptor_createPayment_Params{root.Struct()}, err
}

func (s PaymentAcceptor_createPayment_Params) String() string {
	str, _ := text.Marshal(0x9fe16028dd10ba82, s.Struct)
	return str
}

func (s PaymentAcceptor_createPayment_Params) Source() PaymentSource {
	p, _ := s.Struct.Ptr(0)
	return PaymentSource{Client: p.Interface().Client()}
}

func (s PaymentAcceptor_createPayment_Params) HasSource() bool {
	return s.Struct.HasPtr(0)
}

func (s PaymentAcceptor_createPayment_Params) SetSource(v PaymentSource) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s PaymentAcceptor_createPayment_Params) Invoice() (PaymentAcceptor_Invoice, error) {
	p, err := s.Struct.Ptr(1)
	return PaymentAcceptor_Invoice{Struct: p.Struct()}, err
}

func (s PaymentAcceptor_createPayment_Params) HasInvoice() bool {
	return s.Struct.HasPtr(1)
}

func (s PaymentAcceptor_createPayment_Params) SetInvoice(v PaymentAcceptor_Invoice) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewInvoice sets the invoice field to a newly
// allocated PaymentAcceptor_Invoice struct, preferring placement in s's segment.
func (s PaymentAcceptor_createPayment_Params) NewInvoice() (PaymentAcceptor_Invoice, error) {
	ss, err := NewPaymentAcceptor_Invoice(s.Struct.Segment())
	if err != nil {
		return PaymentAcceptor_Invoice{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// PaymentAcceptor_createPayment_Params_List is a list of PaymentAcceptor_createPayment_Params.
type PaymentAcceptor_createPayment_Params_List struct{ capnp.List }

// NewPaymentAcceptor_createPayment_Params creates a new list of PaymentAcceptor_createPayment_Params.
func NewPaymentAcceptor_createPayment_Params_List(s *capnp.Segment, sz int32) (PaymentAcceptor_createPayment_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return PaymentAcceptor_createPayment_Params_List{l}, err
}

func (s PaymentAcceptor_createPayment_Params_List) At(i int) PaymentAcceptor_createPayment_Params {
	return PaymentAcceptor_createPayment_Params{s.List.Struct(i)}
}

func (s PaymentAcceptor_createPayment_Params_List) Set(i int, v PaymentAcceptor_createPayment_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PaymentAcceptor_createPayment_Params_List) String() string {
	str, _ := text.MarshalList(0x9fe16028dd10ba82, s.List)
	return str
}

// PaymentAcceptor_createPayment_Params_Future is a wrapper for a PaymentAcceptor_createPayment_Params promised by a client call.
type PaymentAcceptor_createPayment_Params_Future struct{ *capnp.Future }

func (p PaymentAcceptor_createPayment_Params_Future) Struct() (PaymentAcceptor_createPayment_Params, error) {
	s, err := p.Future.Struct()
	return PaymentAcceptor_createPayment_Params{s}, err
}

func (p PaymentAcceptor_createPayment_Params_Future) Source() PaymentSource {
	return PaymentSource{Client: p.Future.Field(0, nil).Client()}
}

func (p PaymentAcceptor_createPayment_Params_Future) Invoice() PaymentAcceptor_Invoice_Future {
	return PaymentAcceptor_Invoice_Future{Future: p.Future.Field(1, nil)}
}

type Payment struct{ Client *capnp.Client }

// Payment_TypeID is the unique identifier for the type Payment.
const Payment_TypeID = 0xc5203e36361f382d

func (c Payment) Commit(ctx context.Context, params func(Payment_commit_Params) error) (Payment_commit_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc5203e36361f382d,
			MethodID:      0,
			InterfaceName: "payments.capnp:Payment",
			MethodName:    "commit",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Payment_commit_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Payment_commit_Results_Future{Future: ans.Future()}, release
}

// A Payment_Server is a Payment with a local implementation.
type Payment_Server interface {
	Commit(context.Context, Payment_commit) error
}

// Payment_NewServer creates a new Server from an implementation of Payment_Server.
func Payment_NewServer(s Payment_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Payment_Methods(nil, s), s, c, policy)
}

// Payment_ServerToClient creates a new Client from an implementation of Payment_Server.
// The caller is responsible for calling Release on the returned Client.
func Payment_ServerToClient(s Payment_Server, policy *server.Policy) Payment {
	return Payment{Client: capnp.NewClient(Payment_NewServer(s, policy))}
}

// Payment_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Payment_Methods(methods []server.Method, s Payment_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc5203e36361f382d,
			MethodID:      0,
			InterfaceName: "payments.capnp:Payment",
			MethodName:    "commit",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Commit(ctx, Payment_commit{call})
		},
	})

	return methods
}

// Payment_commit holds the state for a server call to Payment.commit.
// See server.Call for documentation.
type Payment_commit struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Payment_commit) Args() Payment_commit_Params {
	return Payment_commit_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Payment_commit) AllocResults() (Payment_commit_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Payment_commit_Results{Struct: r}, err
}

type Payment_commit_Params struct{ capnp.Struct }

// Payment_commit_Params_TypeID is the unique identifier for the type Payment_commit_Params.
const Payment_commit_Params_TypeID = 0xbe3b7a8d4c9cd5b5

func NewPayment_commit_Params(s *capnp.Segment) (Payment_commit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Payment_commit_Params{st}, err
}

func NewRootPayment_commit_Params(s *capnp.Segment) (Payment_commit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Payment_commit_Params{st}, err
}

func ReadRootPayment_commit_Params(msg *capnp.Message) (Payment_commit_Params, error) {
	root, err := msg.Root()
	return Payment_commit_Params{root.Struct()}, err
}

func (s Payment_commit_Params) String() string {
	str, _ := text.Marshal(0xbe3b7a8d4c9cd5b5, s.Struct)
	return str
}

// Payment_commit_Params_List is a list of Payment_commit_Params.
type Payment_commit_Params_List struct{ capnp.List }

// NewPayment_commit_Params creates a new list of Payment_commit_Params.
func NewPayment_commit_Params_List(s *capnp.Segment, sz int32) (Payment_commit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Payment_commit_Params_List{l}, err
}

func (s Payment_commit_Params_List) At(i int) Payment_commit_Params {
	return Payment_commit_Params{s.List.Struct(i)}
}

func (s Payment_commit_Params_List) Set(i int, v Payment_commit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Payment_commit_Params_List) String() string {
	str, _ := text.MarshalList(0xbe3b7a8d4c9cd5b5, s.List)
	return str
}

// Payment_commit_Params_Future is a wrapper for a Payment_commit_Params promised by a client call.
type Payment_commit_Params_Future struct{ *capnp.Future }

func (p Payment_commit_Params_Future) Struct() (Payment_commit_Params, error) {
	s, err := p.Future.Struct()
	return Payment_commit_Params{s}, err
}

type Payment_commit_Results struct{ capnp.Struct }

// Payment_commit_Results_TypeID is the unique identifier for the type Payment_commit_Results.
const Payment_commit_Results_TypeID = 0xb3942c4ba1c3c70f

func NewPayment_commit_Results(s *capnp.Segment) (Payment_commit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Payment_commit_Results{st}, err
}

func NewRootPayment_commit_Results(s *capnp.Segment) (Payment_commit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Payment_commit_Results{st}, err
}

func ReadRootPayment_commit_Results(msg *capnp.Message) (Payment_commit_Results, error) {
	root, err := msg.Root()
	return Payment_commit_Results{root.Struct()}, err
}

func (s Payment_commit_Results) String() string {
	str, _ := text.Marshal(0xb3942c4ba1c3c70f, s.Struct)
	return str
}

// Payment_commit_Results_List is a list of Payment_commit_Results.
type Payment_commit_Results_List struct{ capnp.List }

// NewPayment_commit_Results creates a new list of Payment_commit_Results.
func NewPayment_commit_Results_List(s *capnp.Segment, sz int32) (Payment_commit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Payment_commit_Results_List{l}, err
}

func (s Payment_commit_Results_List) At(i int) Payment_commit_Results {
	return Payment_commit_Results{s.List.Struct(i)}
}

func (s Payment_commit_Results_List) Set(i int, v Payment_commit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Payment_commit_Results_List) String() string {
	str, _ := text.MarshalList(0xb3942c4ba1c3c70f, s.List)
	return str
}

// Payment_commit_Results_Future is a wrapper for a Payment_commit_Results promised by a client call.
type Payment_commit_Results_Future struct{ *capnp.Future }

func (p Payment_commit_Results_Future) Struct() (Payment_commit_Results, error) {
	s, err := p.Future.Struct()
	return Payment_commit_Results{s}, err
}

type PersistentPaymentSource struct{ Client *capnp.Client }

// PersistentPaymentSource_TypeID is the unique identifier for the type PersistentPaymentSource.
const PersistentPaymentSource_TypeID = 0xa66dd2d4c80d0fae

func (c PersistentPaymentSource) GetTitle(ctx context.Context, params func(PaymentSource_getTitle_Params) error) (PaymentSource_getTitle_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xf9692c357124ed70,
			MethodID:      0,
			InterfaceName: "payments.capnp:PaymentSource",
			MethodName:    "getTitle",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(PaymentSource_getTitle_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return PaymentSource_getTitle_Results_Future{Future: ans.Future()}, release
}
func (c PersistentPaymentSource) AddRequirements(ctx context.Context, params func(supervisor.SystemPersistent_addRequirements_Params) error) (supervisor.SystemPersistent_addRequirements_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(supervisor.SystemPersistent_addRequirements_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return supervisor.SystemPersistent_addRequirements_Results_Future{Future: ans.Future()}, release
}
func (c PersistentPaymentSource) Save(ctx context.Context, params func(persistent.Persistent_SaveParams) error) (persistent.Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(persistent.Persistent_SaveParams{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return persistent.Persistent_SaveResults_Future{Future: ans.Future()}, release
}

// A PersistentPaymentSource_Server is a PersistentPaymentSource with a local implementation.
type PersistentPaymentSource_Server interface {
	GetTitle(context.Context, PaymentSource_getTitle) error

	AddRequirements(context.Context, supervisor.SystemPersistent_addRequirements) error

	Save(context.Context, persistent.Persistent_save) error
}

// PersistentPaymentSource_NewServer creates a new Server from an implementation of PersistentPaymentSource_Server.
func PersistentPaymentSource_NewServer(s PersistentPaymentSource_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(PersistentPaymentSource_Methods(nil, s), s, c, policy)
}

// PersistentPaymentSource_ServerToClient creates a new Client from an implementation of PersistentPaymentSource_Server.
// The caller is responsible for calling Release on the returned Client.
func PersistentPaymentSource_ServerToClient(s PersistentPaymentSource_Server, policy *server.Policy) PersistentPaymentSource {
	return PersistentPaymentSource{Client: capnp.NewClient(PersistentPaymentSource_NewServer(s, policy))}
}

// PersistentPaymentSource_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func PersistentPaymentSource_Methods(methods []server.Method, s PersistentPaymentSource_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf9692c357124ed70,
			MethodID:      0,
			InterfaceName: "payments.capnp:PaymentSource",
			MethodName:    "getTitle",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetTitle(ctx, PaymentSource_getTitle{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AddRequirements(ctx, supervisor.SystemPersistent_addRequirements{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, persistent.Persistent_save{call})
		},
	})

	return methods
}

type PersistentPaymentAcceptor struct{ Client *capnp.Client }

// PersistentPaymentAcceptor_TypeID is the unique identifier for the type PersistentPaymentAcceptor.
const PersistentPaymentAcceptor_TypeID = 0xe70f1d4eea79f6f5

func (c PersistentPaymentAcceptor) CreatePayment(ctx context.Context, params func(PaymentAcceptor_createPayment_Params) error) (PaymentAcceptor_CreatePaymentResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd562e38729bbd911,
			MethodID:      0,
			InterfaceName: "payments.capnp:PaymentAcceptor",
			MethodName:    "createPayment",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(PaymentAcceptor_createPayment_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return PaymentAcceptor_CreatePaymentResults_Future{Future: ans.Future()}, release
}
func (c PersistentPaymentAcceptor) AddRequirements(ctx context.Context, params func(supervisor.SystemPersistent_addRequirements_Params) error) (supervisor.SystemPersistent_addRequirements_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(supervisor.SystemPersistent_addRequirements_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return supervisor.SystemPersistent_addRequirements_Results_Future{Future: ans.Future()}, release
}
func (c PersistentPaymentAcceptor) Save(ctx context.Context, params func(persistent.Persistent_SaveParams) error) (persistent.Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(persistent.Persistent_SaveParams{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return persistent.Persistent_SaveResults_Future{Future: ans.Future()}, release
}

// A PersistentPaymentAcceptor_Server is a PersistentPaymentAcceptor with a local implementation.
type PersistentPaymentAcceptor_Server interface {
	CreatePayment(context.Context, PaymentAcceptor_createPayment) error

	AddRequirements(context.Context, supervisor.SystemPersistent_addRequirements) error

	Save(context.Context, persistent.Persistent_save) error
}

// PersistentPaymentAcceptor_NewServer creates a new Server from an implementation of PersistentPaymentAcceptor_Server.
func PersistentPaymentAcceptor_NewServer(s PersistentPaymentAcceptor_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(PersistentPaymentAcceptor_Methods(nil, s), s, c, policy)
}

// PersistentPaymentAcceptor_ServerToClient creates a new Client from an implementation of PersistentPaymentAcceptor_Server.
// The caller is responsible for calling Release on the returned Client.
func PersistentPaymentAcceptor_ServerToClient(s PersistentPaymentAcceptor_Server, policy *server.Policy) PersistentPaymentAcceptor {
	return PersistentPaymentAcceptor{Client: capnp.NewClient(PersistentPaymentAcceptor_NewServer(s, policy))}
}

// PersistentPaymentAcceptor_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func PersistentPaymentAcceptor_Methods(methods []server.Method, s PersistentPaymentAcceptor_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd562e38729bbd911,
			MethodID:      0,
			InterfaceName: "payments.capnp:PaymentAcceptor",
			MethodName:    "createPayment",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.CreatePayment(ctx, PaymentAcceptor_createPayment{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AddRequirements(ctx, supervisor.SystemPersistent_addRequirements{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, persistent.Persistent_save{call})
		},
	})

	return methods
}

type PersistentPayment struct{ Client *capnp.Client }

// PersistentPayment_TypeID is the unique identifier for the type PersistentPayment.
const PersistentPayment_TypeID = 0xbbcf2f6351d92999

func (c PersistentPayment) Commit(ctx context.Context, params func(Payment_commit_Params) error) (Payment_commit_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc5203e36361f382d,
			MethodID:      0,
			InterfaceName: "payments.capnp:Payment",
			MethodName:    "commit",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Payment_commit_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Payment_commit_Results_Future{Future: ans.Future()}, release
}
func (c PersistentPayment) AddRequirements(ctx context.Context, params func(supervisor.SystemPersistent_addRequirements_Params) error) (supervisor.SystemPersistent_addRequirements_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(supervisor.SystemPersistent_addRequirements_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return supervisor.SystemPersistent_addRequirements_Results_Future{Future: ans.Future()}, release
}
func (c PersistentPayment) Save(ctx context.Context, params func(persistent.Persistent_SaveParams) error) (persistent.Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(persistent.Persistent_SaveParams{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return persistent.Persistent_SaveResults_Future{Future: ans.Future()}, release
}

// A PersistentPayment_Server is a PersistentPayment with a local implementation.
type PersistentPayment_Server interface {
	Commit(context.Context, Payment_commit) error

	AddRequirements(context.Context, supervisor.SystemPersistent_addRequirements) error

	Save(context.Context, persistent.Persistent_save) error
}

// PersistentPayment_NewServer creates a new Server from an implementation of PersistentPayment_Server.
func PersistentPayment_NewServer(s PersistentPayment_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(PersistentPayment_Methods(nil, s), s, c, policy)
}

// PersistentPayment_ServerToClient creates a new Client from an implementation of PersistentPayment_Server.
// The caller is responsible for calling Release on the returned Client.
func PersistentPayment_ServerToClient(s PersistentPayment_Server, policy *server.Policy) PersistentPayment {
	return PersistentPayment{Client: capnp.NewClient(PersistentPayment_NewServer(s, policy))}
}

// PersistentPayment_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func PersistentPayment_Methods(methods []server.Method, s PersistentPayment_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc5203e36361f382d,
			MethodID:      0,
			InterfaceName: "payments.capnp:Payment",
			MethodName:    "commit",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Commit(ctx, Payment_commit{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AddRequirements(ctx, supervisor.SystemPersistent_addRequirements{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, persistent.Persistent_save{call})
		},
	})

	return methods
}

const schema_d512486208994241 = "x\xda\x94U]h\x1cU\x14>g~:3\xa5\xeb" +
	"\xee\xf5V\xab\x0fu}\xd8\xd2nI\xd7\x9a\xd4Z#" +
	"d\xbb\x1bl\xdcZt'U\xdf\x94N&W\x19\xc9" +
	"\xecng&\x96\xaa\x18\xf4\xc1*\xfe@Q\x90\x80R" +
	"\xad((\xd8>\xa8TZ(\x85*U\xfb \x8a\xab" +
	"T\x0d\x98\xd6\"-\xc4\xb7U\xa2\xd8\x91;\xb33\xb3" +
	"\xd9tc|\xcb\xde\xdc\xfb}\xdf\xf9\xcew\xcel\xbe" +
	"O\xdc.\xdc*\x1f\xc8\x00\xe8\xa7\xe4\x15>}\xce=" +
	"\xb4\xe3\x9d\xef\x0f\x02\xc9\xa2O\xce\x9d\xc8\x1f\xb80\xd6" +
	"\x04\x19\x15\x80\x81\xbc:\x88\xf4\x0eu\x0d\x00-\xa9E" +
	"@\xff\xd9\xe3\x99\x99\x0d{f\x0f\xf1\xcb\x00\xb2\xc0/" +
	"\xedU\x0f# }F\xdd\x07\xe8\x1fI\xa7\xbe\xf8\xee" +
	"[\xfb= i\xd1/\x95\xa7\xd5\xb1\xbb\xafm\x02\xe0" +
	"\xc0\x0c\x87\x9aS\x15\x00zIU\xe8%u=\x80\x7f" +
	"\xe4\x97\xafnz~v\xd7Q k9\\\xc09\xab" +
	":\x1cn.\xe0K\x9f9\xfd\xf6=}\xaf}\x04d" +
	"\x0d\x02H\xfc\xff)\xad\x1fA\xf2\xa7\xf3\xe7t\xf3\x96" +
	"\xafO,\"j\xa9+\x91\xca\x1a'BM\xa1\xa8q" +
	"\xa2O\x9ao\xecz\xf9\x89;Ov\xe0\xcc\xab\x1b9" +
	"\xce\xa6m\xd9\xad[\x87n\xfe\xbc\x1b\x87\xce\xaa\xc7\xb9" +
	"R\x00zQ\x1d\xa1)\x0e\xe8_8;\xfc\xea\x9f\xd7" +
	"\xaf;\x1b\xea\x0d`Z\xeac\x1c\xe6\xf5O_\xf9p" +
	"\xe6A\xb9\x09\xfa\x16D\x7f\x8f\xf4t\xe9\xb3\xb7~\xfa" +
	"\x1d\xaeC\x05\x83\x9a~\xe45\xb5\x82\x9ab\x8f\xbb\x19" +
	"o\xd4\xfe\xa2\xeb\xb8\\Z\xd2F\xa8\x1d0\xae\xcc\x1e" +
	"\xfb\xf9\xef\x1dC\xbf^\x1d\xf7\x01\xed<\xc7\xb54\x8e" +
	"\xdb\xfac\xff\xe5{\xd7\xa6\x7f[\xe4\xc8\x0b\xdaN\xa4" +
	"o\x06\x8eLk\x0a\x9d\x0e\x1c\x89\xa1\xf4,vh\xba" +
	"\x0b\x15\x01`\xe0\xa0v\x18\xe9\xfb\xc1\x93w5\xde\xd7" +
	"\xc6\\n\xefm}\xd6\xfc\"\xd1_j\x97i3\xb8" +
	"\xf8\x8d6B\xff\x09D\x9f\x1a}\xf8\xcc\xd1!\xe9\x0a" +
	"\xe8\xeb\x11\x93\x80\x85\xfd\xbd\xa8\x8d!\x9d\x0f^\xb4\xb4" +
	"}\xe0\x83\xe17\x8c\xfd6\xaby\xaeX0\x8dF\xad" +
	"1X\x0d\x7f\x97L\x935\xbc\xbaS\xa8\x14k\x8f\xd7" +
	"-\x93\xe9\x12b\x02Npc\xba\xe21[\x97D\x09" +
	"@B\x00\x92\xea\x07\xd0U\x11\xf5\x9c\x80Y\xcbc\xb6" +
	"\x8b\xd7\x00VE\xc4L\xf2\x0e\x90\x1f\xc6\xa4r\x0fR" +
	"\xd3a\x86\xc7\xda\xa7\xb9\xaa\xe1(\x86\xed\xeaj\xcc\x95" +
	"\x1f\x04\xd0s\"\xea\x9b\x05$\x88\xab\x91\x1fn*\x03" +
	"\xe8\x1bD\xd4\xb7\x08Xt\xeb\x93\x8e\xc9\x90$\xe6\x01" +
	"\"\x01\x9c\xb2\xc2r0\x93x\x03\x88\x99\x0eQ\xb1\x13" +
	"\xccq-\xd7c5\xaf-\xa4\xb8;\x00\xad\"VE" +
	"YW\xb1\xa33\x00\xfe\xc7\xcd\x93O\xfd0\xf7\xd2i" +
	"\xfew\x04%-\xac/|_x\x94y\xf7[\xde\x04" +
	"\xcb\x8d\xb2\xac;9\xe1\xb9Wsq\xb5\x80Y\x8f\xdf" +
	"\xc2\x8c_9\xff\xe4\xed\xce\xb1\x87^\xec\xa94\xfc]" +
	"0\xeb\xb6my1\xec\x7fW\x04\xd0QL<\x8d=" +
	"\x8a\xe9\xc1V5\xd2\x8ea'd\x18]+\x86\x07U" +
	"D]\x12\xe5\x8eE\x80\xd1f!d\x10\x04\"+\xc5" +
	"\x10j;V\x11\x97\xeb]7\xed\x8a\x1eQ\x1a\xee\x8c" +
	"\xd2(\x0b\x8c)<bX\x13\"\x1b\x0f}\x0f\xd3\x93" +
	"\x1a\x03\xd0W\x89\xa8\xdf \xa0?\xce\\\xd3\xb1\x1a\x1e" +
	"(V\xbd\xb6D\x03\x84n\xd2b\xc8\x1a\xf8\x19O9" +
	"\xd1>\xe8\xd8\xf4\xa9\xb2\x1fi\xc2HT\x9a\xab\x9a\xaa" +
	"D\x93\x16\xb8\x15\xad{\x8cp\x08q@ \x9a\xe2G" +
	"\xd3\x01\xd9\xe0\xfdB\xdb\xfe\x97\x0f\xee\xa4i*\xcc]" +
	"\x10\xc0r\x12\xc0\xa96(\x92\x8ep\x04c\xb4\xb8K" +
	"\xdd\xd1\x8a\x88\x17D,^u=\"&/W\xbc2" +
	"\xe1\xb9<X\xaa(\xad\xf2}\xc4dW\x93|\x19\x84" +
	"\x14^\xe1\x87\xf1\x87!\x08\xda\x14\xaf\x96\xb9n\x91w" +
	"\x9f\x8d\xf7j\xe2\xeez\xba=\xe5\xedFD\x1f\x1e\x8c" +
	"\xbe\x98\x84\xec\x0c\x1b\x11\x85\x11\x00\x96\xccn\xb2L\xc3" +
	"\x0e\x17*\x8a\xc7\xec\xb6\xfeh\xa5\xf5'+-\xdeh" +
	"<\x93}\"\xea\xdb\x96X\x06\x86]\x9f\xacy\xc3\x0c" +
	"\x14>|\x12\x08(\x01\xfe\x1b\x00\x00\xff\xff;\xb5\xa3" +
	"\xaf"

func init() {
	schemas.Register(schema_d512486208994241,
		0x91d6a3469f738613,
		0x9fe16028dd10ba82,
		0xa66dd2d4c80d0fae,
		0xaf4ce1881ecae0ae,
		0xb3942c4ba1c3c70f,
		0xbbcf2f6351d92999,
		0xbe3b7a8d4c9cd5b5,
		0xc5203e36361f382d,
		0xcb2516f79343cbe3,
		0xd50556ddad8eb897,
		0xd562e38729bbd911,
		0xe43e46fbdcb71f0a,
		0xe70f1d4eea79f6f5,
		0xeedba0c4417e0460,
		0xf9692c357124ed70,
		0xfe043eafc75e52c0)
}
