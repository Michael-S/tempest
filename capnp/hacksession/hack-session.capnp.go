// Code generated by capnpc-go. DO NOT EDIT.

package hacksession

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	email "zenhack.net/go/sandstorm/capnp/email"
	grain "zenhack.net/go/sandstorm/capnp/grain"
	identity "zenhack.net/go/sandstorm/capnp/identity"
	ip "zenhack.net/go/sandstorm/capnp/ip"
)

type HackSessionContext struct{ Client *capnp.Client }

// HackSessionContext_TypeID is the unique identifier for the type HackSessionContext.
const HackSessionContext_TypeID = 0xe14c1f5321159b8f

func (c HackSessionContext) GetPublicId(ctx context.Context, params func(HackSessionContext_getPublicId_Params) error) (HackSessionContext_getPublicId_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      0,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getPublicId",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_getPublicId_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return HackSessionContext_getPublicId_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) HttpGet(ctx context.Context, params func(HackSessionContext_httpGet_Params) error) (HackSessionContext_httpGet_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      1,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "httpGet",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_httpGet_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return HackSessionContext_httpGet_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) GetUserAddress(ctx context.Context, params func(HackSessionContext_getUserAddress_Params) error) (email.EmailAddress_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      2,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getUserAddress",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_getUserAddress_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return email.EmailAddress_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteGenerateApiToken(ctx context.Context, params func(HackSessionContext_obsoleteGenerateApiToken_Params) error) (HackSessionContext_obsoleteGenerateApiToken_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      3,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGenerateApiToken",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(HackSessionContext_obsoleteGenerateApiToken_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return HackSessionContext_obsoleteGenerateApiToken_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteListApiTokens(ctx context.Context, params func(HackSessionContext_obsoleteListApiTokens_Params) error) (HackSessionContext_obsoleteListApiTokens_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      4,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteListApiTokens",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteListApiTokens_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return HackSessionContext_obsoleteListApiTokens_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteRevokeApiToken(ctx context.Context, params func(HackSessionContext_obsoleteRevokeApiToken_Params) error) (HackSessionContext_obsoleteRevokeApiToken_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      5,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteRevokeApiToken",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteRevokeApiToken_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return HackSessionContext_obsoleteRevokeApiToken_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteGetIpNetwork(ctx context.Context, params func(HackSessionContext_obsoleteGetIpNetwork_Params) error) (HackSessionContext_obsoleteGetIpNetwork_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      6,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpNetwork",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteGetIpNetwork_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return HackSessionContext_obsoleteGetIpNetwork_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteGetIpInterface(ctx context.Context, params func(HackSessionContext_obsoleteGetIpInterface_Params) error) (HackSessionContext_obsoleteGetIpInterface_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      7,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpInterface",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteGetIpInterface_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return HackSessionContext_obsoleteGetIpInterface_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) GetUiViewForEndpoint(ctx context.Context, params func(HackSessionContext_getUiViewForEndpoint_Params) error) (HackSessionContext_getUiViewForEndpoint_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      8,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getUiViewForEndpoint",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_getUiViewForEndpoint_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return HackSessionContext_getUiViewForEndpoint_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) GetSharedPermissions(ctx context.Context, params func(grain.SessionContext_getSharedPermissions_Params) error) (grain.SessionContext_getSharedPermissions_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      0,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "getSharedPermissions",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_getSharedPermissions_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return grain.SessionContext_getSharedPermissions_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) TieToUser(ctx context.Context, params func(grain.SessionContext_tieToUser_Params) error) (grain.SessionContext_tieToUser_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      1,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "tieToUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_tieToUser_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return grain.SessionContext_tieToUser_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) Offer(ctx context.Context, params func(grain.SessionContext_offer_Params) error) (grain.SessionContext_offer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      2,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "offer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_offer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return grain.SessionContext_offer_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) Request(ctx context.Context, params func(grain.SessionContext_request_Params) error) (grain.SessionContext_request_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      3,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "request",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_request_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return grain.SessionContext_request_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) FulfillRequest(ctx context.Context, params func(grain.SessionContext_fulfillRequest_Params) error) (grain.SessionContext_fulfillRequest_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      4,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "fulfillRequest",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_fulfillRequest_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return grain.SessionContext_fulfillRequest_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) Close(ctx context.Context, params func(grain.SessionContext_close_Params) error) (grain.SessionContext_close_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      5,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "close",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_close_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return grain.SessionContext_close_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) OpenView(ctx context.Context, params func(grain.SessionContext_openView_Params) error) (grain.SessionContext_openView_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      6,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "openView",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_openView_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return grain.SessionContext_openView_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ClaimRequest(ctx context.Context, params func(grain.SessionContext_claimRequest_Params) error) (grain.SessionContext_claimRequest_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      7,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "claimRequest",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_claimRequest_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return grain.SessionContext_claimRequest_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) Activity(ctx context.Context, params func(grain.SessionContext_activity_Params) error) (grain.SessionContext_activity_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      8,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "activity",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_activity_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return grain.SessionContext_activity_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) Send(ctx context.Context, params func(email.EmailSendPort_send_Params) error) (email.EmailSendPort_send_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_send_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return email.EmailSendPort_send_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) HintAddress(ctx context.Context, params func(email.EmailSendPort_hintAddress_Params) error) (email.EmailSendPort_hintAddress_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_hintAddress_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return email.EmailSendPort_hintAddress_Results_Future{Future: ans.Future()}, release
}

func (c HackSessionContext) AddRef() HackSessionContext {
	return HackSessionContext{
		Client: c.Client.AddRef(),
	}
}

func (c HackSessionContext) Release() {
	c.Client.Release()
}

// A HackSessionContext_Server is a HackSessionContext with a local implementation.
type HackSessionContext_Server interface {
	GetPublicId(context.Context, HackSessionContext_getPublicId) error

	HttpGet(context.Context, HackSessionContext_httpGet) error

	GetUserAddress(context.Context, HackSessionContext_getUserAddress) error

	ObsoleteGenerateApiToken(context.Context, HackSessionContext_obsoleteGenerateApiToken) error

	ObsoleteListApiTokens(context.Context, HackSessionContext_obsoleteListApiTokens) error

	ObsoleteRevokeApiToken(context.Context, HackSessionContext_obsoleteRevokeApiToken) error

	ObsoleteGetIpNetwork(context.Context, HackSessionContext_obsoleteGetIpNetwork) error

	ObsoleteGetIpInterface(context.Context, HackSessionContext_obsoleteGetIpInterface) error

	GetUiViewForEndpoint(context.Context, HackSessionContext_getUiViewForEndpoint) error

	GetSharedPermissions(context.Context, grain.SessionContext_getSharedPermissions) error

	TieToUser(context.Context, grain.SessionContext_tieToUser) error

	Offer(context.Context, grain.SessionContext_offer) error

	Request(context.Context, grain.SessionContext_request) error

	FulfillRequest(context.Context, grain.SessionContext_fulfillRequest) error

	Close(context.Context, grain.SessionContext_close) error

	OpenView(context.Context, grain.SessionContext_openView) error

	ClaimRequest(context.Context, grain.SessionContext_claimRequest) error

	Activity(context.Context, grain.SessionContext_activity) error

	Send(context.Context, email.EmailSendPort_send) error

	HintAddress(context.Context, email.EmailSendPort_hintAddress) error
}

// HackSessionContext_NewServer creates a new Server from an implementation of HackSessionContext_Server.
func HackSessionContext_NewServer(s HackSessionContext_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(HackSessionContext_Methods(nil, s), s, c, policy)
}

// HackSessionContext_ServerToClient creates a new Client from an implementation of HackSessionContext_Server.
// The caller is responsible for calling Release on the returned Client.
func HackSessionContext_ServerToClient(s HackSessionContext_Server, policy *server.Policy) HackSessionContext {
	return HackSessionContext{Client: capnp.NewClient(HackSessionContext_NewServer(s, policy))}
}

// HackSessionContext_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func HackSessionContext_Methods(methods []server.Method, s HackSessionContext_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 20)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      0,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getPublicId",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetPublicId(ctx, HackSessionContext_getPublicId{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      1,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "httpGet",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.HttpGet(ctx, HackSessionContext_httpGet{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      2,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getUserAddress",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetUserAddress(ctx, HackSessionContext_getUserAddress{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      3,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGenerateApiToken",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGenerateApiToken(ctx, HackSessionContext_obsoleteGenerateApiToken{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      4,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteListApiTokens",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteListApiTokens(ctx, HackSessionContext_obsoleteListApiTokens{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      5,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteRevokeApiToken",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteRevokeApiToken(ctx, HackSessionContext_obsoleteRevokeApiToken{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      6,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpNetwork",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGetIpNetwork(ctx, HackSessionContext_obsoleteGetIpNetwork{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      7,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpInterface",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGetIpInterface(ctx, HackSessionContext_obsoleteGetIpInterface{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      8,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getUiViewForEndpoint",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetUiViewForEndpoint(ctx, HackSessionContext_getUiViewForEndpoint{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      0,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "getSharedPermissions",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSharedPermissions(ctx, grain.SessionContext_getSharedPermissions{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      1,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "tieToUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.TieToUser(ctx, grain.SessionContext_tieToUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      2,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "offer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Offer(ctx, grain.SessionContext_offer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      3,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "request",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Request(ctx, grain.SessionContext_request{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      4,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "fulfillRequest",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.FulfillRequest(ctx, grain.SessionContext_fulfillRequest{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      5,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "close",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Close(ctx, grain.SessionContext_close{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      6,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "openView",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OpenView(ctx, grain.SessionContext_openView{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      7,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "claimRequest",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ClaimRequest(ctx, grain.SessionContext_claimRequest{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      8,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "activity",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Activity(ctx, grain.SessionContext_activity{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Send(ctx, email.EmailSendPort_send{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.HintAddress(ctx, email.EmailSendPort_hintAddress{call})
		},
	})

	return methods
}

// HackSessionContext_getPublicId holds the state for a server call to HackSessionContext.getPublicId.
// See server.Call for documentation.
type HackSessionContext_getPublicId struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_getPublicId) Args() HackSessionContext_getPublicId_Params {
	return HackSessionContext_getPublicId_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c HackSessionContext_getPublicId) AllocResults() (HackSessionContext_getPublicId_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return HackSessionContext_getPublicId_Results{Struct: r}, err
}

// HackSessionContext_httpGet holds the state for a server call to HackSessionContext.httpGet.
// See server.Call for documentation.
type HackSessionContext_httpGet struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_httpGet) Args() HackSessionContext_httpGet_Params {
	return HackSessionContext_httpGet_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c HackSessionContext_httpGet) AllocResults() (HackSessionContext_httpGet_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return HackSessionContext_httpGet_Results{Struct: r}, err
}

// HackSessionContext_getUserAddress holds the state for a server call to HackSessionContext.getUserAddress.
// See server.Call for documentation.
type HackSessionContext_getUserAddress struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_getUserAddress) Args() HackSessionContext_getUserAddress_Params {
	return HackSessionContext_getUserAddress_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c HackSessionContext_getUserAddress) AllocResults() (email.EmailAddress, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return email.EmailAddress{Struct: r}, err
}

// HackSessionContext_obsoleteGenerateApiToken holds the state for a server call to HackSessionContext.obsoleteGenerateApiToken.
// See server.Call for documentation.
type HackSessionContext_obsoleteGenerateApiToken struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteGenerateApiToken) Args() HackSessionContext_obsoleteGenerateApiToken_Params {
	return HackSessionContext_obsoleteGenerateApiToken_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteGenerateApiToken) AllocResults() (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return HackSessionContext_obsoleteGenerateApiToken_Results{Struct: r}, err
}

// HackSessionContext_obsoleteListApiTokens holds the state for a server call to HackSessionContext.obsoleteListApiTokens.
// See server.Call for documentation.
type HackSessionContext_obsoleteListApiTokens struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteListApiTokens) Args() HackSessionContext_obsoleteListApiTokens_Params {
	return HackSessionContext_obsoleteListApiTokens_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteListApiTokens) AllocResults() (HackSessionContext_obsoleteListApiTokens_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteListApiTokens_Results{Struct: r}, err
}

// HackSessionContext_obsoleteRevokeApiToken holds the state for a server call to HackSessionContext.obsoleteRevokeApiToken.
// See server.Call for documentation.
type HackSessionContext_obsoleteRevokeApiToken struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteRevokeApiToken) Args() HackSessionContext_obsoleteRevokeApiToken_Params {
	return HackSessionContext_obsoleteRevokeApiToken_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteRevokeApiToken) AllocResults() (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteRevokeApiToken_Results{Struct: r}, err
}

// HackSessionContext_obsoleteGetIpNetwork holds the state for a server call to HackSessionContext.obsoleteGetIpNetwork.
// See server.Call for documentation.
type HackSessionContext_obsoleteGetIpNetwork struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteGetIpNetwork) Args() HackSessionContext_obsoleteGetIpNetwork_Params {
	return HackSessionContext_obsoleteGetIpNetwork_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteGetIpNetwork) AllocResults() (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpNetwork_Results{Struct: r}, err
}

// HackSessionContext_obsoleteGetIpInterface holds the state for a server call to HackSessionContext.obsoleteGetIpInterface.
// See server.Call for documentation.
type HackSessionContext_obsoleteGetIpInterface struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteGetIpInterface) Args() HackSessionContext_obsoleteGetIpInterface_Params {
	return HackSessionContext_obsoleteGetIpInterface_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteGetIpInterface) AllocResults() (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpInterface_Results{Struct: r}, err
}

// HackSessionContext_getUiViewForEndpoint holds the state for a server call to HackSessionContext.getUiViewForEndpoint.
// See server.Call for documentation.
type HackSessionContext_getUiViewForEndpoint struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_getUiViewForEndpoint) Args() HackSessionContext_getUiViewForEndpoint_Params {
	return HackSessionContext_getUiViewForEndpoint_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c HackSessionContext_getUiViewForEndpoint) AllocResults() (HackSessionContext_getUiViewForEndpoint_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_getUiViewForEndpoint_Results{Struct: r}, err
}

type HackSessionContext_TokenInfo struct{ capnp.Struct }

// HackSessionContext_TokenInfo_TypeID is the unique identifier for the type HackSessionContext_TokenInfo.
const HackSessionContext_TokenInfo_TypeID = 0xf910658ae8c6674d

func NewHackSessionContext_TokenInfo(s *capnp.Segment) (HackSessionContext_TokenInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return HackSessionContext_TokenInfo{st}, err
}

func NewRootHackSessionContext_TokenInfo(s *capnp.Segment) (HackSessionContext_TokenInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return HackSessionContext_TokenInfo{st}, err
}

func ReadRootHackSessionContext_TokenInfo(msg *capnp.Message) (HackSessionContext_TokenInfo, error) {
	root, err := msg.Root()
	return HackSessionContext_TokenInfo{root.Struct()}, err
}

func (s HackSessionContext_TokenInfo) String() string {
	str, _ := text.Marshal(0xf910658ae8c6674d, s.Struct)
	return str
}

func (s HackSessionContext_TokenInfo) TokenId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_TokenInfo) HasTokenId() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_TokenInfo) TokenIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_TokenInfo) SetTokenId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s HackSessionContext_TokenInfo) Petname() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s HackSessionContext_TokenInfo) HasPetname() bool {
	return s.Struct.HasPtr(1)
}

func (s HackSessionContext_TokenInfo) PetnameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s HackSessionContext_TokenInfo) SetPetname(v string) error {
	return s.Struct.SetText(1, v)
}

func (s HackSessionContext_TokenInfo) UserInfo() (identity.UserInfo, error) {
	p, err := s.Struct.Ptr(2)
	return identity.UserInfo{Struct: p.Struct()}, err
}

func (s HackSessionContext_TokenInfo) HasUserInfo() bool {
	return s.Struct.HasPtr(2)
}

func (s HackSessionContext_TokenInfo) SetUserInfo(v identity.UserInfo) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewUserInfo sets the userInfo field to a newly
// allocated identity.UserInfo struct, preferring placement in s's segment.
func (s HackSessionContext_TokenInfo) NewUserInfo() (identity.UserInfo, error) {
	ss, err := identity.NewUserInfo(s.Struct.Segment())
	if err != nil {
		return identity.UserInfo{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

// HackSessionContext_TokenInfo_List is a list of HackSessionContext_TokenInfo.
type HackSessionContext_TokenInfo_List struct{ capnp.List }

// NewHackSessionContext_TokenInfo creates a new list of HackSessionContext_TokenInfo.
func NewHackSessionContext_TokenInfo_List(s *capnp.Segment, sz int32) (HackSessionContext_TokenInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return HackSessionContext_TokenInfo_List{l}, err
}

func (s HackSessionContext_TokenInfo_List) At(i int) HackSessionContext_TokenInfo {
	return HackSessionContext_TokenInfo{s.List.Struct(i)}
}

func (s HackSessionContext_TokenInfo_List) Set(i int, v HackSessionContext_TokenInfo) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_TokenInfo_List) String() string {
	str, _ := text.MarshalList(0xf910658ae8c6674d, s.List)
	return str
}

// HackSessionContext_TokenInfo_Future is a wrapper for a HackSessionContext_TokenInfo promised by a client call.
type HackSessionContext_TokenInfo_Future struct{ *capnp.Future }

func (p HackSessionContext_TokenInfo_Future) Struct() (HackSessionContext_TokenInfo, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_TokenInfo{s}, err
}

func (p HackSessionContext_TokenInfo_Future) UserInfo() identity.UserInfo_Future {
	return identity.UserInfo_Future{Future: p.Future.Field(2, nil)}
}

type HackSessionContext_getPublicId_Params struct{ capnp.Struct }

// HackSessionContext_getPublicId_Params_TypeID is the unique identifier for the type HackSessionContext_getPublicId_Params.
const HackSessionContext_getPublicId_Params_TypeID = 0xe706d835e9cd64af

func NewHackSessionContext_getPublicId_Params(s *capnp.Segment) (HackSessionContext_getPublicId_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getPublicId_Params{st}, err
}

func NewRootHackSessionContext_getPublicId_Params(s *capnp.Segment) (HackSessionContext_getPublicId_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getPublicId_Params{st}, err
}

func ReadRootHackSessionContext_getPublicId_Params(msg *capnp.Message) (HackSessionContext_getPublicId_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_getPublicId_Params{root.Struct()}, err
}

func (s HackSessionContext_getPublicId_Params) String() string {
	str, _ := text.Marshal(0xe706d835e9cd64af, s.Struct)
	return str
}

// HackSessionContext_getPublicId_Params_List is a list of HackSessionContext_getPublicId_Params.
type HackSessionContext_getPublicId_Params_List struct{ capnp.List }

// NewHackSessionContext_getPublicId_Params creates a new list of HackSessionContext_getPublicId_Params.
func NewHackSessionContext_getPublicId_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_getPublicId_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return HackSessionContext_getPublicId_Params_List{l}, err
}

func (s HackSessionContext_getPublicId_Params_List) At(i int) HackSessionContext_getPublicId_Params {
	return HackSessionContext_getPublicId_Params{s.List.Struct(i)}
}

func (s HackSessionContext_getPublicId_Params_List) Set(i int, v HackSessionContext_getPublicId_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_getPublicId_Params_List) String() string {
	str, _ := text.MarshalList(0xe706d835e9cd64af, s.List)
	return str
}

// HackSessionContext_getPublicId_Params_Future is a wrapper for a HackSessionContext_getPublicId_Params promised by a client call.
type HackSessionContext_getPublicId_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_getPublicId_Params_Future) Struct() (HackSessionContext_getPublicId_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_getPublicId_Params{s}, err
}

type HackSessionContext_getPublicId_Results struct{ capnp.Struct }

// HackSessionContext_getPublicId_Results_TypeID is the unique identifier for the type HackSessionContext_getPublicId_Results.
const HackSessionContext_getPublicId_Results_TypeID = 0xe96193c522f6c05d

func NewHackSessionContext_getPublicId_Results(s *capnp.Segment) (HackSessionContext_getPublicId_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return HackSessionContext_getPublicId_Results{st}, err
}

func NewRootHackSessionContext_getPublicId_Results(s *capnp.Segment) (HackSessionContext_getPublicId_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return HackSessionContext_getPublicId_Results{st}, err
}

func ReadRootHackSessionContext_getPublicId_Results(msg *capnp.Message) (HackSessionContext_getPublicId_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_getPublicId_Results{root.Struct()}, err
}

func (s HackSessionContext_getPublicId_Results) String() string {
	str, _ := text.Marshal(0xe96193c522f6c05d, s.Struct)
	return str
}

func (s HackSessionContext_getPublicId_Results) PublicId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_getPublicId_Results) HasPublicId() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_getPublicId_Results) PublicIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_getPublicId_Results) SetPublicId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s HackSessionContext_getPublicId_Results) Hostname() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s HackSessionContext_getPublicId_Results) HasHostname() bool {
	return s.Struct.HasPtr(1)
}

func (s HackSessionContext_getPublicId_Results) HostnameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s HackSessionContext_getPublicId_Results) SetHostname(v string) error {
	return s.Struct.SetText(1, v)
}

func (s HackSessionContext_getPublicId_Results) AutoUrl() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s HackSessionContext_getPublicId_Results) HasAutoUrl() bool {
	return s.Struct.HasPtr(2)
}

func (s HackSessionContext_getPublicId_Results) AutoUrlBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s HackSessionContext_getPublicId_Results) SetAutoUrl(v string) error {
	return s.Struct.SetText(2, v)
}

func (s HackSessionContext_getPublicId_Results) IsDemoUser() bool {
	return s.Struct.Bit(0)
}

func (s HackSessionContext_getPublicId_Results) SetIsDemoUser(v bool) {
	s.Struct.SetBit(0, v)
}

// HackSessionContext_getPublicId_Results_List is a list of HackSessionContext_getPublicId_Results.
type HackSessionContext_getPublicId_Results_List struct{ capnp.List }

// NewHackSessionContext_getPublicId_Results creates a new list of HackSessionContext_getPublicId_Results.
func NewHackSessionContext_getPublicId_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_getPublicId_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return HackSessionContext_getPublicId_Results_List{l}, err
}

func (s HackSessionContext_getPublicId_Results_List) At(i int) HackSessionContext_getPublicId_Results {
	return HackSessionContext_getPublicId_Results{s.List.Struct(i)}
}

func (s HackSessionContext_getPublicId_Results_List) Set(i int, v HackSessionContext_getPublicId_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_getPublicId_Results_List) String() string {
	str, _ := text.MarshalList(0xe96193c522f6c05d, s.List)
	return str
}

// HackSessionContext_getPublicId_Results_Future is a wrapper for a HackSessionContext_getPublicId_Results promised by a client call.
type HackSessionContext_getPublicId_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_getPublicId_Results_Future) Struct() (HackSessionContext_getPublicId_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_getPublicId_Results{s}, err
}

type HackSessionContext_httpGet_Params struct{ capnp.Struct }

// HackSessionContext_httpGet_Params_TypeID is the unique identifier for the type HackSessionContext_httpGet_Params.
const HackSessionContext_httpGet_Params_TypeID = 0xe54437a7b8f52843

func NewHackSessionContext_httpGet_Params(s *capnp.Segment) (HackSessionContext_httpGet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_httpGet_Params{st}, err
}

func NewRootHackSessionContext_httpGet_Params(s *capnp.Segment) (HackSessionContext_httpGet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_httpGet_Params{st}, err
}

func ReadRootHackSessionContext_httpGet_Params(msg *capnp.Message) (HackSessionContext_httpGet_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_httpGet_Params{root.Struct()}, err
}

func (s HackSessionContext_httpGet_Params) String() string {
	str, _ := text.Marshal(0xe54437a7b8f52843, s.Struct)
	return str
}

func (s HackSessionContext_httpGet_Params) Url() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_httpGet_Params) HasUrl() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_httpGet_Params) UrlBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_httpGet_Params) SetUrl(v string) error {
	return s.Struct.SetText(0, v)
}

// HackSessionContext_httpGet_Params_List is a list of HackSessionContext_httpGet_Params.
type HackSessionContext_httpGet_Params_List struct{ capnp.List }

// NewHackSessionContext_httpGet_Params creates a new list of HackSessionContext_httpGet_Params.
func NewHackSessionContext_httpGet_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_httpGet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return HackSessionContext_httpGet_Params_List{l}, err
}

func (s HackSessionContext_httpGet_Params_List) At(i int) HackSessionContext_httpGet_Params {
	return HackSessionContext_httpGet_Params{s.List.Struct(i)}
}

func (s HackSessionContext_httpGet_Params_List) Set(i int, v HackSessionContext_httpGet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_httpGet_Params_List) String() string {
	str, _ := text.MarshalList(0xe54437a7b8f52843, s.List)
	return str
}

// HackSessionContext_httpGet_Params_Future is a wrapper for a HackSessionContext_httpGet_Params promised by a client call.
type HackSessionContext_httpGet_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_httpGet_Params_Future) Struct() (HackSessionContext_httpGet_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_httpGet_Params{s}, err
}

type HackSessionContext_httpGet_Results struct{ capnp.Struct }

// HackSessionContext_httpGet_Results_TypeID is the unique identifier for the type HackSessionContext_httpGet_Results.
const HackSessionContext_httpGet_Results_TypeID = 0xb44df810894a44f4

func NewHackSessionContext_httpGet_Results(s *capnp.Segment) (HackSessionContext_httpGet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return HackSessionContext_httpGet_Results{st}, err
}

func NewRootHackSessionContext_httpGet_Results(s *capnp.Segment) (HackSessionContext_httpGet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return HackSessionContext_httpGet_Results{st}, err
}

func ReadRootHackSessionContext_httpGet_Results(msg *capnp.Message) (HackSessionContext_httpGet_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_httpGet_Results{root.Struct()}, err
}

func (s HackSessionContext_httpGet_Results) String() string {
	str, _ := text.Marshal(0xb44df810894a44f4, s.Struct)
	return str
}

func (s HackSessionContext_httpGet_Results) MimeType() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_httpGet_Results) HasMimeType() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_httpGet_Results) MimeTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_httpGet_Results) SetMimeType(v string) error {
	return s.Struct.SetText(0, v)
}

func (s HackSessionContext_httpGet_Results) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s HackSessionContext_httpGet_Results) HasContent() bool {
	return s.Struct.HasPtr(1)
}

func (s HackSessionContext_httpGet_Results) SetContent(v []byte) error {
	return s.Struct.SetData(1, v)
}

// HackSessionContext_httpGet_Results_List is a list of HackSessionContext_httpGet_Results.
type HackSessionContext_httpGet_Results_List struct{ capnp.List }

// NewHackSessionContext_httpGet_Results creates a new list of HackSessionContext_httpGet_Results.
func NewHackSessionContext_httpGet_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_httpGet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return HackSessionContext_httpGet_Results_List{l}, err
}

func (s HackSessionContext_httpGet_Results_List) At(i int) HackSessionContext_httpGet_Results {
	return HackSessionContext_httpGet_Results{s.List.Struct(i)}
}

func (s HackSessionContext_httpGet_Results_List) Set(i int, v HackSessionContext_httpGet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_httpGet_Results_List) String() string {
	str, _ := text.MarshalList(0xb44df810894a44f4, s.List)
	return str
}

// HackSessionContext_httpGet_Results_Future is a wrapper for a HackSessionContext_httpGet_Results promised by a client call.
type HackSessionContext_httpGet_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_httpGet_Results_Future) Struct() (HackSessionContext_httpGet_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_httpGet_Results{s}, err
}

type HackSessionContext_getUserAddress_Params struct{ capnp.Struct }

// HackSessionContext_getUserAddress_Params_TypeID is the unique identifier for the type HackSessionContext_getUserAddress_Params.
const HackSessionContext_getUserAddress_Params_TypeID = 0xa15e445037d1834c

func NewHackSessionContext_getUserAddress_Params(s *capnp.Segment) (HackSessionContext_getUserAddress_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getUserAddress_Params{st}, err
}

func NewRootHackSessionContext_getUserAddress_Params(s *capnp.Segment) (HackSessionContext_getUserAddress_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getUserAddress_Params{st}, err
}

func ReadRootHackSessionContext_getUserAddress_Params(msg *capnp.Message) (HackSessionContext_getUserAddress_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_getUserAddress_Params{root.Struct()}, err
}

func (s HackSessionContext_getUserAddress_Params) String() string {
	str, _ := text.Marshal(0xa15e445037d1834c, s.Struct)
	return str
}

// HackSessionContext_getUserAddress_Params_List is a list of HackSessionContext_getUserAddress_Params.
type HackSessionContext_getUserAddress_Params_List struct{ capnp.List }

// NewHackSessionContext_getUserAddress_Params creates a new list of HackSessionContext_getUserAddress_Params.
func NewHackSessionContext_getUserAddress_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_getUserAddress_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return HackSessionContext_getUserAddress_Params_List{l}, err
}

func (s HackSessionContext_getUserAddress_Params_List) At(i int) HackSessionContext_getUserAddress_Params {
	return HackSessionContext_getUserAddress_Params{s.List.Struct(i)}
}

func (s HackSessionContext_getUserAddress_Params_List) Set(i int, v HackSessionContext_getUserAddress_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_getUserAddress_Params_List) String() string {
	str, _ := text.MarshalList(0xa15e445037d1834c, s.List)
	return str
}

// HackSessionContext_getUserAddress_Params_Future is a wrapper for a HackSessionContext_getUserAddress_Params promised by a client call.
type HackSessionContext_getUserAddress_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_getUserAddress_Params_Future) Struct() (HackSessionContext_getUserAddress_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_getUserAddress_Params{s}, err
}

type HackSessionContext_obsoleteGenerateApiToken_Params struct{ capnp.Struct }

// HackSessionContext_obsoleteGenerateApiToken_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteGenerateApiToken_Params.
const HackSessionContext_obsoleteGenerateApiToken_Params_TypeID = 0x837afa61d880beb6

func NewHackSessionContext_obsoleteGenerateApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return HackSessionContext_obsoleteGenerateApiToken_Params{st}, err
}

func NewRootHackSessionContext_obsoleteGenerateApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return HackSessionContext_obsoleteGenerateApiToken_Params{st}, err
}

func ReadRootHackSessionContext_obsoleteGenerateApiToken_Params(msg *capnp.Message) (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGenerateApiToken_Params{root.Struct()}, err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) String() string {
	str, _ := text.Marshal(0x837afa61d880beb6, s.Struct)
	return str
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) Petname() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) HasPetname() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) PetnameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) SetPetname(v string) error {
	return s.Struct.SetText(0, v)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) UserInfo() (identity.UserInfo, error) {
	p, err := s.Struct.Ptr(1)
	return identity.UserInfo{Struct: p.Struct()}, err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) HasUserInfo() bool {
	return s.Struct.HasPtr(1)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) SetUserInfo(v identity.UserInfo) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewUserInfo sets the userInfo field to a newly
// allocated identity.UserInfo struct, preferring placement in s's segment.
func (s HackSessionContext_obsoleteGenerateApiToken_Params) NewUserInfo() (identity.UserInfo, error) {
	ss, err := identity.NewUserInfo(s.Struct.Segment())
	if err != nil {
		return identity.UserInfo{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) Expires() uint64 {
	return s.Struct.Uint64(0)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) SetExpires(v uint64) {
	s.Struct.SetUint64(0, v)
}

// HackSessionContext_obsoleteGenerateApiToken_Params_List is a list of HackSessionContext_obsoleteGenerateApiToken_Params.
type HackSessionContext_obsoleteGenerateApiToken_Params_List struct{ capnp.List }

// NewHackSessionContext_obsoleteGenerateApiToken_Params creates a new list of HackSessionContext_obsoleteGenerateApiToken_Params.
func NewHackSessionContext_obsoleteGenerateApiToken_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGenerateApiToken_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return HackSessionContext_obsoleteGenerateApiToken_Params_List{l}, err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params_List) At(i int) HackSessionContext_obsoleteGenerateApiToken_Params {
	return HackSessionContext_obsoleteGenerateApiToken_Params{s.List.Struct(i)}
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params_List) Set(i int, v HackSessionContext_obsoleteGenerateApiToken_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params_List) String() string {
	str, _ := text.MarshalList(0x837afa61d880beb6, s.List)
	return str
}

// HackSessionContext_obsoleteGenerateApiToken_Params_Future is a wrapper for a HackSessionContext_obsoleteGenerateApiToken_Params promised by a client call.
type HackSessionContext_obsoleteGenerateApiToken_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGenerateApiToken_Params_Future) Struct() (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGenerateApiToken_Params{s}, err
}

func (p HackSessionContext_obsoleteGenerateApiToken_Params_Future) UserInfo() identity.UserInfo_Future {
	return identity.UserInfo_Future{Future: p.Future.Field(1, nil)}
}

type HackSessionContext_obsoleteGenerateApiToken_Results struct{ capnp.Struct }

// HackSessionContext_obsoleteGenerateApiToken_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteGenerateApiToken_Results.
const HackSessionContext_obsoleteGenerateApiToken_Results_TypeID = 0xc9973f31a90887f9

func NewHackSessionContext_obsoleteGenerateApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return HackSessionContext_obsoleteGenerateApiToken_Results{st}, err
}

func NewRootHackSessionContext_obsoleteGenerateApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return HackSessionContext_obsoleteGenerateApiToken_Results{st}, err
}

func ReadRootHackSessionContext_obsoleteGenerateApiToken_Results(msg *capnp.Message) (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGenerateApiToken_Results{root.Struct()}, err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) String() string {
	str, _ := text.Marshal(0xc9973f31a90887f9, s.Struct)
	return str
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) Token() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) HasToken() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) TokenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) SetToken(v string) error {
	return s.Struct.SetText(0, v)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) EndpointUrl() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) HasEndpointUrl() bool {
	return s.Struct.HasPtr(1)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) EndpointUrlBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) SetEndpointUrl(v string) error {
	return s.Struct.SetText(1, v)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) TokenId() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) HasTokenId() bool {
	return s.Struct.HasPtr(2)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) TokenIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) SetTokenId(v string) error {
	return s.Struct.SetText(2, v)
}

// HackSessionContext_obsoleteGenerateApiToken_Results_List is a list of HackSessionContext_obsoleteGenerateApiToken_Results.
type HackSessionContext_obsoleteGenerateApiToken_Results_List struct{ capnp.List }

// NewHackSessionContext_obsoleteGenerateApiToken_Results creates a new list of HackSessionContext_obsoleteGenerateApiToken_Results.
func NewHackSessionContext_obsoleteGenerateApiToken_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGenerateApiToken_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return HackSessionContext_obsoleteGenerateApiToken_Results_List{l}, err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results_List) At(i int) HackSessionContext_obsoleteGenerateApiToken_Results {
	return HackSessionContext_obsoleteGenerateApiToken_Results{s.List.Struct(i)}
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results_List) Set(i int, v HackSessionContext_obsoleteGenerateApiToken_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results_List) String() string {
	str, _ := text.MarshalList(0xc9973f31a90887f9, s.List)
	return str
}

// HackSessionContext_obsoleteGenerateApiToken_Results_Future is a wrapper for a HackSessionContext_obsoleteGenerateApiToken_Results promised by a client call.
type HackSessionContext_obsoleteGenerateApiToken_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGenerateApiToken_Results_Future) Struct() (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGenerateApiToken_Results{s}, err
}

type HackSessionContext_obsoleteListApiTokens_Params struct{ capnp.Struct }

// HackSessionContext_obsoleteListApiTokens_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteListApiTokens_Params.
const HackSessionContext_obsoleteListApiTokens_Params_TypeID = 0xfe777c71f871f413

func NewHackSessionContext_obsoleteListApiTokens_Params(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteListApiTokens_Params{st}, err
}

func NewRootHackSessionContext_obsoleteListApiTokens_Params(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteListApiTokens_Params{st}, err
}

func ReadRootHackSessionContext_obsoleteListApiTokens_Params(msg *capnp.Message) (HackSessionContext_obsoleteListApiTokens_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteListApiTokens_Params{root.Struct()}, err
}

func (s HackSessionContext_obsoleteListApiTokens_Params) String() string {
	str, _ := text.Marshal(0xfe777c71f871f413, s.Struct)
	return str
}

// HackSessionContext_obsoleteListApiTokens_Params_List is a list of HackSessionContext_obsoleteListApiTokens_Params.
type HackSessionContext_obsoleteListApiTokens_Params_List struct{ capnp.List }

// NewHackSessionContext_obsoleteListApiTokens_Params creates a new list of HackSessionContext_obsoleteListApiTokens_Params.
func NewHackSessionContext_obsoleteListApiTokens_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteListApiTokens_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return HackSessionContext_obsoleteListApiTokens_Params_List{l}, err
}

func (s HackSessionContext_obsoleteListApiTokens_Params_List) At(i int) HackSessionContext_obsoleteListApiTokens_Params {
	return HackSessionContext_obsoleteListApiTokens_Params{s.List.Struct(i)}
}

func (s HackSessionContext_obsoleteListApiTokens_Params_List) Set(i int, v HackSessionContext_obsoleteListApiTokens_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_obsoleteListApiTokens_Params_List) String() string {
	str, _ := text.MarshalList(0xfe777c71f871f413, s.List)
	return str
}

// HackSessionContext_obsoleteListApiTokens_Params_Future is a wrapper for a HackSessionContext_obsoleteListApiTokens_Params promised by a client call.
type HackSessionContext_obsoleteListApiTokens_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteListApiTokens_Params_Future) Struct() (HackSessionContext_obsoleteListApiTokens_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteListApiTokens_Params{s}, err
}

type HackSessionContext_obsoleteListApiTokens_Results struct{ capnp.Struct }

// HackSessionContext_obsoleteListApiTokens_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteListApiTokens_Results.
const HackSessionContext_obsoleteListApiTokens_Results_TypeID = 0xe9e4890dae20b03c

func NewHackSessionContext_obsoleteListApiTokens_Results(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteListApiTokens_Results{st}, err
}

func NewRootHackSessionContext_obsoleteListApiTokens_Results(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteListApiTokens_Results{st}, err
}

func ReadRootHackSessionContext_obsoleteListApiTokens_Results(msg *capnp.Message) (HackSessionContext_obsoleteListApiTokens_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteListApiTokens_Results{root.Struct()}, err
}

func (s HackSessionContext_obsoleteListApiTokens_Results) String() string {
	str, _ := text.Marshal(0xe9e4890dae20b03c, s.Struct)
	return str
}

func (s HackSessionContext_obsoleteListApiTokens_Results) Tokens() (HackSessionContext_TokenInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return HackSessionContext_TokenInfo_List{List: p.List()}, err
}

func (s HackSessionContext_obsoleteListApiTokens_Results) HasTokens() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_obsoleteListApiTokens_Results) SetTokens(v HackSessionContext_TokenInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewTokens sets the tokens field to a newly
// allocated HackSessionContext_TokenInfo_List, preferring placement in s's segment.
func (s HackSessionContext_obsoleteListApiTokens_Results) NewTokens(n int32) (HackSessionContext_TokenInfo_List, error) {
	l, err := NewHackSessionContext_TokenInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return HackSessionContext_TokenInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// HackSessionContext_obsoleteListApiTokens_Results_List is a list of HackSessionContext_obsoleteListApiTokens_Results.
type HackSessionContext_obsoleteListApiTokens_Results_List struct{ capnp.List }

// NewHackSessionContext_obsoleteListApiTokens_Results creates a new list of HackSessionContext_obsoleteListApiTokens_Results.
func NewHackSessionContext_obsoleteListApiTokens_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteListApiTokens_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return HackSessionContext_obsoleteListApiTokens_Results_List{l}, err
}

func (s HackSessionContext_obsoleteListApiTokens_Results_List) At(i int) HackSessionContext_obsoleteListApiTokens_Results {
	return HackSessionContext_obsoleteListApiTokens_Results{s.List.Struct(i)}
}

func (s HackSessionContext_obsoleteListApiTokens_Results_List) Set(i int, v HackSessionContext_obsoleteListApiTokens_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_obsoleteListApiTokens_Results_List) String() string {
	str, _ := text.MarshalList(0xe9e4890dae20b03c, s.List)
	return str
}

// HackSessionContext_obsoleteListApiTokens_Results_Future is a wrapper for a HackSessionContext_obsoleteListApiTokens_Results promised by a client call.
type HackSessionContext_obsoleteListApiTokens_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteListApiTokens_Results_Future) Struct() (HackSessionContext_obsoleteListApiTokens_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteListApiTokens_Results{s}, err
}

type HackSessionContext_obsoleteRevokeApiToken_Params struct{ capnp.Struct }

// HackSessionContext_obsoleteRevokeApiToken_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteRevokeApiToken_Params.
const HackSessionContext_obsoleteRevokeApiToken_Params_TypeID = 0x845e8081686d8a0f

func NewHackSessionContext_obsoleteRevokeApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteRevokeApiToken_Params{st}, err
}

func NewRootHackSessionContext_obsoleteRevokeApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteRevokeApiToken_Params{st}, err
}

func ReadRootHackSessionContext_obsoleteRevokeApiToken_Params(msg *capnp.Message) (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteRevokeApiToken_Params{root.Struct()}, err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) String() string {
	str, _ := text.Marshal(0x845e8081686d8a0f, s.Struct)
	return str
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) TokenId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) HasTokenId() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) TokenIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) SetTokenId(v string) error {
	return s.Struct.SetText(0, v)
}

// HackSessionContext_obsoleteRevokeApiToken_Params_List is a list of HackSessionContext_obsoleteRevokeApiToken_Params.
type HackSessionContext_obsoleteRevokeApiToken_Params_List struct{ capnp.List }

// NewHackSessionContext_obsoleteRevokeApiToken_Params creates a new list of HackSessionContext_obsoleteRevokeApiToken_Params.
func NewHackSessionContext_obsoleteRevokeApiToken_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteRevokeApiToken_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return HackSessionContext_obsoleteRevokeApiToken_Params_List{l}, err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params_List) At(i int) HackSessionContext_obsoleteRevokeApiToken_Params {
	return HackSessionContext_obsoleteRevokeApiToken_Params{s.List.Struct(i)}
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params_List) Set(i int, v HackSessionContext_obsoleteRevokeApiToken_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params_List) String() string {
	str, _ := text.MarshalList(0x845e8081686d8a0f, s.List)
	return str
}

// HackSessionContext_obsoleteRevokeApiToken_Params_Future is a wrapper for a HackSessionContext_obsoleteRevokeApiToken_Params promised by a client call.
type HackSessionContext_obsoleteRevokeApiToken_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteRevokeApiToken_Params_Future) Struct() (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteRevokeApiToken_Params{s}, err
}

type HackSessionContext_obsoleteRevokeApiToken_Results struct{ capnp.Struct }

// HackSessionContext_obsoleteRevokeApiToken_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteRevokeApiToken_Results.
const HackSessionContext_obsoleteRevokeApiToken_Results_TypeID = 0xaea67098dc479ce6

func NewHackSessionContext_obsoleteRevokeApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteRevokeApiToken_Results{st}, err
}

func NewRootHackSessionContext_obsoleteRevokeApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteRevokeApiToken_Results{st}, err
}

func ReadRootHackSessionContext_obsoleteRevokeApiToken_Results(msg *capnp.Message) (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteRevokeApiToken_Results{root.Struct()}, err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results) String() string {
	str, _ := text.Marshal(0xaea67098dc479ce6, s.Struct)
	return str
}

// HackSessionContext_obsoleteRevokeApiToken_Results_List is a list of HackSessionContext_obsoleteRevokeApiToken_Results.
type HackSessionContext_obsoleteRevokeApiToken_Results_List struct{ capnp.List }

// NewHackSessionContext_obsoleteRevokeApiToken_Results creates a new list of HackSessionContext_obsoleteRevokeApiToken_Results.
func NewHackSessionContext_obsoleteRevokeApiToken_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteRevokeApiToken_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return HackSessionContext_obsoleteRevokeApiToken_Results_List{l}, err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results_List) At(i int) HackSessionContext_obsoleteRevokeApiToken_Results {
	return HackSessionContext_obsoleteRevokeApiToken_Results{s.List.Struct(i)}
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results_List) Set(i int, v HackSessionContext_obsoleteRevokeApiToken_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results_List) String() string {
	str, _ := text.MarshalList(0xaea67098dc479ce6, s.List)
	return str
}

// HackSessionContext_obsoleteRevokeApiToken_Results_Future is a wrapper for a HackSessionContext_obsoleteRevokeApiToken_Results promised by a client call.
type HackSessionContext_obsoleteRevokeApiToken_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteRevokeApiToken_Results_Future) Struct() (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteRevokeApiToken_Results{s}, err
}

type HackSessionContext_obsoleteGetIpNetwork_Params struct{ capnp.Struct }

// HackSessionContext_obsoleteGetIpNetwork_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpNetwork_Params.
const HackSessionContext_obsoleteGetIpNetwork_Params_TypeID = 0x97f9d7a51ffe0741

func NewHackSessionContext_obsoleteGetIpNetwork_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpNetwork_Params{st}, err
}

func NewRootHackSessionContext_obsoleteGetIpNetwork_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpNetwork_Params{st}, err
}

func ReadRootHackSessionContext_obsoleteGetIpNetwork_Params(msg *capnp.Message) (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpNetwork_Params{root.Struct()}, err
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params) String() string {
	str, _ := text.Marshal(0x97f9d7a51ffe0741, s.Struct)
	return str
}

// HackSessionContext_obsoleteGetIpNetwork_Params_List is a list of HackSessionContext_obsoleteGetIpNetwork_Params.
type HackSessionContext_obsoleteGetIpNetwork_Params_List struct{ capnp.List }

// NewHackSessionContext_obsoleteGetIpNetwork_Params creates a new list of HackSessionContext_obsoleteGetIpNetwork_Params.
func NewHackSessionContext_obsoleteGetIpNetwork_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpNetwork_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return HackSessionContext_obsoleteGetIpNetwork_Params_List{l}, err
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params_List) At(i int) HackSessionContext_obsoleteGetIpNetwork_Params {
	return HackSessionContext_obsoleteGetIpNetwork_Params{s.List.Struct(i)}
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params_List) Set(i int, v HackSessionContext_obsoleteGetIpNetwork_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params_List) String() string {
	str, _ := text.MarshalList(0x97f9d7a51ffe0741, s.List)
	return str
}

// HackSessionContext_obsoleteGetIpNetwork_Params_Future is a wrapper for a HackSessionContext_obsoleteGetIpNetwork_Params promised by a client call.
type HackSessionContext_obsoleteGetIpNetwork_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGetIpNetwork_Params_Future) Struct() (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGetIpNetwork_Params{s}, err
}

type HackSessionContext_obsoleteGetIpNetwork_Results struct{ capnp.Struct }

// HackSessionContext_obsoleteGetIpNetwork_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpNetwork_Results.
const HackSessionContext_obsoleteGetIpNetwork_Results_TypeID = 0xa9502e5fdabb8b07

func NewHackSessionContext_obsoleteGetIpNetwork_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpNetwork_Results{st}, err
}

func NewRootHackSessionContext_obsoleteGetIpNetwork_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpNetwork_Results{st}, err
}

func ReadRootHackSessionContext_obsoleteGetIpNetwork_Results(msg *capnp.Message) (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpNetwork_Results{root.Struct()}, err
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) String() string {
	str, _ := text.Marshal(0xa9502e5fdabb8b07, s.Struct)
	return str
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) Network() ip.IpNetwork {
	p, _ := s.Struct.Ptr(0)
	return ip.IpNetwork{Client: p.Interface().Client()}
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) HasNetwork() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) SetNetwork(v ip.IpNetwork) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// HackSessionContext_obsoleteGetIpNetwork_Results_List is a list of HackSessionContext_obsoleteGetIpNetwork_Results.
type HackSessionContext_obsoleteGetIpNetwork_Results_List struct{ capnp.List }

// NewHackSessionContext_obsoleteGetIpNetwork_Results creates a new list of HackSessionContext_obsoleteGetIpNetwork_Results.
func NewHackSessionContext_obsoleteGetIpNetwork_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpNetwork_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return HackSessionContext_obsoleteGetIpNetwork_Results_List{l}, err
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results_List) At(i int) HackSessionContext_obsoleteGetIpNetwork_Results {
	return HackSessionContext_obsoleteGetIpNetwork_Results{s.List.Struct(i)}
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results_List) Set(i int, v HackSessionContext_obsoleteGetIpNetwork_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results_List) String() string {
	str, _ := text.MarshalList(0xa9502e5fdabb8b07, s.List)
	return str
}

// HackSessionContext_obsoleteGetIpNetwork_Results_Future is a wrapper for a HackSessionContext_obsoleteGetIpNetwork_Results promised by a client call.
type HackSessionContext_obsoleteGetIpNetwork_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGetIpNetwork_Results_Future) Struct() (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGetIpNetwork_Results{s}, err
}

func (p HackSessionContext_obsoleteGetIpNetwork_Results_Future) Network() ip.IpNetwork {
	return ip.IpNetwork{Client: p.Future.Field(0, nil).Client()}
}

type HackSessionContext_obsoleteGetIpInterface_Params struct{ capnp.Struct }

// HackSessionContext_obsoleteGetIpInterface_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpInterface_Params.
const HackSessionContext_obsoleteGetIpInterface_Params_TypeID = 0xecebff1662ba10a1

func NewHackSessionContext_obsoleteGetIpInterface_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpInterface_Params{st}, err
}

func NewRootHackSessionContext_obsoleteGetIpInterface_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpInterface_Params{st}, err
}

func ReadRootHackSessionContext_obsoleteGetIpInterface_Params(msg *capnp.Message) (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpInterface_Params{root.Struct()}, err
}

func (s HackSessionContext_obsoleteGetIpInterface_Params) String() string {
	str, _ := text.Marshal(0xecebff1662ba10a1, s.Struct)
	return str
}

// HackSessionContext_obsoleteGetIpInterface_Params_List is a list of HackSessionContext_obsoleteGetIpInterface_Params.
type HackSessionContext_obsoleteGetIpInterface_Params_List struct{ capnp.List }

// NewHackSessionContext_obsoleteGetIpInterface_Params creates a new list of HackSessionContext_obsoleteGetIpInterface_Params.
func NewHackSessionContext_obsoleteGetIpInterface_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpInterface_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return HackSessionContext_obsoleteGetIpInterface_Params_List{l}, err
}

func (s HackSessionContext_obsoleteGetIpInterface_Params_List) At(i int) HackSessionContext_obsoleteGetIpInterface_Params {
	return HackSessionContext_obsoleteGetIpInterface_Params{s.List.Struct(i)}
}

func (s HackSessionContext_obsoleteGetIpInterface_Params_List) Set(i int, v HackSessionContext_obsoleteGetIpInterface_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_obsoleteGetIpInterface_Params_List) String() string {
	str, _ := text.MarshalList(0xecebff1662ba10a1, s.List)
	return str
}

// HackSessionContext_obsoleteGetIpInterface_Params_Future is a wrapper for a HackSessionContext_obsoleteGetIpInterface_Params promised by a client call.
type HackSessionContext_obsoleteGetIpInterface_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGetIpInterface_Params_Future) Struct() (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGetIpInterface_Params{s}, err
}

type HackSessionContext_obsoleteGetIpInterface_Results struct{ capnp.Struct }

// HackSessionContext_obsoleteGetIpInterface_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpInterface_Results.
const HackSessionContext_obsoleteGetIpInterface_Results_TypeID = 0xb9147a48c12c807d

func NewHackSessionContext_obsoleteGetIpInterface_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpInterface_Results{st}, err
}

func NewRootHackSessionContext_obsoleteGetIpInterface_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpInterface_Results{st}, err
}

func ReadRootHackSessionContext_obsoleteGetIpInterface_Results(msg *capnp.Message) (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpInterface_Results{root.Struct()}, err
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) String() string {
	str, _ := text.Marshal(0xb9147a48c12c807d, s.Struct)
	return str
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) Interface() ip.IpInterface {
	p, _ := s.Struct.Ptr(0)
	return ip.IpInterface{Client: p.Interface().Client()}
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) HasInterface() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) SetInterface(v ip.IpInterface) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// HackSessionContext_obsoleteGetIpInterface_Results_List is a list of HackSessionContext_obsoleteGetIpInterface_Results.
type HackSessionContext_obsoleteGetIpInterface_Results_List struct{ capnp.List }

// NewHackSessionContext_obsoleteGetIpInterface_Results creates a new list of HackSessionContext_obsoleteGetIpInterface_Results.
func NewHackSessionContext_obsoleteGetIpInterface_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpInterface_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return HackSessionContext_obsoleteGetIpInterface_Results_List{l}, err
}

func (s HackSessionContext_obsoleteGetIpInterface_Results_List) At(i int) HackSessionContext_obsoleteGetIpInterface_Results {
	return HackSessionContext_obsoleteGetIpInterface_Results{s.List.Struct(i)}
}

func (s HackSessionContext_obsoleteGetIpInterface_Results_List) Set(i int, v HackSessionContext_obsoleteGetIpInterface_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_obsoleteGetIpInterface_Results_List) String() string {
	str, _ := text.MarshalList(0xb9147a48c12c807d, s.List)
	return str
}

// HackSessionContext_obsoleteGetIpInterface_Results_Future is a wrapper for a HackSessionContext_obsoleteGetIpInterface_Results promised by a client call.
type HackSessionContext_obsoleteGetIpInterface_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGetIpInterface_Results_Future) Struct() (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGetIpInterface_Results{s}, err
}

func (p HackSessionContext_obsoleteGetIpInterface_Results_Future) Interface() ip.IpInterface {
	return ip.IpInterface{Client: p.Future.Field(0, nil).Client()}
}

type HackSessionContext_getUiViewForEndpoint_Params struct{ capnp.Struct }

// HackSessionContext_getUiViewForEndpoint_Params_TypeID is the unique identifier for the type HackSessionContext_getUiViewForEndpoint_Params.
const HackSessionContext_getUiViewForEndpoint_Params_TypeID = 0xb45bb2d206694fe6

func NewHackSessionContext_getUiViewForEndpoint_Params(s *capnp.Segment) (HackSessionContext_getUiViewForEndpoint_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_getUiViewForEndpoint_Params{st}, err
}

func NewRootHackSessionContext_getUiViewForEndpoint_Params(s *capnp.Segment) (HackSessionContext_getUiViewForEndpoint_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_getUiViewForEndpoint_Params{st}, err
}

func ReadRootHackSessionContext_getUiViewForEndpoint_Params(msg *capnp.Message) (HackSessionContext_getUiViewForEndpoint_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_getUiViewForEndpoint_Params{root.Struct()}, err
}

func (s HackSessionContext_getUiViewForEndpoint_Params) String() string {
	str, _ := text.Marshal(0xb45bb2d206694fe6, s.Struct)
	return str
}

func (s HackSessionContext_getUiViewForEndpoint_Params) Url() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_getUiViewForEndpoint_Params) HasUrl() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_getUiViewForEndpoint_Params) UrlBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_getUiViewForEndpoint_Params) SetUrl(v string) error {
	return s.Struct.SetText(0, v)
}

// HackSessionContext_getUiViewForEndpoint_Params_List is a list of HackSessionContext_getUiViewForEndpoint_Params.
type HackSessionContext_getUiViewForEndpoint_Params_List struct{ capnp.List }

// NewHackSessionContext_getUiViewForEndpoint_Params creates a new list of HackSessionContext_getUiViewForEndpoint_Params.
func NewHackSessionContext_getUiViewForEndpoint_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_getUiViewForEndpoint_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return HackSessionContext_getUiViewForEndpoint_Params_List{l}, err
}

func (s HackSessionContext_getUiViewForEndpoint_Params_List) At(i int) HackSessionContext_getUiViewForEndpoint_Params {
	return HackSessionContext_getUiViewForEndpoint_Params{s.List.Struct(i)}
}

func (s HackSessionContext_getUiViewForEndpoint_Params_List) Set(i int, v HackSessionContext_getUiViewForEndpoint_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_getUiViewForEndpoint_Params_List) String() string {
	str, _ := text.MarshalList(0xb45bb2d206694fe6, s.List)
	return str
}

// HackSessionContext_getUiViewForEndpoint_Params_Future is a wrapper for a HackSessionContext_getUiViewForEndpoint_Params promised by a client call.
type HackSessionContext_getUiViewForEndpoint_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_getUiViewForEndpoint_Params_Future) Struct() (HackSessionContext_getUiViewForEndpoint_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_getUiViewForEndpoint_Params{s}, err
}

type HackSessionContext_getUiViewForEndpoint_Results struct{ capnp.Struct }

// HackSessionContext_getUiViewForEndpoint_Results_TypeID is the unique identifier for the type HackSessionContext_getUiViewForEndpoint_Results.
const HackSessionContext_getUiViewForEndpoint_Results_TypeID = 0xfdc944999b9296df

func NewHackSessionContext_getUiViewForEndpoint_Results(s *capnp.Segment) (HackSessionContext_getUiViewForEndpoint_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_getUiViewForEndpoint_Results{st}, err
}

func NewRootHackSessionContext_getUiViewForEndpoint_Results(s *capnp.Segment) (HackSessionContext_getUiViewForEndpoint_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_getUiViewForEndpoint_Results{st}, err
}

func ReadRootHackSessionContext_getUiViewForEndpoint_Results(msg *capnp.Message) (HackSessionContext_getUiViewForEndpoint_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_getUiViewForEndpoint_Results{root.Struct()}, err
}

func (s HackSessionContext_getUiViewForEndpoint_Results) String() string {
	str, _ := text.Marshal(0xfdc944999b9296df, s.Struct)
	return str
}

func (s HackSessionContext_getUiViewForEndpoint_Results) View() grain.UiView {
	p, _ := s.Struct.Ptr(0)
	return grain.UiView{Client: p.Interface().Client()}
}

func (s HackSessionContext_getUiViewForEndpoint_Results) HasView() bool {
	return s.Struct.HasPtr(0)
}

func (s HackSessionContext_getUiViewForEndpoint_Results) SetView(v grain.UiView) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// HackSessionContext_getUiViewForEndpoint_Results_List is a list of HackSessionContext_getUiViewForEndpoint_Results.
type HackSessionContext_getUiViewForEndpoint_Results_List struct{ capnp.List }

// NewHackSessionContext_getUiViewForEndpoint_Results creates a new list of HackSessionContext_getUiViewForEndpoint_Results.
func NewHackSessionContext_getUiViewForEndpoint_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_getUiViewForEndpoint_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return HackSessionContext_getUiViewForEndpoint_Results_List{l}, err
}

func (s HackSessionContext_getUiViewForEndpoint_Results_List) At(i int) HackSessionContext_getUiViewForEndpoint_Results {
	return HackSessionContext_getUiViewForEndpoint_Results{s.List.Struct(i)}
}

func (s HackSessionContext_getUiViewForEndpoint_Results_List) Set(i int, v HackSessionContext_getUiViewForEndpoint_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s HackSessionContext_getUiViewForEndpoint_Results_List) String() string {
	str, _ := text.MarshalList(0xfdc944999b9296df, s.List)
	return str
}

// HackSessionContext_getUiViewForEndpoint_Results_Future is a wrapper for a HackSessionContext_getUiViewForEndpoint_Results promised by a client call.
type HackSessionContext_getUiViewForEndpoint_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_getUiViewForEndpoint_Results_Future) Struct() (HackSessionContext_getUiViewForEndpoint_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_getUiViewForEndpoint_Results{s}, err
}

func (p HackSessionContext_getUiViewForEndpoint_Results_Future) View() grain.UiView {
	return grain.UiView{Client: p.Future.Field(0, nil).Client()}
}

type HackEmailSession struct{ Client *capnp.Client }

// HackEmailSession_TypeID is the unique identifier for the type HackEmailSession.
const HackEmailSession_TypeID = 0xc3b5ced7344b04a6

func (c HackEmailSession) Send(ctx context.Context, params func(email.EmailSendPort_send_Params) error) (email.EmailSendPort_send_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_send_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return email.EmailSendPort_send_Results_Future{Future: ans.Future()}, release
}
func (c HackEmailSession) HintAddress(ctx context.Context, params func(email.EmailSendPort_hintAddress_Params) error) (email.EmailSendPort_hintAddress_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_hintAddress_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return email.EmailSendPort_hintAddress_Results_Future{Future: ans.Future()}, release
}

func (c HackEmailSession) AddRef() HackEmailSession {
	return HackEmailSession{
		Client: c.Client.AddRef(),
	}
}

func (c HackEmailSession) Release() {
	c.Client.Release()
}

// A HackEmailSession_Server is a HackEmailSession with a local implementation.
type HackEmailSession_Server interface {
	Send(context.Context, email.EmailSendPort_send) error

	HintAddress(context.Context, email.EmailSendPort_hintAddress) error
}

// HackEmailSession_NewServer creates a new Server from an implementation of HackEmailSession_Server.
func HackEmailSession_NewServer(s HackEmailSession_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(HackEmailSession_Methods(nil, s), s, c, policy)
}

// HackEmailSession_ServerToClient creates a new Client from an implementation of HackEmailSession_Server.
// The caller is responsible for calling Release on the returned Client.
func HackEmailSession_ServerToClient(s HackEmailSession_Server, policy *server.Policy) HackEmailSession {
	return HackEmailSession{Client: capnp.NewClient(HackEmailSession_NewServer(s, policy))}
}

// HackEmailSession_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func HackEmailSession_Methods(methods []server.Method, s HackEmailSession_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Send(ctx, email.EmailSendPort_send{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.HintAddress(ctx, email.EmailSendPort_hintAddress{call})
		},
	})

	return methods
}

const schema_bf6889795837d1e0 = "x\xda\xa4Vml\x14U\x17>\xe7\xce\xb6\xd3&\xed" +
	"\xdb\xdew\x0b\xb6\x9b.\x85\xa6\"\x12 P\xc0\x1a\xa2" +
	"t\x0b\xc5\xb2Xt\xa7|H0\xa0\xd3\xed\xa5\x9dt" +
	"wf\xd9\x99\xa5\xd0hZ@4\xc5\x1f\x06Q\x81 " +
	"?\xf8\x01\x06\xa2 H\x8d\xe0\x07\x12\x83II4)" +
	"F\x01\xc5((b\x150D$@\x02c\xee\xec\xce" +
	"\xec\xb0PJm\xf6\xcff\xee9\xcf}\xce\xd7s\xee" +
	"\xc4\x8d9\x012)\xabc\"\xc0\xbc)$+\xdb\xfc" +
	"\xf0\xb3\xce\x93\xf2\x8d\xf6\xb5 \x8dF\x04\xc8\"\"\xc0" +
	"\xe4\x07\x8b+\x09\xa0\xf7\xf1\xe2\xbd\x80f\xc1\xfah\xcb" +
	"\xea\xce\xa5/\x01\x1d\xcd\x0d\x90\x1b\x9c*.\xe7\x06\x97" +
	"\x8b\xab\x01\xcd\x1a\xf1V\xd9\x8e\x13\xd77%\x0d<\xfc" +
	"\x9c\x96\xfc\x9f\x80\xc7\xac_\xdb[\x15\xaa]\xba\xddu" +
	"\x92[r\x16\xc1c\x8a\xaf~\xfc\xfds\x13B\xbb\xdc" +
	"\xa07\x8b}\x1ctX\x09\x07\xfd\xed\xed\xba\xd3\x9bc" +
	";\xf7\xb8\\\xa7\x96\x8c\xe5\xa0Wj\xe7t\x15^\x9b" +
	"{ \xe5j\x11\x1e_\xb2\x1f9\xe1\x926\xee\xfa\xb4" +
	"\x92}|\xff\xb3\x07\xdc\xd8\xdb8!\xf4v[\xd8/" +
	"v\x8e;2\xbb\xbd\xe8\xa0\xdb\xe0[\x0e\x8e\xde\x8b\x96" +
	"\xc1N\xcf\x93SN|\xdd\xfd\x05P\xaf`\xfe\xdc[" +
	"\xb5hUW\xcba\x00\x9cL}\xe5\xe8\x1d\xe5\x13\x01" +
	"\xbc~\x9f\xe8\xf5\xfb\x1e\x020\xaf\xbf\x92\xb3kR\xf5" +
	"\xa6\x9e\x14\x9c\xc0\xe1\x86\xf9\xa6q\xb8\xf1>\x9e\xc1\xd7" +
	"\xb6\x0e\x1b5\xaf\xac\xfe\xcc\x1dp=\xbeJ\xf4\x9e\xf2" +
	"=\x000\xf9\x9c\xaf\x8ex\xbbJ9\xde\xcc1\xff|" +
	"\xf4NU\xed97\xbd\xd5\xa5\xbby\x80\x1bJ9\xbd" +
	"\xbdM_\xf5M=\x99}\xde\x95\x9b}\xa5\xc7xZ" +
	"\x97|~\xb5\xfc\xe8F\xb9\xcf\xae\xa6\xc5eG\xe9q" +
	"\xee{\xb0\xf4<\xa0\xf9\xd8\xfb#\xf7\xe4w\xfd\xda\xe7" +
	"\x06\xdf\xe2\xb7\xaa\xb9\xcf\xcf\xc1\xb7\x17\x1ej\x1cn\xfe" +
	"y\xc1\x05~\x86\x9f{\xcc\xb9\xcd_\xfe\xbe\x9e\x15^" +
	"\xe7'\xe9\x98\x92w\x9c\xf2\xafA\xefE?OL\x9f" +
	"\x9f\xc7\xfc\xd3[\xafo\xddR\xdbs\xd3}\xcf\xba\x11" +
	"V\x81\xb7\x8d\xe0\xf7x\xaf,\xbf\xb6\xfc\x85\xb6[\xae" +
	"{>\xe5\xe7\xa6\xf3\xab2[\xe4p\xebx\x9d\xe9\xa2" +
	"\xaeh\xea\x84\xb0\x1cSc\xd3f\xcb\xe1\xd6yL\xe7" +
	"_fj\xaa\xc1V\x1a\x13\xb4F]\x8b0\x83\xd51" +
	"\x95\xc5e\x83\xd5\xc4\x94\xf9Z+S+Ber\\" +
	"\x8e\xeaR\x9e\xe0\x01\xf0 \x00\x9d5\x03@\x0a\x08(" +
	"\xd5\x13\xa4\x88E<K48\x07@\x9a-\xa04\x9f" +
	" \x92\"$\x88T\xe2\x86\xf5\x02J\x8b\x08v\xc4\x98" +
	"\xa1\xcaQ\x86y@0\x0f\xd0L\xe8,\x1eT\x97i" +
	"\x00\x80\x85\xe67t\xc9\x07\x7f\xf5\x1e|\x03\x00\xb1\x10" +
	"\xb0\x83\xad\x8c)q\xa6c.\x10\xcc\x05\x1cl\x14\x0d" +
	"l\x85\xd6\xea\x8aA\x8e\x8b<\x06\x8f\x13C>\xa7\x96" +
	"#\xa0TD\xb0\xc3\xe0F\xc1&\x87\xda\xa0Sf\x04" +
	"cO1\xa3M\x8b\xb7\xf2\xab\xe4(\xea\x0eF\xf6\xbd" +
	"1\x9a\x99\xb1@g\xf1\x9a\xa6\xa68\xd3u\x9b\xe8\x90" +
	"\x1840=\x11\x11\x8c~\xa3U\x93vH\xcd\xc0\xc8" +
	"\xb1\xed\xad\xcf\xac\xd9\xc5\x93N\x87\x9c\xe4\x06\xa6\x17$" +
	"\"F\x9a|\xd6\xbdaZ\x0c#V\xc7\x8c\x8a\x06V" +
	"\xa6s?)\xc7\xe1\xfb0o\xa61\x02JS\\\x1d" +
	"6\x89\x071N@\xe9Q\x82fT\x89\xb2\xf9\xabb" +
	"\x8cwO\xaal\x1da\x0e\xac\x1a\x98\x0f\x04\xf3\xef?" +
	"\x1c^\x02e\xa1\xc2\xda\x9e\xd0\xe2\xb3\xd4\xa6\x98\xa6\xa8" +
	"\x86]Fw\x0e\xcb\xd39\x14\x13\xf1\xc8\x90\xba%\xa8" +
	"\x1a,\xbeL\x0e3'k\xee\x9b\x1a\x00\xa4<\x01\xa5" +
	"b\x82\xa6\x92\xb2\x04dH\xcd\x1b\xdfM\xefSC\xe3" +
	"~\xc9\xac\x98\x90q\xf7\xac\xa8\xacD8\x01Q\xd1\xd4" +
	"\x10bH\xc8\x92r\x10Mmx\xf7\xa2K5\x95W" +
	"\x01\xc0<\xf6IO\xfda\xff\xda\x0b\xfc\xffPE\xa2" +
	"\xa1\x9a%k\xe8R\x89\xca\xbb\xa9DcZ%(\xe1" +
	"2\x01p\x9bL\x94Y\xb3\xe8\xe4\x96\xa5\xea\x01\xe2\x82" +
	"t\xc6\xfb\x9dW\xa1?\xf6e\x16}\xc9\x83\xe8\x12`" +
	"l0-\xf2Au\x19\xa0&U\x08Y\x00\xceZ@" +
	"{\x0bx)6\x02\xf1\xe6\xa2\x88\xe8l\x15\xb4\xf7'" +
	"\xbd9\x03\x08\xbd,\"q\xf64\x9e\x99\xbe\xf0\xe5K" +
	"\xa7\xdf{\x97\x9ek\x07B\x7f\x14Qp\x1e\x08h\xaf" +
	"9\xda{\x0c\x08\xed\x15\xd1\xe3h8\xda[\x85\x1e\xdd" +
	"\x0f\x84\x1e\x111\xcby6\xa0\xbd\xc9i\xf7! t" +
	"\x9f\x88\xa2\xf3b@\xfb\x19@w\xec\x06B\xb7\x8b\x98" +
	"\xe3\xec\x1f\xb4\xb74}\x93\xfbm\x101\xdb\xd9\xech" +
	"o\x17\xba\x8e\xfb\xad\x16\xcdff\x84\x12\x8d\x11\x05\xc4" +
	"p\xb0)\x80\x1d\xa9\x01\x0d\xa0i\xab\x14T'u*" +
	"\x80\xa6\xdd\x0a$\xb3\x17\x00\\\xa7X\xaf\xe8\x06?)" +
	"\xe3Gn?\xb4\xd5\xa3:\xe9\xe6>\xb2\xe5\xac\x80\xeb" +
	"\xd4\x1d\x07A\xd5\xa8N\x0eO\x8a\x19\x1f^\xb4\xa7\xb7" +
	"\x80\xb7K\x00\xadn\x7f\xe4\xef\xf0b\x7f`\xfa\xe1\xfe" +
	"\xba\xfd>\x05*$\x17\xc43\xb6\xc7@Z0\xb0\xea" +
	"[\x99\x0e\x07\x9b\x92J\xa3\xbbX\x0d\xc2\xd7\x92z\x03" +
	"u\xa9\xd0\xa1&s\xe9|^@)\xe2\x1a;\x85\x7f" +
	"l\x11P2\\c\xb7\x9c\x8f]D@i%A\x14" +
	"\x8aP\x00\xa0\x89\xc5\x00\x92!\xa0\xd4I\xd0\x8c\xa5\xae" +
	"qi\xac\xd9\xa2\xe9\xd6\x1aw\xeb\xae\x9c04\xd7x" +
	"\x9a\x8a^\xcb\xa2\xda\x02\x1d\x04\x16G\x04\x828x\x95" +
	"\xb4\xfb\xc6j\x1b+N1C$\xa7\xa5JPA\xb0" +
	"\xda\x12\x04\x1d\xff\x07\x18\x12\x10\x0b\xd3C\x0e\xc8?\x0e" +
	"Q\xa23\x97\xf2\x00mc\x8b\x8a\x06!\xc4\x01\x9fM" +
	"\xfcc\xad\x80R\xc8U\x99\xb9s\\\xef\xa6\x0c\xb1\x1b" +
	"\xdc;jH;\xf0n\x0f\x89\xb1\xe9\xc6/X\xa1\xb0" +
	"6\xa4\xe6\xf9\xb3\xcd\x7fl>q\xe0\x87\xff\xf8\x8a\xb8" +
	"\xbd\xd2|\x1a\x84\xa8\xfeo\x00\x00\x00\xff\xff.Y\x0e" +
	"\xd7"

func init() {
	schemas.Register(schema_bf6889795837d1e0,
		0x837afa61d880beb6,
		0x845e8081686d8a0f,
		0x97f9d7a51ffe0741,
		0xa15e445037d1834c,
		0xa9502e5fdabb8b07,
		0xaea67098dc479ce6,
		0xb44df810894a44f4,
		0xb45bb2d206694fe6,
		0xb9147a48c12c807d,
		0xc3b5ced7344b04a6,
		0xc9973f31a90887f9,
		0xe14c1f5321159b8f,
		0xe54437a7b8f52843,
		0xe706d835e9cd64af,
		0xe96193c522f6c05d,
		0xe9e4890dae20b03c,
		0xecebff1662ba10a1,
		0xf910658ae8c6674d,
		0xfdc944999b9296df,
		0xfe777c71f871f413)
}
