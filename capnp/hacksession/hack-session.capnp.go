// Code generated by capnpc-go. DO NOT EDIT.

package hacksession

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	email "zenhack.net/go/sandstorm/capnp/email"
	grain "zenhack.net/go/sandstorm/capnp/grain"
	identity "zenhack.net/go/sandstorm/capnp/identity"
	ip "zenhack.net/go/sandstorm/capnp/ip"
)

type HackSessionContext capnp.Client

// HackSessionContext_TypeID is the unique identifier for the type HackSessionContext.
const HackSessionContext_TypeID = 0xe14c1f5321159b8f

func (c HackSessionContext) GetPublicId(ctx context.Context, params func(HackSessionContext_getPublicId_Params) error) (HackSessionContext_getPublicId_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      0,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getPublicId",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_getPublicId_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_getPublicId_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteHttpGet(ctx context.Context, params func(HackSessionContext_obsoleteHttpGet_Params) error) (HackSessionContext_obsoleteHttpGet_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      1,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteHttpGet",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteHttpGet_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteHttpGet_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) GetUserAddress(ctx context.Context, params func(HackSessionContext_getUserAddress_Params) error) (email.EmailAddress_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      2,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getUserAddress",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_getUserAddress_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return email.EmailAddress_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteGenerateApiToken(ctx context.Context, params func(HackSessionContext_obsoleteGenerateApiToken_Params) error) (HackSessionContext_obsoleteGenerateApiToken_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      3,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGenerateApiToken",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteGenerateApiToken_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteGenerateApiToken_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteListApiTokens(ctx context.Context, params func(HackSessionContext_obsoleteListApiTokens_Params) error) (HackSessionContext_obsoleteListApiTokens_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      4,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteListApiTokens",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteListApiTokens_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteListApiTokens_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteRevokeApiToken(ctx context.Context, params func(HackSessionContext_obsoleteRevokeApiToken_Params) error) (HackSessionContext_obsoleteRevokeApiToken_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      5,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteRevokeApiToken",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteRevokeApiToken_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteRevokeApiToken_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteGetIpNetwork(ctx context.Context, params func(HackSessionContext_obsoleteGetIpNetwork_Params) error) (HackSessionContext_obsoleteGetIpNetwork_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      6,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpNetwork",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteGetIpNetwork_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteGetIpNetwork_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteGetIpInterface(ctx context.Context, params func(HackSessionContext_obsoleteGetIpInterface_Params) error) (HackSessionContext_obsoleteGetIpInterface_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      7,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpInterface",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteGetIpInterface_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteGetIpInterface_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ObsoleteGetUiViewForEndpoint(ctx context.Context, params func(HackSessionContext_obsoleteGetUiViewForEndpoint_Params) error) (HackSessionContext_obsoleteGetUiViewForEndpoint_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      8,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetUiViewForEndpoint",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteGetUiViewForEndpoint_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) GetSharedPermissions(ctx context.Context, params func(grain.SessionContext_getSharedPermissions_Params) error) (grain.SessionContext_getSharedPermissions_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      0,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "getSharedPermissions",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_getSharedPermissions_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_getSharedPermissions_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) TieToUser(ctx context.Context, params func(grain.SessionContext_tieToUser_Params) error) (grain.SessionContext_tieToUser_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      1,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "tieToUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_tieToUser_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_tieToUser_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) Offer(ctx context.Context, params func(grain.SessionContext_offer_Params) error) (grain.SessionContext_offer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      2,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "offer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_offer_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_offer_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) Request(ctx context.Context, params func(grain.SessionContext_request_Params) error) (grain.SessionContext_request_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      3,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "request",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_request_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_request_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) FulfillRequest(ctx context.Context, params func(grain.SessionContext_fulfillRequest_Params) error) (grain.SessionContext_fulfillRequest_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      4,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "fulfillRequest",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_fulfillRequest_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_fulfillRequest_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) Close(ctx context.Context, params func(grain.SessionContext_close_Params) error) (grain.SessionContext_close_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      5,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "close",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_close_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_close_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) OpenView(ctx context.Context, params func(grain.SessionContext_openView_Params) error) (grain.SessionContext_openView_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      6,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "openView",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_openView_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_openView_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) ClaimRequest(ctx context.Context, params func(grain.SessionContext_claimRequest_Params) error) (grain.SessionContext_claimRequest_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      7,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "claimRequest",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_claimRequest_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_claimRequest_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) Activity(ctx context.Context, params func(grain.SessionContext_activity_Params) error) (grain.SessionContext_activity_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      8,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "activity",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_activity_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_activity_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) Send(ctx context.Context, params func(email.EmailSendPort_send_Params) error) (email.EmailSendPort_send_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_send_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return email.EmailSendPort_send_Results_Future{Future: ans.Future()}, release
}
func (c HackSessionContext) HintAddress(ctx context.Context, params func(email.EmailSendPort_hintAddress_Params) error) (email.EmailSendPort_hintAddress_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_hintAddress_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return email.EmailSendPort_hintAddress_Results_Future{Future: ans.Future()}, release
}

func (c HackSessionContext) AddRef() HackSessionContext {
	return HackSessionContext(capnp.Client(c).AddRef())
}

func (c HackSessionContext) Release() {
	capnp.Client(c).Release()
}

func (c HackSessionContext) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (HackSessionContext) DecodeFromPtr(p capnp.Ptr) HackSessionContext {
	return HackSessionContext(capnp.Client{}.DecodeFromPtr(p))
}

func (c HackSessionContext) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// A HackSessionContext_Server is a HackSessionContext with a local implementation.
type HackSessionContext_Server interface {
	GetPublicId(context.Context, HackSessionContext_getPublicId) error

	ObsoleteHttpGet(context.Context, HackSessionContext_obsoleteHttpGet) error

	GetUserAddress(context.Context, HackSessionContext_getUserAddress) error

	ObsoleteGenerateApiToken(context.Context, HackSessionContext_obsoleteGenerateApiToken) error

	ObsoleteListApiTokens(context.Context, HackSessionContext_obsoleteListApiTokens) error

	ObsoleteRevokeApiToken(context.Context, HackSessionContext_obsoleteRevokeApiToken) error

	ObsoleteGetIpNetwork(context.Context, HackSessionContext_obsoleteGetIpNetwork) error

	ObsoleteGetIpInterface(context.Context, HackSessionContext_obsoleteGetIpInterface) error

	ObsoleteGetUiViewForEndpoint(context.Context, HackSessionContext_obsoleteGetUiViewForEndpoint) error

	GetSharedPermissions(context.Context, grain.SessionContext_getSharedPermissions) error

	TieToUser(context.Context, grain.SessionContext_tieToUser) error

	Offer(context.Context, grain.SessionContext_offer) error

	Request(context.Context, grain.SessionContext_request) error

	FulfillRequest(context.Context, grain.SessionContext_fulfillRequest) error

	Close(context.Context, grain.SessionContext_close) error

	OpenView(context.Context, grain.SessionContext_openView) error

	ClaimRequest(context.Context, grain.SessionContext_claimRequest) error

	Activity(context.Context, grain.SessionContext_activity) error

	Send(context.Context, email.EmailSendPort_send) error

	HintAddress(context.Context, email.EmailSendPort_hintAddress) error
}

// HackSessionContext_NewServer creates a new Server from an implementation of HackSessionContext_Server.
func HackSessionContext_NewServer(s HackSessionContext_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(HackSessionContext_Methods(nil, s), s, c)
}

// HackSessionContext_ServerToClient creates a new Client from an implementation of HackSessionContext_Server.
// The caller is responsible for calling Release on the returned Client.
func HackSessionContext_ServerToClient(s HackSessionContext_Server) HackSessionContext {
	return HackSessionContext(capnp.NewClient(HackSessionContext_NewServer(s)))
}

// HackSessionContext_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func HackSessionContext_Methods(methods []server.Method, s HackSessionContext_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 20)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      0,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getPublicId",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetPublicId(ctx, HackSessionContext_getPublicId{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      1,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteHttpGet",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteHttpGet(ctx, HackSessionContext_obsoleteHttpGet{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      2,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getUserAddress",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetUserAddress(ctx, HackSessionContext_getUserAddress{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      3,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGenerateApiToken",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGenerateApiToken(ctx, HackSessionContext_obsoleteGenerateApiToken{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      4,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteListApiTokens",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteListApiTokens(ctx, HackSessionContext_obsoleteListApiTokens{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      5,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteRevokeApiToken",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteRevokeApiToken(ctx, HackSessionContext_obsoleteRevokeApiToken{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      6,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpNetwork",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGetIpNetwork(ctx, HackSessionContext_obsoleteGetIpNetwork{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      7,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpInterface",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGetIpInterface(ctx, HackSessionContext_obsoleteGetIpInterface{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      8,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetUiViewForEndpoint",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGetUiViewForEndpoint(ctx, HackSessionContext_obsoleteGetUiViewForEndpoint{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      0,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "getSharedPermissions",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSharedPermissions(ctx, grain.SessionContext_getSharedPermissions{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      1,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "tieToUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.TieToUser(ctx, grain.SessionContext_tieToUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      2,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "offer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Offer(ctx, grain.SessionContext_offer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      3,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "request",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Request(ctx, grain.SessionContext_request{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      4,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "fulfillRequest",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.FulfillRequest(ctx, grain.SessionContext_fulfillRequest{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      5,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "close",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Close(ctx, grain.SessionContext_close{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      6,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "openView",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OpenView(ctx, grain.SessionContext_openView{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      7,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "claimRequest",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ClaimRequest(ctx, grain.SessionContext_claimRequest{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      8,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "activity",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Activity(ctx, grain.SessionContext_activity{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Send(ctx, email.EmailSendPort_send{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.HintAddress(ctx, email.EmailSendPort_hintAddress{call})
		},
	})

	return methods
}

// HackSessionContext_getPublicId holds the state for a server call to HackSessionContext.getPublicId.
// See server.Call for documentation.
type HackSessionContext_getPublicId struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_getPublicId) Args() HackSessionContext_getPublicId_Params {
	return HackSessionContext_getPublicId_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_getPublicId) AllocResults() (HackSessionContext_getPublicId_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return HackSessionContext_getPublicId_Results(r), err
}

// HackSessionContext_obsoleteHttpGet holds the state for a server call to HackSessionContext.obsoleteHttpGet.
// See server.Call for documentation.
type HackSessionContext_obsoleteHttpGet struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteHttpGet) Args() HackSessionContext_obsoleteHttpGet_Params {
	return HackSessionContext_obsoleteHttpGet_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteHttpGet) AllocResults() (HackSessionContext_obsoleteHttpGet_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return HackSessionContext_obsoleteHttpGet_Results(r), err
}

// HackSessionContext_getUserAddress holds the state for a server call to HackSessionContext.getUserAddress.
// See server.Call for documentation.
type HackSessionContext_getUserAddress struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_getUserAddress) Args() HackSessionContext_getUserAddress_Params {
	return HackSessionContext_getUserAddress_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_getUserAddress) AllocResults() (email.EmailAddress, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return email.EmailAddress(r), err
}

// HackSessionContext_obsoleteGenerateApiToken holds the state for a server call to HackSessionContext.obsoleteGenerateApiToken.
// See server.Call for documentation.
type HackSessionContext_obsoleteGenerateApiToken struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteGenerateApiToken) Args() HackSessionContext_obsoleteGenerateApiToken_Params {
	return HackSessionContext_obsoleteGenerateApiToken_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteGenerateApiToken) AllocResults() (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return HackSessionContext_obsoleteGenerateApiToken_Results(r), err
}

// HackSessionContext_obsoleteListApiTokens holds the state for a server call to HackSessionContext.obsoleteListApiTokens.
// See server.Call for documentation.
type HackSessionContext_obsoleteListApiTokens struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteListApiTokens) Args() HackSessionContext_obsoleteListApiTokens_Params {
	return HackSessionContext_obsoleteListApiTokens_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteListApiTokens) AllocResults() (HackSessionContext_obsoleteListApiTokens_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteListApiTokens_Results(r), err
}

// HackSessionContext_obsoleteRevokeApiToken holds the state for a server call to HackSessionContext.obsoleteRevokeApiToken.
// See server.Call for documentation.
type HackSessionContext_obsoleteRevokeApiToken struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteRevokeApiToken) Args() HackSessionContext_obsoleteRevokeApiToken_Params {
	return HackSessionContext_obsoleteRevokeApiToken_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteRevokeApiToken) AllocResults() (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteRevokeApiToken_Results(r), err
}

// HackSessionContext_obsoleteGetIpNetwork holds the state for a server call to HackSessionContext.obsoleteGetIpNetwork.
// See server.Call for documentation.
type HackSessionContext_obsoleteGetIpNetwork struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteGetIpNetwork) Args() HackSessionContext_obsoleteGetIpNetwork_Params {
	return HackSessionContext_obsoleteGetIpNetwork_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteGetIpNetwork) AllocResults() (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpNetwork_Results(r), err
}

// HackSessionContext_obsoleteGetIpInterface holds the state for a server call to HackSessionContext.obsoleteGetIpInterface.
// See server.Call for documentation.
type HackSessionContext_obsoleteGetIpInterface struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteGetIpInterface) Args() HackSessionContext_obsoleteGetIpInterface_Params {
	return HackSessionContext_obsoleteGetIpInterface_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteGetIpInterface) AllocResults() (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpInterface_Results(r), err
}

// HackSessionContext_obsoleteGetUiViewForEndpoint holds the state for a server call to HackSessionContext.obsoleteGetUiViewForEndpoint.
// See server.Call for documentation.
type HackSessionContext_obsoleteGetUiViewForEndpoint struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteGetUiViewForEndpoint) Args() HackSessionContext_obsoleteGetUiViewForEndpoint_Params {
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteGetUiViewForEndpoint) AllocResults() (HackSessionContext_obsoleteGetUiViewForEndpoint_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(r), err
}

// HackSessionContext_List is a list of HackSessionContext.
type HackSessionContext_List = capnp.CapList[HackSessionContext]

// NewHackSessionContext creates a new list of HackSessionContext.
func NewHackSessionContext_List(s *capnp.Segment, sz int32) (HackSessionContext_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[HackSessionContext](l), err
}

type HackSessionContext_TokenInfo capnp.Struct

// HackSessionContext_TokenInfo_TypeID is the unique identifier for the type HackSessionContext_TokenInfo.
const HackSessionContext_TokenInfo_TypeID = 0xf910658ae8c6674d

func NewHackSessionContext_TokenInfo(s *capnp.Segment) (HackSessionContext_TokenInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return HackSessionContext_TokenInfo(st), err
}

func NewRootHackSessionContext_TokenInfo(s *capnp.Segment) (HackSessionContext_TokenInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return HackSessionContext_TokenInfo(st), err
}

func ReadRootHackSessionContext_TokenInfo(msg *capnp.Message) (HackSessionContext_TokenInfo, error) {
	root, err := msg.Root()
	return HackSessionContext_TokenInfo(root.Struct()), err
}

func (s HackSessionContext_TokenInfo) String() string {
	str, _ := text.Marshal(0xf910658ae8c6674d, capnp.Struct(s))
	return str
}

func (s HackSessionContext_TokenInfo) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_TokenInfo) DecodeFromPtr(p capnp.Ptr) HackSessionContext_TokenInfo {
	return HackSessionContext_TokenInfo(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_TokenInfo) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_TokenInfo) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_TokenInfo) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_TokenInfo) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_TokenInfo) TokenId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_TokenInfo) HasTokenId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_TokenInfo) TokenIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_TokenInfo) SetTokenId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s HackSessionContext_TokenInfo) Petname() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s HackSessionContext_TokenInfo) HasPetname() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s HackSessionContext_TokenInfo) PetnameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s HackSessionContext_TokenInfo) SetPetname(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s HackSessionContext_TokenInfo) UserInfo() (identity.UserInfo, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return identity.UserInfo(p.Struct()), err
}

func (s HackSessionContext_TokenInfo) HasUserInfo() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s HackSessionContext_TokenInfo) SetUserInfo(v identity.UserInfo) error {
	return capnp.Struct(s).SetPtr(2, capnp.Struct(v).ToPtr())
}

// NewUserInfo sets the userInfo field to a newly
// allocated identity.UserInfo struct, preferring placement in s's segment.
func (s HackSessionContext_TokenInfo) NewUserInfo() (identity.UserInfo, error) {
	ss, err := identity.NewUserInfo(capnp.Struct(s).Segment())
	if err != nil {
		return identity.UserInfo{}, err
	}
	err = capnp.Struct(s).SetPtr(2, capnp.Struct(ss).ToPtr())
	return ss, err
}

// HackSessionContext_TokenInfo_List is a list of HackSessionContext_TokenInfo.
type HackSessionContext_TokenInfo_List = capnp.StructList[HackSessionContext_TokenInfo]

// NewHackSessionContext_TokenInfo creates a new list of HackSessionContext_TokenInfo.
func NewHackSessionContext_TokenInfo_List(s *capnp.Segment, sz int32) (HackSessionContext_TokenInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[HackSessionContext_TokenInfo](l), err
}

// HackSessionContext_TokenInfo_Future is a wrapper for a HackSessionContext_TokenInfo promised by a client call.
type HackSessionContext_TokenInfo_Future struct{ *capnp.Future }

func (p HackSessionContext_TokenInfo_Future) Struct() (HackSessionContext_TokenInfo, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_TokenInfo(s), err
}

func (p HackSessionContext_TokenInfo_Future) UserInfo() identity.UserInfo_Future {
	return identity.UserInfo_Future{Future: p.Future.Field(2, nil)}
}

type HackSessionContext_getPublicId_Params capnp.Struct

// HackSessionContext_getPublicId_Params_TypeID is the unique identifier for the type HackSessionContext_getPublicId_Params.
const HackSessionContext_getPublicId_Params_TypeID = 0xe706d835e9cd64af

func NewHackSessionContext_getPublicId_Params(s *capnp.Segment) (HackSessionContext_getPublicId_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getPublicId_Params(st), err
}

func NewRootHackSessionContext_getPublicId_Params(s *capnp.Segment) (HackSessionContext_getPublicId_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getPublicId_Params(st), err
}

func ReadRootHackSessionContext_getPublicId_Params(msg *capnp.Message) (HackSessionContext_getPublicId_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_getPublicId_Params(root.Struct()), err
}

func (s HackSessionContext_getPublicId_Params) String() string {
	str, _ := text.Marshal(0xe706d835e9cd64af, capnp.Struct(s))
	return str
}

func (s HackSessionContext_getPublicId_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_getPublicId_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_getPublicId_Params {
	return HackSessionContext_getPublicId_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_getPublicId_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_getPublicId_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_getPublicId_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_getPublicId_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_getPublicId_Params_List is a list of HackSessionContext_getPublicId_Params.
type HackSessionContext_getPublicId_Params_List = capnp.StructList[HackSessionContext_getPublicId_Params]

// NewHackSessionContext_getPublicId_Params creates a new list of HackSessionContext_getPublicId_Params.
func NewHackSessionContext_getPublicId_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_getPublicId_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_getPublicId_Params](l), err
}

// HackSessionContext_getPublicId_Params_Future is a wrapper for a HackSessionContext_getPublicId_Params promised by a client call.
type HackSessionContext_getPublicId_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_getPublicId_Params_Future) Struct() (HackSessionContext_getPublicId_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_getPublicId_Params(s), err
}

type HackSessionContext_getPublicId_Results capnp.Struct

// HackSessionContext_getPublicId_Results_TypeID is the unique identifier for the type HackSessionContext_getPublicId_Results.
const HackSessionContext_getPublicId_Results_TypeID = 0xe96193c522f6c05d

func NewHackSessionContext_getPublicId_Results(s *capnp.Segment) (HackSessionContext_getPublicId_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return HackSessionContext_getPublicId_Results(st), err
}

func NewRootHackSessionContext_getPublicId_Results(s *capnp.Segment) (HackSessionContext_getPublicId_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return HackSessionContext_getPublicId_Results(st), err
}

func ReadRootHackSessionContext_getPublicId_Results(msg *capnp.Message) (HackSessionContext_getPublicId_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_getPublicId_Results(root.Struct()), err
}

func (s HackSessionContext_getPublicId_Results) String() string {
	str, _ := text.Marshal(0xe96193c522f6c05d, capnp.Struct(s))
	return str
}

func (s HackSessionContext_getPublicId_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_getPublicId_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_getPublicId_Results {
	return HackSessionContext_getPublicId_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_getPublicId_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_getPublicId_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_getPublicId_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_getPublicId_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_getPublicId_Results) PublicId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_getPublicId_Results) HasPublicId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_getPublicId_Results) PublicIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_getPublicId_Results) SetPublicId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s HackSessionContext_getPublicId_Results) Hostname() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s HackSessionContext_getPublicId_Results) HasHostname() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s HackSessionContext_getPublicId_Results) HostnameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s HackSessionContext_getPublicId_Results) SetHostname(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s HackSessionContext_getPublicId_Results) AutoUrl() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s HackSessionContext_getPublicId_Results) HasAutoUrl() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s HackSessionContext_getPublicId_Results) AutoUrlBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s HackSessionContext_getPublicId_Results) SetAutoUrl(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s HackSessionContext_getPublicId_Results) IsDemoUser() bool {
	return capnp.Struct(s).Bit(0)
}

func (s HackSessionContext_getPublicId_Results) SetIsDemoUser(v bool) {
	capnp.Struct(s).SetBit(0, v)
}

// HackSessionContext_getPublicId_Results_List is a list of HackSessionContext_getPublicId_Results.
type HackSessionContext_getPublicId_Results_List = capnp.StructList[HackSessionContext_getPublicId_Results]

// NewHackSessionContext_getPublicId_Results creates a new list of HackSessionContext_getPublicId_Results.
func NewHackSessionContext_getPublicId_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_getPublicId_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return capnp.StructList[HackSessionContext_getPublicId_Results](l), err
}

// HackSessionContext_getPublicId_Results_Future is a wrapper for a HackSessionContext_getPublicId_Results promised by a client call.
type HackSessionContext_getPublicId_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_getPublicId_Results_Future) Struct() (HackSessionContext_getPublicId_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_getPublicId_Results(s), err
}

type HackSessionContext_obsoleteHttpGet_Params capnp.Struct

// HackSessionContext_obsoleteHttpGet_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteHttpGet_Params.
const HackSessionContext_obsoleteHttpGet_Params_TypeID = 0xe54437a7b8f52843

func NewHackSessionContext_obsoleteHttpGet_Params(s *capnp.Segment) (HackSessionContext_obsoleteHttpGet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteHttpGet_Params(st), err
}

func NewRootHackSessionContext_obsoleteHttpGet_Params(s *capnp.Segment) (HackSessionContext_obsoleteHttpGet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteHttpGet_Params(st), err
}

func ReadRootHackSessionContext_obsoleteHttpGet_Params(msg *capnp.Message) (HackSessionContext_obsoleteHttpGet_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteHttpGet_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteHttpGet_Params) String() string {
	str, _ := text.Marshal(0xe54437a7b8f52843, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteHttpGet_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteHttpGet_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteHttpGet_Params {
	return HackSessionContext_obsoleteHttpGet_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteHttpGet_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteHttpGet_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteHttpGet_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteHttpGet_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_obsoleteHttpGet_Params) Url() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteHttpGet_Params) HasUrl() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_obsoleteHttpGet_Params) UrlBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteHttpGet_Params) SetUrl(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// HackSessionContext_obsoleteHttpGet_Params_List is a list of HackSessionContext_obsoleteHttpGet_Params.
type HackSessionContext_obsoleteHttpGet_Params_List = capnp.StructList[HackSessionContext_obsoleteHttpGet_Params]

// NewHackSessionContext_obsoleteHttpGet_Params creates a new list of HackSessionContext_obsoleteHttpGet_Params.
func NewHackSessionContext_obsoleteHttpGet_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteHttpGet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[HackSessionContext_obsoleteHttpGet_Params](l), err
}

// HackSessionContext_obsoleteHttpGet_Params_Future is a wrapper for a HackSessionContext_obsoleteHttpGet_Params promised by a client call.
type HackSessionContext_obsoleteHttpGet_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteHttpGet_Params_Future) Struct() (HackSessionContext_obsoleteHttpGet_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteHttpGet_Params(s), err
}

type HackSessionContext_obsoleteHttpGet_Results capnp.Struct

// HackSessionContext_obsoleteHttpGet_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteHttpGet_Results.
const HackSessionContext_obsoleteHttpGet_Results_TypeID = 0xb44df810894a44f4

func NewHackSessionContext_obsoleteHttpGet_Results(s *capnp.Segment) (HackSessionContext_obsoleteHttpGet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return HackSessionContext_obsoleteHttpGet_Results(st), err
}

func NewRootHackSessionContext_obsoleteHttpGet_Results(s *capnp.Segment) (HackSessionContext_obsoleteHttpGet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return HackSessionContext_obsoleteHttpGet_Results(st), err
}

func ReadRootHackSessionContext_obsoleteHttpGet_Results(msg *capnp.Message) (HackSessionContext_obsoleteHttpGet_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteHttpGet_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteHttpGet_Results) String() string {
	str, _ := text.Marshal(0xb44df810894a44f4, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteHttpGet_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteHttpGet_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteHttpGet_Results {
	return HackSessionContext_obsoleteHttpGet_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteHttpGet_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteHttpGet_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteHttpGet_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteHttpGet_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_obsoleteHttpGet_Results) MimeType() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteHttpGet_Results) HasMimeType() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_obsoleteHttpGet_Results) MimeTypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteHttpGet_Results) SetMimeType(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s HackSessionContext_obsoleteHttpGet_Results) Content() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return []byte(p.Data()), err
}

func (s HackSessionContext_obsoleteHttpGet_Results) HasContent() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s HackSessionContext_obsoleteHttpGet_Results) SetContent(v []byte) error {
	return capnp.Struct(s).SetData(1, v)
}

// HackSessionContext_obsoleteHttpGet_Results_List is a list of HackSessionContext_obsoleteHttpGet_Results.
type HackSessionContext_obsoleteHttpGet_Results_List = capnp.StructList[HackSessionContext_obsoleteHttpGet_Results]

// NewHackSessionContext_obsoleteHttpGet_Results creates a new list of HackSessionContext_obsoleteHttpGet_Results.
func NewHackSessionContext_obsoleteHttpGet_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteHttpGet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[HackSessionContext_obsoleteHttpGet_Results](l), err
}

// HackSessionContext_obsoleteHttpGet_Results_Future is a wrapper for a HackSessionContext_obsoleteHttpGet_Results promised by a client call.
type HackSessionContext_obsoleteHttpGet_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteHttpGet_Results_Future) Struct() (HackSessionContext_obsoleteHttpGet_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteHttpGet_Results(s), err
}

type HackSessionContext_getUserAddress_Params capnp.Struct

// HackSessionContext_getUserAddress_Params_TypeID is the unique identifier for the type HackSessionContext_getUserAddress_Params.
const HackSessionContext_getUserAddress_Params_TypeID = 0xa15e445037d1834c

func NewHackSessionContext_getUserAddress_Params(s *capnp.Segment) (HackSessionContext_getUserAddress_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getUserAddress_Params(st), err
}

func NewRootHackSessionContext_getUserAddress_Params(s *capnp.Segment) (HackSessionContext_getUserAddress_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getUserAddress_Params(st), err
}

func ReadRootHackSessionContext_getUserAddress_Params(msg *capnp.Message) (HackSessionContext_getUserAddress_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_getUserAddress_Params(root.Struct()), err
}

func (s HackSessionContext_getUserAddress_Params) String() string {
	str, _ := text.Marshal(0xa15e445037d1834c, capnp.Struct(s))
	return str
}

func (s HackSessionContext_getUserAddress_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_getUserAddress_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_getUserAddress_Params {
	return HackSessionContext_getUserAddress_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_getUserAddress_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_getUserAddress_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_getUserAddress_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_getUserAddress_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_getUserAddress_Params_List is a list of HackSessionContext_getUserAddress_Params.
type HackSessionContext_getUserAddress_Params_List = capnp.StructList[HackSessionContext_getUserAddress_Params]

// NewHackSessionContext_getUserAddress_Params creates a new list of HackSessionContext_getUserAddress_Params.
func NewHackSessionContext_getUserAddress_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_getUserAddress_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_getUserAddress_Params](l), err
}

// HackSessionContext_getUserAddress_Params_Future is a wrapper for a HackSessionContext_getUserAddress_Params promised by a client call.
type HackSessionContext_getUserAddress_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_getUserAddress_Params_Future) Struct() (HackSessionContext_getUserAddress_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_getUserAddress_Params(s), err
}

type HackSessionContext_obsoleteGenerateApiToken_Params capnp.Struct

// HackSessionContext_obsoleteGenerateApiToken_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteGenerateApiToken_Params.
const HackSessionContext_obsoleteGenerateApiToken_Params_TypeID = 0x837afa61d880beb6

func NewHackSessionContext_obsoleteGenerateApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return HackSessionContext_obsoleteGenerateApiToken_Params(st), err
}

func NewRootHackSessionContext_obsoleteGenerateApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return HackSessionContext_obsoleteGenerateApiToken_Params(st), err
}

func ReadRootHackSessionContext_obsoleteGenerateApiToken_Params(msg *capnp.Message) (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGenerateApiToken_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) String() string {
	str, _ := text.Marshal(0x837afa61d880beb6, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGenerateApiToken_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGenerateApiToken_Params {
	return HackSessionContext_obsoleteGenerateApiToken_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGenerateApiToken_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_obsoleteGenerateApiToken_Params) Petname() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) HasPetname() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) PetnameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) SetPetname(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) UserInfo() (identity.UserInfo, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return identity.UserInfo(p.Struct()), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) HasUserInfo() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) SetUserInfo(v identity.UserInfo) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewUserInfo sets the userInfo field to a newly
// allocated identity.UserInfo struct, preferring placement in s's segment.
func (s HackSessionContext_obsoleteGenerateApiToken_Params) NewUserInfo() (identity.UserInfo, error) {
	ss, err := identity.NewUserInfo(capnp.Struct(s).Segment())
	if err != nil {
		return identity.UserInfo{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) Expires() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) SetExpires(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

// HackSessionContext_obsoleteGenerateApiToken_Params_List is a list of HackSessionContext_obsoleteGenerateApiToken_Params.
type HackSessionContext_obsoleteGenerateApiToken_Params_List = capnp.StructList[HackSessionContext_obsoleteGenerateApiToken_Params]

// NewHackSessionContext_obsoleteGenerateApiToken_Params creates a new list of HackSessionContext_obsoleteGenerateApiToken_Params.
func NewHackSessionContext_obsoleteGenerateApiToken_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGenerateApiToken_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGenerateApiToken_Params](l), err
}

// HackSessionContext_obsoleteGenerateApiToken_Params_Future is a wrapper for a HackSessionContext_obsoleteGenerateApiToken_Params promised by a client call.
type HackSessionContext_obsoleteGenerateApiToken_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGenerateApiToken_Params_Future) Struct() (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGenerateApiToken_Params(s), err
}

func (p HackSessionContext_obsoleteGenerateApiToken_Params_Future) UserInfo() identity.UserInfo_Future {
	return identity.UserInfo_Future{Future: p.Future.Field(1, nil)}
}

type HackSessionContext_obsoleteGenerateApiToken_Results capnp.Struct

// HackSessionContext_obsoleteGenerateApiToken_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteGenerateApiToken_Results.
const HackSessionContext_obsoleteGenerateApiToken_Results_TypeID = 0xc9973f31a90887f9

func NewHackSessionContext_obsoleteGenerateApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return HackSessionContext_obsoleteGenerateApiToken_Results(st), err
}

func NewRootHackSessionContext_obsoleteGenerateApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return HackSessionContext_obsoleteGenerateApiToken_Results(st), err
}

func ReadRootHackSessionContext_obsoleteGenerateApiToken_Results(msg *capnp.Message) (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGenerateApiToken_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) String() string {
	str, _ := text.Marshal(0xc9973f31a90887f9, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGenerateApiToken_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGenerateApiToken_Results {
	return HackSessionContext_obsoleteGenerateApiToken_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGenerateApiToken_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_obsoleteGenerateApiToken_Results) Token() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) HasToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) TokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) SetToken(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) EndpointUrl() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) HasEndpointUrl() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) EndpointUrlBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) SetEndpointUrl(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) TokenId() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) HasTokenId() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) TokenIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) SetTokenId(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

// HackSessionContext_obsoleteGenerateApiToken_Results_List is a list of HackSessionContext_obsoleteGenerateApiToken_Results.
type HackSessionContext_obsoleteGenerateApiToken_Results_List = capnp.StructList[HackSessionContext_obsoleteGenerateApiToken_Results]

// NewHackSessionContext_obsoleteGenerateApiToken_Results creates a new list of HackSessionContext_obsoleteGenerateApiToken_Results.
func NewHackSessionContext_obsoleteGenerateApiToken_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGenerateApiToken_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGenerateApiToken_Results](l), err
}

// HackSessionContext_obsoleteGenerateApiToken_Results_Future is a wrapper for a HackSessionContext_obsoleteGenerateApiToken_Results promised by a client call.
type HackSessionContext_obsoleteGenerateApiToken_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGenerateApiToken_Results_Future) Struct() (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGenerateApiToken_Results(s), err
}

type HackSessionContext_obsoleteListApiTokens_Params capnp.Struct

// HackSessionContext_obsoleteListApiTokens_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteListApiTokens_Params.
const HackSessionContext_obsoleteListApiTokens_Params_TypeID = 0xfe777c71f871f413

func NewHackSessionContext_obsoleteListApiTokens_Params(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteListApiTokens_Params(st), err
}

func NewRootHackSessionContext_obsoleteListApiTokens_Params(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteListApiTokens_Params(st), err
}

func ReadRootHackSessionContext_obsoleteListApiTokens_Params(msg *capnp.Message) (HackSessionContext_obsoleteListApiTokens_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteListApiTokens_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteListApiTokens_Params) String() string {
	str, _ := text.Marshal(0xfe777c71f871f413, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteListApiTokens_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteListApiTokens_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteListApiTokens_Params {
	return HackSessionContext_obsoleteListApiTokens_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteListApiTokens_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteListApiTokens_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteListApiTokens_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteListApiTokens_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteListApiTokens_Params_List is a list of HackSessionContext_obsoleteListApiTokens_Params.
type HackSessionContext_obsoleteListApiTokens_Params_List = capnp.StructList[HackSessionContext_obsoleteListApiTokens_Params]

// NewHackSessionContext_obsoleteListApiTokens_Params creates a new list of HackSessionContext_obsoleteListApiTokens_Params.
func NewHackSessionContext_obsoleteListApiTokens_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteListApiTokens_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteListApiTokens_Params](l), err
}

// HackSessionContext_obsoleteListApiTokens_Params_Future is a wrapper for a HackSessionContext_obsoleteListApiTokens_Params promised by a client call.
type HackSessionContext_obsoleteListApiTokens_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteListApiTokens_Params_Future) Struct() (HackSessionContext_obsoleteListApiTokens_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteListApiTokens_Params(s), err
}

type HackSessionContext_obsoleteListApiTokens_Results capnp.Struct

// HackSessionContext_obsoleteListApiTokens_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteListApiTokens_Results.
const HackSessionContext_obsoleteListApiTokens_Results_TypeID = 0xe9e4890dae20b03c

func NewHackSessionContext_obsoleteListApiTokens_Results(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteListApiTokens_Results(st), err
}

func NewRootHackSessionContext_obsoleteListApiTokens_Results(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteListApiTokens_Results(st), err
}

func ReadRootHackSessionContext_obsoleteListApiTokens_Results(msg *capnp.Message) (HackSessionContext_obsoleteListApiTokens_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteListApiTokens_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteListApiTokens_Results) String() string {
	str, _ := text.Marshal(0xe9e4890dae20b03c, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteListApiTokens_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteListApiTokens_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteListApiTokens_Results {
	return HackSessionContext_obsoleteListApiTokens_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteListApiTokens_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteListApiTokens_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteListApiTokens_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteListApiTokens_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_obsoleteListApiTokens_Results) Tokens() (HackSessionContext_TokenInfo_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return HackSessionContext_TokenInfo_List(p.List()), err
}

func (s HackSessionContext_obsoleteListApiTokens_Results) HasTokens() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_obsoleteListApiTokens_Results) SetTokens(v HackSessionContext_TokenInfo_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewTokens sets the tokens field to a newly
// allocated HackSessionContext_TokenInfo_List, preferring placement in s's segment.
func (s HackSessionContext_obsoleteListApiTokens_Results) NewTokens(n int32) (HackSessionContext_TokenInfo_List, error) {
	l, err := NewHackSessionContext_TokenInfo_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return HackSessionContext_TokenInfo_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// HackSessionContext_obsoleteListApiTokens_Results_List is a list of HackSessionContext_obsoleteListApiTokens_Results.
type HackSessionContext_obsoleteListApiTokens_Results_List = capnp.StructList[HackSessionContext_obsoleteListApiTokens_Results]

// NewHackSessionContext_obsoleteListApiTokens_Results creates a new list of HackSessionContext_obsoleteListApiTokens_Results.
func NewHackSessionContext_obsoleteListApiTokens_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteListApiTokens_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[HackSessionContext_obsoleteListApiTokens_Results](l), err
}

// HackSessionContext_obsoleteListApiTokens_Results_Future is a wrapper for a HackSessionContext_obsoleteListApiTokens_Results promised by a client call.
type HackSessionContext_obsoleteListApiTokens_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteListApiTokens_Results_Future) Struct() (HackSessionContext_obsoleteListApiTokens_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteListApiTokens_Results(s), err
}

type HackSessionContext_obsoleteRevokeApiToken_Params capnp.Struct

// HackSessionContext_obsoleteRevokeApiToken_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteRevokeApiToken_Params.
const HackSessionContext_obsoleteRevokeApiToken_Params_TypeID = 0x845e8081686d8a0f

func NewHackSessionContext_obsoleteRevokeApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteRevokeApiToken_Params(st), err
}

func NewRootHackSessionContext_obsoleteRevokeApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteRevokeApiToken_Params(st), err
}

func ReadRootHackSessionContext_obsoleteRevokeApiToken_Params(msg *capnp.Message) (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteRevokeApiToken_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) String() string {
	str, _ := text.Marshal(0x845e8081686d8a0f, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteRevokeApiToken_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteRevokeApiToken_Params {
	return HackSessionContext_obsoleteRevokeApiToken_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteRevokeApiToken_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_obsoleteRevokeApiToken_Params) TokenId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) HasTokenId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) TokenIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) SetTokenId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// HackSessionContext_obsoleteRevokeApiToken_Params_List is a list of HackSessionContext_obsoleteRevokeApiToken_Params.
type HackSessionContext_obsoleteRevokeApiToken_Params_List = capnp.StructList[HackSessionContext_obsoleteRevokeApiToken_Params]

// NewHackSessionContext_obsoleteRevokeApiToken_Params creates a new list of HackSessionContext_obsoleteRevokeApiToken_Params.
func NewHackSessionContext_obsoleteRevokeApiToken_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteRevokeApiToken_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[HackSessionContext_obsoleteRevokeApiToken_Params](l), err
}

// HackSessionContext_obsoleteRevokeApiToken_Params_Future is a wrapper for a HackSessionContext_obsoleteRevokeApiToken_Params promised by a client call.
type HackSessionContext_obsoleteRevokeApiToken_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteRevokeApiToken_Params_Future) Struct() (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteRevokeApiToken_Params(s), err
}

type HackSessionContext_obsoleteRevokeApiToken_Results capnp.Struct

// HackSessionContext_obsoleteRevokeApiToken_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteRevokeApiToken_Results.
const HackSessionContext_obsoleteRevokeApiToken_Results_TypeID = 0xaea67098dc479ce6

func NewHackSessionContext_obsoleteRevokeApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteRevokeApiToken_Results(st), err
}

func NewRootHackSessionContext_obsoleteRevokeApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteRevokeApiToken_Results(st), err
}

func ReadRootHackSessionContext_obsoleteRevokeApiToken_Results(msg *capnp.Message) (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteRevokeApiToken_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results) String() string {
	str, _ := text.Marshal(0xaea67098dc479ce6, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteRevokeApiToken_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteRevokeApiToken_Results {
	return HackSessionContext_obsoleteRevokeApiToken_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteRevokeApiToken_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteRevokeApiToken_Results_List is a list of HackSessionContext_obsoleteRevokeApiToken_Results.
type HackSessionContext_obsoleteRevokeApiToken_Results_List = capnp.StructList[HackSessionContext_obsoleteRevokeApiToken_Results]

// NewHackSessionContext_obsoleteRevokeApiToken_Results creates a new list of HackSessionContext_obsoleteRevokeApiToken_Results.
func NewHackSessionContext_obsoleteRevokeApiToken_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteRevokeApiToken_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteRevokeApiToken_Results](l), err
}

// HackSessionContext_obsoleteRevokeApiToken_Results_Future is a wrapper for a HackSessionContext_obsoleteRevokeApiToken_Results promised by a client call.
type HackSessionContext_obsoleteRevokeApiToken_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteRevokeApiToken_Results_Future) Struct() (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteRevokeApiToken_Results(s), err
}

type HackSessionContext_obsoleteGetIpNetwork_Params capnp.Struct

// HackSessionContext_obsoleteGetIpNetwork_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpNetwork_Params.
const HackSessionContext_obsoleteGetIpNetwork_Params_TypeID = 0x97f9d7a51ffe0741

func NewHackSessionContext_obsoleteGetIpNetwork_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpNetwork_Params(st), err
}

func NewRootHackSessionContext_obsoleteGetIpNetwork_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpNetwork_Params(st), err
}

func ReadRootHackSessionContext_obsoleteGetIpNetwork_Params(msg *capnp.Message) (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpNetwork_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params) String() string {
	str, _ := text.Marshal(0x97f9d7a51ffe0741, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetIpNetwork_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetIpNetwork_Params {
	return HackSessionContext_obsoleteGetIpNetwork_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetIpNetwork_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteGetIpNetwork_Params_List is a list of HackSessionContext_obsoleteGetIpNetwork_Params.
type HackSessionContext_obsoleteGetIpNetwork_Params_List = capnp.StructList[HackSessionContext_obsoleteGetIpNetwork_Params]

// NewHackSessionContext_obsoleteGetIpNetwork_Params creates a new list of HackSessionContext_obsoleteGetIpNetwork_Params.
func NewHackSessionContext_obsoleteGetIpNetwork_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpNetwork_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetIpNetwork_Params](l), err
}

// HackSessionContext_obsoleteGetIpNetwork_Params_Future is a wrapper for a HackSessionContext_obsoleteGetIpNetwork_Params promised by a client call.
type HackSessionContext_obsoleteGetIpNetwork_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGetIpNetwork_Params_Future) Struct() (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGetIpNetwork_Params(s), err
}

type HackSessionContext_obsoleteGetIpNetwork_Results capnp.Struct

// HackSessionContext_obsoleteGetIpNetwork_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpNetwork_Results.
const HackSessionContext_obsoleteGetIpNetwork_Results_TypeID = 0xa9502e5fdabb8b07

func NewHackSessionContext_obsoleteGetIpNetwork_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpNetwork_Results(st), err
}

func NewRootHackSessionContext_obsoleteGetIpNetwork_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpNetwork_Results(st), err
}

func ReadRootHackSessionContext_obsoleteGetIpNetwork_Results(msg *capnp.Message) (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpNetwork_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) String() string {
	str, _ := text.Marshal(0xa9502e5fdabb8b07, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetIpNetwork_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetIpNetwork_Results {
	return HackSessionContext_obsoleteGetIpNetwork_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetIpNetwork_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_obsoleteGetIpNetwork_Results) Network() ip.IpNetwork {
	p, _ := capnp.Struct(s).Ptr(0)
	return ip.IpNetwork(p.Interface().Client())
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) HasNetwork() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) SetNetwork(v ip.IpNetwork) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// HackSessionContext_obsoleteGetIpNetwork_Results_List is a list of HackSessionContext_obsoleteGetIpNetwork_Results.
type HackSessionContext_obsoleteGetIpNetwork_Results_List = capnp.StructList[HackSessionContext_obsoleteGetIpNetwork_Results]

// NewHackSessionContext_obsoleteGetIpNetwork_Results creates a new list of HackSessionContext_obsoleteGetIpNetwork_Results.
func NewHackSessionContext_obsoleteGetIpNetwork_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpNetwork_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetIpNetwork_Results](l), err
}

// HackSessionContext_obsoleteGetIpNetwork_Results_Future is a wrapper for a HackSessionContext_obsoleteGetIpNetwork_Results promised by a client call.
type HackSessionContext_obsoleteGetIpNetwork_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGetIpNetwork_Results_Future) Struct() (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGetIpNetwork_Results(s), err
}

func (p HackSessionContext_obsoleteGetIpNetwork_Results_Future) Network() ip.IpNetwork {
	return ip.IpNetwork(p.Future.Field(0, nil).Client())
}

type HackSessionContext_obsoleteGetIpInterface_Params capnp.Struct

// HackSessionContext_obsoleteGetIpInterface_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpInterface_Params.
const HackSessionContext_obsoleteGetIpInterface_Params_TypeID = 0xecebff1662ba10a1

func NewHackSessionContext_obsoleteGetIpInterface_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpInterface_Params(st), err
}

func NewRootHackSessionContext_obsoleteGetIpInterface_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpInterface_Params(st), err
}

func ReadRootHackSessionContext_obsoleteGetIpInterface_Params(msg *capnp.Message) (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpInterface_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetIpInterface_Params) String() string {
	str, _ := text.Marshal(0xecebff1662ba10a1, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetIpInterface_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetIpInterface_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetIpInterface_Params {
	return HackSessionContext_obsoleteGetIpInterface_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetIpInterface_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetIpInterface_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetIpInterface_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetIpInterface_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteGetIpInterface_Params_List is a list of HackSessionContext_obsoleteGetIpInterface_Params.
type HackSessionContext_obsoleteGetIpInterface_Params_List = capnp.StructList[HackSessionContext_obsoleteGetIpInterface_Params]

// NewHackSessionContext_obsoleteGetIpInterface_Params creates a new list of HackSessionContext_obsoleteGetIpInterface_Params.
func NewHackSessionContext_obsoleteGetIpInterface_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpInterface_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetIpInterface_Params](l), err
}

// HackSessionContext_obsoleteGetIpInterface_Params_Future is a wrapper for a HackSessionContext_obsoleteGetIpInterface_Params promised by a client call.
type HackSessionContext_obsoleteGetIpInterface_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGetIpInterface_Params_Future) Struct() (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGetIpInterface_Params(s), err
}

type HackSessionContext_obsoleteGetIpInterface_Results capnp.Struct

// HackSessionContext_obsoleteGetIpInterface_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpInterface_Results.
const HackSessionContext_obsoleteGetIpInterface_Results_TypeID = 0xb9147a48c12c807d

func NewHackSessionContext_obsoleteGetIpInterface_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpInterface_Results(st), err
}

func NewRootHackSessionContext_obsoleteGetIpInterface_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetIpInterface_Results(st), err
}

func ReadRootHackSessionContext_obsoleteGetIpInterface_Results(msg *capnp.Message) (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpInterface_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) String() string {
	str, _ := text.Marshal(0xb9147a48c12c807d, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetIpInterface_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetIpInterface_Results {
	return HackSessionContext_obsoleteGetIpInterface_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetIpInterface_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_obsoleteGetIpInterface_Results) Interface() ip.IpInterface {
	p, _ := capnp.Struct(s).Ptr(0)
	return ip.IpInterface(p.Interface().Client())
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) HasInterface() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) SetInterface(v ip.IpInterface) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// HackSessionContext_obsoleteGetIpInterface_Results_List is a list of HackSessionContext_obsoleteGetIpInterface_Results.
type HackSessionContext_obsoleteGetIpInterface_Results_List = capnp.StructList[HackSessionContext_obsoleteGetIpInterface_Results]

// NewHackSessionContext_obsoleteGetIpInterface_Results creates a new list of HackSessionContext_obsoleteGetIpInterface_Results.
func NewHackSessionContext_obsoleteGetIpInterface_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpInterface_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetIpInterface_Results](l), err
}

// HackSessionContext_obsoleteGetIpInterface_Results_Future is a wrapper for a HackSessionContext_obsoleteGetIpInterface_Results promised by a client call.
type HackSessionContext_obsoleteGetIpInterface_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGetIpInterface_Results_Future) Struct() (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGetIpInterface_Results(s), err
}

func (p HackSessionContext_obsoleteGetIpInterface_Results_Future) Interface() ip.IpInterface {
	return ip.IpInterface(p.Future.Field(0, nil).Client())
}

type HackSessionContext_obsoleteGetUiViewForEndpoint_Params capnp.Struct

// HackSessionContext_obsoleteGetUiViewForEndpoint_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetUiViewForEndpoint_Params.
const HackSessionContext_obsoleteGetUiViewForEndpoint_Params_TypeID = 0xb45bb2d206694fe6

func NewHackSessionContext_obsoleteGetUiViewForEndpoint_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetUiViewForEndpoint_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(st), err
}

func NewRootHackSessionContext_obsoleteGetUiViewForEndpoint_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetUiViewForEndpoint_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(st), err
}

func ReadRootHackSessionContext_obsoleteGetUiViewForEndpoint_Params(msg *capnp.Message) (HackSessionContext_obsoleteGetUiViewForEndpoint_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) String() string {
	str, _ := text.Marshal(0xb45bb2d206694fe6, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetUiViewForEndpoint_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetUiViewForEndpoint_Params {
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) Url() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) HasUrl() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) UrlBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) SetUrl(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// HackSessionContext_obsoleteGetUiViewForEndpoint_Params_List is a list of HackSessionContext_obsoleteGetUiViewForEndpoint_Params.
type HackSessionContext_obsoleteGetUiViewForEndpoint_Params_List = capnp.StructList[HackSessionContext_obsoleteGetUiViewForEndpoint_Params]

// NewHackSessionContext_obsoleteGetUiViewForEndpoint_Params creates a new list of HackSessionContext_obsoleteGetUiViewForEndpoint_Params.
func NewHackSessionContext_obsoleteGetUiViewForEndpoint_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetUiViewForEndpoint_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetUiViewForEndpoint_Params](l), err
}

// HackSessionContext_obsoleteGetUiViewForEndpoint_Params_Future is a wrapper for a HackSessionContext_obsoleteGetUiViewForEndpoint_Params promised by a client call.
type HackSessionContext_obsoleteGetUiViewForEndpoint_Params_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGetUiViewForEndpoint_Params_Future) Struct() (HackSessionContext_obsoleteGetUiViewForEndpoint_Params, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(s), err
}

type HackSessionContext_obsoleteGetUiViewForEndpoint_Results capnp.Struct

// HackSessionContext_obsoleteGetUiViewForEndpoint_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetUiViewForEndpoint_Results.
const HackSessionContext_obsoleteGetUiViewForEndpoint_Results_TypeID = 0xfdc944999b9296df

func NewHackSessionContext_obsoleteGetUiViewForEndpoint_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetUiViewForEndpoint_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(st), err
}

func NewRootHackSessionContext_obsoleteGetUiViewForEndpoint_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetUiViewForEndpoint_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(st), err
}

func ReadRootHackSessionContext_obsoleteGetUiViewForEndpoint_Results(msg *capnp.Message) (HackSessionContext_obsoleteGetUiViewForEndpoint_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) String() string {
	str, _ := text.Marshal(0xfdc944999b9296df, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetUiViewForEndpoint_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetUiViewForEndpoint_Results {
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) View() grain.UiView {
	p, _ := capnp.Struct(s).Ptr(0)
	return grain.UiView(p.Interface().Client())
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) HasView() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) SetView(v grain.UiView) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// HackSessionContext_obsoleteGetUiViewForEndpoint_Results_List is a list of HackSessionContext_obsoleteGetUiViewForEndpoint_Results.
type HackSessionContext_obsoleteGetUiViewForEndpoint_Results_List = capnp.StructList[HackSessionContext_obsoleteGetUiViewForEndpoint_Results]

// NewHackSessionContext_obsoleteGetUiViewForEndpoint_Results creates a new list of HackSessionContext_obsoleteGetUiViewForEndpoint_Results.
func NewHackSessionContext_obsoleteGetUiViewForEndpoint_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetUiViewForEndpoint_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetUiViewForEndpoint_Results](l), err
}

// HackSessionContext_obsoleteGetUiViewForEndpoint_Results_Future is a wrapper for a HackSessionContext_obsoleteGetUiViewForEndpoint_Results promised by a client call.
type HackSessionContext_obsoleteGetUiViewForEndpoint_Results_Future struct{ *capnp.Future }

func (p HackSessionContext_obsoleteGetUiViewForEndpoint_Results_Future) Struct() (HackSessionContext_obsoleteGetUiViewForEndpoint_Results, error) {
	s, err := p.Future.Struct()
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(s), err
}

func (p HackSessionContext_obsoleteGetUiViewForEndpoint_Results_Future) View() grain.UiView {
	return grain.UiView(p.Future.Field(0, nil).Client())
}

type HackEmailSession capnp.Client

// HackEmailSession_TypeID is the unique identifier for the type HackEmailSession.
const HackEmailSession_TypeID = 0xc3b5ced7344b04a6

func (c HackEmailSession) Send(ctx context.Context, params func(email.EmailSendPort_send_Params) error) (email.EmailSendPort_send_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_send_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return email.EmailSendPort_send_Results_Future{Future: ans.Future()}, release
}
func (c HackEmailSession) HintAddress(ctx context.Context, params func(email.EmailSendPort_hintAddress_Params) error) (email.EmailSendPort_hintAddress_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_hintAddress_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return email.EmailSendPort_hintAddress_Results_Future{Future: ans.Future()}, release
}

func (c HackEmailSession) AddRef() HackEmailSession {
	return HackEmailSession(capnp.Client(c).AddRef())
}

func (c HackEmailSession) Release() {
	capnp.Client(c).Release()
}

func (c HackEmailSession) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (HackEmailSession) DecodeFromPtr(p capnp.Ptr) HackEmailSession {
	return HackEmailSession(capnp.Client{}.DecodeFromPtr(p))
}

func (c HackEmailSession) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// A HackEmailSession_Server is a HackEmailSession with a local implementation.
type HackEmailSession_Server interface {
	Send(context.Context, email.EmailSendPort_send) error

	HintAddress(context.Context, email.EmailSendPort_hintAddress) error
}

// HackEmailSession_NewServer creates a new Server from an implementation of HackEmailSession_Server.
func HackEmailSession_NewServer(s HackEmailSession_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(HackEmailSession_Methods(nil, s), s, c)
}

// HackEmailSession_ServerToClient creates a new Client from an implementation of HackEmailSession_Server.
// The caller is responsible for calling Release on the returned Client.
func HackEmailSession_ServerToClient(s HackEmailSession_Server) HackEmailSession {
	return HackEmailSession(capnp.NewClient(HackEmailSession_NewServer(s)))
}

// HackEmailSession_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func HackEmailSession_Methods(methods []server.Method, s HackEmailSession_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Send(ctx, email.EmailSendPort_send{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.HintAddress(ctx, email.EmailSendPort_hintAddress{call})
		},
	})

	return methods
}

// HackEmailSession_List is a list of HackEmailSession.
type HackEmailSession_List = capnp.CapList[HackEmailSession]

// NewHackEmailSession creates a new list of HackEmailSession.
func NewHackEmailSession_List(s *capnp.Segment, sz int32) (HackEmailSession_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[HackEmailSession](l), err
}

const schema_bf6889795837d1e0 = "x\xda\xacVml\x14\xd5\x1a~\xdf3\xdbNI\xda" +
	"\xdb\xce\xdd\xc2e\x17\xda\xe56\xbd\\h\x00m\x01Q" +
	"Bh+\xad\xedb\xab;\x0bE\xc4\x80N\xb7\x87v" +
	"\xd2\xdd\x99\xed\xce,\x85\xc6\xa6\x05\xfcH1\xc4DE" +
	" \xf8\x87\x1f`j\x14\x14\xc1\x08\x1a\xd1\x18LJ\xa2" +
	"\x09\x18\x84(\x89\x82\x1fX$\x18\x14\x08%\x811g" +
	"vgzZ(Pk\xf6\xcff\xce{\x9e\xf7\xfby" +
	"\xce\xfd\xefeUxJs\xee+\x05\xb2d\x01\xc9\xc8" +
	"\xb4>\xf8\xa4\xfb\x94r\xbdc#\xc8S\x11\x012\x88" +
	"\x080\xbbsb\x19\x01\xf4n\x99\xb8\x17\xd0\xca\xdd\x14" +
	"kY\xdf\xbd\xea9\x90\xa62\x03d\x06\xa5\xbe\"f" +
	"\x10\xf4\x95\x03Z\x95\xe2\xcd\xc0\xae\x93\x03[S\x06\x1e" +
	"v\xae\xfa\xfeM\xc0c\xd5m<6/T\xb5j'" +
	"w\xa2\xf8\xce\"x,\xf1\xa5\x8f\xbe}zV\xa8\x97" +
	"\x07m\xf0\xf9\x19h\xcc\x06\xfd\xe5\x8d\x9a\xd3\xdb\xe2\xbb" +
	"\xf7pW7\xfbJ\x18\xe8\xe5\xaa\xc5=y\xd7\xea\xf7" +
	"\xa7\xaf\xda\x01?\xef\xfb\x03\x01\xbd\xdb}\xed\xec\xea\xe3" +
	"j\xe6\xf1}O\xed\xe7\xb1\x07|a\x86=\xde\xcf\xb0" +
	";\xbbg|V\xdb\x91\x7f\x907\x98\xeb/a\x06\xf5" +
	"\xb6\xc1n\xcf\xa3sN~u\xe0s\x90\xbc\x82\xf5\xc3" +
	"\xb1y\xcb\xd7\xf5\xb4\x1c\x06\xc0\xd9m\xfe\"\xf4\xae\xf7" +
	"\x8b\x00\xdeN\xbf\xe8\xed\xf4\xff\x1f\xc0\x1ax1\xab\xb7" +
	"\xb4|k_\x1aN`pI\xff|\x06\xb7\xd9\xcf*" +
	"\xf8\xf2\x8e\xf1\xff]\x12\xa8;s\x0b\xdc\xf4Ie\xe8" +
	"}h\xd2\x7f\x00fWO\xaa!\xdeK\x93\x19\xde\xa2" +
	"iW>|s^\xd5\xcf|x\xfd\x93\xcf\xb3\x04o" +
	"Lf\xe1\xedm\xfa\xb2\x7f\xee\xa9\xccs\\m\x0a\x0a" +
	"\x8e\xb2\xb2\xae\xfc\xf4j\xd1\x91W\x95~\xa7\x9bv," +
	"R\xc1qv\xf7\x7f\x05\xe7\x00\xad\x05\xefN\xd9\x93\xd3" +
	"\xf3S?\x0f\x9eQhw\xb3\xa0\x90\x81\xef\xcc;\xd4" +
	"8\xc1\xfa\xed\x02\x07^\xcf\xce=V}\xf3\x17\xbfn" +
	"\xa2y\x03\xecd0\xa7\x94\x8f\xea\xc2\x0d\xe8}\xb2\x90" +
	"\x15\xa6\xa1\x90\xe5\xfc\xfd\xeb\xaf\xec\xd8^\xd5w\x83\xf7" +
	"s\xa9p\x05\xf3\x93\x13`~\xbc\x97\xdb\xae\xb5=\xdb" +
	"~\x93\xf333\xe0'`\xb9\xbfz\xabE\x89\xb4\xce" +
	"4\xa8!\x1a\xaa\xae\xcd\x8a(q->\xbfV\x89\xb4" +
	".\xa1\x06\xfb\xb2H\xd7L\xba\xd6\x9c\xa57\x1az\x94" +
	"\x9a\xb4\x86j4\xa1\x98\xb42\xae.\xd5[\xa9V\x1c" +
	"\x0a(\x09%f\xc8\xd9\x82\x07\xc0\x83\x00R\xf5\xc3\x00" +
	"r\x85\x80r\x1dA\x091\x9fUI\x0a.\x06\x90k" +
	"\x05\x94\x97\x12D\x92\x8f\x04Q\x92\x99a\x9d\x80\xf2r" +
	"\x82]qjjJ\x8cb6\x10\xcc\x06\xb4\x92\x06M" +
	"\x04\xb5\xd5:\x00`\x9e\xf5\xb5\xb4\xf2\xfd\xdf\x8f\x1d|" +
	"\x0d\x001\x0f\xb0\x8b\xae\x8d\xab\x09j\xe08 8\x0e" +
	"p\xb4Y\x84\xe9\x1a\xbd\x95\xcbAI\x88,\x07\x8f\x9b" +
	"C\x0e\x0b-K@9\x9f`\x97\xc9\x8c\x82Mnh" +
	"\xa3.\x99\x19\x8c?F\xcdv=\xd1\xca\\)14" +
	"\\\x8c\xcc;c4S\xb3\xc1\xa0\x89\xca\xa6\xa6\x045" +
	"\x0c'\xd01E\x10\xa6F2*\x98#f\xab\xa5\xec" +
	"P\xb2*\xa6\x94t\xb4>\xb1\xa1\x97\x15]\x1as\x91" +
	"\xc3\xd4\xc8MF\xcd{N\xdd\x81\xa95\xcdx\x0d5" +
	"\x8b\xc34`\xb0\xfbr\x96\x1b\xf7t6T\xd3\x04\x94" +
	"\xe7p\x93V\xca\x92\x99!\xa0\xfc A+\xa6\xc6\xe8" +
	"\xd2uq\xca\xa6(\xdd\xbe\xae\x08s\xa0\x99\x98\x03\x04" +
	"s\xb8\xb4\xb2\xee\xb9\x98\x0d\xea2\x95\xb6?\xa2'\xaa" +
	"\xb5\xa6\xb8\xaej\xa6\xd3V\xbe\xa6E\x835\x15\x93\x89" +
	"\xe8\x98\xa6'\xa8\x994\xb1Z\x89P\xb7\x8a\xbc\xa70" +
	"\x80\x9c-\xa0<\x91\xa0\xa5\xa6-\x01)J\xd6\xf5o" +
	"\x16\xf6k\xa1\x19?\x0e\xef\xa00\xccwuLQ\xa3" +
	",\x00Q\xd5\xb5\x10bH\xc8\x90\xb3\x10-}\xc2\x81" +
	"\xe5\x17+\xcb\xae\x02\x80u\xf4\xe3\xbe\xba\xc3\x05\x1b/" +
	"\xb0\xffc%\x8dp9M\xf5\x92c\x8d\xb2\xdb\xb1F" +
	"\xe3 kH\x84\xd1\x06\xc0\x10\xda\x08\xd8\xbb\xe9\xd6\x96" +
	"\xa6\xfb\x01b\xc3`\xc5G\xdc_a\xa4\xe8\x03v\xf8" +
	"\xb2\x07\x91#d\x0c[v\xf0Am5\xa0.\x17\x0b" +
	"\x19\x00\xaeL\xa0\xa3\x0a^\x09\x1b\x81x\xc7\xa1\x88\xe8" +
	"\xaa\x0c:z*\xdd\xd8\x00D\xba\"\xa2\xe0\xea6\x9e" +
	"Y\xb8\xec\x85\x8b\xa7\xdfy[\xea\xef\x00\"\x9d\x11\xd1" +
	"\xe3>\x18\xd0\x91=\xe9\xc4Q \xd2\x09\x113\\N" +
	"GGe\xa4\xbe}@\xa4#\"f\xba\xcf\x08t\x94" +
	"]:x\x08\x88t@D\xd1}A\xa0\xf3,\x90z" +
	"\xdf\x02\"\xed\x121\xcb\xd5#tT[\xda\xce\xeem" +
	"\x11\x91\xb8J\x8f\x8e\xdaH=\xe7\x81H=\xa2\xd5L" +
	"\xcdP\xb21\xaa\x82\x18\x096U\xa0\xe5t\x1b\xd3\x1b" +
	"\x0b\x15h9\xfc\x05\xe5)\x06\xe3\xcc\xc8\xf0\xa9\x00\xe0" +
	"A\xeaT\xc3d'\x01v\xc4\xdfC\x87W\xcaS\xd7" +
	"\xf8#\x87\xe8r\x19\x83\xddr\x10\xd4\xcc\xf2\xd4\x1a\x0d" +
	"\x0dc\xe8>\xe7\xb2\x01\xaa@{\xfe\x1f\xf83\xb2\xa2" +
	"\xa0b\xe1\xe1\x91\xe6\x7f\x94\x14\x16Rr\x13\xc3t\xe6" +
	"n,qw}\xb0{\x10\x096\xa58\xc8\xb8\xf7\xe8" +
	"\xf8\xbb\xb6(\x98h\xc8ynh\x0a#\xd7g\x04\x94" +
	"\xa3\xdcB\xaa\xecc\x8b\x80\xb2\xc9-d\x1b[\xc8\xa8" +
	"\x80\xf2Z\x82(\xe4\xa3\x00 %W\x00\xc8\xa6\x80r" +
	"7A+\x9ev\xc3\xb1\xb0\xd5\xa2\x1b\xb6\xe0\xf3\xcc\xac" +
	"$M\x9d[\\K5\xaahLo0@\xa0\x09D" +
	" \x88\xa3\xe7Og\x8e\xec1\xb2\xf3\x14\x87\xd1\xe7\xfc" +
	"t\x0b\x8a\x09\x96\xdbTa\xe0\xbf\x00C\x02b\xde\xe0" +
	"\xfa\x03\xb2\x8fc$\xef\xe1\xf2\x9dqg\x14\x87nt" +
	"\x08!\xde\xf5\x81\xc5>V\x09(\x87\xb8\xce\xd4/\xe6" +
	"^X\xc3hpt/\xae\x7fD%o\xf7\xf4(\x19" +
	"\\\x80\xdc5*mG\xc9:w\xb6\xf9\xfc\xb6\x93\xfb" +
	"\xbf\xfb\x9b\xef\x8e\xa1\x1dg[!\xc4\x8c\xbf\x02\x00\x00" +
	"\xff\xff\x8f\xd9\x1f\x94"

func init() {
	schemas.Register(schema_bf6889795837d1e0,
		0x837afa61d880beb6,
		0x845e8081686d8a0f,
		0x97f9d7a51ffe0741,
		0xa15e445037d1834c,
		0xa9502e5fdabb8b07,
		0xaea67098dc479ce6,
		0xb44df810894a44f4,
		0xb45bb2d206694fe6,
		0xb9147a48c12c807d,
		0xc3b5ced7344b04a6,
		0xc9973f31a90887f9,
		0xe14c1f5321159b8f,
		0xe54437a7b8f52843,
		0xe706d835e9cd64af,
		0xe96193c522f6c05d,
		0xe9e4890dae20b03c,
		0xecebff1662ba10a1,
		0xf910658ae8c6674d,
		0xfdc944999b9296df,
		0xfe777c71f871f413)
}
