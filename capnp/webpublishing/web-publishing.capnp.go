// Code generated by capnpc-go. DO NOT EDIT.

package webpublishing

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	fc "capnproto.org/go/capnp/v3/flowcontrol"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	fmt "fmt"
	strconv "strconv"
	util "zenhack.net/go/sandstorm/capnp/util"
)

type WebSite capnp.Client

// WebSite_TypeID is the unique identifier for the type WebSite.
const WebSite_TypeID = 0xdddcca47803e2377

func (c WebSite) GetUrl(ctx context.Context, params func(WebSite_getUrl_Params) error) (WebSite_getUrl_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      0,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "getUrl",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(WebSite_getUrl_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return WebSite_getUrl_Results_Future{Future: ans.Future()}, release
}
func (c WebSite) GetEntities(ctx context.Context, params func(WebSite_getEntities_Params) error) (WebSite_getEntities_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      1,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "getEntities",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(WebSite_getEntities_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return WebSite_getEntities_Results_Future{Future: ans.Future()}, release
}
func (c WebSite) GetNotFoundEntities(ctx context.Context, params func(WebSite_getNotFoundEntities_Params) error) (WebSite_getNotFoundEntities_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      2,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "getNotFoundEntities",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(WebSite_getNotFoundEntities_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return WebSite_getNotFoundEntities_Results_Future{Future: ans.Future()}, release
}
func (c WebSite) UploadBlob(ctx context.Context, params func(WebSite_uploadBlob_Params) error) (WebSite_uploadBlob_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      3,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "uploadBlob",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(WebSite_uploadBlob_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return WebSite_uploadBlob_Results_Future{Future: ans.Future()}, release
}
func (c WebSite) GetSubsite(ctx context.Context, params func(WebSite_getSubsite_Params) error) (WebSite_getSubsite_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      4,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "getSubsite",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(WebSite_getSubsite_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return WebSite_getSubsite_Results_Future{Future: ans.Future()}, release
}
func (c WebSite) ListResources(ctx context.Context, params func(WebSite_listResources_Params) error) (WebSite_listResources_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      5,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "listResources",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(WebSite_listResources_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return WebSite_listResources_Results_Future{Future: ans.Future()}, release
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c WebSite) String() string {
	return fmt.Sprintf("%T(%v)", c, capnp.Client(c))
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c WebSite) AddRef() WebSite {
	return WebSite(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c WebSite) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c WebSite) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c WebSite) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (WebSite) DecodeFromPtr(p capnp.Ptr) WebSite {
	return WebSite(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c WebSite) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c WebSite) IsSame(other WebSite) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c WebSite) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c WebSite) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
} // A WebSite_Server is a WebSite with a local implementation.
type WebSite_Server interface {
	GetUrl(context.Context, WebSite_getUrl) error

	GetEntities(context.Context, WebSite_getEntities) error

	GetNotFoundEntities(context.Context, WebSite_getNotFoundEntities) error

	UploadBlob(context.Context, WebSite_uploadBlob) error

	GetSubsite(context.Context, WebSite_getSubsite) error

	ListResources(context.Context, WebSite_listResources) error
}

// WebSite_NewServer creates a new Server from an implementation of WebSite_Server.
func WebSite_NewServer(s WebSite_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(WebSite_Methods(nil, s), s, c)
}

// WebSite_ServerToClient creates a new Client from an implementation of WebSite_Server.
// The caller is responsible for calling Release on the returned Client.
func WebSite_ServerToClient(s WebSite_Server) WebSite {
	return WebSite(capnp.NewClient(WebSite_NewServer(s)))
}

// WebSite_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func WebSite_Methods(methods []server.Method, s WebSite_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 6)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      0,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "getUrl",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetUrl(ctx, WebSite_getUrl{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      1,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "getEntities",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetEntities(ctx, WebSite_getEntities{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      2,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "getNotFoundEntities",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetNotFoundEntities(ctx, WebSite_getNotFoundEntities{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      3,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "uploadBlob",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.UploadBlob(ctx, WebSite_uploadBlob{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      4,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "getSubsite",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSubsite(ctx, WebSite_getSubsite{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xdddcca47803e2377,
			MethodID:      5,
			InterfaceName: "web-publishing.capnp:WebSite",
			MethodName:    "listResources",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ListResources(ctx, WebSite_listResources{call})
		},
	})

	return methods
}

// WebSite_getUrl holds the state for a server call to WebSite.getUrl.
// See server.Call for documentation.
type WebSite_getUrl struct {
	*server.Call
}

// Args returns the call's arguments.
func (c WebSite_getUrl) Args() WebSite_getUrl_Params {
	return WebSite_getUrl_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c WebSite_getUrl) AllocResults() (WebSite_getUrl_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getUrl_Results(r), err
}

// WebSite_getEntities holds the state for a server call to WebSite.getEntities.
// See server.Call for documentation.
type WebSite_getEntities struct {
	*server.Call
}

// Args returns the call's arguments.
func (c WebSite_getEntities) Args() WebSite_getEntities_Params {
	return WebSite_getEntities_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c WebSite_getEntities) AllocResults() (WebSite_getEntities_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getEntities_Results(r), err
}

// WebSite_getNotFoundEntities holds the state for a server call to WebSite.getNotFoundEntities.
// See server.Call for documentation.
type WebSite_getNotFoundEntities struct {
	*server.Call
}

// Args returns the call's arguments.
func (c WebSite_getNotFoundEntities) Args() WebSite_getNotFoundEntities_Params {
	return WebSite_getNotFoundEntities_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c WebSite_getNotFoundEntities) AllocResults() (WebSite_getNotFoundEntities_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getNotFoundEntities_Results(r), err
}

// WebSite_uploadBlob holds the state for a server call to WebSite.uploadBlob.
// See server.Call for documentation.
type WebSite_uploadBlob struct {
	*server.Call
}

// Args returns the call's arguments.
func (c WebSite_uploadBlob) Args() WebSite_uploadBlob_Params {
	return WebSite_uploadBlob_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c WebSite_uploadBlob) AllocResults() (WebSite_uploadBlob_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return WebSite_uploadBlob_Results(r), err
}

// WebSite_getSubsite holds the state for a server call to WebSite.getSubsite.
// See server.Call for documentation.
type WebSite_getSubsite struct {
	*server.Call
}

// Args returns the call's arguments.
func (c WebSite_getSubsite) Args() WebSite_getSubsite_Params {
	return WebSite_getSubsite_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c WebSite_getSubsite) AllocResults() (WebSite_getSubsite_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getSubsite_Results(r), err
}

// WebSite_listResources holds the state for a server call to WebSite.listResources.
// See server.Call for documentation.
type WebSite_listResources struct {
	*server.Call
}

// Args returns the call's arguments.
func (c WebSite_listResources) Args() WebSite_listResources_Params {
	return WebSite_listResources_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c WebSite_listResources) AllocResults() (WebSite_listResources_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_listResources_Results(r), err
}

// WebSite_List is a list of WebSite.
type WebSite_List = capnp.CapList[WebSite]

// NewWebSite creates a new list of WebSite.
func NewWebSite_List(s *capnp.Segment, sz int32) (WebSite_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[WebSite](l), err
}

type WebSite_Entity capnp.Struct
type WebSite_Entity_body WebSite_Entity
type WebSite_Entity_body_Which uint16

const (
	WebSite_Entity_body_Which_bytes WebSite_Entity_body_Which = 0
	WebSite_Entity_body_Which_blob  WebSite_Entity_body_Which = 1
)

func (w WebSite_Entity_body_Which) String() string {
	const s = "bytesblob"
	switch w {
	case WebSite_Entity_body_Which_bytes:
		return s[0:5]
	case WebSite_Entity_body_Which_blob:
		return s[5:9]

	}
	return "WebSite_Entity_body_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// WebSite_Entity_TypeID is the unique identifier for the type WebSite_Entity.
const WebSite_Entity_TypeID = 0xd019dd3e3c0e7e68

func NewWebSite_Entity(s *capnp.Segment) (WebSite_Entity, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return WebSite_Entity(st), err
}

func NewRootWebSite_Entity(s *capnp.Segment) (WebSite_Entity, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return WebSite_Entity(st), err
}

func ReadRootWebSite_Entity(msg *capnp.Message) (WebSite_Entity, error) {
	root, err := msg.Root()
	return WebSite_Entity(root.Struct()), err
}

func (s WebSite_Entity) String() string {
	str, _ := text.Marshal(0xd019dd3e3c0e7e68, capnp.Struct(s))
	return str
}

func (s WebSite_Entity) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_Entity) DecodeFromPtr(p capnp.Ptr) WebSite_Entity {
	return WebSite_Entity(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_Entity) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_Entity) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_Entity) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_Entity) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s WebSite_Entity) MimeType() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s WebSite_Entity) HasMimeType() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s WebSite_Entity) MimeTypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s WebSite_Entity) SetMimeType(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s WebSite_Entity) Language() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s WebSite_Entity) HasLanguage() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s WebSite_Entity) LanguageBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s WebSite_Entity) SetLanguage(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s WebSite_Entity) Encoding() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s WebSite_Entity) HasEncoding() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s WebSite_Entity) EncodingBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s WebSite_Entity) SetEncoding(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s WebSite_Entity) Body() WebSite_Entity_body { return WebSite_Entity_body(s) }

func (s WebSite_Entity_body) Which() WebSite_Entity_body_Which {
	return WebSite_Entity_body_Which(capnp.Struct(s).Uint16(0))
}
func (s WebSite_Entity_body) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_Entity_body) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_Entity_body) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s WebSite_Entity_body) Bytes() ([]byte, error) {
	if capnp.Struct(s).Uint16(0) != 0 {
		panic("Which() != bytes")
	}
	p, err := capnp.Struct(s).Ptr(3)
	return []byte(p.Data()), err
}

func (s WebSite_Entity_body) HasBytes() bool {
	if capnp.Struct(s).Uint16(0) != 0 {
		return false
	}
	return capnp.Struct(s).HasPtr(3)
}

func (s WebSite_Entity_body) SetBytes(v []byte) error {
	capnp.Struct(s).SetUint16(0, 0)
	return capnp.Struct(s).SetData(3, v)
}

func (s WebSite_Entity_body) Blob() util.Blob {
	if capnp.Struct(s).Uint16(0) != 1 {
		panic("Which() != blob")
	}
	p, _ := capnp.Struct(s).Ptr(3)
	return util.Blob(p.Interface().Client())
}

func (s WebSite_Entity_body) HasBlob() bool {
	if capnp.Struct(s).Uint16(0) != 1 {
		return false
	}
	return capnp.Struct(s).HasPtr(3)
}

func (s WebSite_Entity_body) SetBlob(v util.Blob) error {
	capnp.Struct(s).SetUint16(0, 1)
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(3, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(3, in.ToPtr())
}

func (s WebSite_Entity) RedirectTo() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s WebSite_Entity) HasRedirectTo() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s WebSite_Entity) RedirectToBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s WebSite_Entity) SetRedirectTo(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

// WebSite_Entity_List is a list of WebSite_Entity.
type WebSite_Entity_List = capnp.StructList[WebSite_Entity]

// NewWebSite_Entity creates a new list of WebSite_Entity.
func NewWebSite_Entity_List(s *capnp.Segment, sz int32) (WebSite_Entity_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5}, sz)
	return capnp.StructList[WebSite_Entity](l), err
}

// WebSite_Entity_Future is a wrapper for a WebSite_Entity promised by a client call.
type WebSite_Entity_Future struct{ *capnp.Future }

func (f WebSite_Entity_Future) Struct() (WebSite_Entity, error) {
	p, err := f.Future.Ptr()
	return WebSite_Entity(p.Struct()), err
}
func (p WebSite_Entity_Future) Body() WebSite_Entity_body_Future {
	return WebSite_Entity_body_Future{p.Future}
}

// WebSite_Entity_body_Future is a wrapper for a WebSite_Entity_body promised by a client call.
type WebSite_Entity_body_Future struct{ *capnp.Future }

func (f WebSite_Entity_body_Future) Struct() (WebSite_Entity_body, error) {
	p, err := f.Future.Ptr()
	return WebSite_Entity_body(p.Struct()), err
}
func (p WebSite_Entity_body_Future) Blob() util.Blob {
	return util.Blob(p.Future.Field(3, nil).Client())
}

type WebSite_getUrl_Params capnp.Struct

// WebSite_getUrl_Params_TypeID is the unique identifier for the type WebSite_getUrl_Params.
const WebSite_getUrl_Params_TypeID = 0xdc072ae47872d061

func NewWebSite_getUrl_Params(s *capnp.Segment) (WebSite_getUrl_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return WebSite_getUrl_Params(st), err
}

func NewRootWebSite_getUrl_Params(s *capnp.Segment) (WebSite_getUrl_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return WebSite_getUrl_Params(st), err
}

func ReadRootWebSite_getUrl_Params(msg *capnp.Message) (WebSite_getUrl_Params, error) {
	root, err := msg.Root()
	return WebSite_getUrl_Params(root.Struct()), err
}

func (s WebSite_getUrl_Params) String() string {
	str, _ := text.Marshal(0xdc072ae47872d061, capnp.Struct(s))
	return str
}

func (s WebSite_getUrl_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_getUrl_Params) DecodeFromPtr(p capnp.Ptr) WebSite_getUrl_Params {
	return WebSite_getUrl_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_getUrl_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_getUrl_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_getUrl_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_getUrl_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// WebSite_getUrl_Params_List is a list of WebSite_getUrl_Params.
type WebSite_getUrl_Params_List = capnp.StructList[WebSite_getUrl_Params]

// NewWebSite_getUrl_Params creates a new list of WebSite_getUrl_Params.
func NewWebSite_getUrl_Params_List(s *capnp.Segment, sz int32) (WebSite_getUrl_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[WebSite_getUrl_Params](l), err
}

// WebSite_getUrl_Params_Future is a wrapper for a WebSite_getUrl_Params promised by a client call.
type WebSite_getUrl_Params_Future struct{ *capnp.Future }

func (f WebSite_getUrl_Params_Future) Struct() (WebSite_getUrl_Params, error) {
	p, err := f.Future.Ptr()
	return WebSite_getUrl_Params(p.Struct()), err
}

type WebSite_getUrl_Results capnp.Struct

// WebSite_getUrl_Results_TypeID is the unique identifier for the type WebSite_getUrl_Results.
const WebSite_getUrl_Results_TypeID = 0xb2855d483568639e

func NewWebSite_getUrl_Results(s *capnp.Segment) (WebSite_getUrl_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getUrl_Results(st), err
}

func NewRootWebSite_getUrl_Results(s *capnp.Segment) (WebSite_getUrl_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getUrl_Results(st), err
}

func ReadRootWebSite_getUrl_Results(msg *capnp.Message) (WebSite_getUrl_Results, error) {
	root, err := msg.Root()
	return WebSite_getUrl_Results(root.Struct()), err
}

func (s WebSite_getUrl_Results) String() string {
	str, _ := text.Marshal(0xb2855d483568639e, capnp.Struct(s))
	return str
}

func (s WebSite_getUrl_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_getUrl_Results) DecodeFromPtr(p capnp.Ptr) WebSite_getUrl_Results {
	return WebSite_getUrl_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_getUrl_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_getUrl_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_getUrl_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_getUrl_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s WebSite_getUrl_Results) Path() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s WebSite_getUrl_Results) HasPath() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s WebSite_getUrl_Results) PathBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s WebSite_getUrl_Results) SetPath(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// WebSite_getUrl_Results_List is a list of WebSite_getUrl_Results.
type WebSite_getUrl_Results_List = capnp.StructList[WebSite_getUrl_Results]

// NewWebSite_getUrl_Results creates a new list of WebSite_getUrl_Results.
func NewWebSite_getUrl_Results_List(s *capnp.Segment, sz int32) (WebSite_getUrl_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[WebSite_getUrl_Results](l), err
}

// WebSite_getUrl_Results_Future is a wrapper for a WebSite_getUrl_Results promised by a client call.
type WebSite_getUrl_Results_Future struct{ *capnp.Future }

func (f WebSite_getUrl_Results_Future) Struct() (WebSite_getUrl_Results, error) {
	p, err := f.Future.Ptr()
	return WebSite_getUrl_Results(p.Struct()), err
}

type WebSite_getEntities_Params capnp.Struct

// WebSite_getEntities_Params_TypeID is the unique identifier for the type WebSite_getEntities_Params.
const WebSite_getEntities_Params_TypeID = 0xfe1643d6b01e7cf4

func NewWebSite_getEntities_Params(s *capnp.Segment) (WebSite_getEntities_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getEntities_Params(st), err
}

func NewRootWebSite_getEntities_Params(s *capnp.Segment) (WebSite_getEntities_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getEntities_Params(st), err
}

func ReadRootWebSite_getEntities_Params(msg *capnp.Message) (WebSite_getEntities_Params, error) {
	root, err := msg.Root()
	return WebSite_getEntities_Params(root.Struct()), err
}

func (s WebSite_getEntities_Params) String() string {
	str, _ := text.Marshal(0xfe1643d6b01e7cf4, capnp.Struct(s))
	return str
}

func (s WebSite_getEntities_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_getEntities_Params) DecodeFromPtr(p capnp.Ptr) WebSite_getEntities_Params {
	return WebSite_getEntities_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_getEntities_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_getEntities_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_getEntities_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_getEntities_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s WebSite_getEntities_Params) Path() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s WebSite_getEntities_Params) HasPath() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s WebSite_getEntities_Params) PathBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s WebSite_getEntities_Params) SetPath(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// WebSite_getEntities_Params_List is a list of WebSite_getEntities_Params.
type WebSite_getEntities_Params_List = capnp.StructList[WebSite_getEntities_Params]

// NewWebSite_getEntities_Params creates a new list of WebSite_getEntities_Params.
func NewWebSite_getEntities_Params_List(s *capnp.Segment, sz int32) (WebSite_getEntities_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[WebSite_getEntities_Params](l), err
}

// WebSite_getEntities_Params_Future is a wrapper for a WebSite_getEntities_Params promised by a client call.
type WebSite_getEntities_Params_Future struct{ *capnp.Future }

func (f WebSite_getEntities_Params_Future) Struct() (WebSite_getEntities_Params, error) {
	p, err := f.Future.Ptr()
	return WebSite_getEntities_Params(p.Struct()), err
}

type WebSite_getEntities_Results capnp.Struct

// WebSite_getEntities_Results_TypeID is the unique identifier for the type WebSite_getEntities_Results.
const WebSite_getEntities_Results_TypeID = 0xc3739b6f070fb5ea

func NewWebSite_getEntities_Results(s *capnp.Segment) (WebSite_getEntities_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getEntities_Results(st), err
}

func NewRootWebSite_getEntities_Results(s *capnp.Segment) (WebSite_getEntities_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getEntities_Results(st), err
}

func ReadRootWebSite_getEntities_Results(msg *capnp.Message) (WebSite_getEntities_Results, error) {
	root, err := msg.Root()
	return WebSite_getEntities_Results(root.Struct()), err
}

func (s WebSite_getEntities_Results) String() string {
	str, _ := text.Marshal(0xc3739b6f070fb5ea, capnp.Struct(s))
	return str
}

func (s WebSite_getEntities_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_getEntities_Results) DecodeFromPtr(p capnp.Ptr) WebSite_getEntities_Results {
	return WebSite_getEntities_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_getEntities_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_getEntities_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_getEntities_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_getEntities_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s WebSite_getEntities_Results) Entities() util.Assignable {
	p, _ := capnp.Struct(s).Ptr(0)
	return util.Assignable(p.Interface().Client())
}

func (s WebSite_getEntities_Results) HasEntities() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s WebSite_getEntities_Results) SetEntities(v util.Assignable) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// WebSite_getEntities_Results_List is a list of WebSite_getEntities_Results.
type WebSite_getEntities_Results_List = capnp.StructList[WebSite_getEntities_Results]

// NewWebSite_getEntities_Results creates a new list of WebSite_getEntities_Results.
func NewWebSite_getEntities_Results_List(s *capnp.Segment, sz int32) (WebSite_getEntities_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[WebSite_getEntities_Results](l), err
}

// WebSite_getEntities_Results_Future is a wrapper for a WebSite_getEntities_Results promised by a client call.
type WebSite_getEntities_Results_Future struct{ *capnp.Future }

func (f WebSite_getEntities_Results_Future) Struct() (WebSite_getEntities_Results, error) {
	p, err := f.Future.Ptr()
	return WebSite_getEntities_Results(p.Struct()), err
}
func (p WebSite_getEntities_Results_Future) Entities() util.Assignable {
	return util.Assignable(p.Future.Field(0, nil).Client())
}

type WebSite_getNotFoundEntities_Params capnp.Struct

// WebSite_getNotFoundEntities_Params_TypeID is the unique identifier for the type WebSite_getNotFoundEntities_Params.
const WebSite_getNotFoundEntities_Params_TypeID = 0xc3db68ea10a823b6

func NewWebSite_getNotFoundEntities_Params(s *capnp.Segment) (WebSite_getNotFoundEntities_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return WebSite_getNotFoundEntities_Params(st), err
}

func NewRootWebSite_getNotFoundEntities_Params(s *capnp.Segment) (WebSite_getNotFoundEntities_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return WebSite_getNotFoundEntities_Params(st), err
}

func ReadRootWebSite_getNotFoundEntities_Params(msg *capnp.Message) (WebSite_getNotFoundEntities_Params, error) {
	root, err := msg.Root()
	return WebSite_getNotFoundEntities_Params(root.Struct()), err
}

func (s WebSite_getNotFoundEntities_Params) String() string {
	str, _ := text.Marshal(0xc3db68ea10a823b6, capnp.Struct(s))
	return str
}

func (s WebSite_getNotFoundEntities_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_getNotFoundEntities_Params) DecodeFromPtr(p capnp.Ptr) WebSite_getNotFoundEntities_Params {
	return WebSite_getNotFoundEntities_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_getNotFoundEntities_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_getNotFoundEntities_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_getNotFoundEntities_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_getNotFoundEntities_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// WebSite_getNotFoundEntities_Params_List is a list of WebSite_getNotFoundEntities_Params.
type WebSite_getNotFoundEntities_Params_List = capnp.StructList[WebSite_getNotFoundEntities_Params]

// NewWebSite_getNotFoundEntities_Params creates a new list of WebSite_getNotFoundEntities_Params.
func NewWebSite_getNotFoundEntities_Params_List(s *capnp.Segment, sz int32) (WebSite_getNotFoundEntities_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[WebSite_getNotFoundEntities_Params](l), err
}

// WebSite_getNotFoundEntities_Params_Future is a wrapper for a WebSite_getNotFoundEntities_Params promised by a client call.
type WebSite_getNotFoundEntities_Params_Future struct{ *capnp.Future }

func (f WebSite_getNotFoundEntities_Params_Future) Struct() (WebSite_getNotFoundEntities_Params, error) {
	p, err := f.Future.Ptr()
	return WebSite_getNotFoundEntities_Params(p.Struct()), err
}

type WebSite_getNotFoundEntities_Results capnp.Struct

// WebSite_getNotFoundEntities_Results_TypeID is the unique identifier for the type WebSite_getNotFoundEntities_Results.
const WebSite_getNotFoundEntities_Results_TypeID = 0xff383cbabc241462

func NewWebSite_getNotFoundEntities_Results(s *capnp.Segment) (WebSite_getNotFoundEntities_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getNotFoundEntities_Results(st), err
}

func NewRootWebSite_getNotFoundEntities_Results(s *capnp.Segment) (WebSite_getNotFoundEntities_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getNotFoundEntities_Results(st), err
}

func ReadRootWebSite_getNotFoundEntities_Results(msg *capnp.Message) (WebSite_getNotFoundEntities_Results, error) {
	root, err := msg.Root()
	return WebSite_getNotFoundEntities_Results(root.Struct()), err
}

func (s WebSite_getNotFoundEntities_Results) String() string {
	str, _ := text.Marshal(0xff383cbabc241462, capnp.Struct(s))
	return str
}

func (s WebSite_getNotFoundEntities_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_getNotFoundEntities_Results) DecodeFromPtr(p capnp.Ptr) WebSite_getNotFoundEntities_Results {
	return WebSite_getNotFoundEntities_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_getNotFoundEntities_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_getNotFoundEntities_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_getNotFoundEntities_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_getNotFoundEntities_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s WebSite_getNotFoundEntities_Results) Entities() util.Assignable {
	p, _ := capnp.Struct(s).Ptr(0)
	return util.Assignable(p.Interface().Client())
}

func (s WebSite_getNotFoundEntities_Results) HasEntities() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s WebSite_getNotFoundEntities_Results) SetEntities(v util.Assignable) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// WebSite_getNotFoundEntities_Results_List is a list of WebSite_getNotFoundEntities_Results.
type WebSite_getNotFoundEntities_Results_List = capnp.StructList[WebSite_getNotFoundEntities_Results]

// NewWebSite_getNotFoundEntities_Results creates a new list of WebSite_getNotFoundEntities_Results.
func NewWebSite_getNotFoundEntities_Results_List(s *capnp.Segment, sz int32) (WebSite_getNotFoundEntities_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[WebSite_getNotFoundEntities_Results](l), err
}

// WebSite_getNotFoundEntities_Results_Future is a wrapper for a WebSite_getNotFoundEntities_Results promised by a client call.
type WebSite_getNotFoundEntities_Results_Future struct{ *capnp.Future }

func (f WebSite_getNotFoundEntities_Results_Future) Struct() (WebSite_getNotFoundEntities_Results, error) {
	p, err := f.Future.Ptr()
	return WebSite_getNotFoundEntities_Results(p.Struct()), err
}
func (p WebSite_getNotFoundEntities_Results_Future) Entities() util.Assignable {
	return util.Assignable(p.Future.Field(0, nil).Client())
}

type WebSite_uploadBlob_Params capnp.Struct

// WebSite_uploadBlob_Params_TypeID is the unique identifier for the type WebSite_uploadBlob_Params.
const WebSite_uploadBlob_Params_TypeID = 0xe2ae317a2a41a9f6

func NewWebSite_uploadBlob_Params(s *capnp.Segment) (WebSite_uploadBlob_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return WebSite_uploadBlob_Params(st), err
}

func NewRootWebSite_uploadBlob_Params(s *capnp.Segment) (WebSite_uploadBlob_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return WebSite_uploadBlob_Params(st), err
}

func ReadRootWebSite_uploadBlob_Params(msg *capnp.Message) (WebSite_uploadBlob_Params, error) {
	root, err := msg.Root()
	return WebSite_uploadBlob_Params(root.Struct()), err
}

func (s WebSite_uploadBlob_Params) String() string {
	str, _ := text.Marshal(0xe2ae317a2a41a9f6, capnp.Struct(s))
	return str
}

func (s WebSite_uploadBlob_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_uploadBlob_Params) DecodeFromPtr(p capnp.Ptr) WebSite_uploadBlob_Params {
	return WebSite_uploadBlob_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_uploadBlob_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_uploadBlob_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_uploadBlob_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_uploadBlob_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// WebSite_uploadBlob_Params_List is a list of WebSite_uploadBlob_Params.
type WebSite_uploadBlob_Params_List = capnp.StructList[WebSite_uploadBlob_Params]

// NewWebSite_uploadBlob_Params creates a new list of WebSite_uploadBlob_Params.
func NewWebSite_uploadBlob_Params_List(s *capnp.Segment, sz int32) (WebSite_uploadBlob_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[WebSite_uploadBlob_Params](l), err
}

// WebSite_uploadBlob_Params_Future is a wrapper for a WebSite_uploadBlob_Params promised by a client call.
type WebSite_uploadBlob_Params_Future struct{ *capnp.Future }

func (f WebSite_uploadBlob_Params_Future) Struct() (WebSite_uploadBlob_Params, error) {
	p, err := f.Future.Ptr()
	return WebSite_uploadBlob_Params(p.Struct()), err
}

type WebSite_uploadBlob_Results capnp.Struct

// WebSite_uploadBlob_Results_TypeID is the unique identifier for the type WebSite_uploadBlob_Results.
const WebSite_uploadBlob_Results_TypeID = 0xc63c6c15dd189744

func NewWebSite_uploadBlob_Results(s *capnp.Segment) (WebSite_uploadBlob_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return WebSite_uploadBlob_Results(st), err
}

func NewRootWebSite_uploadBlob_Results(s *capnp.Segment) (WebSite_uploadBlob_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return WebSite_uploadBlob_Results(st), err
}

func ReadRootWebSite_uploadBlob_Results(msg *capnp.Message) (WebSite_uploadBlob_Results, error) {
	root, err := msg.Root()
	return WebSite_uploadBlob_Results(root.Struct()), err
}

func (s WebSite_uploadBlob_Results) String() string {
	str, _ := text.Marshal(0xc63c6c15dd189744, capnp.Struct(s))
	return str
}

func (s WebSite_uploadBlob_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_uploadBlob_Results) DecodeFromPtr(p capnp.Ptr) WebSite_uploadBlob_Results {
	return WebSite_uploadBlob_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_uploadBlob_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_uploadBlob_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_uploadBlob_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_uploadBlob_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s WebSite_uploadBlob_Results) Blob() util.Blob {
	p, _ := capnp.Struct(s).Ptr(0)
	return util.Blob(p.Interface().Client())
}

func (s WebSite_uploadBlob_Results) HasBlob() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s WebSite_uploadBlob_Results) SetBlob(v util.Blob) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

func (s WebSite_uploadBlob_Results) Stream() util.ByteStream {
	p, _ := capnp.Struct(s).Ptr(1)
	return util.ByteStream(p.Interface().Client())
}

func (s WebSite_uploadBlob_Results) HasStream() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s WebSite_uploadBlob_Results) SetStream(v util.ByteStream) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(1, in.ToPtr())
}

// WebSite_uploadBlob_Results_List is a list of WebSite_uploadBlob_Results.
type WebSite_uploadBlob_Results_List = capnp.StructList[WebSite_uploadBlob_Results]

// NewWebSite_uploadBlob_Results creates a new list of WebSite_uploadBlob_Results.
func NewWebSite_uploadBlob_Results_List(s *capnp.Segment, sz int32) (WebSite_uploadBlob_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[WebSite_uploadBlob_Results](l), err
}

// WebSite_uploadBlob_Results_Future is a wrapper for a WebSite_uploadBlob_Results promised by a client call.
type WebSite_uploadBlob_Results_Future struct{ *capnp.Future }

func (f WebSite_uploadBlob_Results_Future) Struct() (WebSite_uploadBlob_Results, error) {
	p, err := f.Future.Ptr()
	return WebSite_uploadBlob_Results(p.Struct()), err
}
func (p WebSite_uploadBlob_Results_Future) Blob() util.Blob {
	return util.Blob(p.Future.Field(0, nil).Client())
}

func (p WebSite_uploadBlob_Results_Future) Stream() util.ByteStream {
	return util.ByteStream(p.Future.Field(1, nil).Client())
}

type WebSite_getSubsite_Params capnp.Struct

// WebSite_getSubsite_Params_TypeID is the unique identifier for the type WebSite_getSubsite_Params.
const WebSite_getSubsite_Params_TypeID = 0xdcbe913db7496644

func NewWebSite_getSubsite_Params(s *capnp.Segment) (WebSite_getSubsite_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getSubsite_Params(st), err
}

func NewRootWebSite_getSubsite_Params(s *capnp.Segment) (WebSite_getSubsite_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getSubsite_Params(st), err
}

func ReadRootWebSite_getSubsite_Params(msg *capnp.Message) (WebSite_getSubsite_Params, error) {
	root, err := msg.Root()
	return WebSite_getSubsite_Params(root.Struct()), err
}

func (s WebSite_getSubsite_Params) String() string {
	str, _ := text.Marshal(0xdcbe913db7496644, capnp.Struct(s))
	return str
}

func (s WebSite_getSubsite_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_getSubsite_Params) DecodeFromPtr(p capnp.Ptr) WebSite_getSubsite_Params {
	return WebSite_getSubsite_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_getSubsite_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_getSubsite_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_getSubsite_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_getSubsite_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s WebSite_getSubsite_Params) Prefix() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s WebSite_getSubsite_Params) HasPrefix() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s WebSite_getSubsite_Params) PrefixBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s WebSite_getSubsite_Params) SetPrefix(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// WebSite_getSubsite_Params_List is a list of WebSite_getSubsite_Params.
type WebSite_getSubsite_Params_List = capnp.StructList[WebSite_getSubsite_Params]

// NewWebSite_getSubsite_Params creates a new list of WebSite_getSubsite_Params.
func NewWebSite_getSubsite_Params_List(s *capnp.Segment, sz int32) (WebSite_getSubsite_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[WebSite_getSubsite_Params](l), err
}

// WebSite_getSubsite_Params_Future is a wrapper for a WebSite_getSubsite_Params promised by a client call.
type WebSite_getSubsite_Params_Future struct{ *capnp.Future }

func (f WebSite_getSubsite_Params_Future) Struct() (WebSite_getSubsite_Params, error) {
	p, err := f.Future.Ptr()
	return WebSite_getSubsite_Params(p.Struct()), err
}

type WebSite_getSubsite_Results capnp.Struct

// WebSite_getSubsite_Results_TypeID is the unique identifier for the type WebSite_getSubsite_Results.
const WebSite_getSubsite_Results_TypeID = 0x90dec3f1a5d9b591

func NewWebSite_getSubsite_Results(s *capnp.Segment) (WebSite_getSubsite_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getSubsite_Results(st), err
}

func NewRootWebSite_getSubsite_Results(s *capnp.Segment) (WebSite_getSubsite_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_getSubsite_Results(st), err
}

func ReadRootWebSite_getSubsite_Results(msg *capnp.Message) (WebSite_getSubsite_Results, error) {
	root, err := msg.Root()
	return WebSite_getSubsite_Results(root.Struct()), err
}

func (s WebSite_getSubsite_Results) String() string {
	str, _ := text.Marshal(0x90dec3f1a5d9b591, capnp.Struct(s))
	return str
}

func (s WebSite_getSubsite_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_getSubsite_Results) DecodeFromPtr(p capnp.Ptr) WebSite_getSubsite_Results {
	return WebSite_getSubsite_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_getSubsite_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_getSubsite_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_getSubsite_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_getSubsite_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s WebSite_getSubsite_Results) Site() WebSite {
	p, _ := capnp.Struct(s).Ptr(0)
	return WebSite(p.Interface().Client())
}

func (s WebSite_getSubsite_Results) HasSite() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s WebSite_getSubsite_Results) SetSite(v WebSite) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// WebSite_getSubsite_Results_List is a list of WebSite_getSubsite_Results.
type WebSite_getSubsite_Results_List = capnp.StructList[WebSite_getSubsite_Results]

// NewWebSite_getSubsite_Results creates a new list of WebSite_getSubsite_Results.
func NewWebSite_getSubsite_Results_List(s *capnp.Segment, sz int32) (WebSite_getSubsite_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[WebSite_getSubsite_Results](l), err
}

// WebSite_getSubsite_Results_Future is a wrapper for a WebSite_getSubsite_Results promised by a client call.
type WebSite_getSubsite_Results_Future struct{ *capnp.Future }

func (f WebSite_getSubsite_Results_Future) Struct() (WebSite_getSubsite_Results, error) {
	p, err := f.Future.Ptr()
	return WebSite_getSubsite_Results(p.Struct()), err
}
func (p WebSite_getSubsite_Results_Future) Site() WebSite {
	return WebSite(p.Future.Field(0, nil).Client())
}

type WebSite_listResources_Params capnp.Struct

// WebSite_listResources_Params_TypeID is the unique identifier for the type WebSite_listResources_Params.
const WebSite_listResources_Params_TypeID = 0x87a72be8e04db694

func NewWebSite_listResources_Params(s *capnp.Segment) (WebSite_listResources_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return WebSite_listResources_Params(st), err
}

func NewRootWebSite_listResources_Params(s *capnp.Segment) (WebSite_listResources_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return WebSite_listResources_Params(st), err
}

func ReadRootWebSite_listResources_Params(msg *capnp.Message) (WebSite_listResources_Params, error) {
	root, err := msg.Root()
	return WebSite_listResources_Params(root.Struct()), err
}

func (s WebSite_listResources_Params) String() string {
	str, _ := text.Marshal(0x87a72be8e04db694, capnp.Struct(s))
	return str
}

func (s WebSite_listResources_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_listResources_Params) DecodeFromPtr(p capnp.Ptr) WebSite_listResources_Params {
	return WebSite_listResources_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_listResources_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_listResources_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_listResources_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_listResources_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s WebSite_listResources_Params) Shallow() bool {
	return capnp.Struct(s).Bit(0)
}

func (s WebSite_listResources_Params) SetShallow(v bool) {
	capnp.Struct(s).SetBit(0, v)
}

// WebSite_listResources_Params_List is a list of WebSite_listResources_Params.
type WebSite_listResources_Params_List = capnp.StructList[WebSite_listResources_Params]

// NewWebSite_listResources_Params creates a new list of WebSite_listResources_Params.
func NewWebSite_listResources_Params_List(s *capnp.Segment, sz int32) (WebSite_listResources_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[WebSite_listResources_Params](l), err
}

// WebSite_listResources_Params_Future is a wrapper for a WebSite_listResources_Params promised by a client call.
type WebSite_listResources_Params_Future struct{ *capnp.Future }

func (f WebSite_listResources_Params_Future) Struct() (WebSite_listResources_Params, error) {
	p, err := f.Future.Ptr()
	return WebSite_listResources_Params(p.Struct()), err
}

type WebSite_listResources_Results capnp.Struct

// WebSite_listResources_Results_TypeID is the unique identifier for the type WebSite_listResources_Results.
const WebSite_listResources_Results_TypeID = 0xf5e0920223f0b273

func NewWebSite_listResources_Results(s *capnp.Segment) (WebSite_listResources_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_listResources_Results(st), err
}

func NewRootWebSite_listResources_Results(s *capnp.Segment) (WebSite_listResources_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return WebSite_listResources_Results(st), err
}

func ReadRootWebSite_listResources_Results(msg *capnp.Message) (WebSite_listResources_Results, error) {
	root, err := msg.Root()
	return WebSite_listResources_Results(root.Struct()), err
}

func (s WebSite_listResources_Results) String() string {
	str, _ := text.Marshal(0xf5e0920223f0b273, capnp.Struct(s))
	return str
}

func (s WebSite_listResources_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (WebSite_listResources_Results) DecodeFromPtr(p capnp.Ptr) WebSite_listResources_Results {
	return WebSite_listResources_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s WebSite_listResources_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s WebSite_listResources_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s WebSite_listResources_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s WebSite_listResources_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s WebSite_listResources_Results) Names() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return capnp.TextList(p.List()), err
}

func (s WebSite_listResources_Results) HasNames() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s WebSite_listResources_Results) SetNames(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewNames sets the names field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s WebSite_listResources_Results) NewNames(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// WebSite_listResources_Results_List is a list of WebSite_listResources_Results.
type WebSite_listResources_Results_List = capnp.StructList[WebSite_listResources_Results]

// NewWebSite_listResources_Results creates a new list of WebSite_listResources_Results.
func NewWebSite_listResources_Results_List(s *capnp.Segment, sz int32) (WebSite_listResources_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[WebSite_listResources_Results](l), err
}

// WebSite_listResources_Results_Future is a wrapper for a WebSite_listResources_Results promised by a client call.
type WebSite_listResources_Results_Future struct{ *capnp.Future }

func (f WebSite_listResources_Results_Future) Struct() (WebSite_listResources_Results, error) {
	p, err := f.Future.Ptr()
	return WebSite_listResources_Results(p.Struct()), err
}

const schema_d5d3e63bd0a552b6 = "x\xda\xc4U]h\x1c\xd5\x17?\xe7\xcel\xa7\xd9\xee" +
	"$\xbd\xffl\xfem\xc0\x18\xda\xachV\x12\x9a\xc6J" +
	"\x89\xb1\x9b\xb4\xc6\x8fB$\x936T\x03Af\x92\xdb" +
	"\xec\xc0\xec\xce\xba3K\xba\xa1\xf5\xa3\x18*\xa2\x98\x14" +
	"\xc5V\xd1\x07!V_\xb4)6\xa2\xa8P\x8b>\x14" +
	"\xc4\x80T\x10\x13)~!y\xf1\x03\xebc\xaf\xdc\xc9" +
	"\xceG\xd2\xc64O>%{\xe6w\xcf\xf9\xdd{~" +
	"\xe7wv\xdc-w\xc9m\xeao\xff\x03\xa2\xcd\xc76" +
	"\xf0\xb3\xe5\x0bo\xa5\xf7\xbdw\x1c\xb4\x14\"\xcf>Q" +
	"\xdd\xb9g\xa1~\x0e\x06b\x0a\x12\x80\xf6\xa1\xaa\xfd\x08" +
	"XkV\x8d\x01\xf2\x97f{\xaf\xfcz\xe7\x99\x13\xa0" +
	"5 \x02\xc8\x0a@\xfb\xe7U'\x05\xe0rU\x06\x90" +
	"O\x9d\xffv\xfa\x8f\x8b\xdfO\x02m@\x80\x18\x0a\xc0" +
	"\xd5\xaa\xe3\x02\x80q\x01xc8\xbb\xeb\xc1\xa1\x89s" +
	"Q\xc0\xb6\xb8!\x00-\x1e`\xf1|\x8db\xbf\xe6\\" +
	"\x8c\x02z\xe3\xcf\x09\xc0\x90\x07\x98mz{\xf3b\xf6" +
	"\xbb\x0a\xc0\xa3p!\xfe\x19\x82\xcc\xef{e\xebB\x9d" +
	"\xd5\xf9E\xe5(\x11\x9ff\xe2^\xf1O\xe2\x82~p" +
	"9A\x9f\x8f5\xedy\xea\x81K\xf3\x0b\x10\x8b\x09d" +
	"\xfd\xa6\xedX\xdb\xbcI\xfc{\xdb\xa6F\x04\xe4\xfa\\" +
	"\xf1\xc8Oie>R\xa991\xe8U:\xfc\xd0\x07" +
	"\xf7N}:\x1f%Y\x97\x18\x17\x95\xb6%\x04\xc9 " +
	"7\xad\x93\xf8l\xff\xf4\xdc=\xbf|}\x19\x00k\xbb" +
	"\x13\x8b\xb5\xbd\x89-\x00\xed\x03\x89\x13X;\xa4*\x00" +
	"\xfc\xefw\xba\xd3\xe3m\xef\xfe\x10)\xd4\xa3\x8e\x8bB" +
	"\xce\xb9\xdf\x9b\xc8\xc9+W\xa3\x85\xda\xd4WE\xa1n" +
	"U\x14\xfa\xeb\xe8\xadg\xbf\xd9\xf7\xffkQ\xc0\xe3\xaa" +
	"w\xe7c\x1e\xc0H\xa6>\xfe\xa8s7\x8f\x02^W" +
	"/\x09\xc0\x8c\x9a\x01\x0e\x1f\xf21f\xb4\x14J\x86%" +
	"\x9bN\xd6\xcc\x8f\xb6\x0e\xeb\x85|\xa1\xe3\x103\x0e\x98" +
	".k\xed\xc9\xbb\xa6[n5\xec\x912\x80\xb6Q\x92" +
	"o\xe1\\J\xa2\x04@\x9bw\x02h)\x09\xb5\x1d\x04" +
	"\x1b\xf0\x9a\x08\xcb\x00\xb4%\x0d\xa0\xdd!\xa1v\x17\xc1" +
	"F\xa3\xec2\x07U \xa8\x02\xd6\x18\x96m \xe5/" +
	"\xd6O\x0e\x9d\xb9}\xd7\xcf\x00\x88T<W\x85A\xec" +
	"\x86\x0c,\xd3q\xfb\x99c\x97\x8a\xc3\xccI\xf5\xe9E" +
	"=\x87\x8e&K2\x80\x8c\x00T\xdd\xeb\x11C-I" +
	"\xf0I'\xab[\x96=\x86\x08\x04q\xcd\xd4\xa3\xcc=" +
	"P2\x1c\xd3e\xa9~\xe6\x94,\xd7\x81h\xe2t\x98" +
	"\xb8F\x80\x90\x86\x9d]A]^-\xff@\xd1\xf2r" +
	"+\x96\xeb\xac\x96\xbb\xa0\xbbYL\x00\xc1\xc4\xcd0\xf6" +
	":b2'\xa0\xbc\x8c\xf3~\x00-!\xa1\xf6\x08A" +
	"\xce*H\x00@\xcaOOm?\xf5\xfe\xc0\x9f\x8b\x00" +
	"\xd0\x85\x14\x1b5\x99`4Hq\x8b&#\"\xf6I" +
	"\x88\xd5\xe0\xfd\xd9\x1c\x0e\xcd\x8a\x0b'V\xa3\xf7\xb0\xed" +
	"\xdeo\x97\xf2#\x01M\xafc\x0e\xf8\x07ox\xaeT" +
	"\xb0l}d\xafe\x1ba#6\x06\x97jN\x87B" +
	"\xa3\x88Ia>\xb4\xa5#\x94\xd9*\xc2\xca8n\x91" +
	"\xe99\xa4\xfc\xb1\x1f\xbfj\x1e\xdb}\xe8\xcb\x95\xb7\x90" +
	"V\xd3\xbcb\xba\xe5>D-\x19\x908&^\xf6\xa8" +
	"\x84\xda\xb3\x11\x12\x13\"\xf8\x8c\x84\xda$AJHR" +
	"x&}A\x04\x9f\x97P;E\x10%\xc4\xd0c\xe9" +
	"\xcbi T\x96\x93\x18\x13\x19\x07\xc3\x8c<g\xe6\xd8" +
	"\xc1r\x81\x89^\xf9R\xb0\xf4\xfchI\x1f]\x16c" +
	"\xf9a{\xc4\xcc\x8fFb5b8y\x91\x8d\x98E" +
	"6\xec\x82t\xd0\xbeNL\xff*O\xd1 )\xe7\xac" +
	"\x0d\xf6g%\xb3\xd4\xd2\xa8\xec:B9g\x0aEv" +
	"\xd8<r\x1d\x07\xb22m\x8d\xc8+$\x17\x8a\x8cb" +
	"Gf\xc9q\xb4\xadR\x0c 0a\xf47\x07\x9d\xe9" +
	"\x00B\xa7\x15\x0c\xcd\x0f\xfd\xa5AO\x1b@\xe8\x94\x82" +
	"R\xb0&\xd07@:\xf1&\x10\xfa\xb4\x82r\xe0\xb7" +
	"\xe8o\x0cZ\x1a\x04Bs\x0a\xc6\x02kG\x7f\x95Q" +
	"]|{TA\x12\xac?\xf4m\x99\xf6\x16\x81\xd0\x1e" +
	"%\xb3\xf4\x90]\xc8\xfd\xf1\x04\xc5d\xce\xd2oo\x1e" +
	"\xd0\x1f\x88J\xdc\xd7;H\xb6\xb1\x04\xf3\xde\x16$\x97" +
	"u!\xf7\x1d\x0f\x1a=\xcf\xeb\xc2>\\\xab\x95\x91\x01" +
	"\xaatg]\xae\xea\x0d\x9d\xb4\xdc\xa1vVZ\x9a\"" +
	"\xd8\x98\xd7s\xcc\xf1MA4\xb6z]NU\xb1\x80" +
	"u\xf9\xdf\x86\x9b6\x98\xff\xc2\x07\xff\x09\x00\x00\xff\xff" +
	"\x13\x0f\x9a\""

func init() {
	schemas.Register(schema_d5d3e63bd0a552b6,
		0x82af432aa6c179b0,
		0x87a72be8e04db694,
		0x90dec3f1a5d9b591,
		0xb2855d483568639e,
		0xc3739b6f070fb5ea,
		0xc3db68ea10a823b6,
		0xc63c6c15dd189744,
		0xd019dd3e3c0e7e68,
		0xdc072ae47872d061,
		0xdcbe913db7496644,
		0xdddcca47803e2377,
		0xe2ae317a2a41a9f6,
		0xf5e0920223f0b273,
		0xfe1643d6b01e7cf4,
		0xff383cbabc241462)
}
