// Code generated by capnpc-go. DO NOT EDIT.

package supervisor

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	fc "capnproto.org/go/capnp/v3/flowcontrol"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	persistent "capnproto.org/go/capnp/v3/std/capnp/persistent"
	context "context"
	fmt "fmt"
	strconv "strconv"
	activity "zenhack.net/go/sandstorm/capnp/activity"
	grain "zenhack.net/go/sandstorm/capnp/grain"
	identity "zenhack.net/go/sandstorm/capnp/identity"
	util "zenhack.net/go/sandstorm/capnp/util"
)

type Supervisor capnp.Client

// Supervisor_TypeID is the unique identifier for the type Supervisor.
const Supervisor_TypeID = 0x9951c12163385530

func (c Supervisor) GetMainView(ctx context.Context, params func(Supervisor_getMainView_Params) error) (Supervisor_getMainView_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "getMainView",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Supervisor_getMainView_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Supervisor_getMainView_Results_Future{Future: ans.Future()}, release
}
func (c Supervisor) KeepAlive(ctx context.Context, params func(Supervisor_keepAlive_Params) error) (Supervisor_keepAlive_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      1,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "keepAlive",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Supervisor_keepAlive_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Supervisor_keepAlive_Results_Future{Future: ans.Future()}, release
}
func (c Supervisor) Shutdown(ctx context.Context, params func(Supervisor_shutdown_Params) error) (Supervisor_shutdown_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      2,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "shutdown",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Supervisor_shutdown_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Supervisor_shutdown_Results_Future{Future: ans.Future()}, release
}
func (c Supervisor) ObsoleteGetGrainSize(ctx context.Context, params func(Supervisor_obsoleteGetGrainSize_Params) error) (Supervisor_obsoleteGetGrainSize_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      3,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "obsoleteGetGrainSize",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Supervisor_obsoleteGetGrainSize_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Supervisor_obsoleteGetGrainSize_Results_Future{Future: ans.Future()}, release
}
func (c Supervisor) ObsoleteGetGrainSizeWhenDifferent(ctx context.Context, params func(Supervisor_obsoleteGetGrainSizeWhenDifferent_Params) error) (Supervisor_obsoleteGetGrainSizeWhenDifferent_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      4,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "obsoleteGetGrainSizeWhenDifferent",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Supervisor_obsoleteGetGrainSizeWhenDifferent_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Results_Future{Future: ans.Future()}, release
}
func (c Supervisor) Restore(ctx context.Context, params func(Supervisor_restore_Params) error) (Supervisor_restore_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      5,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "restore",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Supervisor_restore_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Supervisor_restore_Results_Future{Future: ans.Future()}, release
}
func (c Supervisor) Drop(ctx context.Context, params func(Supervisor_drop_Params) error) (Supervisor_drop_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      6,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "drop",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Supervisor_drop_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Supervisor_drop_Results_Future{Future: ans.Future()}, release
}
func (c Supervisor) WatchLog(ctx context.Context, params func(Supervisor_watchLog_Params) error) (Supervisor_watchLog_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      7,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "watchLog",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Supervisor_watchLog_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Supervisor_watchLog_Results_Future{Future: ans.Future()}, release
}
func (c Supervisor) SyncStorage(ctx context.Context, params func(Supervisor_syncStorage_Params) error) (Supervisor_syncStorage_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      8,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "syncStorage",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Supervisor_syncStorage_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Supervisor_syncStorage_Results_Future{Future: ans.Future()}, release
}
func (c Supervisor) GetWwwFileHack(ctx context.Context, params func(Supervisor_getWwwFileHack_Params) error) (Supervisor_getWwwFileHack_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      9,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "getWwwFileHack",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Supervisor_getWwwFileHack_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return Supervisor_getWwwFileHack_Results_Future{Future: ans.Future()}, release
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c Supervisor) String() string {
	return fmt.Sprintf("%T(%v)", c, capnp.Client(c))
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c Supervisor) AddRef() Supervisor {
	return Supervisor(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c Supervisor) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c Supervisor) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c Supervisor) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (Supervisor) DecodeFromPtr(p capnp.Ptr) Supervisor {
	return Supervisor(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c Supervisor) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c Supervisor) IsSame(other Supervisor) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c Supervisor) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c Supervisor) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
} // A Supervisor_Server is a Supervisor with a local implementation.
type Supervisor_Server interface {
	GetMainView(context.Context, Supervisor_getMainView) error

	KeepAlive(context.Context, Supervisor_keepAlive) error

	Shutdown(context.Context, Supervisor_shutdown) error

	ObsoleteGetGrainSize(context.Context, Supervisor_obsoleteGetGrainSize) error

	ObsoleteGetGrainSizeWhenDifferent(context.Context, Supervisor_obsoleteGetGrainSizeWhenDifferent) error

	Restore(context.Context, Supervisor_restore) error

	Drop(context.Context, Supervisor_drop) error

	WatchLog(context.Context, Supervisor_watchLog) error

	SyncStorage(context.Context, Supervisor_syncStorage) error

	GetWwwFileHack(context.Context, Supervisor_getWwwFileHack) error
}

// Supervisor_NewServer creates a new Server from an implementation of Supervisor_Server.
func Supervisor_NewServer(s Supervisor_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Supervisor_Methods(nil, s), s, c)
}

// Supervisor_ServerToClient creates a new Client from an implementation of Supervisor_Server.
// The caller is responsible for calling Release on the returned Client.
func Supervisor_ServerToClient(s Supervisor_Server) Supervisor {
	return Supervisor(capnp.NewClient(Supervisor_NewServer(s)))
}

// Supervisor_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Supervisor_Methods(methods []server.Method, s Supervisor_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 10)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "getMainView",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetMainView(ctx, Supervisor_getMainView{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      1,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "keepAlive",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.KeepAlive(ctx, Supervisor_keepAlive{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      2,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "shutdown",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Shutdown(ctx, Supervisor_shutdown{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      3,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "obsoleteGetGrainSize",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGetGrainSize(ctx, Supervisor_obsoleteGetGrainSize{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      4,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "obsoleteGetGrainSizeWhenDifferent",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGetGrainSizeWhenDifferent(ctx, Supervisor_obsoleteGetGrainSizeWhenDifferent{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      5,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "restore",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Restore(ctx, Supervisor_restore{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      6,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "drop",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Drop(ctx, Supervisor_drop{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      7,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "watchLog",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.WatchLog(ctx, Supervisor_watchLog{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      8,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "syncStorage",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SyncStorage(ctx, Supervisor_syncStorage{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9951c12163385530,
			MethodID:      9,
			InterfaceName: "supervisor.capnp:Supervisor",
			MethodName:    "getWwwFileHack",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetWwwFileHack(ctx, Supervisor_getWwwFileHack{call})
		},
	})

	return methods
}

// Supervisor_getMainView holds the state for a server call to Supervisor.getMainView.
// See server.Call for documentation.
type Supervisor_getMainView struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Supervisor_getMainView) Args() Supervisor_getMainView_Params {
	return Supervisor_getMainView_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Supervisor_getMainView) AllocResults() (Supervisor_getMainView_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_getMainView_Results(r), err
}

// Supervisor_keepAlive holds the state for a server call to Supervisor.keepAlive.
// See server.Call for documentation.
type Supervisor_keepAlive struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Supervisor_keepAlive) Args() Supervisor_keepAlive_Params {
	return Supervisor_keepAlive_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Supervisor_keepAlive) AllocResults() (Supervisor_keepAlive_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_keepAlive_Results(r), err
}

// Supervisor_shutdown holds the state for a server call to Supervisor.shutdown.
// See server.Call for documentation.
type Supervisor_shutdown struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Supervisor_shutdown) Args() Supervisor_shutdown_Params {
	return Supervisor_shutdown_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Supervisor_shutdown) AllocResults() (Supervisor_shutdown_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_shutdown_Results(r), err
}

// Supervisor_obsoleteGetGrainSize holds the state for a server call to Supervisor.obsoleteGetGrainSize.
// See server.Call for documentation.
type Supervisor_obsoleteGetGrainSize struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Supervisor_obsoleteGetGrainSize) Args() Supervisor_obsoleteGetGrainSize_Params {
	return Supervisor_obsoleteGetGrainSize_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Supervisor_obsoleteGetGrainSize) AllocResults() (Supervisor_obsoleteGetGrainSize_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Supervisor_obsoleteGetGrainSize_Results(r), err
}

// Supervisor_obsoleteGetGrainSizeWhenDifferent holds the state for a server call to Supervisor.obsoleteGetGrainSizeWhenDifferent.
// See server.Call for documentation.
type Supervisor_obsoleteGetGrainSizeWhenDifferent struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Supervisor_obsoleteGetGrainSizeWhenDifferent) Args() Supervisor_obsoleteGetGrainSizeWhenDifferent_Params {
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Supervisor_obsoleteGetGrainSizeWhenDifferent) AllocResults() (Supervisor_obsoleteGetGrainSizeWhenDifferent_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Results(r), err
}

// Supervisor_restore holds the state for a server call to Supervisor.restore.
// See server.Call for documentation.
type Supervisor_restore struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Supervisor_restore) Args() Supervisor_restore_Params {
	return Supervisor_restore_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Supervisor_restore) AllocResults() (Supervisor_restore_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_restore_Results(r), err
}

// Supervisor_drop holds the state for a server call to Supervisor.drop.
// See server.Call for documentation.
type Supervisor_drop struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Supervisor_drop) Args() Supervisor_drop_Params {
	return Supervisor_drop_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Supervisor_drop) AllocResults() (Supervisor_drop_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_drop_Results(r), err
}

// Supervisor_watchLog holds the state for a server call to Supervisor.watchLog.
// See server.Call for documentation.
type Supervisor_watchLog struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Supervisor_watchLog) Args() Supervisor_watchLog_Params {
	return Supervisor_watchLog_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Supervisor_watchLog) AllocResults() (Supervisor_watchLog_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_watchLog_Results(r), err
}

// Supervisor_syncStorage holds the state for a server call to Supervisor.syncStorage.
// See server.Call for documentation.
type Supervisor_syncStorage struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Supervisor_syncStorage) Args() Supervisor_syncStorage_Params {
	return Supervisor_syncStorage_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Supervisor_syncStorage) AllocResults() (Supervisor_syncStorage_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_syncStorage_Results(r), err
}

// Supervisor_getWwwFileHack holds the state for a server call to Supervisor.getWwwFileHack.
// See server.Call for documentation.
type Supervisor_getWwwFileHack struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Supervisor_getWwwFileHack) Args() Supervisor_getWwwFileHack_Params {
	return Supervisor_getWwwFileHack_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c Supervisor_getWwwFileHack) AllocResults() (Supervisor_getWwwFileHack_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Supervisor_getWwwFileHack_Results(r), err
}

// Supervisor_List is a list of Supervisor.
type Supervisor_List = capnp.CapList[Supervisor]

// NewSupervisor creates a new list of Supervisor.
func NewSupervisor_List(s *capnp.Segment, sz int32) (Supervisor_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[Supervisor](l), err
}

type Supervisor_WwwFileStatus uint16

// Supervisor_WwwFileStatus_TypeID is the unique identifier for the type Supervisor_WwwFileStatus.
const Supervisor_WwwFileStatus_TypeID = 0x85ccf31fc4aff09c

// Values of Supervisor_WwwFileStatus.
const (
	Supervisor_WwwFileStatus_file      Supervisor_WwwFileStatus = 0
	Supervisor_WwwFileStatus_directory Supervisor_WwwFileStatus = 1
	Supervisor_WwwFileStatus_notFound  Supervisor_WwwFileStatus = 2
)

// String returns the enum's constant name.
func (c Supervisor_WwwFileStatus) String() string {
	switch c {
	case Supervisor_WwwFileStatus_file:
		return "file"
	case Supervisor_WwwFileStatus_directory:
		return "directory"
	case Supervisor_WwwFileStatus_notFound:
		return "notFound"

	default:
		return ""
	}
}

// Supervisor_WwwFileStatusFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Supervisor_WwwFileStatusFromString(c string) Supervisor_WwwFileStatus {
	switch c {
	case "file":
		return Supervisor_WwwFileStatus_file
	case "directory":
		return Supervisor_WwwFileStatus_directory
	case "notFound":
		return Supervisor_WwwFileStatus_notFound

	default:
		return 0
	}
}

type Supervisor_WwwFileStatus_List = capnp.EnumList[Supervisor_WwwFileStatus]

func NewSupervisor_WwwFileStatus_List(s *capnp.Segment, sz int32) (Supervisor_WwwFileStatus_List, error) {
	return capnp.NewEnumList[Supervisor_WwwFileStatus](s, sz)
}

type Supervisor_getMainView_Params capnp.Struct

// Supervisor_getMainView_Params_TypeID is the unique identifier for the type Supervisor_getMainView_Params.
const Supervisor_getMainView_Params_TypeID = 0xba19fd491deeb222

func NewSupervisor_getMainView_Params(s *capnp.Segment) (Supervisor_getMainView_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_getMainView_Params(st), err
}

func NewRootSupervisor_getMainView_Params(s *capnp.Segment) (Supervisor_getMainView_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_getMainView_Params(st), err
}

func ReadRootSupervisor_getMainView_Params(msg *capnp.Message) (Supervisor_getMainView_Params, error) {
	root, err := msg.Root()
	return Supervisor_getMainView_Params(root.Struct()), err
}

func (s Supervisor_getMainView_Params) String() string {
	str, _ := text.Marshal(0xba19fd491deeb222, capnp.Struct(s))
	return str
}

func (s Supervisor_getMainView_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_getMainView_Params) DecodeFromPtr(p capnp.Ptr) Supervisor_getMainView_Params {
	return Supervisor_getMainView_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_getMainView_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_getMainView_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_getMainView_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_getMainView_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Supervisor_getMainView_Params_List is a list of Supervisor_getMainView_Params.
type Supervisor_getMainView_Params_List = capnp.StructList[Supervisor_getMainView_Params]

// NewSupervisor_getMainView_Params creates a new list of Supervisor_getMainView_Params.
func NewSupervisor_getMainView_Params_List(s *capnp.Segment, sz int32) (Supervisor_getMainView_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_getMainView_Params](l), err
}

// Supervisor_getMainView_Params_Future is a wrapper for a Supervisor_getMainView_Params promised by a client call.
type Supervisor_getMainView_Params_Future struct{ *capnp.Future }

func (f Supervisor_getMainView_Params_Future) Struct() (Supervisor_getMainView_Params, error) {
	p, err := f.Future.Ptr()
	return Supervisor_getMainView_Params(p.Struct()), err
}

type Supervisor_getMainView_Results capnp.Struct

// Supervisor_getMainView_Results_TypeID is the unique identifier for the type Supervisor_getMainView_Results.
const Supervisor_getMainView_Results_TypeID = 0x88abdb347bc63d0f

func NewSupervisor_getMainView_Results(s *capnp.Segment) (Supervisor_getMainView_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_getMainView_Results(st), err
}

func NewRootSupervisor_getMainView_Results(s *capnp.Segment) (Supervisor_getMainView_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_getMainView_Results(st), err
}

func ReadRootSupervisor_getMainView_Results(msg *capnp.Message) (Supervisor_getMainView_Results, error) {
	root, err := msg.Root()
	return Supervisor_getMainView_Results(root.Struct()), err
}

func (s Supervisor_getMainView_Results) String() string {
	str, _ := text.Marshal(0x88abdb347bc63d0f, capnp.Struct(s))
	return str
}

func (s Supervisor_getMainView_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_getMainView_Results) DecodeFromPtr(p capnp.Ptr) Supervisor_getMainView_Results {
	return Supervisor_getMainView_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_getMainView_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_getMainView_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_getMainView_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_getMainView_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_getMainView_Results) View() grain.UiView {
	p, _ := capnp.Struct(s).Ptr(0)
	return grain.UiView(p.Interface().Client())
}

func (s Supervisor_getMainView_Results) HasView() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Supervisor_getMainView_Results) SetView(v grain.UiView) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// Supervisor_getMainView_Results_List is a list of Supervisor_getMainView_Results.
type Supervisor_getMainView_Results_List = capnp.StructList[Supervisor_getMainView_Results]

// NewSupervisor_getMainView_Results creates a new list of Supervisor_getMainView_Results.
func NewSupervisor_getMainView_Results_List(s *capnp.Segment, sz int32) (Supervisor_getMainView_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Supervisor_getMainView_Results](l), err
}

// Supervisor_getMainView_Results_Future is a wrapper for a Supervisor_getMainView_Results promised by a client call.
type Supervisor_getMainView_Results_Future struct{ *capnp.Future }

func (f Supervisor_getMainView_Results_Future) Struct() (Supervisor_getMainView_Results, error) {
	p, err := f.Future.Ptr()
	return Supervisor_getMainView_Results(p.Struct()), err
}
func (p Supervisor_getMainView_Results_Future) View() grain.UiView {
	return grain.UiView(p.Future.Field(0, nil).Client())
}

type Supervisor_keepAlive_Params capnp.Struct

// Supervisor_keepAlive_Params_TypeID is the unique identifier for the type Supervisor_keepAlive_Params.
const Supervisor_keepAlive_Params_TypeID = 0xe4a4f650ea454237

func NewSupervisor_keepAlive_Params(s *capnp.Segment) (Supervisor_keepAlive_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_keepAlive_Params(st), err
}

func NewRootSupervisor_keepAlive_Params(s *capnp.Segment) (Supervisor_keepAlive_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_keepAlive_Params(st), err
}

func ReadRootSupervisor_keepAlive_Params(msg *capnp.Message) (Supervisor_keepAlive_Params, error) {
	root, err := msg.Root()
	return Supervisor_keepAlive_Params(root.Struct()), err
}

func (s Supervisor_keepAlive_Params) String() string {
	str, _ := text.Marshal(0xe4a4f650ea454237, capnp.Struct(s))
	return str
}

func (s Supervisor_keepAlive_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_keepAlive_Params) DecodeFromPtr(p capnp.Ptr) Supervisor_keepAlive_Params {
	return Supervisor_keepAlive_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_keepAlive_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_keepAlive_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_keepAlive_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_keepAlive_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_keepAlive_Params) Core() SandstormCore {
	p, _ := capnp.Struct(s).Ptr(0)
	return SandstormCore(p.Interface().Client())
}

func (s Supervisor_keepAlive_Params) HasCore() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Supervisor_keepAlive_Params) SetCore(v SandstormCore) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// Supervisor_keepAlive_Params_List is a list of Supervisor_keepAlive_Params.
type Supervisor_keepAlive_Params_List = capnp.StructList[Supervisor_keepAlive_Params]

// NewSupervisor_keepAlive_Params creates a new list of Supervisor_keepAlive_Params.
func NewSupervisor_keepAlive_Params_List(s *capnp.Segment, sz int32) (Supervisor_keepAlive_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Supervisor_keepAlive_Params](l), err
}

// Supervisor_keepAlive_Params_Future is a wrapper for a Supervisor_keepAlive_Params promised by a client call.
type Supervisor_keepAlive_Params_Future struct{ *capnp.Future }

func (f Supervisor_keepAlive_Params_Future) Struct() (Supervisor_keepAlive_Params, error) {
	p, err := f.Future.Ptr()
	return Supervisor_keepAlive_Params(p.Struct()), err
}
func (p Supervisor_keepAlive_Params_Future) Core() SandstormCore {
	return SandstormCore(p.Future.Field(0, nil).Client())
}

type Supervisor_keepAlive_Results capnp.Struct

// Supervisor_keepAlive_Results_TypeID is the unique identifier for the type Supervisor_keepAlive_Results.
const Supervisor_keepAlive_Results_TypeID = 0xa0b4085080573e77

func NewSupervisor_keepAlive_Results(s *capnp.Segment) (Supervisor_keepAlive_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_keepAlive_Results(st), err
}

func NewRootSupervisor_keepAlive_Results(s *capnp.Segment) (Supervisor_keepAlive_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_keepAlive_Results(st), err
}

func ReadRootSupervisor_keepAlive_Results(msg *capnp.Message) (Supervisor_keepAlive_Results, error) {
	root, err := msg.Root()
	return Supervisor_keepAlive_Results(root.Struct()), err
}

func (s Supervisor_keepAlive_Results) String() string {
	str, _ := text.Marshal(0xa0b4085080573e77, capnp.Struct(s))
	return str
}

func (s Supervisor_keepAlive_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_keepAlive_Results) DecodeFromPtr(p capnp.Ptr) Supervisor_keepAlive_Results {
	return Supervisor_keepAlive_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_keepAlive_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_keepAlive_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_keepAlive_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_keepAlive_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Supervisor_keepAlive_Results_List is a list of Supervisor_keepAlive_Results.
type Supervisor_keepAlive_Results_List = capnp.StructList[Supervisor_keepAlive_Results]

// NewSupervisor_keepAlive_Results creates a new list of Supervisor_keepAlive_Results.
func NewSupervisor_keepAlive_Results_List(s *capnp.Segment, sz int32) (Supervisor_keepAlive_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_keepAlive_Results](l), err
}

// Supervisor_keepAlive_Results_Future is a wrapper for a Supervisor_keepAlive_Results promised by a client call.
type Supervisor_keepAlive_Results_Future struct{ *capnp.Future }

func (f Supervisor_keepAlive_Results_Future) Struct() (Supervisor_keepAlive_Results, error) {
	p, err := f.Future.Ptr()
	return Supervisor_keepAlive_Results(p.Struct()), err
}

type Supervisor_shutdown_Params capnp.Struct

// Supervisor_shutdown_Params_TypeID is the unique identifier for the type Supervisor_shutdown_Params.
const Supervisor_shutdown_Params_TypeID = 0xd597c8d788fec5df

func NewSupervisor_shutdown_Params(s *capnp.Segment) (Supervisor_shutdown_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_shutdown_Params(st), err
}

func NewRootSupervisor_shutdown_Params(s *capnp.Segment) (Supervisor_shutdown_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_shutdown_Params(st), err
}

func ReadRootSupervisor_shutdown_Params(msg *capnp.Message) (Supervisor_shutdown_Params, error) {
	root, err := msg.Root()
	return Supervisor_shutdown_Params(root.Struct()), err
}

func (s Supervisor_shutdown_Params) String() string {
	str, _ := text.Marshal(0xd597c8d788fec5df, capnp.Struct(s))
	return str
}

func (s Supervisor_shutdown_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_shutdown_Params) DecodeFromPtr(p capnp.Ptr) Supervisor_shutdown_Params {
	return Supervisor_shutdown_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_shutdown_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_shutdown_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_shutdown_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_shutdown_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Supervisor_shutdown_Params_List is a list of Supervisor_shutdown_Params.
type Supervisor_shutdown_Params_List = capnp.StructList[Supervisor_shutdown_Params]

// NewSupervisor_shutdown_Params creates a new list of Supervisor_shutdown_Params.
func NewSupervisor_shutdown_Params_List(s *capnp.Segment, sz int32) (Supervisor_shutdown_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_shutdown_Params](l), err
}

// Supervisor_shutdown_Params_Future is a wrapper for a Supervisor_shutdown_Params promised by a client call.
type Supervisor_shutdown_Params_Future struct{ *capnp.Future }

func (f Supervisor_shutdown_Params_Future) Struct() (Supervisor_shutdown_Params, error) {
	p, err := f.Future.Ptr()
	return Supervisor_shutdown_Params(p.Struct()), err
}

type Supervisor_shutdown_Results capnp.Struct

// Supervisor_shutdown_Results_TypeID is the unique identifier for the type Supervisor_shutdown_Results.
const Supervisor_shutdown_Results_TypeID = 0xcb7ee0fa69cd6e70

func NewSupervisor_shutdown_Results(s *capnp.Segment) (Supervisor_shutdown_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_shutdown_Results(st), err
}

func NewRootSupervisor_shutdown_Results(s *capnp.Segment) (Supervisor_shutdown_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_shutdown_Results(st), err
}

func ReadRootSupervisor_shutdown_Results(msg *capnp.Message) (Supervisor_shutdown_Results, error) {
	root, err := msg.Root()
	return Supervisor_shutdown_Results(root.Struct()), err
}

func (s Supervisor_shutdown_Results) String() string {
	str, _ := text.Marshal(0xcb7ee0fa69cd6e70, capnp.Struct(s))
	return str
}

func (s Supervisor_shutdown_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_shutdown_Results) DecodeFromPtr(p capnp.Ptr) Supervisor_shutdown_Results {
	return Supervisor_shutdown_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_shutdown_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_shutdown_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_shutdown_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_shutdown_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Supervisor_shutdown_Results_List is a list of Supervisor_shutdown_Results.
type Supervisor_shutdown_Results_List = capnp.StructList[Supervisor_shutdown_Results]

// NewSupervisor_shutdown_Results creates a new list of Supervisor_shutdown_Results.
func NewSupervisor_shutdown_Results_List(s *capnp.Segment, sz int32) (Supervisor_shutdown_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_shutdown_Results](l), err
}

// Supervisor_shutdown_Results_Future is a wrapper for a Supervisor_shutdown_Results promised by a client call.
type Supervisor_shutdown_Results_Future struct{ *capnp.Future }

func (f Supervisor_shutdown_Results_Future) Struct() (Supervisor_shutdown_Results, error) {
	p, err := f.Future.Ptr()
	return Supervisor_shutdown_Results(p.Struct()), err
}

type Supervisor_obsoleteGetGrainSize_Params capnp.Struct

// Supervisor_obsoleteGetGrainSize_Params_TypeID is the unique identifier for the type Supervisor_obsoleteGetGrainSize_Params.
const Supervisor_obsoleteGetGrainSize_Params_TypeID = 0xf3e98c16ae117300

func NewSupervisor_obsoleteGetGrainSize_Params(s *capnp.Segment) (Supervisor_obsoleteGetGrainSize_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_obsoleteGetGrainSize_Params(st), err
}

func NewRootSupervisor_obsoleteGetGrainSize_Params(s *capnp.Segment) (Supervisor_obsoleteGetGrainSize_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_obsoleteGetGrainSize_Params(st), err
}

func ReadRootSupervisor_obsoleteGetGrainSize_Params(msg *capnp.Message) (Supervisor_obsoleteGetGrainSize_Params, error) {
	root, err := msg.Root()
	return Supervisor_obsoleteGetGrainSize_Params(root.Struct()), err
}

func (s Supervisor_obsoleteGetGrainSize_Params) String() string {
	str, _ := text.Marshal(0xf3e98c16ae117300, capnp.Struct(s))
	return str
}

func (s Supervisor_obsoleteGetGrainSize_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_obsoleteGetGrainSize_Params) DecodeFromPtr(p capnp.Ptr) Supervisor_obsoleteGetGrainSize_Params {
	return Supervisor_obsoleteGetGrainSize_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_obsoleteGetGrainSize_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_obsoleteGetGrainSize_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_obsoleteGetGrainSize_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_obsoleteGetGrainSize_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Supervisor_obsoleteGetGrainSize_Params_List is a list of Supervisor_obsoleteGetGrainSize_Params.
type Supervisor_obsoleteGetGrainSize_Params_List = capnp.StructList[Supervisor_obsoleteGetGrainSize_Params]

// NewSupervisor_obsoleteGetGrainSize_Params creates a new list of Supervisor_obsoleteGetGrainSize_Params.
func NewSupervisor_obsoleteGetGrainSize_Params_List(s *capnp.Segment, sz int32) (Supervisor_obsoleteGetGrainSize_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_obsoleteGetGrainSize_Params](l), err
}

// Supervisor_obsoleteGetGrainSize_Params_Future is a wrapper for a Supervisor_obsoleteGetGrainSize_Params promised by a client call.
type Supervisor_obsoleteGetGrainSize_Params_Future struct{ *capnp.Future }

func (f Supervisor_obsoleteGetGrainSize_Params_Future) Struct() (Supervisor_obsoleteGetGrainSize_Params, error) {
	p, err := f.Future.Ptr()
	return Supervisor_obsoleteGetGrainSize_Params(p.Struct()), err
}

type Supervisor_obsoleteGetGrainSize_Results capnp.Struct

// Supervisor_obsoleteGetGrainSize_Results_TypeID is the unique identifier for the type Supervisor_obsoleteGetGrainSize_Results.
const Supervisor_obsoleteGetGrainSize_Results_TypeID = 0xdc76071bd22f9a4b

func NewSupervisor_obsoleteGetGrainSize_Results(s *capnp.Segment) (Supervisor_obsoleteGetGrainSize_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Supervisor_obsoleteGetGrainSize_Results(st), err
}

func NewRootSupervisor_obsoleteGetGrainSize_Results(s *capnp.Segment) (Supervisor_obsoleteGetGrainSize_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Supervisor_obsoleteGetGrainSize_Results(st), err
}

func ReadRootSupervisor_obsoleteGetGrainSize_Results(msg *capnp.Message) (Supervisor_obsoleteGetGrainSize_Results, error) {
	root, err := msg.Root()
	return Supervisor_obsoleteGetGrainSize_Results(root.Struct()), err
}

func (s Supervisor_obsoleteGetGrainSize_Results) String() string {
	str, _ := text.Marshal(0xdc76071bd22f9a4b, capnp.Struct(s))
	return str
}

func (s Supervisor_obsoleteGetGrainSize_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_obsoleteGetGrainSize_Results) DecodeFromPtr(p capnp.Ptr) Supervisor_obsoleteGetGrainSize_Results {
	return Supervisor_obsoleteGetGrainSize_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_obsoleteGetGrainSize_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_obsoleteGetGrainSize_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_obsoleteGetGrainSize_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_obsoleteGetGrainSize_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_obsoleteGetGrainSize_Results) Size() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Supervisor_obsoleteGetGrainSize_Results) SetSize(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

// Supervisor_obsoleteGetGrainSize_Results_List is a list of Supervisor_obsoleteGetGrainSize_Results.
type Supervisor_obsoleteGetGrainSize_Results_List = capnp.StructList[Supervisor_obsoleteGetGrainSize_Results]

// NewSupervisor_obsoleteGetGrainSize_Results creates a new list of Supervisor_obsoleteGetGrainSize_Results.
func NewSupervisor_obsoleteGetGrainSize_Results_List(s *capnp.Segment, sz int32) (Supervisor_obsoleteGetGrainSize_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_obsoleteGetGrainSize_Results](l), err
}

// Supervisor_obsoleteGetGrainSize_Results_Future is a wrapper for a Supervisor_obsoleteGetGrainSize_Results promised by a client call.
type Supervisor_obsoleteGetGrainSize_Results_Future struct{ *capnp.Future }

func (f Supervisor_obsoleteGetGrainSize_Results_Future) Struct() (Supervisor_obsoleteGetGrainSize_Results, error) {
	p, err := f.Future.Ptr()
	return Supervisor_obsoleteGetGrainSize_Results(p.Struct()), err
}

type Supervisor_obsoleteGetGrainSizeWhenDifferent_Params capnp.Struct

// Supervisor_obsoleteGetGrainSizeWhenDifferent_Params_TypeID is the unique identifier for the type Supervisor_obsoleteGetGrainSizeWhenDifferent_Params.
const Supervisor_obsoleteGetGrainSizeWhenDifferent_Params_TypeID = 0xc08fb7eab4fb0e05

func NewSupervisor_obsoleteGetGrainSizeWhenDifferent_Params(s *capnp.Segment) (Supervisor_obsoleteGetGrainSizeWhenDifferent_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Params(st), err
}

func NewRootSupervisor_obsoleteGetGrainSizeWhenDifferent_Params(s *capnp.Segment) (Supervisor_obsoleteGetGrainSizeWhenDifferent_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Params(st), err
}

func ReadRootSupervisor_obsoleteGetGrainSizeWhenDifferent_Params(msg *capnp.Message) (Supervisor_obsoleteGetGrainSizeWhenDifferent_Params, error) {
	root, err := msg.Root()
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Params(root.Struct()), err
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Params) String() string {
	str, _ := text.Marshal(0xc08fb7eab4fb0e05, capnp.Struct(s))
	return str
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_obsoleteGetGrainSizeWhenDifferent_Params) DecodeFromPtr(p capnp.Ptr) Supervisor_obsoleteGetGrainSizeWhenDifferent_Params {
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Params) OldSize() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Params) SetOldSize(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

// Supervisor_obsoleteGetGrainSizeWhenDifferent_Params_List is a list of Supervisor_obsoleteGetGrainSizeWhenDifferent_Params.
type Supervisor_obsoleteGetGrainSizeWhenDifferent_Params_List = capnp.StructList[Supervisor_obsoleteGetGrainSizeWhenDifferent_Params]

// NewSupervisor_obsoleteGetGrainSizeWhenDifferent_Params creates a new list of Supervisor_obsoleteGetGrainSizeWhenDifferent_Params.
func NewSupervisor_obsoleteGetGrainSizeWhenDifferent_Params_List(s *capnp.Segment, sz int32) (Supervisor_obsoleteGetGrainSizeWhenDifferent_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_obsoleteGetGrainSizeWhenDifferent_Params](l), err
}

// Supervisor_obsoleteGetGrainSizeWhenDifferent_Params_Future is a wrapper for a Supervisor_obsoleteGetGrainSizeWhenDifferent_Params promised by a client call.
type Supervisor_obsoleteGetGrainSizeWhenDifferent_Params_Future struct{ *capnp.Future }

func (f Supervisor_obsoleteGetGrainSizeWhenDifferent_Params_Future) Struct() (Supervisor_obsoleteGetGrainSizeWhenDifferent_Params, error) {
	p, err := f.Future.Ptr()
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Params(p.Struct()), err
}

type Supervisor_obsoleteGetGrainSizeWhenDifferent_Results capnp.Struct

// Supervisor_obsoleteGetGrainSizeWhenDifferent_Results_TypeID is the unique identifier for the type Supervisor_obsoleteGetGrainSizeWhenDifferent_Results.
const Supervisor_obsoleteGetGrainSizeWhenDifferent_Results_TypeID = 0xcce106c2fbaa9b04

func NewSupervisor_obsoleteGetGrainSizeWhenDifferent_Results(s *capnp.Segment) (Supervisor_obsoleteGetGrainSizeWhenDifferent_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Results(st), err
}

func NewRootSupervisor_obsoleteGetGrainSizeWhenDifferent_Results(s *capnp.Segment) (Supervisor_obsoleteGetGrainSizeWhenDifferent_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Results(st), err
}

func ReadRootSupervisor_obsoleteGetGrainSizeWhenDifferent_Results(msg *capnp.Message) (Supervisor_obsoleteGetGrainSizeWhenDifferent_Results, error) {
	root, err := msg.Root()
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Results(root.Struct()), err
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Results) String() string {
	str, _ := text.Marshal(0xcce106c2fbaa9b04, capnp.Struct(s))
	return str
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_obsoleteGetGrainSizeWhenDifferent_Results) DecodeFromPtr(p capnp.Ptr) Supervisor_obsoleteGetGrainSizeWhenDifferent_Results {
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Results) Size() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Supervisor_obsoleteGetGrainSizeWhenDifferent_Results) SetSize(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

// Supervisor_obsoleteGetGrainSizeWhenDifferent_Results_List is a list of Supervisor_obsoleteGetGrainSizeWhenDifferent_Results.
type Supervisor_obsoleteGetGrainSizeWhenDifferent_Results_List = capnp.StructList[Supervisor_obsoleteGetGrainSizeWhenDifferent_Results]

// NewSupervisor_obsoleteGetGrainSizeWhenDifferent_Results creates a new list of Supervisor_obsoleteGetGrainSizeWhenDifferent_Results.
func NewSupervisor_obsoleteGetGrainSizeWhenDifferent_Results_List(s *capnp.Segment, sz int32) (Supervisor_obsoleteGetGrainSizeWhenDifferent_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_obsoleteGetGrainSizeWhenDifferent_Results](l), err
}

// Supervisor_obsoleteGetGrainSizeWhenDifferent_Results_Future is a wrapper for a Supervisor_obsoleteGetGrainSizeWhenDifferent_Results promised by a client call.
type Supervisor_obsoleteGetGrainSizeWhenDifferent_Results_Future struct{ *capnp.Future }

func (f Supervisor_obsoleteGetGrainSizeWhenDifferent_Results_Future) Struct() (Supervisor_obsoleteGetGrainSizeWhenDifferent_Results, error) {
	p, err := f.Future.Ptr()
	return Supervisor_obsoleteGetGrainSizeWhenDifferent_Results(p.Struct()), err
}

type Supervisor_restore_Params capnp.Struct

// Supervisor_restore_Params_TypeID is the unique identifier for the type Supervisor_restore_Params.
const Supervisor_restore_Params_TypeID = 0xaae54cb2386e60ab

func NewSupervisor_restore_Params(s *capnp.Segment) (Supervisor_restore_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Supervisor_restore_Params(st), err
}

func NewRootSupervisor_restore_Params(s *capnp.Segment) (Supervisor_restore_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Supervisor_restore_Params(st), err
}

func ReadRootSupervisor_restore_Params(msg *capnp.Message) (Supervisor_restore_Params, error) {
	root, err := msg.Root()
	return Supervisor_restore_Params(root.Struct()), err
}

func (s Supervisor_restore_Params) String() string {
	str, _ := text.Marshal(0xaae54cb2386e60ab, capnp.Struct(s))
	return str
}

func (s Supervisor_restore_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_restore_Params) DecodeFromPtr(p capnp.Ptr) Supervisor_restore_Params {
	return Supervisor_restore_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_restore_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_restore_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_restore_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_restore_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_restore_Params) Ref() (SupervisorObjectId, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SupervisorObjectId(p.Struct()), err
}

func (s Supervisor_restore_Params) HasRef() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Supervisor_restore_Params) SetRef(v SupervisorObjectId) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewRef sets the ref field to a newly
// allocated SupervisorObjectId struct, preferring placement in s's segment.
func (s Supervisor_restore_Params) NewRef() (SupervisorObjectId, error) {
	ss, err := NewSupervisorObjectId(capnp.Struct(s).Segment())
	if err != nil {
		return SupervisorObjectId{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Supervisor_restore_Params) Obsolete() (MembraneRequirement_List, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return MembraneRequirement_List(p.List()), err
}

func (s Supervisor_restore_Params) HasObsolete() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Supervisor_restore_Params) SetObsolete(v MembraneRequirement_List) error {
	return capnp.Struct(s).SetPtr(1, v.ToPtr())
}

// NewObsolete sets the obsolete field to a newly
// allocated MembraneRequirement_List, preferring placement in s's segment.
func (s Supervisor_restore_Params) NewObsolete(n int32) (MembraneRequirement_List, error) {
	l, err := NewMembraneRequirement_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return MembraneRequirement_List{}, err
	}
	err = capnp.Struct(s).SetPtr(1, l.ToPtr())
	return l, err
}
func (s Supervisor_restore_Params) ParentToken() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return []byte(p.Data()), err
}

func (s Supervisor_restore_Params) HasParentToken() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Supervisor_restore_Params) SetParentToken(v []byte) error {
	return capnp.Struct(s).SetData(2, v)
}

// Supervisor_restore_Params_List is a list of Supervisor_restore_Params.
type Supervisor_restore_Params_List = capnp.StructList[Supervisor_restore_Params]

// NewSupervisor_restore_Params creates a new list of Supervisor_restore_Params.
func NewSupervisor_restore_Params_List(s *capnp.Segment, sz int32) (Supervisor_restore_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[Supervisor_restore_Params](l), err
}

// Supervisor_restore_Params_Future is a wrapper for a Supervisor_restore_Params promised by a client call.
type Supervisor_restore_Params_Future struct{ *capnp.Future }

func (f Supervisor_restore_Params_Future) Struct() (Supervisor_restore_Params, error) {
	p, err := f.Future.Ptr()
	return Supervisor_restore_Params(p.Struct()), err
}
func (p Supervisor_restore_Params_Future) Ref() SupervisorObjectId_Future {
	return SupervisorObjectId_Future{Future: p.Future.Field(0, nil)}
}

type Supervisor_restore_Results capnp.Struct

// Supervisor_restore_Results_TypeID is the unique identifier for the type Supervisor_restore_Results.
const Supervisor_restore_Results_TypeID = 0x96fb2fd9e320599f

func NewSupervisor_restore_Results(s *capnp.Segment) (Supervisor_restore_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_restore_Results(st), err
}

func NewRootSupervisor_restore_Results(s *capnp.Segment) (Supervisor_restore_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_restore_Results(st), err
}

func ReadRootSupervisor_restore_Results(msg *capnp.Message) (Supervisor_restore_Results, error) {
	root, err := msg.Root()
	return Supervisor_restore_Results(root.Struct()), err
}

func (s Supervisor_restore_Results) String() string {
	str, _ := text.Marshal(0x96fb2fd9e320599f, capnp.Struct(s))
	return str
}

func (s Supervisor_restore_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_restore_Results) DecodeFromPtr(p capnp.Ptr) Supervisor_restore_Results {
	return Supervisor_restore_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_restore_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_restore_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_restore_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_restore_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_restore_Results) Cap() capnp.Client {
	p, _ := capnp.Struct(s).Ptr(0)
	return p.Interface().Client()
}

func (s Supervisor_restore_Results) HasCap() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Supervisor_restore_Results) SetCap(c capnp.Client) error {
	if !c.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(c))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// Supervisor_restore_Results_List is a list of Supervisor_restore_Results.
type Supervisor_restore_Results_List = capnp.StructList[Supervisor_restore_Results]

// NewSupervisor_restore_Results creates a new list of Supervisor_restore_Results.
func NewSupervisor_restore_Results_List(s *capnp.Segment, sz int32) (Supervisor_restore_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Supervisor_restore_Results](l), err
}

// Supervisor_restore_Results_Future is a wrapper for a Supervisor_restore_Results promised by a client call.
type Supervisor_restore_Results_Future struct{ *capnp.Future }

func (f Supervisor_restore_Results_Future) Struct() (Supervisor_restore_Results, error) {
	p, err := f.Future.Ptr()
	return Supervisor_restore_Results(p.Struct()), err
}
func (p Supervisor_restore_Results_Future) Cap() capnp.Client {
	return p.Future.Field(0, nil).Client()
}

type Supervisor_drop_Params capnp.Struct

// Supervisor_drop_Params_TypeID is the unique identifier for the type Supervisor_drop_Params.
const Supervisor_drop_Params_TypeID = 0xaf3c0d4c9b788c3b

func NewSupervisor_drop_Params(s *capnp.Segment) (Supervisor_drop_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_drop_Params(st), err
}

func NewRootSupervisor_drop_Params(s *capnp.Segment) (Supervisor_drop_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_drop_Params(st), err
}

func ReadRootSupervisor_drop_Params(msg *capnp.Message) (Supervisor_drop_Params, error) {
	root, err := msg.Root()
	return Supervisor_drop_Params(root.Struct()), err
}

func (s Supervisor_drop_Params) String() string {
	str, _ := text.Marshal(0xaf3c0d4c9b788c3b, capnp.Struct(s))
	return str
}

func (s Supervisor_drop_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_drop_Params) DecodeFromPtr(p capnp.Ptr) Supervisor_drop_Params {
	return Supervisor_drop_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_drop_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_drop_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_drop_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_drop_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_drop_Params) Ref() (SupervisorObjectId, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SupervisorObjectId(p.Struct()), err
}

func (s Supervisor_drop_Params) HasRef() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Supervisor_drop_Params) SetRef(v SupervisorObjectId) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewRef sets the ref field to a newly
// allocated SupervisorObjectId struct, preferring placement in s's segment.
func (s Supervisor_drop_Params) NewRef() (SupervisorObjectId, error) {
	ss, err := NewSupervisorObjectId(capnp.Struct(s).Segment())
	if err != nil {
		return SupervisorObjectId{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// Supervisor_drop_Params_List is a list of Supervisor_drop_Params.
type Supervisor_drop_Params_List = capnp.StructList[Supervisor_drop_Params]

// NewSupervisor_drop_Params creates a new list of Supervisor_drop_Params.
func NewSupervisor_drop_Params_List(s *capnp.Segment, sz int32) (Supervisor_drop_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Supervisor_drop_Params](l), err
}

// Supervisor_drop_Params_Future is a wrapper for a Supervisor_drop_Params promised by a client call.
type Supervisor_drop_Params_Future struct{ *capnp.Future }

func (f Supervisor_drop_Params_Future) Struct() (Supervisor_drop_Params, error) {
	p, err := f.Future.Ptr()
	return Supervisor_drop_Params(p.Struct()), err
}
func (p Supervisor_drop_Params_Future) Ref() SupervisorObjectId_Future {
	return SupervisorObjectId_Future{Future: p.Future.Field(0, nil)}
}

type Supervisor_drop_Results capnp.Struct

// Supervisor_drop_Results_TypeID is the unique identifier for the type Supervisor_drop_Results.
const Supervisor_drop_Results_TypeID = 0x80e7bfc1abd2efa7

func NewSupervisor_drop_Results(s *capnp.Segment) (Supervisor_drop_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_drop_Results(st), err
}

func NewRootSupervisor_drop_Results(s *capnp.Segment) (Supervisor_drop_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_drop_Results(st), err
}

func ReadRootSupervisor_drop_Results(msg *capnp.Message) (Supervisor_drop_Results, error) {
	root, err := msg.Root()
	return Supervisor_drop_Results(root.Struct()), err
}

func (s Supervisor_drop_Results) String() string {
	str, _ := text.Marshal(0x80e7bfc1abd2efa7, capnp.Struct(s))
	return str
}

func (s Supervisor_drop_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_drop_Results) DecodeFromPtr(p capnp.Ptr) Supervisor_drop_Results {
	return Supervisor_drop_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_drop_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_drop_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_drop_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_drop_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Supervisor_drop_Results_List is a list of Supervisor_drop_Results.
type Supervisor_drop_Results_List = capnp.StructList[Supervisor_drop_Results]

// NewSupervisor_drop_Results creates a new list of Supervisor_drop_Results.
func NewSupervisor_drop_Results_List(s *capnp.Segment, sz int32) (Supervisor_drop_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_drop_Results](l), err
}

// Supervisor_drop_Results_Future is a wrapper for a Supervisor_drop_Results promised by a client call.
type Supervisor_drop_Results_Future struct{ *capnp.Future }

func (f Supervisor_drop_Results_Future) Struct() (Supervisor_drop_Results, error) {
	p, err := f.Future.Ptr()
	return Supervisor_drop_Results(p.Struct()), err
}

type Supervisor_watchLog_Params capnp.Struct

// Supervisor_watchLog_Params_TypeID is the unique identifier for the type Supervisor_watchLog_Params.
const Supervisor_watchLog_Params_TypeID = 0xc152ab1174b40c0a

func NewSupervisor_watchLog_Params(s *capnp.Segment) (Supervisor_watchLog_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Supervisor_watchLog_Params(st), err
}

func NewRootSupervisor_watchLog_Params(s *capnp.Segment) (Supervisor_watchLog_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Supervisor_watchLog_Params(st), err
}

func ReadRootSupervisor_watchLog_Params(msg *capnp.Message) (Supervisor_watchLog_Params, error) {
	root, err := msg.Root()
	return Supervisor_watchLog_Params(root.Struct()), err
}

func (s Supervisor_watchLog_Params) String() string {
	str, _ := text.Marshal(0xc152ab1174b40c0a, capnp.Struct(s))
	return str
}

func (s Supervisor_watchLog_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_watchLog_Params) DecodeFromPtr(p capnp.Ptr) Supervisor_watchLog_Params {
	return Supervisor_watchLog_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_watchLog_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_watchLog_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_watchLog_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_watchLog_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_watchLog_Params) BacklogAmount() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Supervisor_watchLog_Params) SetBacklogAmount(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Supervisor_watchLog_Params) Stream() util.ByteStream {
	p, _ := capnp.Struct(s).Ptr(0)
	return util.ByteStream(p.Interface().Client())
}

func (s Supervisor_watchLog_Params) HasStream() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Supervisor_watchLog_Params) SetStream(v util.ByteStream) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// Supervisor_watchLog_Params_List is a list of Supervisor_watchLog_Params.
type Supervisor_watchLog_Params_List = capnp.StructList[Supervisor_watchLog_Params]

// NewSupervisor_watchLog_Params creates a new list of Supervisor_watchLog_Params.
func NewSupervisor_watchLog_Params_List(s *capnp.Segment, sz int32) (Supervisor_watchLog_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[Supervisor_watchLog_Params](l), err
}

// Supervisor_watchLog_Params_Future is a wrapper for a Supervisor_watchLog_Params promised by a client call.
type Supervisor_watchLog_Params_Future struct{ *capnp.Future }

func (f Supervisor_watchLog_Params_Future) Struct() (Supervisor_watchLog_Params, error) {
	p, err := f.Future.Ptr()
	return Supervisor_watchLog_Params(p.Struct()), err
}
func (p Supervisor_watchLog_Params_Future) Stream() util.ByteStream {
	return util.ByteStream(p.Future.Field(0, nil).Client())
}

type Supervisor_watchLog_Results capnp.Struct

// Supervisor_watchLog_Results_TypeID is the unique identifier for the type Supervisor_watchLog_Results.
const Supervisor_watchLog_Results_TypeID = 0x98053037c12fa689

func NewSupervisor_watchLog_Results(s *capnp.Segment) (Supervisor_watchLog_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_watchLog_Results(st), err
}

func NewRootSupervisor_watchLog_Results(s *capnp.Segment) (Supervisor_watchLog_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Supervisor_watchLog_Results(st), err
}

func ReadRootSupervisor_watchLog_Results(msg *capnp.Message) (Supervisor_watchLog_Results, error) {
	root, err := msg.Root()
	return Supervisor_watchLog_Results(root.Struct()), err
}

func (s Supervisor_watchLog_Results) String() string {
	str, _ := text.Marshal(0x98053037c12fa689, capnp.Struct(s))
	return str
}

func (s Supervisor_watchLog_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_watchLog_Results) DecodeFromPtr(p capnp.Ptr) Supervisor_watchLog_Results {
	return Supervisor_watchLog_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_watchLog_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_watchLog_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_watchLog_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_watchLog_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_watchLog_Results) Handle() util.Handle {
	p, _ := capnp.Struct(s).Ptr(0)
	return util.Handle(p.Interface().Client())
}

func (s Supervisor_watchLog_Results) HasHandle() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Supervisor_watchLog_Results) SetHandle(v util.Handle) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// Supervisor_watchLog_Results_List is a list of Supervisor_watchLog_Results.
type Supervisor_watchLog_Results_List = capnp.StructList[Supervisor_watchLog_Results]

// NewSupervisor_watchLog_Results creates a new list of Supervisor_watchLog_Results.
func NewSupervisor_watchLog_Results_List(s *capnp.Segment, sz int32) (Supervisor_watchLog_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Supervisor_watchLog_Results](l), err
}

// Supervisor_watchLog_Results_Future is a wrapper for a Supervisor_watchLog_Results promised by a client call.
type Supervisor_watchLog_Results_Future struct{ *capnp.Future }

func (f Supervisor_watchLog_Results_Future) Struct() (Supervisor_watchLog_Results, error) {
	p, err := f.Future.Ptr()
	return Supervisor_watchLog_Results(p.Struct()), err
}
func (p Supervisor_watchLog_Results_Future) Handle() util.Handle {
	return util.Handle(p.Future.Field(0, nil).Client())
}

type Supervisor_syncStorage_Params capnp.Struct

// Supervisor_syncStorage_Params_TypeID is the unique identifier for the type Supervisor_syncStorage_Params.
const Supervisor_syncStorage_Params_TypeID = 0xcf3e8fcfd0506bd0

func NewSupervisor_syncStorage_Params(s *capnp.Segment) (Supervisor_syncStorage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_syncStorage_Params(st), err
}

func NewRootSupervisor_syncStorage_Params(s *capnp.Segment) (Supervisor_syncStorage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_syncStorage_Params(st), err
}

func ReadRootSupervisor_syncStorage_Params(msg *capnp.Message) (Supervisor_syncStorage_Params, error) {
	root, err := msg.Root()
	return Supervisor_syncStorage_Params(root.Struct()), err
}

func (s Supervisor_syncStorage_Params) String() string {
	str, _ := text.Marshal(0xcf3e8fcfd0506bd0, capnp.Struct(s))
	return str
}

func (s Supervisor_syncStorage_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_syncStorage_Params) DecodeFromPtr(p capnp.Ptr) Supervisor_syncStorage_Params {
	return Supervisor_syncStorage_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_syncStorage_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_syncStorage_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_syncStorage_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_syncStorage_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Supervisor_syncStorage_Params_List is a list of Supervisor_syncStorage_Params.
type Supervisor_syncStorage_Params_List = capnp.StructList[Supervisor_syncStorage_Params]

// NewSupervisor_syncStorage_Params creates a new list of Supervisor_syncStorage_Params.
func NewSupervisor_syncStorage_Params_List(s *capnp.Segment, sz int32) (Supervisor_syncStorage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_syncStorage_Params](l), err
}

// Supervisor_syncStorage_Params_Future is a wrapper for a Supervisor_syncStorage_Params promised by a client call.
type Supervisor_syncStorage_Params_Future struct{ *capnp.Future }

func (f Supervisor_syncStorage_Params_Future) Struct() (Supervisor_syncStorage_Params, error) {
	p, err := f.Future.Ptr()
	return Supervisor_syncStorage_Params(p.Struct()), err
}

type Supervisor_syncStorage_Results capnp.Struct

// Supervisor_syncStorage_Results_TypeID is the unique identifier for the type Supervisor_syncStorage_Results.
const Supervisor_syncStorage_Results_TypeID = 0xba8b9f7f3a411a03

func NewSupervisor_syncStorage_Results(s *capnp.Segment) (Supervisor_syncStorage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_syncStorage_Results(st), err
}

func NewRootSupervisor_syncStorage_Results(s *capnp.Segment) (Supervisor_syncStorage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Supervisor_syncStorage_Results(st), err
}

func ReadRootSupervisor_syncStorage_Results(msg *capnp.Message) (Supervisor_syncStorage_Results, error) {
	root, err := msg.Root()
	return Supervisor_syncStorage_Results(root.Struct()), err
}

func (s Supervisor_syncStorage_Results) String() string {
	str, _ := text.Marshal(0xba8b9f7f3a411a03, capnp.Struct(s))
	return str
}

func (s Supervisor_syncStorage_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_syncStorage_Results) DecodeFromPtr(p capnp.Ptr) Supervisor_syncStorage_Results {
	return Supervisor_syncStorage_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_syncStorage_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_syncStorage_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_syncStorage_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_syncStorage_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// Supervisor_syncStorage_Results_List is a list of Supervisor_syncStorage_Results.
type Supervisor_syncStorage_Results_List = capnp.StructList[Supervisor_syncStorage_Results]

// NewSupervisor_syncStorage_Results creates a new list of Supervisor_syncStorage_Results.
func NewSupervisor_syncStorage_Results_List(s *capnp.Segment, sz int32) (Supervisor_syncStorage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_syncStorage_Results](l), err
}

// Supervisor_syncStorage_Results_Future is a wrapper for a Supervisor_syncStorage_Results promised by a client call.
type Supervisor_syncStorage_Results_Future struct{ *capnp.Future }

func (f Supervisor_syncStorage_Results_Future) Struct() (Supervisor_syncStorage_Results, error) {
	p, err := f.Future.Ptr()
	return Supervisor_syncStorage_Results(p.Struct()), err
}

type Supervisor_getWwwFileHack_Params capnp.Struct

// Supervisor_getWwwFileHack_Params_TypeID is the unique identifier for the type Supervisor_getWwwFileHack_Params.
const Supervisor_getWwwFileHack_Params_TypeID = 0xf9c6e362d6fcb22a

func NewSupervisor_getWwwFileHack_Params(s *capnp.Segment) (Supervisor_getWwwFileHack_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Supervisor_getWwwFileHack_Params(st), err
}

func NewRootSupervisor_getWwwFileHack_Params(s *capnp.Segment) (Supervisor_getWwwFileHack_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Supervisor_getWwwFileHack_Params(st), err
}

func ReadRootSupervisor_getWwwFileHack_Params(msg *capnp.Message) (Supervisor_getWwwFileHack_Params, error) {
	root, err := msg.Root()
	return Supervisor_getWwwFileHack_Params(root.Struct()), err
}

func (s Supervisor_getWwwFileHack_Params) String() string {
	str, _ := text.Marshal(0xf9c6e362d6fcb22a, capnp.Struct(s))
	return str
}

func (s Supervisor_getWwwFileHack_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_getWwwFileHack_Params) DecodeFromPtr(p capnp.Ptr) Supervisor_getWwwFileHack_Params {
	return Supervisor_getWwwFileHack_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_getWwwFileHack_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_getWwwFileHack_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_getWwwFileHack_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_getWwwFileHack_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_getWwwFileHack_Params) Path() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Supervisor_getWwwFileHack_Params) HasPath() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Supervisor_getWwwFileHack_Params) PathBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Supervisor_getWwwFileHack_Params) SetPath(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Supervisor_getWwwFileHack_Params) Stream() util.ByteStream {
	p, _ := capnp.Struct(s).Ptr(1)
	return util.ByteStream(p.Interface().Client())
}

func (s Supervisor_getWwwFileHack_Params) HasStream() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Supervisor_getWwwFileHack_Params) SetStream(v util.ByteStream) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(1, in.ToPtr())
}

// Supervisor_getWwwFileHack_Params_List is a list of Supervisor_getWwwFileHack_Params.
type Supervisor_getWwwFileHack_Params_List = capnp.StructList[Supervisor_getWwwFileHack_Params]

// NewSupervisor_getWwwFileHack_Params creates a new list of Supervisor_getWwwFileHack_Params.
func NewSupervisor_getWwwFileHack_Params_List(s *capnp.Segment, sz int32) (Supervisor_getWwwFileHack_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[Supervisor_getWwwFileHack_Params](l), err
}

// Supervisor_getWwwFileHack_Params_Future is a wrapper for a Supervisor_getWwwFileHack_Params promised by a client call.
type Supervisor_getWwwFileHack_Params_Future struct{ *capnp.Future }

func (f Supervisor_getWwwFileHack_Params_Future) Struct() (Supervisor_getWwwFileHack_Params, error) {
	p, err := f.Future.Ptr()
	return Supervisor_getWwwFileHack_Params(p.Struct()), err
}
func (p Supervisor_getWwwFileHack_Params_Future) Stream() util.ByteStream {
	return util.ByteStream(p.Future.Field(1, nil).Client())
}

type Supervisor_getWwwFileHack_Results capnp.Struct

// Supervisor_getWwwFileHack_Results_TypeID is the unique identifier for the type Supervisor_getWwwFileHack_Results.
const Supervisor_getWwwFileHack_Results_TypeID = 0x902651d6de458996

func NewSupervisor_getWwwFileHack_Results(s *capnp.Segment) (Supervisor_getWwwFileHack_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Supervisor_getWwwFileHack_Results(st), err
}

func NewRootSupervisor_getWwwFileHack_Results(s *capnp.Segment) (Supervisor_getWwwFileHack_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Supervisor_getWwwFileHack_Results(st), err
}

func ReadRootSupervisor_getWwwFileHack_Results(msg *capnp.Message) (Supervisor_getWwwFileHack_Results, error) {
	root, err := msg.Root()
	return Supervisor_getWwwFileHack_Results(root.Struct()), err
}

func (s Supervisor_getWwwFileHack_Results) String() string {
	str, _ := text.Marshal(0x902651d6de458996, capnp.Struct(s))
	return str
}

func (s Supervisor_getWwwFileHack_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Supervisor_getWwwFileHack_Results) DecodeFromPtr(p capnp.Ptr) Supervisor_getWwwFileHack_Results {
	return Supervisor_getWwwFileHack_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Supervisor_getWwwFileHack_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Supervisor_getWwwFileHack_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Supervisor_getWwwFileHack_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Supervisor_getWwwFileHack_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Supervisor_getWwwFileHack_Results) Status() Supervisor_WwwFileStatus {
	return Supervisor_WwwFileStatus(capnp.Struct(s).Uint16(0))
}

func (s Supervisor_getWwwFileHack_Results) SetStatus(v Supervisor_WwwFileStatus) {
	capnp.Struct(s).SetUint16(0, uint16(v))
}

// Supervisor_getWwwFileHack_Results_List is a list of Supervisor_getWwwFileHack_Results.
type Supervisor_getWwwFileHack_Results_List = capnp.StructList[Supervisor_getWwwFileHack_Results]

// NewSupervisor_getWwwFileHack_Results creates a new list of Supervisor_getWwwFileHack_Results.
func NewSupervisor_getWwwFileHack_Results_List(s *capnp.Segment, sz int32) (Supervisor_getWwwFileHack_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Supervisor_getWwwFileHack_Results](l), err
}

// Supervisor_getWwwFileHack_Results_Future is a wrapper for a Supervisor_getWwwFileHack_Results promised by a client call.
type Supervisor_getWwwFileHack_Results_Future struct{ *capnp.Future }

func (f Supervisor_getWwwFileHack_Results_Future) Struct() (Supervisor_getWwwFileHack_Results, error) {
	p, err := f.Future.Ptr()
	return Supervisor_getWwwFileHack_Results(p.Struct()), err
}

type SandstormCore capnp.Client

// SandstormCore_TypeID is the unique identifier for the type SandstormCore.
const SandstormCore_TypeID = 0x9ba45778a294b60c

func (c SandstormCore) Restore(ctx context.Context, params func(SandstormCore_restore_Params) error) (SandstormCore_restore_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "restore",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCore_restore_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCore_restore_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCore) MakeToken(ctx context.Context, params func(SandstormCore_makeToken_Params) error) (SandstormCore_makeToken_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      1,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "makeToken",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCore_makeToken_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCore_makeToken_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCore) GetOwnerNotificationTarget(ctx context.Context, params func(SandstormCore_getOwnerNotificationTarget_Params) error) (SandstormCore_getOwnerNotificationTarget_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      2,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "getOwnerNotificationTarget",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCore_getOwnerNotificationTarget_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCore_getOwnerNotificationTarget_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCore) Drop(ctx context.Context, params func(SandstormCore_drop_Params) error) (SandstormCore_drop_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      3,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "drop",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCore_drop_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCore_drop_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCore) ObsoleteCheckRequirements(ctx context.Context, params func(SandstormCore_obsoleteCheckRequirements_Params) error) (SandstormCore_obsoleteCheckRequirements_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      4,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "obsoleteCheckRequirements",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCore_obsoleteCheckRequirements_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCore_obsoleteCheckRequirements_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCore) MakeChildToken(ctx context.Context, params func(SandstormCore_makeChildToken_Params) error) (SandstormCore_makeChildToken_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      5,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "makeChildToken",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCore_makeChildToken_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCore_makeChildToken_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCore) ClaimRequest(ctx context.Context, params func(SandstormCore_claimRequest_Params) error) (SandstormCore_claimRequest_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      6,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "claimRequest",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCore_claimRequest_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCore_claimRequest_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCore) BackgroundActivity(ctx context.Context, params func(SandstormCore_backgroundActivity_Params) error) (SandstormCore_backgroundActivity_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      7,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "backgroundActivity",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCore_backgroundActivity_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCore_backgroundActivity_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCore) ReportGrainSize(ctx context.Context, params func(SandstormCore_reportGrainSize_Params) error) (SandstormCore_reportGrainSize_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      8,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "reportGrainSize",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCore_reportGrainSize_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCore_reportGrainSize_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCore) GetIdentityId(ctx context.Context, params func(SandstormCore_getIdentityId_Params) error) (SandstormCore_getIdentityId_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      9,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "getIdentityId",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SandstormCore_getIdentityId_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCore_getIdentityId_Results_Future{Future: ans.Future()}, release
}
func (c SandstormCore) Schedule(ctx context.Context, params func(grain.ScheduledJob) error) (SandstormCore_schedule_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      10,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "schedule",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 24, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.ScheduledJob(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SandstormCore_schedule_Results_Future{Future: ans.Future()}, release
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c SandstormCore) String() string {
	return fmt.Sprintf("%T(%v)", c, capnp.Client(c))
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c SandstormCore) AddRef() SandstormCore {
	return SandstormCore(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c SandstormCore) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c SandstormCore) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c SandstormCore) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (SandstormCore) DecodeFromPtr(p capnp.Ptr) SandstormCore {
	return SandstormCore(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c SandstormCore) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c SandstormCore) IsSame(other SandstormCore) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c SandstormCore) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c SandstormCore) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
} // A SandstormCore_Server is a SandstormCore with a local implementation.
type SandstormCore_Server interface {
	Restore(context.Context, SandstormCore_restore) error

	MakeToken(context.Context, SandstormCore_makeToken) error

	GetOwnerNotificationTarget(context.Context, SandstormCore_getOwnerNotificationTarget) error

	Drop(context.Context, SandstormCore_drop) error

	ObsoleteCheckRequirements(context.Context, SandstormCore_obsoleteCheckRequirements) error

	MakeChildToken(context.Context, SandstormCore_makeChildToken) error

	ClaimRequest(context.Context, SandstormCore_claimRequest) error

	BackgroundActivity(context.Context, SandstormCore_backgroundActivity) error

	ReportGrainSize(context.Context, SandstormCore_reportGrainSize) error

	GetIdentityId(context.Context, SandstormCore_getIdentityId) error

	Schedule(context.Context, SandstormCore_schedule) error
}

// SandstormCore_NewServer creates a new Server from an implementation of SandstormCore_Server.
func SandstormCore_NewServer(s SandstormCore_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(SandstormCore_Methods(nil, s), s, c)
}

// SandstormCore_ServerToClient creates a new Client from an implementation of SandstormCore_Server.
// The caller is responsible for calling Release on the returned Client.
func SandstormCore_ServerToClient(s SandstormCore_Server) SandstormCore {
	return SandstormCore(capnp.NewClient(SandstormCore_NewServer(s)))
}

// SandstormCore_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func SandstormCore_Methods(methods []server.Method, s SandstormCore_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 11)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "restore",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Restore(ctx, SandstormCore_restore{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      1,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "makeToken",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.MakeToken(ctx, SandstormCore_makeToken{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      2,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "getOwnerNotificationTarget",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetOwnerNotificationTarget(ctx, SandstormCore_getOwnerNotificationTarget{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      3,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "drop",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Drop(ctx, SandstormCore_drop{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      4,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "obsoleteCheckRequirements",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteCheckRequirements(ctx, SandstormCore_obsoleteCheckRequirements{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      5,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "makeChildToken",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.MakeChildToken(ctx, SandstormCore_makeChildToken{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      6,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "claimRequest",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ClaimRequest(ctx, SandstormCore_claimRequest{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      7,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "backgroundActivity",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.BackgroundActivity(ctx, SandstormCore_backgroundActivity{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      8,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "reportGrainSize",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ReportGrainSize(ctx, SandstormCore_reportGrainSize{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      9,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "getIdentityId",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetIdentityId(ctx, SandstormCore_getIdentityId{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9ba45778a294b60c,
			MethodID:      10,
			InterfaceName: "supervisor.capnp:SandstormCore",
			MethodName:    "schedule",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Schedule(ctx, SandstormCore_schedule{call})
		},
	})

	return methods
}

// SandstormCore_restore holds the state for a server call to SandstormCore.restore.
// See server.Call for documentation.
type SandstormCore_restore struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCore_restore) Args() SandstormCore_restore_Params {
	return SandstormCore_restore_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCore_restore) AllocResults() (SandstormCore_restore_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_restore_Results(r), err
}

// SandstormCore_makeToken holds the state for a server call to SandstormCore.makeToken.
// See server.Call for documentation.
type SandstormCore_makeToken struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCore_makeToken) Args() SandstormCore_makeToken_Params {
	return SandstormCore_makeToken_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCore_makeToken) AllocResults() (SandstormCore_makeToken_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_makeToken_Results(r), err
}

// SandstormCore_getOwnerNotificationTarget holds the state for a server call to SandstormCore.getOwnerNotificationTarget.
// See server.Call for documentation.
type SandstormCore_getOwnerNotificationTarget struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCore_getOwnerNotificationTarget) Args() SandstormCore_getOwnerNotificationTarget_Params {
	return SandstormCore_getOwnerNotificationTarget_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCore_getOwnerNotificationTarget) AllocResults() (SandstormCore_getOwnerNotificationTarget_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_getOwnerNotificationTarget_Results(r), err
}

// SandstormCore_drop holds the state for a server call to SandstormCore.drop.
// See server.Call for documentation.
type SandstormCore_drop struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCore_drop) Args() SandstormCore_drop_Params {
	return SandstormCore_drop_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCore_drop) AllocResults() (SandstormCore_drop_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_drop_Results(r), err
}

// SandstormCore_obsoleteCheckRequirements holds the state for a server call to SandstormCore.obsoleteCheckRequirements.
// See server.Call for documentation.
type SandstormCore_obsoleteCheckRequirements struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCore_obsoleteCheckRequirements) Args() SandstormCore_obsoleteCheckRequirements_Params {
	return SandstormCore_obsoleteCheckRequirements_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCore_obsoleteCheckRequirements) AllocResults() (SandstormCore_obsoleteCheckRequirements_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_obsoleteCheckRequirements_Results(r), err
}

// SandstormCore_makeChildToken holds the state for a server call to SandstormCore.makeChildToken.
// See server.Call for documentation.
type SandstormCore_makeChildToken struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCore_makeChildToken) Args() SandstormCore_makeChildToken_Params {
	return SandstormCore_makeChildToken_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCore_makeChildToken) AllocResults() (SandstormCore_makeChildToken_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_makeChildToken_Results(r), err
}

// SandstormCore_claimRequest holds the state for a server call to SandstormCore.claimRequest.
// See server.Call for documentation.
type SandstormCore_claimRequest struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCore_claimRequest) Args() SandstormCore_claimRequest_Params {
	return SandstormCore_claimRequest_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCore_claimRequest) AllocResults() (SandstormCore_claimRequest_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_claimRequest_Results(r), err
}

// SandstormCore_backgroundActivity holds the state for a server call to SandstormCore.backgroundActivity.
// See server.Call for documentation.
type SandstormCore_backgroundActivity struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCore_backgroundActivity) Args() SandstormCore_backgroundActivity_Params {
	return SandstormCore_backgroundActivity_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCore_backgroundActivity) AllocResults() (SandstormCore_backgroundActivity_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_backgroundActivity_Results(r), err
}

// SandstormCore_reportGrainSize holds the state for a server call to SandstormCore.reportGrainSize.
// See server.Call for documentation.
type SandstormCore_reportGrainSize struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCore_reportGrainSize) Args() SandstormCore_reportGrainSize_Params {
	return SandstormCore_reportGrainSize_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCore_reportGrainSize) AllocResults() (SandstormCore_reportGrainSize_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_reportGrainSize_Results(r), err
}

// SandstormCore_getIdentityId holds the state for a server call to SandstormCore.getIdentityId.
// See server.Call for documentation.
type SandstormCore_getIdentityId struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCore_getIdentityId) Args() SandstormCore_getIdentityId_Params {
	return SandstormCore_getIdentityId_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCore_getIdentityId) AllocResults() (SandstormCore_getIdentityId_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_getIdentityId_Results(r), err
}

// SandstormCore_schedule holds the state for a server call to SandstormCore.schedule.
// See server.Call for documentation.
type SandstormCore_schedule struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SandstormCore_schedule) Args() grain.ScheduledJob {
	return grain.ScheduledJob(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SandstormCore_schedule) AllocResults() (SandstormCore_schedule_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_schedule_Results(r), err
}

// SandstormCore_List is a list of SandstormCore.
type SandstormCore_List = capnp.CapList[SandstormCore]

// NewSandstormCore creates a new list of SandstormCore.
func NewSandstormCore_List(s *capnp.Segment, sz int32) (SandstormCore_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[SandstormCore](l), err
}

type SandstormCore_restore_Params capnp.Struct

// SandstormCore_restore_Params_TypeID is the unique identifier for the type SandstormCore_restore_Params.
const SandstormCore_restore_Params_TypeID = 0xf839f92f21f00b08

func NewSandstormCore_restore_Params(s *capnp.Segment) (SandstormCore_restore_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_restore_Params(st), err
}

func NewRootSandstormCore_restore_Params(s *capnp.Segment) (SandstormCore_restore_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_restore_Params(st), err
}

func ReadRootSandstormCore_restore_Params(msg *capnp.Message) (SandstormCore_restore_Params, error) {
	root, err := msg.Root()
	return SandstormCore_restore_Params(root.Struct()), err
}

func (s SandstormCore_restore_Params) String() string {
	str, _ := text.Marshal(0xf839f92f21f00b08, capnp.Struct(s))
	return str
}

func (s SandstormCore_restore_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_restore_Params) DecodeFromPtr(p capnp.Ptr) SandstormCore_restore_Params {
	return SandstormCore_restore_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_restore_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_restore_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_restore_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_restore_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_restore_Params) Token() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormCore_restore_Params) HasToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_restore_Params) SetToken(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

// SandstormCore_restore_Params_List is a list of SandstormCore_restore_Params.
type SandstormCore_restore_Params_List = capnp.StructList[SandstormCore_restore_Params]

// NewSandstormCore_restore_Params creates a new list of SandstormCore_restore_Params.
func NewSandstormCore_restore_Params_List(s *capnp.Segment, sz int32) (SandstormCore_restore_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCore_restore_Params](l), err
}

// SandstormCore_restore_Params_Future is a wrapper for a SandstormCore_restore_Params promised by a client call.
type SandstormCore_restore_Params_Future struct{ *capnp.Future }

func (f SandstormCore_restore_Params_Future) Struct() (SandstormCore_restore_Params, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_restore_Params(p.Struct()), err
}

type SandstormCore_restore_Results capnp.Struct

// SandstormCore_restore_Results_TypeID is the unique identifier for the type SandstormCore_restore_Results.
const SandstormCore_restore_Results_TypeID = 0x92e92771f2b6b2b7

func NewSandstormCore_restore_Results(s *capnp.Segment) (SandstormCore_restore_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_restore_Results(st), err
}

func NewRootSandstormCore_restore_Results(s *capnp.Segment) (SandstormCore_restore_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_restore_Results(st), err
}

func ReadRootSandstormCore_restore_Results(msg *capnp.Message) (SandstormCore_restore_Results, error) {
	root, err := msg.Root()
	return SandstormCore_restore_Results(root.Struct()), err
}

func (s SandstormCore_restore_Results) String() string {
	str, _ := text.Marshal(0x92e92771f2b6b2b7, capnp.Struct(s))
	return str
}

func (s SandstormCore_restore_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_restore_Results) DecodeFromPtr(p capnp.Ptr) SandstormCore_restore_Results {
	return SandstormCore_restore_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_restore_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_restore_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_restore_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_restore_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_restore_Results) Cap() capnp.Client {
	p, _ := capnp.Struct(s).Ptr(0)
	return p.Interface().Client()
}

func (s SandstormCore_restore_Results) HasCap() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_restore_Results) SetCap(c capnp.Client) error {
	if !c.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(c))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// SandstormCore_restore_Results_List is a list of SandstormCore_restore_Results.
type SandstormCore_restore_Results_List = capnp.StructList[SandstormCore_restore_Results]

// NewSandstormCore_restore_Results creates a new list of SandstormCore_restore_Results.
func NewSandstormCore_restore_Results_List(s *capnp.Segment, sz int32) (SandstormCore_restore_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCore_restore_Results](l), err
}

// SandstormCore_restore_Results_Future is a wrapper for a SandstormCore_restore_Results promised by a client call.
type SandstormCore_restore_Results_Future struct{ *capnp.Future }

func (f SandstormCore_restore_Results_Future) Struct() (SandstormCore_restore_Results, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_restore_Results(p.Struct()), err
}
func (p SandstormCore_restore_Results_Future) Cap() capnp.Client {
	return p.Future.Field(0, nil).Client()
}

type SandstormCore_makeToken_Params capnp.Struct

// SandstormCore_makeToken_Params_TypeID is the unique identifier for the type SandstormCore_makeToken_Params.
const SandstormCore_makeToken_Params_TypeID = 0xf0e8359b121f97d2

func NewSandstormCore_makeToken_Params(s *capnp.Segment) (SandstormCore_makeToken_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return SandstormCore_makeToken_Params(st), err
}

func NewRootSandstormCore_makeToken_Params(s *capnp.Segment) (SandstormCore_makeToken_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return SandstormCore_makeToken_Params(st), err
}

func ReadRootSandstormCore_makeToken_Params(msg *capnp.Message) (SandstormCore_makeToken_Params, error) {
	root, err := msg.Root()
	return SandstormCore_makeToken_Params(root.Struct()), err
}

func (s SandstormCore_makeToken_Params) String() string {
	str, _ := text.Marshal(0xf0e8359b121f97d2, capnp.Struct(s))
	return str
}

func (s SandstormCore_makeToken_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_makeToken_Params) DecodeFromPtr(p capnp.Ptr) SandstormCore_makeToken_Params {
	return SandstormCore_makeToken_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_makeToken_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_makeToken_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_makeToken_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_makeToken_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_makeToken_Params) Ref() (SupervisorObjectId, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SupervisorObjectId(p.Struct()), err
}

func (s SandstormCore_makeToken_Params) HasRef() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_makeToken_Params) SetRef(v SupervisorObjectId) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewRef sets the ref field to a newly
// allocated SupervisorObjectId struct, preferring placement in s's segment.
func (s SandstormCore_makeToken_Params) NewRef() (SupervisorObjectId, error) {
	ss, err := NewSupervisorObjectId(capnp.Struct(s).Segment())
	if err != nil {
		return SupervisorObjectId{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s SandstormCore_makeToken_Params) Owner() (ApiTokenOwner, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return ApiTokenOwner(p.Struct()), err
}

func (s SandstormCore_makeToken_Params) HasOwner() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s SandstormCore_makeToken_Params) SetOwner(v ApiTokenOwner) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewOwner sets the owner field to a newly
// allocated ApiTokenOwner struct, preferring placement in s's segment.
func (s SandstormCore_makeToken_Params) NewOwner() (ApiTokenOwner, error) {
	ss, err := NewApiTokenOwner(capnp.Struct(s).Segment())
	if err != nil {
		return ApiTokenOwner{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s SandstormCore_makeToken_Params) Requirements() (MembraneRequirement_List, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return MembraneRequirement_List(p.List()), err
}

func (s SandstormCore_makeToken_Params) HasRequirements() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s SandstormCore_makeToken_Params) SetRequirements(v MembraneRequirement_List) error {
	return capnp.Struct(s).SetPtr(2, v.ToPtr())
}

// NewRequirements sets the requirements field to a newly
// allocated MembraneRequirement_List, preferring placement in s's segment.
func (s SandstormCore_makeToken_Params) NewRequirements(n int32) (MembraneRequirement_List, error) {
	l, err := NewMembraneRequirement_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return MembraneRequirement_List{}, err
	}
	err = capnp.Struct(s).SetPtr(2, l.ToPtr())
	return l, err
}

// SandstormCore_makeToken_Params_List is a list of SandstormCore_makeToken_Params.
type SandstormCore_makeToken_Params_List = capnp.StructList[SandstormCore_makeToken_Params]

// NewSandstormCore_makeToken_Params creates a new list of SandstormCore_makeToken_Params.
func NewSandstormCore_makeToken_Params_List(s *capnp.Segment, sz int32) (SandstormCore_makeToken_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[SandstormCore_makeToken_Params](l), err
}

// SandstormCore_makeToken_Params_Future is a wrapper for a SandstormCore_makeToken_Params promised by a client call.
type SandstormCore_makeToken_Params_Future struct{ *capnp.Future }

func (f SandstormCore_makeToken_Params_Future) Struct() (SandstormCore_makeToken_Params, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_makeToken_Params(p.Struct()), err
}
func (p SandstormCore_makeToken_Params_Future) Ref() SupervisorObjectId_Future {
	return SupervisorObjectId_Future{Future: p.Future.Field(0, nil)}
}
func (p SandstormCore_makeToken_Params_Future) Owner() ApiTokenOwner_Future {
	return ApiTokenOwner_Future{Future: p.Future.Field(1, nil)}
}

type SandstormCore_makeToken_Results capnp.Struct

// SandstormCore_makeToken_Results_TypeID is the unique identifier for the type SandstormCore_makeToken_Results.
const SandstormCore_makeToken_Results_TypeID = 0x9f96d4b948521f91

func NewSandstormCore_makeToken_Results(s *capnp.Segment) (SandstormCore_makeToken_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_makeToken_Results(st), err
}

func NewRootSandstormCore_makeToken_Results(s *capnp.Segment) (SandstormCore_makeToken_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_makeToken_Results(st), err
}

func ReadRootSandstormCore_makeToken_Results(msg *capnp.Message) (SandstormCore_makeToken_Results, error) {
	root, err := msg.Root()
	return SandstormCore_makeToken_Results(root.Struct()), err
}

func (s SandstormCore_makeToken_Results) String() string {
	str, _ := text.Marshal(0x9f96d4b948521f91, capnp.Struct(s))
	return str
}

func (s SandstormCore_makeToken_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_makeToken_Results) DecodeFromPtr(p capnp.Ptr) SandstormCore_makeToken_Results {
	return SandstormCore_makeToken_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_makeToken_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_makeToken_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_makeToken_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_makeToken_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_makeToken_Results) Token() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormCore_makeToken_Results) HasToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_makeToken_Results) SetToken(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

// SandstormCore_makeToken_Results_List is a list of SandstormCore_makeToken_Results.
type SandstormCore_makeToken_Results_List = capnp.StructList[SandstormCore_makeToken_Results]

// NewSandstormCore_makeToken_Results creates a new list of SandstormCore_makeToken_Results.
func NewSandstormCore_makeToken_Results_List(s *capnp.Segment, sz int32) (SandstormCore_makeToken_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCore_makeToken_Results](l), err
}

// SandstormCore_makeToken_Results_Future is a wrapper for a SandstormCore_makeToken_Results promised by a client call.
type SandstormCore_makeToken_Results_Future struct{ *capnp.Future }

func (f SandstormCore_makeToken_Results_Future) Struct() (SandstormCore_makeToken_Results, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_makeToken_Results(p.Struct()), err
}

type SandstormCore_getOwnerNotificationTarget_Params capnp.Struct

// SandstormCore_getOwnerNotificationTarget_Params_TypeID is the unique identifier for the type SandstormCore_getOwnerNotificationTarget_Params.
const SandstormCore_getOwnerNotificationTarget_Params_TypeID = 0xaf72d693dbf4bf54

func NewSandstormCore_getOwnerNotificationTarget_Params(s *capnp.Segment) (SandstormCore_getOwnerNotificationTarget_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_getOwnerNotificationTarget_Params(st), err
}

func NewRootSandstormCore_getOwnerNotificationTarget_Params(s *capnp.Segment) (SandstormCore_getOwnerNotificationTarget_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_getOwnerNotificationTarget_Params(st), err
}

func ReadRootSandstormCore_getOwnerNotificationTarget_Params(msg *capnp.Message) (SandstormCore_getOwnerNotificationTarget_Params, error) {
	root, err := msg.Root()
	return SandstormCore_getOwnerNotificationTarget_Params(root.Struct()), err
}

func (s SandstormCore_getOwnerNotificationTarget_Params) String() string {
	str, _ := text.Marshal(0xaf72d693dbf4bf54, capnp.Struct(s))
	return str
}

func (s SandstormCore_getOwnerNotificationTarget_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_getOwnerNotificationTarget_Params) DecodeFromPtr(p capnp.Ptr) SandstormCore_getOwnerNotificationTarget_Params {
	return SandstormCore_getOwnerNotificationTarget_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_getOwnerNotificationTarget_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_getOwnerNotificationTarget_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_getOwnerNotificationTarget_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_getOwnerNotificationTarget_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// SandstormCore_getOwnerNotificationTarget_Params_List is a list of SandstormCore_getOwnerNotificationTarget_Params.
type SandstormCore_getOwnerNotificationTarget_Params_List = capnp.StructList[SandstormCore_getOwnerNotificationTarget_Params]

// NewSandstormCore_getOwnerNotificationTarget_Params creates a new list of SandstormCore_getOwnerNotificationTarget_Params.
func NewSandstormCore_getOwnerNotificationTarget_Params_List(s *capnp.Segment, sz int32) (SandstormCore_getOwnerNotificationTarget_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[SandstormCore_getOwnerNotificationTarget_Params](l), err
}

// SandstormCore_getOwnerNotificationTarget_Params_Future is a wrapper for a SandstormCore_getOwnerNotificationTarget_Params promised by a client call.
type SandstormCore_getOwnerNotificationTarget_Params_Future struct{ *capnp.Future }

func (f SandstormCore_getOwnerNotificationTarget_Params_Future) Struct() (SandstormCore_getOwnerNotificationTarget_Params, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_getOwnerNotificationTarget_Params(p.Struct()), err
}

type SandstormCore_getOwnerNotificationTarget_Results capnp.Struct

// SandstormCore_getOwnerNotificationTarget_Results_TypeID is the unique identifier for the type SandstormCore_getOwnerNotificationTarget_Results.
const SandstormCore_getOwnerNotificationTarget_Results_TypeID = 0x888c6d95df2cc976

func NewSandstormCore_getOwnerNotificationTarget_Results(s *capnp.Segment) (SandstormCore_getOwnerNotificationTarget_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_getOwnerNotificationTarget_Results(st), err
}

func NewRootSandstormCore_getOwnerNotificationTarget_Results(s *capnp.Segment) (SandstormCore_getOwnerNotificationTarget_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_getOwnerNotificationTarget_Results(st), err
}

func ReadRootSandstormCore_getOwnerNotificationTarget_Results(msg *capnp.Message) (SandstormCore_getOwnerNotificationTarget_Results, error) {
	root, err := msg.Root()
	return SandstormCore_getOwnerNotificationTarget_Results(root.Struct()), err
}

func (s SandstormCore_getOwnerNotificationTarget_Results) String() string {
	str, _ := text.Marshal(0x888c6d95df2cc976, capnp.Struct(s))
	return str
}

func (s SandstormCore_getOwnerNotificationTarget_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_getOwnerNotificationTarget_Results) DecodeFromPtr(p capnp.Ptr) SandstormCore_getOwnerNotificationTarget_Results {
	return SandstormCore_getOwnerNotificationTarget_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_getOwnerNotificationTarget_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_getOwnerNotificationTarget_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_getOwnerNotificationTarget_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_getOwnerNotificationTarget_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_getOwnerNotificationTarget_Results) Owner() activity.NotificationTarget {
	p, _ := capnp.Struct(s).Ptr(0)
	return activity.NotificationTarget(p.Interface().Client())
}

func (s SandstormCore_getOwnerNotificationTarget_Results) HasOwner() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_getOwnerNotificationTarget_Results) SetOwner(v activity.NotificationTarget) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// SandstormCore_getOwnerNotificationTarget_Results_List is a list of SandstormCore_getOwnerNotificationTarget_Results.
type SandstormCore_getOwnerNotificationTarget_Results_List = capnp.StructList[SandstormCore_getOwnerNotificationTarget_Results]

// NewSandstormCore_getOwnerNotificationTarget_Results creates a new list of SandstormCore_getOwnerNotificationTarget_Results.
func NewSandstormCore_getOwnerNotificationTarget_Results_List(s *capnp.Segment, sz int32) (SandstormCore_getOwnerNotificationTarget_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCore_getOwnerNotificationTarget_Results](l), err
}

// SandstormCore_getOwnerNotificationTarget_Results_Future is a wrapper for a SandstormCore_getOwnerNotificationTarget_Results promised by a client call.
type SandstormCore_getOwnerNotificationTarget_Results_Future struct{ *capnp.Future }

func (f SandstormCore_getOwnerNotificationTarget_Results_Future) Struct() (SandstormCore_getOwnerNotificationTarget_Results, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_getOwnerNotificationTarget_Results(p.Struct()), err
}
func (p SandstormCore_getOwnerNotificationTarget_Results_Future) Owner() activity.NotificationTarget {
	return activity.NotificationTarget(p.Future.Field(0, nil).Client())
}

type SandstormCore_drop_Params capnp.Struct

// SandstormCore_drop_Params_TypeID is the unique identifier for the type SandstormCore_drop_Params.
const SandstormCore_drop_Params_TypeID = 0xe03b8c8163d957c6

func NewSandstormCore_drop_Params(s *capnp.Segment) (SandstormCore_drop_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_drop_Params(st), err
}

func NewRootSandstormCore_drop_Params(s *capnp.Segment) (SandstormCore_drop_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_drop_Params(st), err
}

func ReadRootSandstormCore_drop_Params(msg *capnp.Message) (SandstormCore_drop_Params, error) {
	root, err := msg.Root()
	return SandstormCore_drop_Params(root.Struct()), err
}

func (s SandstormCore_drop_Params) String() string {
	str, _ := text.Marshal(0xe03b8c8163d957c6, capnp.Struct(s))
	return str
}

func (s SandstormCore_drop_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_drop_Params) DecodeFromPtr(p capnp.Ptr) SandstormCore_drop_Params {
	return SandstormCore_drop_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_drop_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_drop_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_drop_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_drop_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_drop_Params) Token() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormCore_drop_Params) HasToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_drop_Params) SetToken(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

// SandstormCore_drop_Params_List is a list of SandstormCore_drop_Params.
type SandstormCore_drop_Params_List = capnp.StructList[SandstormCore_drop_Params]

// NewSandstormCore_drop_Params creates a new list of SandstormCore_drop_Params.
func NewSandstormCore_drop_Params_List(s *capnp.Segment, sz int32) (SandstormCore_drop_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCore_drop_Params](l), err
}

// SandstormCore_drop_Params_Future is a wrapper for a SandstormCore_drop_Params promised by a client call.
type SandstormCore_drop_Params_Future struct{ *capnp.Future }

func (f SandstormCore_drop_Params_Future) Struct() (SandstormCore_drop_Params, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_drop_Params(p.Struct()), err
}

type SandstormCore_drop_Results capnp.Struct

// SandstormCore_drop_Results_TypeID is the unique identifier for the type SandstormCore_drop_Results.
const SandstormCore_drop_Results_TypeID = 0xce435c92a97c1b97

func NewSandstormCore_drop_Results(s *capnp.Segment) (SandstormCore_drop_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_drop_Results(st), err
}

func NewRootSandstormCore_drop_Results(s *capnp.Segment) (SandstormCore_drop_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_drop_Results(st), err
}

func ReadRootSandstormCore_drop_Results(msg *capnp.Message) (SandstormCore_drop_Results, error) {
	root, err := msg.Root()
	return SandstormCore_drop_Results(root.Struct()), err
}

func (s SandstormCore_drop_Results) String() string {
	str, _ := text.Marshal(0xce435c92a97c1b97, capnp.Struct(s))
	return str
}

func (s SandstormCore_drop_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_drop_Results) DecodeFromPtr(p capnp.Ptr) SandstormCore_drop_Results {
	return SandstormCore_drop_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_drop_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_drop_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_drop_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_drop_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// SandstormCore_drop_Results_List is a list of SandstormCore_drop_Results.
type SandstormCore_drop_Results_List = capnp.StructList[SandstormCore_drop_Results]

// NewSandstormCore_drop_Results creates a new list of SandstormCore_drop_Results.
func NewSandstormCore_drop_Results_List(s *capnp.Segment, sz int32) (SandstormCore_drop_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[SandstormCore_drop_Results](l), err
}

// SandstormCore_drop_Results_Future is a wrapper for a SandstormCore_drop_Results promised by a client call.
type SandstormCore_drop_Results_Future struct{ *capnp.Future }

func (f SandstormCore_drop_Results_Future) Struct() (SandstormCore_drop_Results, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_drop_Results(p.Struct()), err
}

type SandstormCore_obsoleteCheckRequirements_Params capnp.Struct

// SandstormCore_obsoleteCheckRequirements_Params_TypeID is the unique identifier for the type SandstormCore_obsoleteCheckRequirements_Params.
const SandstormCore_obsoleteCheckRequirements_Params_TypeID = 0x8867ef4f53bc45c3

func NewSandstormCore_obsoleteCheckRequirements_Params(s *capnp.Segment) (SandstormCore_obsoleteCheckRequirements_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_obsoleteCheckRequirements_Params(st), err
}

func NewRootSandstormCore_obsoleteCheckRequirements_Params(s *capnp.Segment) (SandstormCore_obsoleteCheckRequirements_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_obsoleteCheckRequirements_Params(st), err
}

func ReadRootSandstormCore_obsoleteCheckRequirements_Params(msg *capnp.Message) (SandstormCore_obsoleteCheckRequirements_Params, error) {
	root, err := msg.Root()
	return SandstormCore_obsoleteCheckRequirements_Params(root.Struct()), err
}

func (s SandstormCore_obsoleteCheckRequirements_Params) String() string {
	str, _ := text.Marshal(0x8867ef4f53bc45c3, capnp.Struct(s))
	return str
}

func (s SandstormCore_obsoleteCheckRequirements_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_obsoleteCheckRequirements_Params) DecodeFromPtr(p capnp.Ptr) SandstormCore_obsoleteCheckRequirements_Params {
	return SandstormCore_obsoleteCheckRequirements_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_obsoleteCheckRequirements_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_obsoleteCheckRequirements_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_obsoleteCheckRequirements_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_obsoleteCheckRequirements_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// SandstormCore_obsoleteCheckRequirements_Params_List is a list of SandstormCore_obsoleteCheckRequirements_Params.
type SandstormCore_obsoleteCheckRequirements_Params_List = capnp.StructList[SandstormCore_obsoleteCheckRequirements_Params]

// NewSandstormCore_obsoleteCheckRequirements_Params creates a new list of SandstormCore_obsoleteCheckRequirements_Params.
func NewSandstormCore_obsoleteCheckRequirements_Params_List(s *capnp.Segment, sz int32) (SandstormCore_obsoleteCheckRequirements_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[SandstormCore_obsoleteCheckRequirements_Params](l), err
}

// SandstormCore_obsoleteCheckRequirements_Params_Future is a wrapper for a SandstormCore_obsoleteCheckRequirements_Params promised by a client call.
type SandstormCore_obsoleteCheckRequirements_Params_Future struct{ *capnp.Future }

func (f SandstormCore_obsoleteCheckRequirements_Params_Future) Struct() (SandstormCore_obsoleteCheckRequirements_Params, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_obsoleteCheckRequirements_Params(p.Struct()), err
}

type SandstormCore_obsoleteCheckRequirements_Results capnp.Struct

// SandstormCore_obsoleteCheckRequirements_Results_TypeID is the unique identifier for the type SandstormCore_obsoleteCheckRequirements_Results.
const SandstormCore_obsoleteCheckRequirements_Results_TypeID = 0xca83e6f36908ed7f

func NewSandstormCore_obsoleteCheckRequirements_Results(s *capnp.Segment) (SandstormCore_obsoleteCheckRequirements_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_obsoleteCheckRequirements_Results(st), err
}

func NewRootSandstormCore_obsoleteCheckRequirements_Results(s *capnp.Segment) (SandstormCore_obsoleteCheckRequirements_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_obsoleteCheckRequirements_Results(st), err
}

func ReadRootSandstormCore_obsoleteCheckRequirements_Results(msg *capnp.Message) (SandstormCore_obsoleteCheckRequirements_Results, error) {
	root, err := msg.Root()
	return SandstormCore_obsoleteCheckRequirements_Results(root.Struct()), err
}

func (s SandstormCore_obsoleteCheckRequirements_Results) String() string {
	str, _ := text.Marshal(0xca83e6f36908ed7f, capnp.Struct(s))
	return str
}

func (s SandstormCore_obsoleteCheckRequirements_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_obsoleteCheckRequirements_Results) DecodeFromPtr(p capnp.Ptr) SandstormCore_obsoleteCheckRequirements_Results {
	return SandstormCore_obsoleteCheckRequirements_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_obsoleteCheckRequirements_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_obsoleteCheckRequirements_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_obsoleteCheckRequirements_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_obsoleteCheckRequirements_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// SandstormCore_obsoleteCheckRequirements_Results_List is a list of SandstormCore_obsoleteCheckRequirements_Results.
type SandstormCore_obsoleteCheckRequirements_Results_List = capnp.StructList[SandstormCore_obsoleteCheckRequirements_Results]

// NewSandstormCore_obsoleteCheckRequirements_Results creates a new list of SandstormCore_obsoleteCheckRequirements_Results.
func NewSandstormCore_obsoleteCheckRequirements_Results_List(s *capnp.Segment, sz int32) (SandstormCore_obsoleteCheckRequirements_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[SandstormCore_obsoleteCheckRequirements_Results](l), err
}

// SandstormCore_obsoleteCheckRequirements_Results_Future is a wrapper for a SandstormCore_obsoleteCheckRequirements_Results promised by a client call.
type SandstormCore_obsoleteCheckRequirements_Results_Future struct{ *capnp.Future }

func (f SandstormCore_obsoleteCheckRequirements_Results_Future) Struct() (SandstormCore_obsoleteCheckRequirements_Results, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_obsoleteCheckRequirements_Results(p.Struct()), err
}

type SandstormCore_makeChildToken_Params capnp.Struct

// SandstormCore_makeChildToken_Params_TypeID is the unique identifier for the type SandstormCore_makeChildToken_Params.
const SandstormCore_makeChildToken_Params_TypeID = 0x9b25c148edb2b020

func NewSandstormCore_makeChildToken_Params(s *capnp.Segment) (SandstormCore_makeChildToken_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return SandstormCore_makeChildToken_Params(st), err
}

func NewRootSandstormCore_makeChildToken_Params(s *capnp.Segment) (SandstormCore_makeChildToken_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return SandstormCore_makeChildToken_Params(st), err
}

func ReadRootSandstormCore_makeChildToken_Params(msg *capnp.Message) (SandstormCore_makeChildToken_Params, error) {
	root, err := msg.Root()
	return SandstormCore_makeChildToken_Params(root.Struct()), err
}

func (s SandstormCore_makeChildToken_Params) String() string {
	str, _ := text.Marshal(0x9b25c148edb2b020, capnp.Struct(s))
	return str
}

func (s SandstormCore_makeChildToken_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_makeChildToken_Params) DecodeFromPtr(p capnp.Ptr) SandstormCore_makeChildToken_Params {
	return SandstormCore_makeChildToken_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_makeChildToken_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_makeChildToken_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_makeChildToken_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_makeChildToken_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_makeChildToken_Params) Parent() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormCore_makeChildToken_Params) HasParent() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_makeChildToken_Params) SetParent(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

func (s SandstormCore_makeChildToken_Params) Owner() (ApiTokenOwner, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return ApiTokenOwner(p.Struct()), err
}

func (s SandstormCore_makeChildToken_Params) HasOwner() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s SandstormCore_makeChildToken_Params) SetOwner(v ApiTokenOwner) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewOwner sets the owner field to a newly
// allocated ApiTokenOwner struct, preferring placement in s's segment.
func (s SandstormCore_makeChildToken_Params) NewOwner() (ApiTokenOwner, error) {
	ss, err := NewApiTokenOwner(capnp.Struct(s).Segment())
	if err != nil {
		return ApiTokenOwner{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s SandstormCore_makeChildToken_Params) Requirements() (MembraneRequirement_List, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return MembraneRequirement_List(p.List()), err
}

func (s SandstormCore_makeChildToken_Params) HasRequirements() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s SandstormCore_makeChildToken_Params) SetRequirements(v MembraneRequirement_List) error {
	return capnp.Struct(s).SetPtr(2, v.ToPtr())
}

// NewRequirements sets the requirements field to a newly
// allocated MembraneRequirement_List, preferring placement in s's segment.
func (s SandstormCore_makeChildToken_Params) NewRequirements(n int32) (MembraneRequirement_List, error) {
	l, err := NewMembraneRequirement_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return MembraneRequirement_List{}, err
	}
	err = capnp.Struct(s).SetPtr(2, l.ToPtr())
	return l, err
}

// SandstormCore_makeChildToken_Params_List is a list of SandstormCore_makeChildToken_Params.
type SandstormCore_makeChildToken_Params_List = capnp.StructList[SandstormCore_makeChildToken_Params]

// NewSandstormCore_makeChildToken_Params creates a new list of SandstormCore_makeChildToken_Params.
func NewSandstormCore_makeChildToken_Params_List(s *capnp.Segment, sz int32) (SandstormCore_makeChildToken_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return capnp.StructList[SandstormCore_makeChildToken_Params](l), err
}

// SandstormCore_makeChildToken_Params_Future is a wrapper for a SandstormCore_makeChildToken_Params promised by a client call.
type SandstormCore_makeChildToken_Params_Future struct{ *capnp.Future }

func (f SandstormCore_makeChildToken_Params_Future) Struct() (SandstormCore_makeChildToken_Params, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_makeChildToken_Params(p.Struct()), err
}
func (p SandstormCore_makeChildToken_Params_Future) Owner() ApiTokenOwner_Future {
	return ApiTokenOwner_Future{Future: p.Future.Field(1, nil)}
}

type SandstormCore_makeChildToken_Results capnp.Struct

// SandstormCore_makeChildToken_Results_TypeID is the unique identifier for the type SandstormCore_makeChildToken_Results.
const SandstormCore_makeChildToken_Results_TypeID = 0x9ea56a46fc87138a

func NewSandstormCore_makeChildToken_Results(s *capnp.Segment) (SandstormCore_makeChildToken_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_makeChildToken_Results(st), err
}

func NewRootSandstormCore_makeChildToken_Results(s *capnp.Segment) (SandstormCore_makeChildToken_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_makeChildToken_Results(st), err
}

func ReadRootSandstormCore_makeChildToken_Results(msg *capnp.Message) (SandstormCore_makeChildToken_Results, error) {
	root, err := msg.Root()
	return SandstormCore_makeChildToken_Results(root.Struct()), err
}

func (s SandstormCore_makeChildToken_Results) String() string {
	str, _ := text.Marshal(0x9ea56a46fc87138a, capnp.Struct(s))
	return str
}

func (s SandstormCore_makeChildToken_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_makeChildToken_Results) DecodeFromPtr(p capnp.Ptr) SandstormCore_makeChildToken_Results {
	return SandstormCore_makeChildToken_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_makeChildToken_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_makeChildToken_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_makeChildToken_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_makeChildToken_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_makeChildToken_Results) Token() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormCore_makeChildToken_Results) HasToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_makeChildToken_Results) SetToken(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

// SandstormCore_makeChildToken_Results_List is a list of SandstormCore_makeChildToken_Results.
type SandstormCore_makeChildToken_Results_List = capnp.StructList[SandstormCore_makeChildToken_Results]

// NewSandstormCore_makeChildToken_Results creates a new list of SandstormCore_makeChildToken_Results.
func NewSandstormCore_makeChildToken_Results_List(s *capnp.Segment, sz int32) (SandstormCore_makeChildToken_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCore_makeChildToken_Results](l), err
}

// SandstormCore_makeChildToken_Results_Future is a wrapper for a SandstormCore_makeChildToken_Results promised by a client call.
type SandstormCore_makeChildToken_Results_Future struct{ *capnp.Future }

func (f SandstormCore_makeChildToken_Results_Future) Struct() (SandstormCore_makeChildToken_Results, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_makeChildToken_Results(p.Struct()), err
}

type SandstormCore_claimRequest_Params capnp.Struct

// SandstormCore_claimRequest_Params_TypeID is the unique identifier for the type SandstormCore_claimRequest_Params.
const SandstormCore_claimRequest_Params_TypeID = 0xeeaeb799e53e0b01

func NewSandstormCore_claimRequest_Params(s *capnp.Segment) (SandstormCore_claimRequest_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormCore_claimRequest_Params(st), err
}

func NewRootSandstormCore_claimRequest_Params(s *capnp.Segment) (SandstormCore_claimRequest_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SandstormCore_claimRequest_Params(st), err
}

func ReadRootSandstormCore_claimRequest_Params(msg *capnp.Message) (SandstormCore_claimRequest_Params, error) {
	root, err := msg.Root()
	return SandstormCore_claimRequest_Params(root.Struct()), err
}

func (s SandstormCore_claimRequest_Params) String() string {
	str, _ := text.Marshal(0xeeaeb799e53e0b01, capnp.Struct(s))
	return str
}

func (s SandstormCore_claimRequest_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_claimRequest_Params) DecodeFromPtr(p capnp.Ptr) SandstormCore_claimRequest_Params {
	return SandstormCore_claimRequest_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_claimRequest_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_claimRequest_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_claimRequest_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_claimRequest_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_claimRequest_Params) RequestToken() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s SandstormCore_claimRequest_Params) HasRequestToken() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_claimRequest_Params) RequestTokenBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s SandstormCore_claimRequest_Params) SetRequestToken(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s SandstormCore_claimRequest_Params) RequiredPermissions() (capnp.BitList, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return capnp.BitList(p.List()), err
}

func (s SandstormCore_claimRequest_Params) HasRequiredPermissions() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s SandstormCore_claimRequest_Params) SetRequiredPermissions(v capnp.BitList) error {
	return capnp.Struct(s).SetPtr(1, v.ToPtr())
}

// NewRequiredPermissions sets the requiredPermissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s SandstormCore_claimRequest_Params) NewRequiredPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = capnp.Struct(s).SetPtr(1, l.ToPtr())
	return l, err
}

// SandstormCore_claimRequest_Params_List is a list of SandstormCore_claimRequest_Params.
type SandstormCore_claimRequest_Params_List = capnp.StructList[SandstormCore_claimRequest_Params]

// NewSandstormCore_claimRequest_Params creates a new list of SandstormCore_claimRequest_Params.
func NewSandstormCore_claimRequest_Params_List(s *capnp.Segment, sz int32) (SandstormCore_claimRequest_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[SandstormCore_claimRequest_Params](l), err
}

// SandstormCore_claimRequest_Params_Future is a wrapper for a SandstormCore_claimRequest_Params promised by a client call.
type SandstormCore_claimRequest_Params_Future struct{ *capnp.Future }

func (f SandstormCore_claimRequest_Params_Future) Struct() (SandstormCore_claimRequest_Params, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_claimRequest_Params(p.Struct()), err
}

type SandstormCore_claimRequest_Results capnp.Struct

// SandstormCore_claimRequest_Results_TypeID is the unique identifier for the type SandstormCore_claimRequest_Results.
const SandstormCore_claimRequest_Results_TypeID = 0xb91071e3d7b9ab13

func NewSandstormCore_claimRequest_Results(s *capnp.Segment) (SandstormCore_claimRequest_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_claimRequest_Results(st), err
}

func NewRootSandstormCore_claimRequest_Results(s *capnp.Segment) (SandstormCore_claimRequest_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_claimRequest_Results(st), err
}

func ReadRootSandstormCore_claimRequest_Results(msg *capnp.Message) (SandstormCore_claimRequest_Results, error) {
	root, err := msg.Root()
	return SandstormCore_claimRequest_Results(root.Struct()), err
}

func (s SandstormCore_claimRequest_Results) String() string {
	str, _ := text.Marshal(0xb91071e3d7b9ab13, capnp.Struct(s))
	return str
}

func (s SandstormCore_claimRequest_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_claimRequest_Results) DecodeFromPtr(p capnp.Ptr) SandstormCore_claimRequest_Results {
	return SandstormCore_claimRequest_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_claimRequest_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_claimRequest_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_claimRequest_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_claimRequest_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_claimRequest_Results) Cap() capnp.Client {
	p, _ := capnp.Struct(s).Ptr(0)
	return p.Interface().Client()
}

func (s SandstormCore_claimRequest_Results) HasCap() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_claimRequest_Results) SetCap(c capnp.Client) error {
	if !c.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(c))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// SandstormCore_claimRequest_Results_List is a list of SandstormCore_claimRequest_Results.
type SandstormCore_claimRequest_Results_List = capnp.StructList[SandstormCore_claimRequest_Results]

// NewSandstormCore_claimRequest_Results creates a new list of SandstormCore_claimRequest_Results.
func NewSandstormCore_claimRequest_Results_List(s *capnp.Segment, sz int32) (SandstormCore_claimRequest_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCore_claimRequest_Results](l), err
}

// SandstormCore_claimRequest_Results_Future is a wrapper for a SandstormCore_claimRequest_Results promised by a client call.
type SandstormCore_claimRequest_Results_Future struct{ *capnp.Future }

func (f SandstormCore_claimRequest_Results_Future) Struct() (SandstormCore_claimRequest_Results, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_claimRequest_Results(p.Struct()), err
}
func (p SandstormCore_claimRequest_Results_Future) Cap() capnp.Client {
	return p.Future.Field(0, nil).Client()
}

type SandstormCore_backgroundActivity_Params capnp.Struct

// SandstormCore_backgroundActivity_Params_TypeID is the unique identifier for the type SandstormCore_backgroundActivity_Params.
const SandstormCore_backgroundActivity_Params_TypeID = 0x938e798cc0e3d6ac

func NewSandstormCore_backgroundActivity_Params(s *capnp.Segment) (SandstormCore_backgroundActivity_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_backgroundActivity_Params(st), err
}

func NewRootSandstormCore_backgroundActivity_Params(s *capnp.Segment) (SandstormCore_backgroundActivity_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_backgroundActivity_Params(st), err
}

func ReadRootSandstormCore_backgroundActivity_Params(msg *capnp.Message) (SandstormCore_backgroundActivity_Params, error) {
	root, err := msg.Root()
	return SandstormCore_backgroundActivity_Params(root.Struct()), err
}

func (s SandstormCore_backgroundActivity_Params) String() string {
	str, _ := text.Marshal(0x938e798cc0e3d6ac, capnp.Struct(s))
	return str
}

func (s SandstormCore_backgroundActivity_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_backgroundActivity_Params) DecodeFromPtr(p capnp.Ptr) SandstormCore_backgroundActivity_Params {
	return SandstormCore_backgroundActivity_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_backgroundActivity_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_backgroundActivity_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_backgroundActivity_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_backgroundActivity_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_backgroundActivity_Params) Event() (activity.ActivityEvent, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return activity.ActivityEvent(p.Struct()), err
}

func (s SandstormCore_backgroundActivity_Params) HasEvent() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_backgroundActivity_Params) SetEvent(v activity.ActivityEvent) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewEvent sets the event field to a newly
// allocated activity.ActivityEvent struct, preferring placement in s's segment.
func (s SandstormCore_backgroundActivity_Params) NewEvent() (activity.ActivityEvent, error) {
	ss, err := activity.NewActivityEvent(capnp.Struct(s).Segment())
	if err != nil {
		return activity.ActivityEvent{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// SandstormCore_backgroundActivity_Params_List is a list of SandstormCore_backgroundActivity_Params.
type SandstormCore_backgroundActivity_Params_List = capnp.StructList[SandstormCore_backgroundActivity_Params]

// NewSandstormCore_backgroundActivity_Params creates a new list of SandstormCore_backgroundActivity_Params.
func NewSandstormCore_backgroundActivity_Params_List(s *capnp.Segment, sz int32) (SandstormCore_backgroundActivity_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCore_backgroundActivity_Params](l), err
}

// SandstormCore_backgroundActivity_Params_Future is a wrapper for a SandstormCore_backgroundActivity_Params promised by a client call.
type SandstormCore_backgroundActivity_Params_Future struct{ *capnp.Future }

func (f SandstormCore_backgroundActivity_Params_Future) Struct() (SandstormCore_backgroundActivity_Params, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_backgroundActivity_Params(p.Struct()), err
}
func (p SandstormCore_backgroundActivity_Params_Future) Event() activity.ActivityEvent_Future {
	return activity.ActivityEvent_Future{Future: p.Future.Field(0, nil)}
}

type SandstormCore_backgroundActivity_Results capnp.Struct

// SandstormCore_backgroundActivity_Results_TypeID is the unique identifier for the type SandstormCore_backgroundActivity_Results.
const SandstormCore_backgroundActivity_Results_TypeID = 0x9d87019c48640d21

func NewSandstormCore_backgroundActivity_Results(s *capnp.Segment) (SandstormCore_backgroundActivity_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_backgroundActivity_Results(st), err
}

func NewRootSandstormCore_backgroundActivity_Results(s *capnp.Segment) (SandstormCore_backgroundActivity_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_backgroundActivity_Results(st), err
}

func ReadRootSandstormCore_backgroundActivity_Results(msg *capnp.Message) (SandstormCore_backgroundActivity_Results, error) {
	root, err := msg.Root()
	return SandstormCore_backgroundActivity_Results(root.Struct()), err
}

func (s SandstormCore_backgroundActivity_Results) String() string {
	str, _ := text.Marshal(0x9d87019c48640d21, capnp.Struct(s))
	return str
}

func (s SandstormCore_backgroundActivity_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_backgroundActivity_Results) DecodeFromPtr(p capnp.Ptr) SandstormCore_backgroundActivity_Results {
	return SandstormCore_backgroundActivity_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_backgroundActivity_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_backgroundActivity_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_backgroundActivity_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_backgroundActivity_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// SandstormCore_backgroundActivity_Results_List is a list of SandstormCore_backgroundActivity_Results.
type SandstormCore_backgroundActivity_Results_List = capnp.StructList[SandstormCore_backgroundActivity_Results]

// NewSandstormCore_backgroundActivity_Results creates a new list of SandstormCore_backgroundActivity_Results.
func NewSandstormCore_backgroundActivity_Results_List(s *capnp.Segment, sz int32) (SandstormCore_backgroundActivity_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[SandstormCore_backgroundActivity_Results](l), err
}

// SandstormCore_backgroundActivity_Results_Future is a wrapper for a SandstormCore_backgroundActivity_Results promised by a client call.
type SandstormCore_backgroundActivity_Results_Future struct{ *capnp.Future }

func (f SandstormCore_backgroundActivity_Results_Future) Struct() (SandstormCore_backgroundActivity_Results, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_backgroundActivity_Results(p.Struct()), err
}

type SandstormCore_reportGrainSize_Params capnp.Struct

// SandstormCore_reportGrainSize_Params_TypeID is the unique identifier for the type SandstormCore_reportGrainSize_Params.
const SandstormCore_reportGrainSize_Params_TypeID = 0xaec15e35d479f4f3

func NewSandstormCore_reportGrainSize_Params(s *capnp.Segment) (SandstormCore_reportGrainSize_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return SandstormCore_reportGrainSize_Params(st), err
}

func NewRootSandstormCore_reportGrainSize_Params(s *capnp.Segment) (SandstormCore_reportGrainSize_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return SandstormCore_reportGrainSize_Params(st), err
}

func ReadRootSandstormCore_reportGrainSize_Params(msg *capnp.Message) (SandstormCore_reportGrainSize_Params, error) {
	root, err := msg.Root()
	return SandstormCore_reportGrainSize_Params(root.Struct()), err
}

func (s SandstormCore_reportGrainSize_Params) String() string {
	str, _ := text.Marshal(0xaec15e35d479f4f3, capnp.Struct(s))
	return str
}

func (s SandstormCore_reportGrainSize_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_reportGrainSize_Params) DecodeFromPtr(p capnp.Ptr) SandstormCore_reportGrainSize_Params {
	return SandstormCore_reportGrainSize_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_reportGrainSize_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_reportGrainSize_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_reportGrainSize_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_reportGrainSize_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_reportGrainSize_Params) Bytes() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s SandstormCore_reportGrainSize_Params) SetBytes(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

// SandstormCore_reportGrainSize_Params_List is a list of SandstormCore_reportGrainSize_Params.
type SandstormCore_reportGrainSize_Params_List = capnp.StructList[SandstormCore_reportGrainSize_Params]

// NewSandstormCore_reportGrainSize_Params creates a new list of SandstormCore_reportGrainSize_Params.
func NewSandstormCore_reportGrainSize_Params_List(s *capnp.Segment, sz int32) (SandstormCore_reportGrainSize_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[SandstormCore_reportGrainSize_Params](l), err
}

// SandstormCore_reportGrainSize_Params_Future is a wrapper for a SandstormCore_reportGrainSize_Params promised by a client call.
type SandstormCore_reportGrainSize_Params_Future struct{ *capnp.Future }

func (f SandstormCore_reportGrainSize_Params_Future) Struct() (SandstormCore_reportGrainSize_Params, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_reportGrainSize_Params(p.Struct()), err
}

type SandstormCore_reportGrainSize_Results capnp.Struct

// SandstormCore_reportGrainSize_Results_TypeID is the unique identifier for the type SandstormCore_reportGrainSize_Results.
const SandstormCore_reportGrainSize_Results_TypeID = 0xc43d5a1430e113ca

func NewSandstormCore_reportGrainSize_Results(s *capnp.Segment) (SandstormCore_reportGrainSize_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_reportGrainSize_Results(st), err
}

func NewRootSandstormCore_reportGrainSize_Results(s *capnp.Segment) (SandstormCore_reportGrainSize_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_reportGrainSize_Results(st), err
}

func ReadRootSandstormCore_reportGrainSize_Results(msg *capnp.Message) (SandstormCore_reportGrainSize_Results, error) {
	root, err := msg.Root()
	return SandstormCore_reportGrainSize_Results(root.Struct()), err
}

func (s SandstormCore_reportGrainSize_Results) String() string {
	str, _ := text.Marshal(0xc43d5a1430e113ca, capnp.Struct(s))
	return str
}

func (s SandstormCore_reportGrainSize_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_reportGrainSize_Results) DecodeFromPtr(p capnp.Ptr) SandstormCore_reportGrainSize_Results {
	return SandstormCore_reportGrainSize_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_reportGrainSize_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_reportGrainSize_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_reportGrainSize_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_reportGrainSize_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// SandstormCore_reportGrainSize_Results_List is a list of SandstormCore_reportGrainSize_Results.
type SandstormCore_reportGrainSize_Results_List = capnp.StructList[SandstormCore_reportGrainSize_Results]

// NewSandstormCore_reportGrainSize_Results creates a new list of SandstormCore_reportGrainSize_Results.
func NewSandstormCore_reportGrainSize_Results_List(s *capnp.Segment, sz int32) (SandstormCore_reportGrainSize_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[SandstormCore_reportGrainSize_Results](l), err
}

// SandstormCore_reportGrainSize_Results_Future is a wrapper for a SandstormCore_reportGrainSize_Results promised by a client call.
type SandstormCore_reportGrainSize_Results_Future struct{ *capnp.Future }

func (f SandstormCore_reportGrainSize_Results_Future) Struct() (SandstormCore_reportGrainSize_Results, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_reportGrainSize_Results(p.Struct()), err
}

type SandstormCore_getIdentityId_Params capnp.Struct

// SandstormCore_getIdentityId_Params_TypeID is the unique identifier for the type SandstormCore_getIdentityId_Params.
const SandstormCore_getIdentityId_Params_TypeID = 0xf59063f154adea97

func NewSandstormCore_getIdentityId_Params(s *capnp.Segment) (SandstormCore_getIdentityId_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_getIdentityId_Params(st), err
}

func NewRootSandstormCore_getIdentityId_Params(s *capnp.Segment) (SandstormCore_getIdentityId_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_getIdentityId_Params(st), err
}

func ReadRootSandstormCore_getIdentityId_Params(msg *capnp.Message) (SandstormCore_getIdentityId_Params, error) {
	root, err := msg.Root()
	return SandstormCore_getIdentityId_Params(root.Struct()), err
}

func (s SandstormCore_getIdentityId_Params) String() string {
	str, _ := text.Marshal(0xf59063f154adea97, capnp.Struct(s))
	return str
}

func (s SandstormCore_getIdentityId_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_getIdentityId_Params) DecodeFromPtr(p capnp.Ptr) SandstormCore_getIdentityId_Params {
	return SandstormCore_getIdentityId_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_getIdentityId_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_getIdentityId_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_getIdentityId_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_getIdentityId_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_getIdentityId_Params) Identity() identity.Identity {
	p, _ := capnp.Struct(s).Ptr(0)
	return identity.Identity(p.Interface().Client())
}

func (s SandstormCore_getIdentityId_Params) HasIdentity() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_getIdentityId_Params) SetIdentity(v identity.Identity) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// SandstormCore_getIdentityId_Params_List is a list of SandstormCore_getIdentityId_Params.
type SandstormCore_getIdentityId_Params_List = capnp.StructList[SandstormCore_getIdentityId_Params]

// NewSandstormCore_getIdentityId_Params creates a new list of SandstormCore_getIdentityId_Params.
func NewSandstormCore_getIdentityId_Params_List(s *capnp.Segment, sz int32) (SandstormCore_getIdentityId_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCore_getIdentityId_Params](l), err
}

// SandstormCore_getIdentityId_Params_Future is a wrapper for a SandstormCore_getIdentityId_Params promised by a client call.
type SandstormCore_getIdentityId_Params_Future struct{ *capnp.Future }

func (f SandstormCore_getIdentityId_Params_Future) Struct() (SandstormCore_getIdentityId_Params, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_getIdentityId_Params(p.Struct()), err
}
func (p SandstormCore_getIdentityId_Params_Future) Identity() identity.Identity {
	return identity.Identity(p.Future.Field(0, nil).Client())
}

type SandstormCore_getIdentityId_Results capnp.Struct

// SandstormCore_getIdentityId_Results_TypeID is the unique identifier for the type SandstormCore_getIdentityId_Results.
const SandstormCore_getIdentityId_Results_TypeID = 0xcaa1479a3b9c719b

func NewSandstormCore_getIdentityId_Results(s *capnp.Segment) (SandstormCore_getIdentityId_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_getIdentityId_Results(st), err
}

func NewRootSandstormCore_getIdentityId_Results(s *capnp.Segment) (SandstormCore_getIdentityId_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SandstormCore_getIdentityId_Results(st), err
}

func ReadRootSandstormCore_getIdentityId_Results(msg *capnp.Message) (SandstormCore_getIdentityId_Results, error) {
	root, err := msg.Root()
	return SandstormCore_getIdentityId_Results(root.Struct()), err
}

func (s SandstormCore_getIdentityId_Results) String() string {
	str, _ := text.Marshal(0xcaa1479a3b9c719b, capnp.Struct(s))
	return str
}

func (s SandstormCore_getIdentityId_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_getIdentityId_Results) DecodeFromPtr(p capnp.Ptr) SandstormCore_getIdentityId_Results {
	return SandstormCore_getIdentityId_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_getIdentityId_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_getIdentityId_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_getIdentityId_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_getIdentityId_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SandstormCore_getIdentityId_Results) Id() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s SandstormCore_getIdentityId_Results) HasId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SandstormCore_getIdentityId_Results) SetId(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

// SandstormCore_getIdentityId_Results_List is a list of SandstormCore_getIdentityId_Results.
type SandstormCore_getIdentityId_Results_List = capnp.StructList[SandstormCore_getIdentityId_Results]

// NewSandstormCore_getIdentityId_Results creates a new list of SandstormCore_getIdentityId_Results.
func NewSandstormCore_getIdentityId_Results_List(s *capnp.Segment, sz int32) (SandstormCore_getIdentityId_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SandstormCore_getIdentityId_Results](l), err
}

// SandstormCore_getIdentityId_Results_Future is a wrapper for a SandstormCore_getIdentityId_Results promised by a client call.
type SandstormCore_getIdentityId_Results_Future struct{ *capnp.Future }

func (f SandstormCore_getIdentityId_Results_Future) Struct() (SandstormCore_getIdentityId_Results, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_getIdentityId_Results(p.Struct()), err
}

type SandstormCore_schedule_Results capnp.Struct

// SandstormCore_schedule_Results_TypeID is the unique identifier for the type SandstormCore_schedule_Results.
const SandstormCore_schedule_Results_TypeID = 0xd8f35ba8c9898970

func NewSandstormCore_schedule_Results(s *capnp.Segment) (SandstormCore_schedule_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_schedule_Results(st), err
}

func NewRootSandstormCore_schedule_Results(s *capnp.Segment) (SandstormCore_schedule_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SandstormCore_schedule_Results(st), err
}

func ReadRootSandstormCore_schedule_Results(msg *capnp.Message) (SandstormCore_schedule_Results, error) {
	root, err := msg.Root()
	return SandstormCore_schedule_Results(root.Struct()), err
}

func (s SandstormCore_schedule_Results) String() string {
	str, _ := text.Marshal(0xd8f35ba8c9898970, capnp.Struct(s))
	return str
}

func (s SandstormCore_schedule_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SandstormCore_schedule_Results) DecodeFromPtr(p capnp.Ptr) SandstormCore_schedule_Results {
	return SandstormCore_schedule_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SandstormCore_schedule_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SandstormCore_schedule_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SandstormCore_schedule_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SandstormCore_schedule_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// SandstormCore_schedule_Results_List is a list of SandstormCore_schedule_Results.
type SandstormCore_schedule_Results_List = capnp.StructList[SandstormCore_schedule_Results]

// NewSandstormCore_schedule_Results creates a new list of SandstormCore_schedule_Results.
func NewSandstormCore_schedule_Results_List(s *capnp.Segment, sz int32) (SandstormCore_schedule_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[SandstormCore_schedule_Results](l), err
}

// SandstormCore_schedule_Results_Future is a wrapper for a SandstormCore_schedule_Results promised by a client call.
type SandstormCore_schedule_Results_Future struct{ *capnp.Future }

func (f SandstormCore_schedule_Results_Future) Struct() (SandstormCore_schedule_Results, error) {
	p, err := f.Future.Ptr()
	return SandstormCore_schedule_Results(p.Struct()), err
}

type MembraneRequirement capnp.Struct
type MembraneRequirement_permissionsHeld MembraneRequirement
type MembraneRequirement_Which uint16

const (
	MembraneRequirement_Which_tokenValid      MembraneRequirement_Which = 0
	MembraneRequirement_Which_permissionsHeld MembraneRequirement_Which = 1
	MembraneRequirement_Which_userIsAdmin     MembraneRequirement_Which = 2
)

func (w MembraneRequirement_Which) String() string {
	const s = "tokenValidpermissionsHelduserIsAdmin"
	switch w {
	case MembraneRequirement_Which_tokenValid:
		return s[0:10]
	case MembraneRequirement_Which_permissionsHeld:
		return s[10:25]
	case MembraneRequirement_Which_userIsAdmin:
		return s[25:36]

	}
	return "MembraneRequirement_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

type MembraneRequirement_permissionsHeld_Which uint16

const (
	MembraneRequirement_permissionsHeld_Which_accountId MembraneRequirement_permissionsHeld_Which = 0
	MembraneRequirement_permissionsHeld_Which_tokenId   MembraneRequirement_permissionsHeld_Which = 1
)

func (w MembraneRequirement_permissionsHeld_Which) String() string {
	const s = "accountIdtokenId"
	switch w {
	case MembraneRequirement_permissionsHeld_Which_accountId:
		return s[0:9]
	case MembraneRequirement_permissionsHeld_Which_tokenId:
		return s[9:16]

	}
	return "MembraneRequirement_permissionsHeld_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// MembraneRequirement_TypeID is the unique identifier for the type MembraneRequirement.
const MembraneRequirement_TypeID = 0x918db9a721f13886

func NewMembraneRequirement(s *capnp.Segment) (MembraneRequirement, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return MembraneRequirement(st), err
}

func NewRootMembraneRequirement(s *capnp.Segment) (MembraneRequirement, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return MembraneRequirement(st), err
}

func ReadRootMembraneRequirement(msg *capnp.Message) (MembraneRequirement, error) {
	root, err := msg.Root()
	return MembraneRequirement(root.Struct()), err
}

func (s MembraneRequirement) String() string {
	str, _ := text.Marshal(0x918db9a721f13886, capnp.Struct(s))
	return str
}

func (s MembraneRequirement) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (MembraneRequirement) DecodeFromPtr(p capnp.Ptr) MembraneRequirement {
	return MembraneRequirement(capnp.Struct{}.DecodeFromPtr(p))
}

func (s MembraneRequirement) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}

func (s MembraneRequirement) Which() MembraneRequirement_Which {
	return MembraneRequirement_Which(capnp.Struct(s).Uint16(0))
}
func (s MembraneRequirement) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s MembraneRequirement) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s MembraneRequirement) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s MembraneRequirement) TokenValid() (string, error) {
	if capnp.Struct(s).Uint16(0) != 0 {
		panic("Which() != tokenValid")
	}
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s MembraneRequirement) HasTokenValid() bool {
	if capnp.Struct(s).Uint16(0) != 0 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s MembraneRequirement) TokenValidBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s MembraneRequirement) SetTokenValid(v string) error {
	capnp.Struct(s).SetUint16(0, 0)
	return capnp.Struct(s).SetText(0, v)
}

func (s MembraneRequirement) PermissionsHeld() MembraneRequirement_permissionsHeld {
	return MembraneRequirement_permissionsHeld(s)
}

func (s MembraneRequirement) SetPermissionsHeld() {
	capnp.Struct(s).SetUint16(0, 1)
}

func (s MembraneRequirement_permissionsHeld) Which() MembraneRequirement_permissionsHeld_Which {
	return MembraneRequirement_permissionsHeld_Which(capnp.Struct(s).Uint16(2))
}
func (s MembraneRequirement_permissionsHeld) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s MembraneRequirement_permissionsHeld) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s MembraneRequirement_permissionsHeld) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s MembraneRequirement_permissionsHeld) AccountId() (string, error) {
	if capnp.Struct(s).Uint16(2) != 0 {
		panic("Which() != accountId")
	}
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s MembraneRequirement_permissionsHeld) HasAccountId() bool {
	if capnp.Struct(s).Uint16(2) != 0 {
		return false
	}
	return capnp.Struct(s).HasPtr(3)
}

func (s MembraneRequirement_permissionsHeld) AccountIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s MembraneRequirement_permissionsHeld) SetAccountId(v string) error {
	capnp.Struct(s).SetUint16(2, 0)
	return capnp.Struct(s).SetText(3, v)
}

func (s MembraneRequirement_permissionsHeld) TokenId() (string, error) {
	if capnp.Struct(s).Uint16(2) != 1 {
		panic("Which() != tokenId")
	}
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s MembraneRequirement_permissionsHeld) HasTokenId() bool {
	if capnp.Struct(s).Uint16(2) != 1 {
		return false
	}
	return capnp.Struct(s).HasPtr(3)
}

func (s MembraneRequirement_permissionsHeld) TokenIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s MembraneRequirement_permissionsHeld) SetTokenId(v string) error {
	capnp.Struct(s).SetUint16(2, 1)
	return capnp.Struct(s).SetText(3, v)
}

func (s MembraneRequirement_permissionsHeld) GrainId() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s MembraneRequirement_permissionsHeld) HasGrainId() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s MembraneRequirement_permissionsHeld) GrainIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s MembraneRequirement_permissionsHeld) SetGrainId(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s MembraneRequirement_permissionsHeld) Permissions() (capnp.BitList, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return capnp.BitList(p.List()), err
}

func (s MembraneRequirement_permissionsHeld) HasPermissions() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s MembraneRequirement_permissionsHeld) SetPermissions(v capnp.BitList) error {
	return capnp.Struct(s).SetPtr(2, v.ToPtr())
}

// NewPermissions sets the permissions field to a newly
// allocated capnp.BitList, preferring placement in s's segment.
func (s MembraneRequirement_permissionsHeld) NewPermissions(n int32) (capnp.BitList, error) {
	l, err := capnp.NewBitList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.BitList{}, err
	}
	err = capnp.Struct(s).SetPtr(2, l.ToPtr())
	return l, err
}
func (s MembraneRequirement_permissionsHeld) UserId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s MembraneRequirement_permissionsHeld) HasUserId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s MembraneRequirement_permissionsHeld) UserIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s MembraneRequirement_permissionsHeld) SetUserId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s MembraneRequirement) UserIsAdmin() (string, error) {
	if capnp.Struct(s).Uint16(0) != 2 {
		panic("Which() != userIsAdmin")
	}
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s MembraneRequirement) HasUserIsAdmin() bool {
	if capnp.Struct(s).Uint16(0) != 2 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s MembraneRequirement) UserIsAdminBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s MembraneRequirement) SetUserIsAdmin(v string) error {
	capnp.Struct(s).SetUint16(0, 2)
	return capnp.Struct(s).SetText(0, v)
}

// MembraneRequirement_List is a list of MembraneRequirement.
type MembraneRequirement_List = capnp.StructList[MembraneRequirement]

// NewMembraneRequirement creates a new list of MembraneRequirement.
func NewMembraneRequirement_List(s *capnp.Segment, sz int32) (MembraneRequirement_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return capnp.StructList[MembraneRequirement](l), err
}

// MembraneRequirement_Future is a wrapper for a MembraneRequirement promised by a client call.
type MembraneRequirement_Future struct{ *capnp.Future }

func (f MembraneRequirement_Future) Struct() (MembraneRequirement, error) {
	p, err := f.Future.Ptr()
	return MembraneRequirement(p.Struct()), err
}
func (p MembraneRequirement_Future) PermissionsHeld() MembraneRequirement_permissionsHeld_Future {
	return MembraneRequirement_permissionsHeld_Future{p.Future}
}

// MembraneRequirement_permissionsHeld_Future is a wrapper for a MembraneRequirement_permissionsHeld promised by a client call.
type MembraneRequirement_permissionsHeld_Future struct{ *capnp.Future }

func (f MembraneRequirement_permissionsHeld_Future) Struct() (MembraneRequirement_permissionsHeld, error) {
	p, err := f.Future.Ptr()
	return MembraneRequirement_permissionsHeld(p.Struct()), err
}

type SystemPersistent capnp.Client

// SystemPersistent_TypeID is the unique identifier for the type SystemPersistent.
const SystemPersistent_TypeID = 0xc38cedd77cbed5b4

func (c SystemPersistent) AddRequirements(ctx context.Context, params func(SystemPersistent_addRequirements_Params) error) (SystemPersistent_addRequirements_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SystemPersistent_addRequirements_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SystemPersistent_addRequirements_Results_Future{Future: ans.Future()}, release
}
func (c SystemPersistent) Save(ctx context.Context, params func(persistent.Persistent_SaveParams) error) (persistent.Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(persistent.Persistent_SaveParams(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return persistent.Persistent_SaveResults_Future{Future: ans.Future()}, release
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c SystemPersistent) String() string {
	return fmt.Sprintf("%T(%v)", c, capnp.Client(c))
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c SystemPersistent) AddRef() SystemPersistent {
	return SystemPersistent(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c SystemPersistent) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c SystemPersistent) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c SystemPersistent) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (SystemPersistent) DecodeFromPtr(p capnp.Ptr) SystemPersistent {
	return SystemPersistent(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c SystemPersistent) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c SystemPersistent) IsSame(other SystemPersistent) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c SystemPersistent) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c SystemPersistent) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
} // A SystemPersistent_Server is a SystemPersistent with a local implementation.
type SystemPersistent_Server interface {
	AddRequirements(context.Context, SystemPersistent_addRequirements) error

	Save(context.Context, persistent.Persistent_save) error
}

// SystemPersistent_NewServer creates a new Server from an implementation of SystemPersistent_Server.
func SystemPersistent_NewServer(s SystemPersistent_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(SystemPersistent_Methods(nil, s), s, c)
}

// SystemPersistent_ServerToClient creates a new Client from an implementation of SystemPersistent_Server.
// The caller is responsible for calling Release on the returned Client.
func SystemPersistent_ServerToClient(s SystemPersistent_Server) SystemPersistent {
	return SystemPersistent(capnp.NewClient(SystemPersistent_NewServer(s)))
}

// SystemPersistent_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func SystemPersistent_Methods(methods []server.Method, s SystemPersistent_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AddRequirements(ctx, SystemPersistent_addRequirements{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, persistent.Persistent_save{call})
		},
	})

	return methods
}

// SystemPersistent_addRequirements holds the state for a server call to SystemPersistent.addRequirements.
// See server.Call for documentation.
type SystemPersistent_addRequirements struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SystemPersistent_addRequirements) Args() SystemPersistent_addRequirements_Params {
	return SystemPersistent_addRequirements_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SystemPersistent_addRequirements) AllocResults() (SystemPersistent_addRequirements_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SystemPersistent_addRequirements_Results(r), err
}

// SystemPersistent_List is a list of SystemPersistent.
type SystemPersistent_List = capnp.CapList[SystemPersistent]

// NewSystemPersistent creates a new list of SystemPersistent.
func NewSystemPersistent_List(s *capnp.Segment, sz int32) (SystemPersistent_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[SystemPersistent](l), err
}

type SystemPersistent_RevocationObserver capnp.Client

// SystemPersistent_RevocationObserver_TypeID is the unique identifier for the type SystemPersistent_RevocationObserver.
const SystemPersistent_RevocationObserver_TypeID = 0xcdda9d1436d7d206

func (c SystemPersistent_RevocationObserver) DropWhenRevoked(ctx context.Context, params func(SystemPersistent_RevocationObserver_dropWhenRevoked_Params) error) (SystemPersistent_RevocationObserver_dropWhenRevoked_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xcdda9d1436d7d206,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent.RevocationObserver",
			MethodName:    "dropWhenRevoked",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(SystemPersistent_RevocationObserver_dropWhenRevoked_Params(s))
		}
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Results_Future{Future: ans.Future()}, release
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c SystemPersistent_RevocationObserver) String() string {
	return fmt.Sprintf("%T(%v)", c, capnp.Client(c))
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c SystemPersistent_RevocationObserver) AddRef() SystemPersistent_RevocationObserver {
	return SystemPersistent_RevocationObserver(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c SystemPersistent_RevocationObserver) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c SystemPersistent_RevocationObserver) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c SystemPersistent_RevocationObserver) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (SystemPersistent_RevocationObserver) DecodeFromPtr(p capnp.Ptr) SystemPersistent_RevocationObserver {
	return SystemPersistent_RevocationObserver(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c SystemPersistent_RevocationObserver) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c SystemPersistent_RevocationObserver) IsSame(other SystemPersistent_RevocationObserver) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c SystemPersistent_RevocationObserver) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c SystemPersistent_RevocationObserver) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
} // A SystemPersistent_RevocationObserver_Server is a SystemPersistent_RevocationObserver with a local implementation.
type SystemPersistent_RevocationObserver_Server interface {
	DropWhenRevoked(context.Context, SystemPersistent_RevocationObserver_dropWhenRevoked) error
}

// SystemPersistent_RevocationObserver_NewServer creates a new Server from an implementation of SystemPersistent_RevocationObserver_Server.
func SystemPersistent_RevocationObserver_NewServer(s SystemPersistent_RevocationObserver_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(SystemPersistent_RevocationObserver_Methods(nil, s), s, c)
}

// SystemPersistent_RevocationObserver_ServerToClient creates a new Client from an implementation of SystemPersistent_RevocationObserver_Server.
// The caller is responsible for calling Release on the returned Client.
func SystemPersistent_RevocationObserver_ServerToClient(s SystemPersistent_RevocationObserver_Server) SystemPersistent_RevocationObserver {
	return SystemPersistent_RevocationObserver(capnp.NewClient(SystemPersistent_RevocationObserver_NewServer(s)))
}

// SystemPersistent_RevocationObserver_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func SystemPersistent_RevocationObserver_Methods(methods []server.Method, s SystemPersistent_RevocationObserver_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xcdda9d1436d7d206,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent.RevocationObserver",
			MethodName:    "dropWhenRevoked",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DropWhenRevoked(ctx, SystemPersistent_RevocationObserver_dropWhenRevoked{call})
		},
	})

	return methods
}

// SystemPersistent_RevocationObserver_dropWhenRevoked holds the state for a server call to SystemPersistent_RevocationObserver.dropWhenRevoked.
// See server.Call for documentation.
type SystemPersistent_RevocationObserver_dropWhenRevoked struct {
	*server.Call
}

// Args returns the call's arguments.
func (c SystemPersistent_RevocationObserver_dropWhenRevoked) Args() SystemPersistent_RevocationObserver_dropWhenRevoked_Params {
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c SystemPersistent_RevocationObserver_dropWhenRevoked) AllocResults() (SystemPersistent_RevocationObserver_dropWhenRevoked_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Results(r), err
}

// SystemPersistent_RevocationObserver_List is a list of SystemPersistent_RevocationObserver.
type SystemPersistent_RevocationObserver_List = capnp.CapList[SystemPersistent_RevocationObserver]

// NewSystemPersistent_RevocationObserver creates a new list of SystemPersistent_RevocationObserver.
func NewSystemPersistent_RevocationObserver_List(s *capnp.Segment, sz int32) (SystemPersistent_RevocationObserver_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[SystemPersistent_RevocationObserver](l), err
}

type SystemPersistent_RevocationObserver_dropWhenRevoked_Params capnp.Struct

// SystemPersistent_RevocationObserver_dropWhenRevoked_Params_TypeID is the unique identifier for the type SystemPersistent_RevocationObserver_dropWhenRevoked_Params.
const SystemPersistent_RevocationObserver_dropWhenRevoked_Params_TypeID = 0xb4e04839aff27c71

func NewSystemPersistent_RevocationObserver_dropWhenRevoked_Params(s *capnp.Segment) (SystemPersistent_RevocationObserver_dropWhenRevoked_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Params(st), err
}

func NewRootSystemPersistent_RevocationObserver_dropWhenRevoked_Params(s *capnp.Segment) (SystemPersistent_RevocationObserver_dropWhenRevoked_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Params(st), err
}

func ReadRootSystemPersistent_RevocationObserver_dropWhenRevoked_Params(msg *capnp.Message) (SystemPersistent_RevocationObserver_dropWhenRevoked_Params, error) {
	root, err := msg.Root()
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Params(root.Struct()), err
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Params) String() string {
	str, _ := text.Marshal(0xb4e04839aff27c71, capnp.Struct(s))
	return str
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SystemPersistent_RevocationObserver_dropWhenRevoked_Params) DecodeFromPtr(p capnp.Ptr) SystemPersistent_RevocationObserver_dropWhenRevoked_Params {
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Params) Handle() util.Handle {
	p, _ := capnp.Struct(s).Ptr(0)
	return util.Handle(p.Interface().Client())
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Params) HasHandle() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Params) SetHandle(v util.Handle) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// SystemPersistent_RevocationObserver_dropWhenRevoked_Params_List is a list of SystemPersistent_RevocationObserver_dropWhenRevoked_Params.
type SystemPersistent_RevocationObserver_dropWhenRevoked_Params_List = capnp.StructList[SystemPersistent_RevocationObserver_dropWhenRevoked_Params]

// NewSystemPersistent_RevocationObserver_dropWhenRevoked_Params creates a new list of SystemPersistent_RevocationObserver_dropWhenRevoked_Params.
func NewSystemPersistent_RevocationObserver_dropWhenRevoked_Params_List(s *capnp.Segment, sz int32) (SystemPersistent_RevocationObserver_dropWhenRevoked_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SystemPersistent_RevocationObserver_dropWhenRevoked_Params](l), err
}

// SystemPersistent_RevocationObserver_dropWhenRevoked_Params_Future is a wrapper for a SystemPersistent_RevocationObserver_dropWhenRevoked_Params promised by a client call.
type SystemPersistent_RevocationObserver_dropWhenRevoked_Params_Future struct{ *capnp.Future }

func (f SystemPersistent_RevocationObserver_dropWhenRevoked_Params_Future) Struct() (SystemPersistent_RevocationObserver_dropWhenRevoked_Params, error) {
	p, err := f.Future.Ptr()
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Params(p.Struct()), err
}
func (p SystemPersistent_RevocationObserver_dropWhenRevoked_Params_Future) Handle() util.Handle {
	return util.Handle(p.Future.Field(0, nil).Client())
}

type SystemPersistent_RevocationObserver_dropWhenRevoked_Results capnp.Struct

// SystemPersistent_RevocationObserver_dropWhenRevoked_Results_TypeID is the unique identifier for the type SystemPersistent_RevocationObserver_dropWhenRevoked_Results.
const SystemPersistent_RevocationObserver_dropWhenRevoked_Results_TypeID = 0xfab3d7d326e64716

func NewSystemPersistent_RevocationObserver_dropWhenRevoked_Results(s *capnp.Segment) (SystemPersistent_RevocationObserver_dropWhenRevoked_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Results(st), err
}

func NewRootSystemPersistent_RevocationObserver_dropWhenRevoked_Results(s *capnp.Segment) (SystemPersistent_RevocationObserver_dropWhenRevoked_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Results(st), err
}

func ReadRootSystemPersistent_RevocationObserver_dropWhenRevoked_Results(msg *capnp.Message) (SystemPersistent_RevocationObserver_dropWhenRevoked_Results, error) {
	root, err := msg.Root()
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Results(root.Struct()), err
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Results) String() string {
	str, _ := text.Marshal(0xfab3d7d326e64716, capnp.Struct(s))
	return str
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SystemPersistent_RevocationObserver_dropWhenRevoked_Results) DecodeFromPtr(p capnp.Ptr) SystemPersistent_RevocationObserver_dropWhenRevoked_Results {
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SystemPersistent_RevocationObserver_dropWhenRevoked_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// SystemPersistent_RevocationObserver_dropWhenRevoked_Results_List is a list of SystemPersistent_RevocationObserver_dropWhenRevoked_Results.
type SystemPersistent_RevocationObserver_dropWhenRevoked_Results_List = capnp.StructList[SystemPersistent_RevocationObserver_dropWhenRevoked_Results]

// NewSystemPersistent_RevocationObserver_dropWhenRevoked_Results creates a new list of SystemPersistent_RevocationObserver_dropWhenRevoked_Results.
func NewSystemPersistent_RevocationObserver_dropWhenRevoked_Results_List(s *capnp.Segment, sz int32) (SystemPersistent_RevocationObserver_dropWhenRevoked_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[SystemPersistent_RevocationObserver_dropWhenRevoked_Results](l), err
}

// SystemPersistent_RevocationObserver_dropWhenRevoked_Results_Future is a wrapper for a SystemPersistent_RevocationObserver_dropWhenRevoked_Results promised by a client call.
type SystemPersistent_RevocationObserver_dropWhenRevoked_Results_Future struct{ *capnp.Future }

func (f SystemPersistent_RevocationObserver_dropWhenRevoked_Results_Future) Struct() (SystemPersistent_RevocationObserver_dropWhenRevoked_Results, error) {
	p, err := f.Future.Ptr()
	return SystemPersistent_RevocationObserver_dropWhenRevoked_Results(p.Struct()), err
}

type SystemPersistent_addRequirements_Params capnp.Struct

// SystemPersistent_addRequirements_Params_TypeID is the unique identifier for the type SystemPersistent_addRequirements_Params.
const SystemPersistent_addRequirements_Params_TypeID = 0xbb5eb0bde1481587

func NewSystemPersistent_addRequirements_Params(s *capnp.Segment) (SystemPersistent_addRequirements_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SystemPersistent_addRequirements_Params(st), err
}

func NewRootSystemPersistent_addRequirements_Params(s *capnp.Segment) (SystemPersistent_addRequirements_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SystemPersistent_addRequirements_Params(st), err
}

func ReadRootSystemPersistent_addRequirements_Params(msg *capnp.Message) (SystemPersistent_addRequirements_Params, error) {
	root, err := msg.Root()
	return SystemPersistent_addRequirements_Params(root.Struct()), err
}

func (s SystemPersistent_addRequirements_Params) String() string {
	str, _ := text.Marshal(0xbb5eb0bde1481587, capnp.Struct(s))
	return str
}

func (s SystemPersistent_addRequirements_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SystemPersistent_addRequirements_Params) DecodeFromPtr(p capnp.Ptr) SystemPersistent_addRequirements_Params {
	return SystemPersistent_addRequirements_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SystemPersistent_addRequirements_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SystemPersistent_addRequirements_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SystemPersistent_addRequirements_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SystemPersistent_addRequirements_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SystemPersistent_addRequirements_Params) Requirements() (MembraneRequirement_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return MembraneRequirement_List(p.List()), err
}

func (s SystemPersistent_addRequirements_Params) HasRequirements() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SystemPersistent_addRequirements_Params) SetRequirements(v MembraneRequirement_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewRequirements sets the requirements field to a newly
// allocated MembraneRequirement_List, preferring placement in s's segment.
func (s SystemPersistent_addRequirements_Params) NewRequirements(n int32) (MembraneRequirement_List, error) {
	l, err := NewMembraneRequirement_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return MembraneRequirement_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}
func (s SystemPersistent_addRequirements_Params) Observer() SystemPersistent_RevocationObserver {
	p, _ := capnp.Struct(s).Ptr(1)
	return SystemPersistent_RevocationObserver(p.Interface().Client())
}

func (s SystemPersistent_addRequirements_Params) HasObserver() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s SystemPersistent_addRequirements_Params) SetObserver(v SystemPersistent_RevocationObserver) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(1, in.ToPtr())
}

// SystemPersistent_addRequirements_Params_List is a list of SystemPersistent_addRequirements_Params.
type SystemPersistent_addRequirements_Params_List = capnp.StructList[SystemPersistent_addRequirements_Params]

// NewSystemPersistent_addRequirements_Params creates a new list of SystemPersistent_addRequirements_Params.
func NewSystemPersistent_addRequirements_Params_List(s *capnp.Segment, sz int32) (SystemPersistent_addRequirements_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[SystemPersistent_addRequirements_Params](l), err
}

// SystemPersistent_addRequirements_Params_Future is a wrapper for a SystemPersistent_addRequirements_Params promised by a client call.
type SystemPersistent_addRequirements_Params_Future struct{ *capnp.Future }

func (f SystemPersistent_addRequirements_Params_Future) Struct() (SystemPersistent_addRequirements_Params, error) {
	p, err := f.Future.Ptr()
	return SystemPersistent_addRequirements_Params(p.Struct()), err
}
func (p SystemPersistent_addRequirements_Params_Future) Observer() SystemPersistent_RevocationObserver {
	return SystemPersistent_RevocationObserver(p.Future.Field(1, nil).Client())
}

type SystemPersistent_addRequirements_Results capnp.Struct

// SystemPersistent_addRequirements_Results_TypeID is the unique identifier for the type SystemPersistent_addRequirements_Results.
const SystemPersistent_addRequirements_Results_TypeID = 0x8488d5d569f6cffe

func NewSystemPersistent_addRequirements_Results(s *capnp.Segment) (SystemPersistent_addRequirements_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SystemPersistent_addRequirements_Results(st), err
}

func NewRootSystemPersistent_addRequirements_Results(s *capnp.Segment) (SystemPersistent_addRequirements_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SystemPersistent_addRequirements_Results(st), err
}

func ReadRootSystemPersistent_addRequirements_Results(msg *capnp.Message) (SystemPersistent_addRequirements_Results, error) {
	root, err := msg.Root()
	return SystemPersistent_addRequirements_Results(root.Struct()), err
}

func (s SystemPersistent_addRequirements_Results) String() string {
	str, _ := text.Marshal(0x8488d5d569f6cffe, capnp.Struct(s))
	return str
}

func (s SystemPersistent_addRequirements_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SystemPersistent_addRequirements_Results) DecodeFromPtr(p capnp.Ptr) SystemPersistent_addRequirements_Results {
	return SystemPersistent_addRequirements_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SystemPersistent_addRequirements_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SystemPersistent_addRequirements_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SystemPersistent_addRequirements_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SystemPersistent_addRequirements_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SystemPersistent_addRequirements_Results) Cap() SystemPersistent {
	p, _ := capnp.Struct(s).Ptr(0)
	return SystemPersistent(p.Interface().Client())
}

func (s SystemPersistent_addRequirements_Results) HasCap() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SystemPersistent_addRequirements_Results) SetCap(v SystemPersistent) error {
	if !v.IsValid() {
		return capnp.Struct(s).SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(capnp.Client(v)))
	return capnp.Struct(s).SetPtr(0, in.ToPtr())
}

// SystemPersistent_addRequirements_Results_List is a list of SystemPersistent_addRequirements_Results.
type SystemPersistent_addRequirements_Results_List = capnp.StructList[SystemPersistent_addRequirements_Results]

// NewSystemPersistent_addRequirements_Results creates a new list of SystemPersistent_addRequirements_Results.
func NewSystemPersistent_addRequirements_Results_List(s *capnp.Segment, sz int32) (SystemPersistent_addRequirements_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[SystemPersistent_addRequirements_Results](l), err
}

// SystemPersistent_addRequirements_Results_Future is a wrapper for a SystemPersistent_addRequirements_Results promised by a client call.
type SystemPersistent_addRequirements_Results_Future struct{ *capnp.Future }

func (f SystemPersistent_addRequirements_Results_Future) Struct() (SystemPersistent_addRequirements_Results, error) {
	p, err := f.Future.Ptr()
	return SystemPersistent_addRequirements_Results(p.Struct()), err
}
func (p SystemPersistent_addRequirements_Results_Future) Cap() SystemPersistent {
	return SystemPersistent(p.Future.Field(0, nil).Client())
}

type PersistentHandle capnp.Client

// PersistentHandle_TypeID is the unique identifier for the type PersistentHandle.
const PersistentHandle_TypeID = 0xc22ce229c18c0a02

func (c PersistentHandle) AddRequirements(ctx context.Context, params func(SystemPersistent_addRequirements_Params) error) (SystemPersistent_addRequirements_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SystemPersistent_addRequirements_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SystemPersistent_addRequirements_Results_Future{Future: ans.Future()}, release
}
func (c PersistentHandle) Save(ctx context.Context, params func(persistent.Persistent_SaveParams) error) (persistent.Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(persistent.Persistent_SaveParams(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return persistent.Persistent_SaveResults_Future{Future: ans.Future()}, release
}
func (c PersistentHandle) Ping(ctx context.Context, params func(util.Handle_ping_Params) error) (util.Handle_ping_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x98f424ac606042e0,
			MethodID:      0,
			InterfaceName: "util.capnp:Handle",
			MethodName:    "ping",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(util.Handle_ping_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return util.Handle_ping_Results_Future{Future: ans.Future()}, release
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c PersistentHandle) String() string {
	return fmt.Sprintf("%T(%v)", c, capnp.Client(c))
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c PersistentHandle) AddRef() PersistentHandle {
	return PersistentHandle(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c PersistentHandle) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c PersistentHandle) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c PersistentHandle) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (PersistentHandle) DecodeFromPtr(p capnp.Ptr) PersistentHandle {
	return PersistentHandle(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c PersistentHandle) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c PersistentHandle) IsSame(other PersistentHandle) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c PersistentHandle) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c PersistentHandle) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
} // A PersistentHandle_Server is a PersistentHandle with a local implementation.
type PersistentHandle_Server interface {
	AddRequirements(context.Context, SystemPersistent_addRequirements) error

	Save(context.Context, persistent.Persistent_save) error

	Ping(context.Context, util.Handle_ping) error
}

// PersistentHandle_NewServer creates a new Server from an implementation of PersistentHandle_Server.
func PersistentHandle_NewServer(s PersistentHandle_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(PersistentHandle_Methods(nil, s), s, c)
}

// PersistentHandle_ServerToClient creates a new Client from an implementation of PersistentHandle_Server.
// The caller is responsible for calling Release on the returned Client.
func PersistentHandle_ServerToClient(s PersistentHandle_Server) PersistentHandle {
	return PersistentHandle(capnp.NewClient(PersistentHandle_NewServer(s)))
}

// PersistentHandle_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func PersistentHandle_Methods(methods []server.Method, s PersistentHandle_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AddRequirements(ctx, SystemPersistent_addRequirements{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, persistent.Persistent_save{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x98f424ac606042e0,
			MethodID:      0,
			InterfaceName: "util.capnp:Handle",
			MethodName:    "ping",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Ping(ctx, util.Handle_ping{call})
		},
	})

	return methods
}

// PersistentHandle_List is a list of PersistentHandle.
type PersistentHandle_List = capnp.CapList[PersistentHandle]

// NewPersistentHandle creates a new list of PersistentHandle.
func NewPersistentHandle_List(s *capnp.Segment, sz int32) (PersistentHandle_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[PersistentHandle](l), err
}

type PersistentOngoingNotification capnp.Client

// PersistentOngoingNotification_TypeID is the unique identifier for the type PersistentOngoingNotification.
const PersistentOngoingNotification_TypeID = 0xdbbdcec8587dd355

func (c PersistentOngoingNotification) AddRequirements(ctx context.Context, params func(SystemPersistent_addRequirements_Params) error) (SystemPersistent_addRequirements_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(SystemPersistent_addRequirements_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return SystemPersistent_addRequirements_Results_Future{Future: ans.Future()}, release
}
func (c PersistentOngoingNotification) Save(ctx context.Context, params func(persistent.Persistent_SaveParams) error) (persistent.Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(persistent.Persistent_SaveParams(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return persistent.Persistent_SaveResults_Future{Future: ans.Future()}, release
}
func (c PersistentOngoingNotification) Cancel(ctx context.Context, params func(activity.OngoingNotification_cancel_Params) error) (activity.OngoingNotification_cancel_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xfe851ddbb88940cd,
			MethodID:      0,
			InterfaceName: "activity.capnp:OngoingNotification",
			MethodName:    "cancel",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(activity.OngoingNotification_cancel_Params(s)) }
	}
	ans, release := capnp.Client(c).SendCall(ctx, s)
	return activity.OngoingNotification_cancel_Results_Future{Future: ans.Future()}, release
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c PersistentOngoingNotification) String() string {
	return fmt.Sprintf("%T(%v)", c, capnp.Client(c))
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c PersistentOngoingNotification) AddRef() PersistentOngoingNotification {
	return PersistentOngoingNotification(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c PersistentOngoingNotification) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c PersistentOngoingNotification) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c PersistentOngoingNotification) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (PersistentOngoingNotification) DecodeFromPtr(p capnp.Ptr) PersistentOngoingNotification {
	return PersistentOngoingNotification(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c PersistentOngoingNotification) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c PersistentOngoingNotification) IsSame(other PersistentOngoingNotification) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c PersistentOngoingNotification) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c PersistentOngoingNotification) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
} // A PersistentOngoingNotification_Server is a PersistentOngoingNotification with a local implementation.
type PersistentOngoingNotification_Server interface {
	AddRequirements(context.Context, SystemPersistent_addRequirements) error

	Save(context.Context, persistent.Persistent_save) error

	Cancel(context.Context, activity.OngoingNotification_cancel) error
}

// PersistentOngoingNotification_NewServer creates a new Server from an implementation of PersistentOngoingNotification_Server.
func PersistentOngoingNotification_NewServer(s PersistentOngoingNotification_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(PersistentOngoingNotification_Methods(nil, s), s, c)
}

// PersistentOngoingNotification_ServerToClient creates a new Client from an implementation of PersistentOngoingNotification_Server.
// The caller is responsible for calling Release on the returned Client.
func PersistentOngoingNotification_ServerToClient(s PersistentOngoingNotification_Server) PersistentOngoingNotification {
	return PersistentOngoingNotification(capnp.NewClient(PersistentOngoingNotification_NewServer(s)))
}

// PersistentOngoingNotification_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func PersistentOngoingNotification_Methods(methods []server.Method, s PersistentOngoingNotification_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc38cedd77cbed5b4,
			MethodID:      0,
			InterfaceName: "supervisor.capnp:SystemPersistent",
			MethodName:    "addRequirements",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AddRequirements(ctx, SystemPersistent_addRequirements{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, persistent.Persistent_save{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfe851ddbb88940cd,
			MethodID:      0,
			InterfaceName: "activity.capnp:OngoingNotification",
			MethodName:    "cancel",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Cancel(ctx, activity.OngoingNotification_cancel{call})
		},
	})

	return methods
}

// PersistentOngoingNotification_List is a list of PersistentOngoingNotification.
type PersistentOngoingNotification_List = capnp.CapList[PersistentOngoingNotification]

// NewPersistentOngoingNotification creates a new list of PersistentOngoingNotification.
func NewPersistentOngoingNotification_List(s *capnp.Segment, sz int32) (PersistentOngoingNotification_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[PersistentOngoingNotification](l), err
}

type DenormalizedGrainMetadata capnp.Struct
type DenormalizedGrainMetadata_icon DenormalizedGrainMetadata
type DenormalizedGrainMetadata_Which uint16

const (
	DenormalizedGrainMetadata_Which_icon  DenormalizedGrainMetadata_Which = 0
	DenormalizedGrainMetadata_Which_appId DenormalizedGrainMetadata_Which = 1
)

func (w DenormalizedGrainMetadata_Which) String() string {
	const s = "iconappId"
	switch w {
	case DenormalizedGrainMetadata_Which_icon:
		return s[0:4]
	case DenormalizedGrainMetadata_Which_appId:
		return s[4:9]

	}
	return "DenormalizedGrainMetadata_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// DenormalizedGrainMetadata_TypeID is the unique identifier for the type DenormalizedGrainMetadata.
const DenormalizedGrainMetadata_TypeID = 0xbdd9bea5585df6c5

func NewDenormalizedGrainMetadata(s *capnp.Segment) (DenormalizedGrainMetadata, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return DenormalizedGrainMetadata(st), err
}

func NewRootDenormalizedGrainMetadata(s *capnp.Segment) (DenormalizedGrainMetadata, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return DenormalizedGrainMetadata(st), err
}

func ReadRootDenormalizedGrainMetadata(msg *capnp.Message) (DenormalizedGrainMetadata, error) {
	root, err := msg.Root()
	return DenormalizedGrainMetadata(root.Struct()), err
}

func (s DenormalizedGrainMetadata) String() string {
	str, _ := text.Marshal(0xbdd9bea5585df6c5, capnp.Struct(s))
	return str
}

func (s DenormalizedGrainMetadata) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (DenormalizedGrainMetadata) DecodeFromPtr(p capnp.Ptr) DenormalizedGrainMetadata {
	return DenormalizedGrainMetadata(capnp.Struct{}.DecodeFromPtr(p))
}

func (s DenormalizedGrainMetadata) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}

func (s DenormalizedGrainMetadata) Which() DenormalizedGrainMetadata_Which {
	return DenormalizedGrainMetadata_Which(capnp.Struct(s).Uint16(0))
}
func (s DenormalizedGrainMetadata) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s DenormalizedGrainMetadata) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s DenormalizedGrainMetadata) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s DenormalizedGrainMetadata) AppTitle() (util.LocalizedText, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return util.LocalizedText(p.Struct()), err
}

func (s DenormalizedGrainMetadata) HasAppTitle() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s DenormalizedGrainMetadata) SetAppTitle(v util.LocalizedText) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewAppTitle sets the appTitle field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s DenormalizedGrainMetadata) NewAppTitle() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(capnp.Struct(s).Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s DenormalizedGrainMetadata) Icon() DenormalizedGrainMetadata_icon {
	return DenormalizedGrainMetadata_icon(s)
}

func (s DenormalizedGrainMetadata) SetIcon() {
	capnp.Struct(s).SetUint16(0, 0)
}

func (s DenormalizedGrainMetadata_icon) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s DenormalizedGrainMetadata_icon) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s DenormalizedGrainMetadata_icon) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s DenormalizedGrainMetadata_icon) Format() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s DenormalizedGrainMetadata_icon) HasFormat() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s DenormalizedGrainMetadata_icon) FormatBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s DenormalizedGrainMetadata_icon) SetFormat(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s DenormalizedGrainMetadata_icon) AssetId() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s DenormalizedGrainMetadata_icon) HasAssetId() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s DenormalizedGrainMetadata_icon) AssetIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s DenormalizedGrainMetadata_icon) SetAssetId(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s DenormalizedGrainMetadata_icon) AssetId2xDpi() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s DenormalizedGrainMetadata_icon) HasAssetId2xDpi() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s DenormalizedGrainMetadata_icon) AssetId2xDpiBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s DenormalizedGrainMetadata_icon) SetAssetId2xDpi(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s DenormalizedGrainMetadata) AppId() (string, error) {
	if capnp.Struct(s).Uint16(0) != 1 {
		panic("Which() != appId")
	}
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s DenormalizedGrainMetadata) HasAppId() bool {
	if capnp.Struct(s).Uint16(0) != 1 {
		return false
	}
	return capnp.Struct(s).HasPtr(1)
}

func (s DenormalizedGrainMetadata) AppIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s DenormalizedGrainMetadata) SetAppId(v string) error {
	capnp.Struct(s).SetUint16(0, 1)
	return capnp.Struct(s).SetText(1, v)
}

// DenormalizedGrainMetadata_List is a list of DenormalizedGrainMetadata.
type DenormalizedGrainMetadata_List = capnp.StructList[DenormalizedGrainMetadata]

// NewDenormalizedGrainMetadata creates a new list of DenormalizedGrainMetadata.
func NewDenormalizedGrainMetadata_List(s *capnp.Segment, sz int32) (DenormalizedGrainMetadata_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return capnp.StructList[DenormalizedGrainMetadata](l), err
}

// DenormalizedGrainMetadata_Future is a wrapper for a DenormalizedGrainMetadata promised by a client call.
type DenormalizedGrainMetadata_Future struct{ *capnp.Future }

func (f DenormalizedGrainMetadata_Future) Struct() (DenormalizedGrainMetadata, error) {
	p, err := f.Future.Ptr()
	return DenormalizedGrainMetadata(p.Struct()), err
}
func (p DenormalizedGrainMetadata_Future) AppTitle() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(0, nil)}
}
func (p DenormalizedGrainMetadata_Future) Icon() DenormalizedGrainMetadata_icon_Future {
	return DenormalizedGrainMetadata_icon_Future{p.Future}
}

// DenormalizedGrainMetadata_icon_Future is a wrapper for a DenormalizedGrainMetadata_icon promised by a client call.
type DenormalizedGrainMetadata_icon_Future struct{ *capnp.Future }

func (f DenormalizedGrainMetadata_icon_Future) Struct() (DenormalizedGrainMetadata_icon, error) {
	p, err := f.Future.Ptr()
	return DenormalizedGrainMetadata_icon(p.Struct()), err
}

type ApiTokenOwner capnp.Struct
type ApiTokenOwner_grain ApiTokenOwner
type ApiTokenOwner_clientPowerboxRequest ApiTokenOwner
type ApiTokenOwner_clientPowerboxOffer ApiTokenOwner
type ApiTokenOwner_user ApiTokenOwner
type ApiTokenOwner_Which uint16

const (
	ApiTokenOwner_Which_webkey                ApiTokenOwner_Which = 0
	ApiTokenOwner_Which_grain                 ApiTokenOwner_Which = 1
	ApiTokenOwner_Which_clientPowerboxRequest ApiTokenOwner_Which = 5
	ApiTokenOwner_Which_clientPowerboxOffer   ApiTokenOwner_Which = 6
	ApiTokenOwner_Which_internet              ApiTokenOwner_Which = 2
	ApiTokenOwner_Which_frontend              ApiTokenOwner_Which = 3
	ApiTokenOwner_Which_user                  ApiTokenOwner_Which = 4
)

func (w ApiTokenOwner_Which) String() string {
	const s = "webkeygrainclientPowerboxRequestclientPowerboxOfferinternetfrontenduser"
	switch w {
	case ApiTokenOwner_Which_webkey:
		return s[0:6]
	case ApiTokenOwner_Which_grain:
		return s[6:11]
	case ApiTokenOwner_Which_clientPowerboxRequest:
		return s[11:32]
	case ApiTokenOwner_Which_clientPowerboxOffer:
		return s[32:51]
	case ApiTokenOwner_Which_internet:
		return s[51:59]
	case ApiTokenOwner_Which_frontend:
		return s[59:67]
	case ApiTokenOwner_Which_user:
		return s[67:71]

	}
	return "ApiTokenOwner_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// ApiTokenOwner_TypeID is the unique identifier for the type ApiTokenOwner.
const ApiTokenOwner_TypeID = 0xda970537e2a8a9a9

func NewApiTokenOwner(s *capnp.Segment) (ApiTokenOwner, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return ApiTokenOwner(st), err
}

func NewRootApiTokenOwner(s *capnp.Segment) (ApiTokenOwner, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return ApiTokenOwner(st), err
}

func ReadRootApiTokenOwner(msg *capnp.Message) (ApiTokenOwner, error) {
	root, err := msg.Root()
	return ApiTokenOwner(root.Struct()), err
}

func (s ApiTokenOwner) String() string {
	str, _ := text.Marshal(0xda970537e2a8a9a9, capnp.Struct(s))
	return str
}

func (s ApiTokenOwner) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ApiTokenOwner) DecodeFromPtr(p capnp.Ptr) ApiTokenOwner {
	return ApiTokenOwner(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ApiTokenOwner) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}

func (s ApiTokenOwner) Which() ApiTokenOwner_Which {
	return ApiTokenOwner_Which(capnp.Struct(s).Uint16(0))
}
func (s ApiTokenOwner) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ApiTokenOwner) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ApiTokenOwner) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ApiTokenOwner) SetWebkey() {
	capnp.Struct(s).SetUint16(0, 0)

}

func (s ApiTokenOwner) Grain() ApiTokenOwner_grain { return ApiTokenOwner_grain(s) }

func (s ApiTokenOwner) SetGrain() {
	capnp.Struct(s).SetUint16(0, 1)
}

func (s ApiTokenOwner_grain) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ApiTokenOwner_grain) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ApiTokenOwner_grain) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ApiTokenOwner_grain) GrainId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s ApiTokenOwner_grain) HasGrainId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ApiTokenOwner_grain) GrainIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_grain) SetGrainId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s ApiTokenOwner_grain) SaveLabel() (util.LocalizedText, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return util.LocalizedText(p.Struct()), err
}

func (s ApiTokenOwner_grain) HasSaveLabel() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s ApiTokenOwner_grain) SetSaveLabel(v util.LocalizedText) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewSaveLabel sets the saveLabel field to a newly
// allocated util.LocalizedText struct, preferring placement in s's segment.
func (s ApiTokenOwner_grain) NewSaveLabel() (util.LocalizedText, error) {
	ss, err := util.NewLocalizedText(capnp.Struct(s).Segment())
	if err != nil {
		return util.LocalizedText{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s ApiTokenOwner_grain) IntroducerIdentity() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s ApiTokenOwner_grain) HasIntroducerIdentity() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s ApiTokenOwner_grain) IntroducerIdentityBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_grain) SetIntroducerIdentity(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s ApiTokenOwner_grain) IntroducerUser() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s ApiTokenOwner_grain) HasIntroducerUser() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s ApiTokenOwner_grain) IntroducerUserBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_grain) SetIntroducerUser(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s ApiTokenOwner) ClientPowerboxRequest() ApiTokenOwner_clientPowerboxRequest {
	return ApiTokenOwner_clientPowerboxRequest(s)
}

func (s ApiTokenOwner) SetClientPowerboxRequest() {
	capnp.Struct(s).SetUint16(0, 5)
}

func (s ApiTokenOwner_clientPowerboxRequest) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ApiTokenOwner_clientPowerboxRequest) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ApiTokenOwner_clientPowerboxRequest) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ApiTokenOwner_clientPowerboxRequest) SessionId() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s ApiTokenOwner_clientPowerboxRequest) HasSessionId() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s ApiTokenOwner_clientPowerboxRequest) SessionIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_clientPowerboxRequest) SetSessionId(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s ApiTokenOwner_clientPowerboxRequest) GrainId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s ApiTokenOwner_clientPowerboxRequest) HasGrainId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ApiTokenOwner_clientPowerboxRequest) GrainIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_clientPowerboxRequest) SetGrainId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s ApiTokenOwner_clientPowerboxRequest) IntroducerIdentity() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s ApiTokenOwner_clientPowerboxRequest) HasIntroducerIdentity() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s ApiTokenOwner_clientPowerboxRequest) IntroducerIdentityBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_clientPowerboxRequest) SetIntroducerIdentity(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s ApiTokenOwner) ClientPowerboxOffer() ApiTokenOwner_clientPowerboxOffer {
	return ApiTokenOwner_clientPowerboxOffer(s)
}

func (s ApiTokenOwner) SetClientPowerboxOffer() {
	capnp.Struct(s).SetUint16(0, 6)
}

func (s ApiTokenOwner_clientPowerboxOffer) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ApiTokenOwner_clientPowerboxOffer) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ApiTokenOwner_clientPowerboxOffer) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ApiTokenOwner_clientPowerboxOffer) SessionId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s ApiTokenOwner_clientPowerboxOffer) HasSessionId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ApiTokenOwner_clientPowerboxOffer) SessionIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_clientPowerboxOffer) SetSessionId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s ApiTokenOwner) Internet() (capnp.Ptr, error) {
	if capnp.Struct(s).Uint16(0) != 2 {
		panic("Which() != internet")
	}
	return capnp.Struct(s).Ptr(0)
}

func (s ApiTokenOwner) HasInternet() bool {
	if capnp.Struct(s).Uint16(0) != 2 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s ApiTokenOwner) SetInternet(v capnp.Ptr) error {
	capnp.Struct(s).SetUint16(0, 2)
	return capnp.Struct(s).SetPtr(0, v)
}
func (s ApiTokenOwner) SetFrontend() {
	capnp.Struct(s).SetUint16(0, 3)

}

func (s ApiTokenOwner) User() ApiTokenOwner_user { return ApiTokenOwner_user(s) }

func (s ApiTokenOwner) SetUser() {
	capnp.Struct(s).SetUint16(0, 4)
}

func (s ApiTokenOwner_user) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ApiTokenOwner_user) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ApiTokenOwner_user) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ApiTokenOwner_user) AccountId() (string, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return p.Text(), err
}

func (s ApiTokenOwner_user) HasAccountId() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s ApiTokenOwner_user) AccountIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_user) SetAccountId(v string) error {
	return capnp.Struct(s).SetText(5, v)
}

func (s ApiTokenOwner_user) IdentityId() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s ApiTokenOwner_user) HasIdentityId() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s ApiTokenOwner_user) IdentityIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_user) SetIdentityId(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s ApiTokenOwner_user) Title() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s ApiTokenOwner_user) HasTitle() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s ApiTokenOwner_user) TitleBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_user) SetTitle(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s ApiTokenOwner_user) DenormalizedGrainMetadata() (DenormalizedGrainMetadata, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return DenormalizedGrainMetadata(p.Struct()), err
}

func (s ApiTokenOwner_user) HasDenormalizedGrainMetadata() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s ApiTokenOwner_user) SetDenormalizedGrainMetadata(v DenormalizedGrainMetadata) error {
	return capnp.Struct(s).SetPtr(2, capnp.Struct(v).ToPtr())
}

// NewDenormalizedGrainMetadata sets the denormalizedGrainMetadata field to a newly
// allocated DenormalizedGrainMetadata struct, preferring placement in s's segment.
func (s ApiTokenOwner_user) NewDenormalizedGrainMetadata() (DenormalizedGrainMetadata, error) {
	ss, err := NewDenormalizedGrainMetadata(capnp.Struct(s).Segment())
	if err != nil {
		return DenormalizedGrainMetadata{}, err
	}
	err = capnp.Struct(s).SetPtr(2, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s ApiTokenOwner_user) UserId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s ApiTokenOwner_user) HasUserId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ApiTokenOwner_user) UserIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_user) SetUserId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s ApiTokenOwner_user) UpstreamTitle() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s ApiTokenOwner_user) HasUpstreamTitle() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s ApiTokenOwner_user) UpstreamTitleBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s ApiTokenOwner_user) SetUpstreamTitle(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

func (s ApiTokenOwner_user) Renamed() bool {
	return capnp.Struct(s).Bit(16)
}

func (s ApiTokenOwner_user) SetRenamed(v bool) {
	capnp.Struct(s).SetBit(16, v)
}

func (s ApiTokenOwner_user) SeenAllActivity() bool {
	return capnp.Struct(s).Bit(17)
}

func (s ApiTokenOwner_user) SetSeenAllActivity(v bool) {
	capnp.Struct(s).SetBit(17, v)
}

// ApiTokenOwner_List is a list of ApiTokenOwner.
type ApiTokenOwner_List = capnp.StructList[ApiTokenOwner]

// NewApiTokenOwner creates a new list of ApiTokenOwner.
func NewApiTokenOwner_List(s *capnp.Segment, sz int32) (ApiTokenOwner_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6}, sz)
	return capnp.StructList[ApiTokenOwner](l), err
}

// ApiTokenOwner_Future is a wrapper for a ApiTokenOwner promised by a client call.
type ApiTokenOwner_Future struct{ *capnp.Future }

func (f ApiTokenOwner_Future) Struct() (ApiTokenOwner, error) {
	p, err := f.Future.Ptr()
	return ApiTokenOwner(p.Struct()), err
}
func (p ApiTokenOwner_Future) Grain() ApiTokenOwner_grain_Future {
	return ApiTokenOwner_grain_Future{p.Future}
}

// ApiTokenOwner_grain_Future is a wrapper for a ApiTokenOwner_grain promised by a client call.
type ApiTokenOwner_grain_Future struct{ *capnp.Future }

func (f ApiTokenOwner_grain_Future) Struct() (ApiTokenOwner_grain, error) {
	p, err := f.Future.Ptr()
	return ApiTokenOwner_grain(p.Struct()), err
}
func (p ApiTokenOwner_grain_Future) SaveLabel() util.LocalizedText_Future {
	return util.LocalizedText_Future{Future: p.Future.Field(1, nil)}
}
func (p ApiTokenOwner_Future) ClientPowerboxRequest() ApiTokenOwner_clientPowerboxRequest_Future {
	return ApiTokenOwner_clientPowerboxRequest_Future{p.Future}
}

// ApiTokenOwner_clientPowerboxRequest_Future is a wrapper for a ApiTokenOwner_clientPowerboxRequest promised by a client call.
type ApiTokenOwner_clientPowerboxRequest_Future struct{ *capnp.Future }

func (f ApiTokenOwner_clientPowerboxRequest_Future) Struct() (ApiTokenOwner_clientPowerboxRequest, error) {
	p, err := f.Future.Ptr()
	return ApiTokenOwner_clientPowerboxRequest(p.Struct()), err
}
func (p ApiTokenOwner_Future) ClientPowerboxOffer() ApiTokenOwner_clientPowerboxOffer_Future {
	return ApiTokenOwner_clientPowerboxOffer_Future{p.Future}
}

// ApiTokenOwner_clientPowerboxOffer_Future is a wrapper for a ApiTokenOwner_clientPowerboxOffer promised by a client call.
type ApiTokenOwner_clientPowerboxOffer_Future struct{ *capnp.Future }

func (f ApiTokenOwner_clientPowerboxOffer_Future) Struct() (ApiTokenOwner_clientPowerboxOffer, error) {
	p, err := f.Future.Ptr()
	return ApiTokenOwner_clientPowerboxOffer(p.Struct()), err
}
func (p ApiTokenOwner_Future) Internet() *capnp.Future {
	return p.Future.Field(0, nil)
}
func (p ApiTokenOwner_Future) User() ApiTokenOwner_user_Future {
	return ApiTokenOwner_user_Future{p.Future}
}

// ApiTokenOwner_user_Future is a wrapper for a ApiTokenOwner_user promised by a client call.
type ApiTokenOwner_user_Future struct{ *capnp.Future }

func (f ApiTokenOwner_user_Future) Struct() (ApiTokenOwner_user, error) {
	p, err := f.Future.Ptr()
	return ApiTokenOwner_user(p.Struct()), err
}
func (p ApiTokenOwner_user_Future) DenormalizedGrainMetadata() DenormalizedGrainMetadata_Future {
	return DenormalizedGrainMetadata_Future{Future: p.Future.Field(2, nil)}
}

type SupervisorObjectId capnp.Struct
type SupervisorObjectId_Which uint16

const (
	SupervisorObjectId_Which_appRef               SupervisorObjectId_Which = 0
	SupervisorObjectId_Which_wakeLockNotification SupervisorObjectId_Which = 1
)

func (w SupervisorObjectId_Which) String() string {
	const s = "appRefwakeLockNotification"
	switch w {
	case SupervisorObjectId_Which_appRef:
		return s[0:6]
	case SupervisorObjectId_Which_wakeLockNotification:
		return s[6:26]

	}
	return "SupervisorObjectId_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// SupervisorObjectId_TypeID is the unique identifier for the type SupervisorObjectId.
const SupervisorObjectId_TypeID = 0x8e74650737dbb840

func NewSupervisorObjectId(s *capnp.Segment) (SupervisorObjectId, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SupervisorObjectId(st), err
}

func NewRootSupervisorObjectId(s *capnp.Segment) (SupervisorObjectId, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SupervisorObjectId(st), err
}

func ReadRootSupervisorObjectId(msg *capnp.Message) (SupervisorObjectId, error) {
	root, err := msg.Root()
	return SupervisorObjectId(root.Struct()), err
}

func (s SupervisorObjectId) String() string {
	str, _ := text.Marshal(0x8e74650737dbb840, capnp.Struct(s))
	return str
}

func (s SupervisorObjectId) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SupervisorObjectId) DecodeFromPtr(p capnp.Ptr) SupervisorObjectId {
	return SupervisorObjectId(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SupervisorObjectId) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}

func (s SupervisorObjectId) Which() SupervisorObjectId_Which {
	return SupervisorObjectId_Which(capnp.Struct(s).Uint16(0))
}
func (s SupervisorObjectId) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SupervisorObjectId) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SupervisorObjectId) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SupervisorObjectId) AppRef() (capnp.Ptr, error) {
	if capnp.Struct(s).Uint16(0) != 0 {
		panic("Which() != appRef")
	}
	return capnp.Struct(s).Ptr(0)
}

func (s SupervisorObjectId) HasAppRef() bool {
	if capnp.Struct(s).Uint16(0) != 0 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s SupervisorObjectId) SetAppRef(v capnp.Ptr) error {
	capnp.Struct(s).SetUint16(0, 0)
	return capnp.Struct(s).SetPtr(0, v)
}
func (s SupervisorObjectId) WakeLockNotification() uint32 {
	if capnp.Struct(s).Uint16(0) != 1 {
		panic("Which() != wakeLockNotification")
	}
	return capnp.Struct(s).Uint32(4)
}

func (s SupervisorObjectId) SetWakeLockNotification(v uint32) {
	capnp.Struct(s).SetUint16(0, 1)
	capnp.Struct(s).SetUint32(4, v)
}

// SupervisorObjectId_List is a list of SupervisorObjectId.
type SupervisorObjectId_List = capnp.StructList[SupervisorObjectId]

// NewSupervisorObjectId creates a new list of SupervisorObjectId.
func NewSupervisorObjectId_List(s *capnp.Segment, sz int32) (SupervisorObjectId_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[SupervisorObjectId](l), err
}

// SupervisorObjectId_Future is a wrapper for a SupervisorObjectId promised by a client call.
type SupervisorObjectId_Future struct{ *capnp.Future }

func (f SupervisorObjectId_Future) Struct() (SupervisorObjectId, error) {
	p, err := f.Future.Ptr()
	return SupervisorObjectId(p.Struct()), err
}
func (p SupervisorObjectId_Future) AppRef() *capnp.Future {
	return p.Future.Field(0, nil)
}

const schema_c7205d6d32c7b040 = "x\xda\xacZ\x0ft\x15\xe5\x95\xbf\xf7\x9b\x97L\xd0\xc4" +
	"\x97aB[+\xe1\x09'!$\x0b!\x80.\x88\xc5" +
	"$h\x84PX2\x01\xc4\xba\xb5\xeb\xe4\xbd/\xc9#" +
	"/\xef=f&\x84\xa0,\x95\x95\x95\xb4X\x8b]\xff" +
	"\x81\xac\x7f*\xab\xe0\x1f\x94E-\xddbE\xab\x88J" +
	"UZ\xa4Hm\x05\xd7Z<K\x8bE=\xa2\xc0\xec" +
	"\xb93\xf3\xcd\x1b\x92\xf7\x08T\x8f\xe7x\xe0\xcd7\xf7" +
	"\xfb\xee\xfd~\xf7w\x7f\xf7\x0e5\xa1p]h\\Q" +
	"d2\xb09\x0f\xb2\xbc|\xfb\xa1\xbf\xee~d\xfb/" +
	"?\xf8>(C\x11 $\x03L\xf8d\xe8\x0c\x84\x90" +
	"}\xf2\xf5O\xe3{\xf6\xac\xbc\x09\x94\x11\x08\x90\x87\xf4" +
	"\xe8\xc0\xd0\xdd\x08\xa8~2\xb4\x16\xd0\xbe\xe7\xc8\xa6_" +
	"E\x8e\xbe\xb6\x02\x94\xa1\xcc\xae\x997):|\xbbv" +
	"7\x00N\x18R\xda\x8cje\xa9\x0c\xa0\x96\x97\xce\x06" +
	"\xb4_h\xf8\xc5\x9c\xd9\x7fm[\x09JDlR_" +
	"\xca\x18\x84l\xcdz\xe5\x0f\xc7\x9f]\xbe\x12\xb4\x08\xa2" +
	"\xbda\xc3\xc3\x07'\xe6\xdd\xf96\x0c\xc9\x97\x11`\xc2" +
	"\xc5\xa5kh\xbb\x86R\xdan\xd1\xce\xd1\x7f\xbc\xbds" +
	"\x95g\xc4=O\xbct0\x03Tot\x16\x84\xa7\xbc" +
	"t\xfdE\xfb\x1fY\xe9\xba\xe2.\xb8\xbft9Yx" +
	"\xccYP\xf7\xb3\xfd\x13en\xfd\x084\x05\xd1\xae{" +
	"b\xc7\xf8\xcek/\xdc\x01\x0d(\xb3b\x9c\xb0\xabt" +
	"\x04\xaa\xef8\xa7\xdeW\xda\x0d\xa0\xce\x1b\x16\xb6\xef\xe8" +
	"m\xf8\xc3[\xda\xc8\x1f\x836\x14\xc5\xd1g\x0dsN" +
	"u\xed0\xb2\xf9\xef\x93>\x1a\xfe\xd0\xd6[V\xf7\xb5" +
	"\x19\x92%\x80\x09K\x87U\xa1z\xcb0\xb2\xd9;l" +
	"\x13\xa0\xfd\xcc\xe6\xa7\xff\xb6\xb0\xe2\xd0mA'\x94\xc8" +
	"\x12\xb2W\x1a!{\x8f\xbe\xf5\xdes\xabz~\xf4\x93" +
	"\xe0\x82)\x91Wh\x81\xe6,\xb8\xf7;\x17\xbe\xb7o" +
	"\xec\x17w\x04\xbd\\\x18i\xa1\x05K\x9d\x05\xbd\xff5" +
	"v\xfb\xc4\x9a\xbc\xbb\x82\x0b\xd6E\x16\xd0\x82\x0d\xce\x02" +
	"\xff\xaa\x14E\xca\x9c\x18P\xdd\x199\xa8\xee\x89|\x9d" +
	"\xee9r3S\xef\x1f.\x03\xd8\x17>\xb1\xf9\xf0\xf4" +
	"\xed\xe5k\xbd\x03Id\xaew\xf8F2w\xf7pr" +
	"\xa9\xf0\xe9\xffx`\xf1\xfc\x07\xd7\xf63\xd70\xe2s" +
	"U\x1b\xe1Dl\xc4\x0e\xa6N)#s\xc3\x8bb\xd3" +
	"\xef\xc1\x9b\xd7\x05\xa0P^\xb6\x9b\xf0\xf6\x03\xf5\xe6\xe3" +
	"W.X\xff\x9fA\xcf\xcf/\xdbL\x1bU\x96\xd1\xb9" +
	"WG\x9a\xa7o\xfd\xed\x1d\xf7\x06\x174\x96\xfd\x80\x16" +
	"|\xc7Y\xd0}\xd9\xfc\xef7\x15l\xb9/\x80\xe5\x9e" +
	"2\x83l?r]r\xd2\xe6\x99\xefo\xf4b\xe28" +
	"\xc1\xcb\xae\xa1W\x17\x96\x91\x13G?\xee\xf9\xed\xc5\xdf" +
	"\xdb\xfe\xb8\x83C\xef\xdd\xe1\xe5\xce\xe6\xe3\xca\xc9\xf6\xa5" +
	"\xab\x16\xaf\x9dY\xf4\xadM\xc1\xa8j\xe5S\x9d\xcd\x9d" +
	"\x05s\x7f\xf9\xf1\xfe\x9f\xbcel\x0a8\xd6S~\x0e" +
	"a|\xe1\x0d\x7f\xdbt\xc9\xf4w\xb7\x80rq\xe6\xc6" +
	"\xca[\x08\xb8\xb78\xaf\xaa\x8fl\xdd\xfb\xde\xc2\xe2\xad" +
	"A\xc7\x1e+\x7f\x80los\x16\x8c\xd8\xfc\x97\xd2\xc6" +
	"\x13\xe7\xff<\xe0\xd8;\xe5K\xc81\xe9\x9b\xf5\x93\x97" +
	"\xdd\xfb\xc3\xe0\x93\x9d\xe5\xcb\xe9\xc9\xcdC\xa6\x1f\xd8\xf6" +
	"\xc4\xf7\xfe\xc7K_F\x8f\x9e*w\x80\xb4\xb3\xbc\x1b" +
	"\xd0~\xf1\xd3k\xaf^\xff\xec\xbem\xfd\x91\xcb\x08s" +
	"#\xafAU\x1bI\xc8\x9d5\x92\"\x94w\xde\x17[" +
	">|\xe6\xd6\xe7\x82\x99\xb0kd\x15y\xf1\xfeH:" +
	"\xe49\x85[,\xe5\x91\xe6\xed\xde\x02\xd7\x8d\xbc\x0a\x07" +
	"\x99J\x05\xed\xc8\xceY\xb5\xbd\xf2\xe0\xe8\xe7\xfb\"e" +
	"\xc2\xc2\x8a\xc1\xa8\xdeXA\x9b-\xad\x90\xd5\xa5\x15\x15" +
	"\x00\xf6\x96=\xcf\xde\xb0\xf7\xf0\xaa\x17\xfa\xad\xee\xa2\xd5" +
	"+*\xbe\x0e\xa0\xde^1M\xddN\x7f\xb2_Q\x0f" +
	"\xd4\x94\\3\xe5W\x81\xf0\x1f\xab\xf89\x05\xe2\xd1\x86" +
	"\xa3K\xaf\xef\xe5;\xb2S\xcc\xa1\x0a\x07\xca\xc7*\xc8" +
	"\xc7e\x87\x0b\xe2G\xff\xf4o\xaf\x04\x8c\xac\x1b\xe5\xdc" +
	"\xe1\xda\x85\xf7\\\xbaf\xda\xfd\xaf\x04\xaf\xe8\xf6Q\xce" +
	"\xab\xebG\x91\xf7\xc3c\xf9\xed;B\xe6\xab\xd9wy" +
	"qT\x15-\xdd5\xea\x03@;\x9d\xdc\x15\xff\xfc\xdd" +
	"\x7f}5pgOV.\xa0\xa3\x86\xd6n\xfc\xe2\xf9" +
	"\xfc\x03\xaf\x05c\xbc\xaer<\xc5\xf8\xa9J\xda%\x7f" +
	"\xf7\xde\x7f,Y\xf7\xf6.PFH\x99\x00\x01N\xd8" +
	"S\xb9\x11\xd5\xc3\x95\x14\xc1C\x95\xd3\xd4!U\x94k" +
	"w^p\xc3\x86\xdb\xbe{\xf9\xaf\x03\xee\x9c\xa8l\xa1" +
	"\x8d\xde\xe8hz\xe3\xf5[/{=p\x84C\x95\x0e" +
	"\xa0\xfe\xf8\xe2\xc9\x95{_\xbesO\xe0\xc9\x1e\xf7\x9d" +
	"to\xef\xce\x87\xff\xf9\xe8\xef\x02\xd6\xb6W:P\xfb" +
	"\xe9\xb6\xc1\x05\xedw]\xb0\x0f\xb4\x7f\xc0\x00\xae\x86\x84" +
	"\x1c\xdf\x1f\xabt(xk%Ex\xca[\xd3\x0ev" +
	"\xbd0{_\xf60\xcd\xab\x1a\x81\x80\x13\xae\xad\xda\x81" +
	"\x10x\xda\x07\xa0\xf92\xb99e\xf4\xe7j\xe3h:" +
	"E\xc3\xe8[i\xf9\xbc\xdf,\xbd\xfa\xe5_o\xdb\xdf" +
	"\x1f/c\x96\xa0\xda;\x86^Z1FVW\x8c!" +
	"t}{\xcd\xd8\xdd\x17\xc8\x8b~\x1f\x0c\xf5\xd21N" +
	"z\xac\x1eC\xa1~i\xfe\xbe\xe8\x8d\xab.}7x" +
	"\xe3O\x8eq(c\x9b\xb3`\xe2\xd4\x86\x0f\x9b>}" +
	"\xf0\x7f\x83\x8c\xf0\xce\x18\x87g\x0f9\x0b\xf0\xdc\xcb\xde" +
	"\xbf\xfb\x99\xc7\xff\xe2Yp2pP\xb5S;\xce\xaf" +
	"\xa6|\xd8}gd\xf0\xda\x8b\xff|$H\xad\xab\xab" +
	"\x9dh\xad\xab\xde\x04x\xd2T\x1e\xff\xda\xaaCG3" +
	"W\xd18\xf6y\x0a\xf8\x9d\x1f>6\xf7\xa3\xe8\x8f?" +
	"\x09\x9e\xed\x92\xb1\x0ea4\x8eu(\xfe\xd9\xda\x05\x87" +
	"G\x0f\xfa\x0c\xb4r\x0c\xd4\xa8y!\x19\x19\xe2\x84\xce" +
	"\xb1\x84\xdc\x09K\xc7F(p\x05\xe7\x1e\x19>\xf6\xd8" +
	"%\x9f\x05\xad\xad\xaf1\xc8\xda\x935d\xadj\xf3\xf1" +
	"\xb7Z\xde{\xe9\x98\xe7\xa9\xe3\xc8\x9b5\xb7\xd1\x82\x03" +
	"5\xe4\xc8\xd7\xa6\xfdi\xe4o\xf6\xfe\xf7\xe7.\xc39" +
	"'\x9d2n\x01\x03\xdb\xfbo\x9dmv\xa5\xb9\xb1(" +
	"n\x86RFuTO'\xd3\x93\xe7x\xbf\xa4\x8c\xea" +
	"\x98\x91J\x975s\xb3+a\x99\x00\xfe\xda\xfc\xcc\xda" +
	"\x1e\xd3\xe2\x9dM\xdc0\xe3\xa6\xc5\x93V\xb5\x1e\x8b5" +
	"\xf3\x85]q\x83w\xf2\xa4ez/\xa3\xa9\x85\xa4\x10" +
	"@\x08\x01\x94\xa2\x11\x00Z\x81\x84Z\x09C9\xaa\xa7" +
	"Q\x09&\x0c*\x80\xa7?\xd4\xfc\xee\xee+\xe3\x09>" +
	"\xc7\xd2\xad.4\x9b\x10\xb5Bd\x00Ji\x95\xf3\xfa" +
	"\x90f\x00d\x8a2\x03 \xdc\x1aOp;\x167x" +
	"\xd4J\x19\x80=v2e]\x99\xeaJ\xc6 \xe0M" +
	"Qf\x13=\x193\xad\x94\xd1yy\xca\xe0\xd5\xa9\x16" +
	"3\x95\xe0\x16\xbf\xbc\x9dG;Nq\xaaI7\xf4N" +
	"\x13\xcc\xcc\x99\xdc\xf7\xeb\xd3\xf1\xb9\xa9\x0e\x9e\x9c\xdd\x9d" +
	"\xe4Fu4\x11\xe7I\xab)\xd5\xcd\x8d\x96\xd4\xe2\xd9" +
	"\xad\xad\x127\xdc0\x94\xa0Bqh\x06\xd0\x0a%\xd4" +
	"\xbe\xc1\xd06\xb9i\xc6S\xc9F\xc0\x18\x16\x02\xc3\xc2" +
	"@\x14\xe4\x1c\x07l\xe3\x96\xb3\xd3?\xa5\xacxk<" +
	"\xaa[\xf1Tr\xaen\xb4q+k\xd8\xc7g\xc2\x1e" +
	"I\xd1{\xa8\xd8G.\xac\xd9;\xd1\xfc\xecH\xdf\xc0" +
	"\xe7e\x0b|\x1b\xb7f\xe9\xf1\xe4Uq\xde\xed\x83\"" +
	"\xb8AUf\x83\xf0\xa28\xefF\xc5\xfe\xe0`\xdb\x87" +
	"w\xed\xdd\xb2\xbf\xaf})\x8b\xfd\xd9-\x0bxT\xb6" +
	"\x1act\xa5\x05R\xa8\xd0\xb6\x1d\xbb\x95\x93\x01\xb42" +
	"\x09\xb5\x1a\x86\xa5x\xd2\xc6\x12\xe2\x05e\xccF\x00\xad" +
	"FB\xed[\x0ck\xf5t\xba\x99\xb7\xe2`\x0chI" +
	"\x00\x1cL\xdaC\xef\xe03S\xd1\x0e\x14a\x0aS\x9c" +
	"\xb0\x00\x18\x16\x00\xd6\x87P\xc1\x16\xbb>\x9dv\xb6\x07" +
	"\xda\x7f\xc0(x\x08\x9c\xaeG;\xdc@H\xd6)\x91" +
	"\x9e\x9c\x09D\xadI051\x9c\x11\xe5\x80\x18\xce\x1a" +
	"\x8aY\xbc\xb3\xc5\xd0\x93\xdc\xc3Z\x98\xc0\xe6\xc0;\x13" +
	"\x8b\x86k\x00\xb4+$\xd4\x9a\x18\x16Q,\x02\x8c\xa2" +
	"\xccZ\x0e\xac\x88\x9d\xb0K0\x04\xa0\\\xd2\x02\xa0M" +
	"\x92P\xbb\x82\xa1m\x11,\xaf\xd2\x13 \xc53\xf8J" +
	"s\xa33n\x9aq\x96J\x9a\xd3y\"\x06]&7" +
	"\x1a\xcd\xfa\x98\xdc\x19O\xf6Ca(\x07\x0a\x0dN\x7f" +
	"\xe6e\xcd\xb5.$N\x97\xe9\x83C\x12\xa0s+Y" +
	"\xa8\xe4\x14\xab-z\xb4\xa3\xcd\xa0T\xad\x8fZ\xf1E" +
	"q\xabGd\x1d\xe4\xc24_\xc4\x93\x16\x16\xdb\xdfN" +
	"\xac\xda\xf0\xe1\xd3\xcf=D\x81.\x1e\x88L\xfc\xd3s" +
	"\xb3K>\xeb\xd3g5\xd9\xad[\xd1\xf6\x99\xa96\xb2" +
	"\x19\xee\x1b\x91 4\xda\xf5d,\xc1Q\xb1\xdf\x9dz" +
	"\xddu\x8f\x96}|W\xdf,a}\xcd\xcbf\xca\xd0" +
	"B\x18\xec\xf0\xd0\xb0\x05!B\xc4\xc1\x9a6J\xca\x03" +
	"\xf0\xa5)\x8a\xeeK\x1d\x87-\xc0\xd4J\x941S#" +
	"QHs\xb5\x14\x9b\x81\xa9CPF\xc9\xd7\x1a(\x14" +
	"\x91:\x08g\x00S\x11e\x0c\x89\xe2\x97\xa9\xd4\xca'" +
	"\x1b\x81)\x1f\xc9\x98\xe7\x8bQ\x14\x8ai\xdc\xfb\x83\x11" +
	"\x98rH\xc6|_\xec\xa3h\x95\x94w\xa6\x02S\xde" +
	"\x94Q\xf6e<\x8a\xbeWy\xb1\x0a\x98\xb2U\xc6\x02" +
	"_\xc0\xa2\xe8\xa0\x94\xc7f\x00S\xd6\xcb\xc8|\xc1\x84" +
	"Bp+w\xb7\x00SV\xcb8\xc8/\x8f(\x9aE" +
	"e\xc5\x12`\xcaR\xd9\x16T\x06r\x9cw\xd7\xa1\xdd" +
	"\xc1y\xba>\x11_\x04\xc8\xeb\xd06\xdb\xbb\xacX\xaa" +
	";\x09\x00uh\x8b:\x80\xd3\xb85\xcd\xd0\xe3\xc9\xf0" +
	"\x9c\xf8\x12\x1ex \x89\x07\xf4\xfb\xfcv\x9e\xbc\"\xde" +
	"\xda\xca\x0d\x9eD\xab\x0e\x97y\x08\xab\xc30U\xd3:" +
	"\"$\x17\x1f\xaeu\xb3'\x19\x9dC\xd5I\xd6\xdb\xc8" +
	"\xa8\xa0\x17\xa8u\x09\xa6\x0e\x9b0+/\x9f\x92.\x9d" +
	"z\x07\xbf\xbc=\x9e\x889\xf5\xa7\xacI\x0fS\xae\x10" +
	"sx\xc0k \xe0\xd5I\xa8\xcdd\xa8\xa0G\xa1\x8d" +
	"\xe33l\xa20V\xe2\x94\xd1Y\x0b\x00\xb4\x99\x12j" +
	"\xed\x0ck\xd3\xbaAIU\x04\x0c\x8b@\x94\x8d\xe2\x8c" +
	"\x00\xf4R\xcc\xf0\xaa#\x84\xa9>\xe2y\x80M\x12b" +
	"qF\xdf\x00\xd2\x8f\xd9\x80\xed\xbaQ\xeb\xfaAl7" +
	"\xdaA\xaf\x90>(\xfarU\xc3\xa9\xc0\xd4\x06\x07\x9f" +
	"B\x9f\xa1\xe8<\xd5K\x1c\xf4\x8eC\xc2\xa0h\xf8P" +
	"\x0c&\xd4r|\x1b\x98Z\x8e\x04\x18!\x1fQ\x88p" +
	"\xf5|\xac\x02\xa6\x16!AT\x0cDPt\x1c*\xe2" +
	"n\x81|\xbf\xe5F\xd1\x12+\x9f\x10\xa0\x0eSF\x09" +
	"Q\x89\xa2iT\x0e,\x00\xa6\xec#p\x8b\xd9\x01\x8a" +
	"&[\xd9\xb5\x06\x98\xb2\x93\xc0-\x1a\\\x14\x8d\x92\xb2" +
	"m90\xe5)\x02\xb0\x90\x93(\xba\x1ce\x83\x01L" +
	"\xb9_\xc6slk\xddKe'\x0bg\xff\x14\x85\xfc" +
	"Wn\xa7\xa4\xb8E\xce \xce&X\x10\"\x00\x93." +
	"\xb4\x1c\xbd\xc0\xfa\x0a\x06\x89[\x19x\x0aT\xb3\xbe\xba" +
	"\x07M\xcf\"\x01\x0dj]\xa8\xd5\xa1\x1dM\xe8\xf1\xce" +
	"f\xbe\x10\xc2]\xdc\xb4\xea\xd0\x16\xdc\x8d\x82\xbc%\xab" +
	"\xa7\x8e@\x92N\x19\xd64\x03\xbdL\x01\xf7H\x8d1" +
	"\x9e\xb4 \x12\xb7z\x1ac\x94\x0f\xd1v\x1e\xebJp" +
	"';\x82\xd0?\x8bJ!\xd4\xcf\xd9\xa6M3\x8f\xf4" +
	"+a\xc1\x0a\xe3TQ\x91\x0cgd\\\xd8\xf5\x14\xf4" +
	"\xd9\x19\xceZ]\x04Sq\xff\xb4gV\xe0\xa8zJ" +
	"\xa7R\xc2\x88l\x940\x03@\x9b.\xa1\x16\x0bP\x82" +
	"NR\xe2:\x09\xb5\x04C\xd9\xe0\xadX\x1cPY." +
	"\x03\x08\xd4\x90\xea\xca\x99\xfe.\x9b\xccM\x81|6q" +
	"\x14\xb8\xf1`S\xd6\x14q\x84@\xaeX\xb6\xf4X\xdc" +
	"\xc4A\xc0p\xd0@\xb1t\xda\x1bOV\xe4*\xfc\xd9" +
	"\xdd\xfd\x12\xd2\\\xc8\x18\xdfFA\xeen\xaa\x99/J" +
	"\xb9/\xcfn1\xb9\xb1\x88\xbbg\xa6\x1aC\x8f:x" +
	"\x8c\xcc\xc9}\xa2qV\x1a#W\xd4EVSN\x7f" +
	"\x95\xea(\xd8D\xd4\xba\xb1\xf0_(\xcc\xf6\x82(\x90" +
	"z\x1b\xf7\x13\xa9_\xe75`\x1f\xea\x8b\xc7\x02\xdf\x83" +
	"J*t\xa3\\\x81\xec\xe3\xbf~F&)\xce\xb8\xac" +
	"\xa5\xbc\xcb!\xf0+\x99QP\xcef\xf6\x0a\x9eL\x19" +
	"\x9dz\"\xbe\x84\xc7\x1c\\\xcf\xe2\x96\x1e\xd3%K\xf7" +
	"\xe4\xbe\xc8\xd0\x19A\xb5o\x93\xda\xf7':\xca\xac*" +
	"`\xa5\xcci\x87H\xee_<>\xd3\x0e\xd9z:=" +
	"7n9$\x8a\xc5v\xe3\xc1\xeb'\x1a\xcf\\\xfbC" +
	"\x0f\xbc\xe1x4\x95\x8c\xe8\xe9t\xe3i[\xcdL\x88" +
	"En\xe7\x929\x96\xaf7\x02\xf0\x98\x9a\x81\xc7\xb2T" +
	"\"F\xef\x9cYR\xfa\xf2Y ;pc\x86wc" +
	"\x171\x14\x176\x8e\xd0>ZBm\x12s+O\"" +
	"\xd5V\x0f\x91\xceTW\xd2\x12\x1b\xd6\x9a\x96\xc1\xf5N" +
	"T\xec\x7fy\xef\xf5\xca\xeeI\xf3w\xe5\xeeG3\x18" +
	"\x9aN\xa9\x83\xa4I\x9a\xa4<\xad\x0010\xa6\x80@" +
	">A\xb6\xae\xf6T<\xa2\xe5\xa8\xf6\xcc\x90\x10\xd7\xd8" +
	"\"\xb7Q$\xb7;\x1e \xf1#&\xc4(\xbe\xf4(" +
	"\x0aI\x82A\xb2-`\x8d\x1e\xae\xa1\x0e\x1d\xcb\xab\xaf" +
	"\xbaw\xd7\xd8\xe1\xaf\xbe\x0cu\xa8`D\x0b\xb1\xc0O" +
	"\x00\x0aV\xd0\xf9\x9d\xb6\x9a\xfe_,\xa1\xc3\xbe\xa7\x08" +
	"\xb9\xb3\xe6a\xd1\xf0ey\xf1t\x83\x90f\xbe\xd0\x11" +
	"\x0a\x84s\xba\xc4\"\x02\xfa\xd4@)bX\x82\xe7Q" +
	")Z\xe3\x09\xd1\xab\x19\x16\xb3\x12\x0c\x03(\xf3\x9a\x01" +
	"\xb4\xb9\x12j\xd71\\\xd6FG\x09\x808\x9e\xb4\x8c" +
	"T\xac+\x8a\xdcpD\x05\xe9\x8e\x0c\xc2\xff\x8e\x01K" +
	"\xee\x09P\xff\x99X^\xeeJ\xe0\x1e\x86\xf4M\xd6\x96" +
	"\xf0\x9b\x99L\xa1\xee\xbcoY\x94rD\xb5-L\xee" +
	"k\xc5\xee@\x89,\xe9\x14\xc5\xef\xba\xca\xdd!4\xaa" +
	"\xdd\x9c\"\x16\x93PK3T$V\x82y\x00J\xe7" +
	"\x12\x00-!\xa1\xb6\x98\xe2-\x95\xe0 \x00\xa5\x8b\xe2" +
	"\xbdXB\xed\xa6,\xb15\xf5E|\xa6\xde\xc2\x01\x13" +
	"\xfd\x19\xc5\x8f<\xd4rc\x9e\xc9\x8d3\xbc\x92\xd3\xd1" +
	"\x80\xe8\xc1\xfc\x90}Y\x8e\xca&\xee\x82\x13+3\x1b" +
	"C\xe5\x9dim\x0e\x13\xff\x13{\xbb\x19,\xbe,\xa1" +
	"\x18\xc0\xfa\x19,\xea7z\x05\xbc\x8f\xca\xcd5e\xf1" +
	"'\xb1\xf2\x80\x8a/X0\xfbV\xd8\xd3\x87\xdac\\" +
	"\x7f\xf5\xb99\x0e#4z\xeez\x9c\xa3\xc2Yz5" +
	"\x15\x1f\xa0\xdc/\xf6\x08\xfc\xd4\xce\xd4S\x9c\x8dS\x83" +
	"\x9d\xa9T\x82R\xb03\xbd\x9aam+\xd9\xb7\x04\x96" +
	"\x96\xe9\xa6I\x89\xe6c\xcb\xfb\xfbx\x08/\xbe\"\x1d" +
	"\xef\x07\xb9\\I\xd5%\x9b\xdc\xd0.\x94B\x18*\xc1" +
	"|\x00\xe5M:\xddk\x12j\xbf\xf3\x98I\x06P\xf6" +
	"P\xad}CB\xed\xf7^N\x15\x00(\xfbv\x03h" +
	"\xefJ\xa8\xfd\x1f\xf9!\x95\xe09\x00\xca\xa1k\x00\xb4" +
	"?K\xa8}\xccP\xc9\x0b\x95\xe0\xb9\x00\xcaGT\xc6" +
	"\x8eH\xa8\x1dg\xa8\xe4\x17\x97`!\x80r\x8c<\xfe" +
	"X\xc2fd\xa8\xc8J\x09\x16\x03('\x96\x03h\xc7" +
	"%\x9cS\x80\x0c\x8b\xf3Jp0\x80\x9a\x87\xcd\x00s" +
	"B(\xe1\x9cbdX\xebL\xed|\xcf#\x16\x15~" +
	"\xdf\xe1\x98w\x11\xac\xefM\xa0\x8e\xc5\x99/B\"\x8f" +
	"=\xa6\x02)\x10\xca\xae\xb4[>!27hz\x99" +
	"\xc1\x93z'\x8f!\x02Ct\x18\x96'\xeb\x13\x89z" +
	"\xf4\xda0\xf0\x9f\xe8\xd1(\x95\xe3\xac\xdc\xcb\xfa\xdeD" +
	"\xad{\x15\x94KC3\x83\xcf\xa7\xe8\x1e\x9e\x90P\xfb" +
	"\x85?\xf8\xf4?\xec)[\xc7\x03+\x0a\x9d\xb0]\x98" +
	"\xdcO\xaa\xe9>\x09\xb5G\x19\x16\xe5\x1d\xf7\xc6\xa1\x1b" +
	"\xe8\xd7\x87%\xd4\xb60,\xca\xff\x82\x0c\xf8\x9f\xbc\x94" +
	"'\xab\x80\x15\xb1\xcf\xe9G\xff\xa3\xa4r\xf7f`E" +
	"\xd21\xfa\xd1\xff\xc7\x10J\xef\x03\xc0j\xbbyK\x07" +
	"\xef\x81\xfc\x88\xc3\x92Dr\xdcHr\xcb\x9d83G" +
	"\x03\xb7\x1a\xa9\xa4\xc5\x931\x009L\x17d\x8b\"\x88" +
	"\xa2\x0aF\x1ci\xdd\xf7\xf7\xd9\xadr+7\xb2\xe4k" +
	"\x86yf'\xdbR\xf1d\x9b\xdbZ\xd4\xba\x14\x94C" +
	"\xa4\xec\xaa\xeb\xfd\xd9\xfe\xd2\x15'!\xfb\xc7\x9b\xd3\xd3" +
	"g\xf6\xb6u@\xca<-\x83\x89.\xf4\xab\xec\x83\xb3" +
	"\x88\xcf\xe0!\xa3)\x83\xfa\x1f\xff\x1fC\xfc=\xfd\x8f" +
	"8v\x96\xe6\xe1\xa2@\xf30\xee\x01\x00\xed\"\x97\xb5" +
	"\x9c\xe6\x81\x9b\xd6\\\x08;N\x09\xdc{=E\x0c\x9b" +
	"\xbc\xe9\xbb\x9cJ\xfa\xad\x05%\xccyg5Z\x10\xdd" +
	"\xeb@m\xfd@\x93\xbe\xec}\xeeW6\xf0+<c" +
	"\xd0\xe5\xfa\xb6v:U\x95\xa5\x07\x9e\x11\xf8\xb6\xe6\xb3" +
	"\x9a\xd3\x9e}\xe3\x1dm\xc3\x92\xbbnz.7\x10\xfa" +
	"|\x87!\xc5W-\xbe\x95\xa4\x92fx:O\xc4\xb4" +
	"\x12\xb7F\xd0fK'g\x84\x93S#(\xb87\x12" +
	"\x9f\xdf \xa1\xb6\xd2\xab\x11DM+Z\x00\xb4\x9b$" +
	"\xd4\xeec8\xd4\xb6%W\x8d\xad#\x89v\x8f\x84\xda" +
	"\xc3\xee\x07.\xc9-=\xeb\xa7fx\xac\x0f\xc9\xf7\x93" +
	"g\xe2x\x90\x0dMY\xe8w\x99\x93iY\x1a\xc0\x81" +
	"\xbe\xf2\x0c0|\x19pB\x96\xf3;\x9as\xefxJ" +
	"\x8aUe\xbe\xfb\xf9@\x1e39\x93w\xe1\xb4n\xb5" +
	"\x0b\x0f\x06\xee\xf1\xbe\xdc\x9cE\xc8\xd0\xff\x0f\x00\x00\xff" +
	"\xffsR\xe5\xf3"

func init() {
	schemas.Register(schema_c7205d6d32c7b040,
		0x80e7bfc1abd2efa7,
		0x8488d5d569f6cffe,
		0x85ccf31fc4aff09c,
		0x8867ef4f53bc45c3,
		0x8882befcdeca7451,
		0x888c6d95df2cc976,
		0x88abdb347bc63d0f,
		0x8e74650737dbb840,
		0x902651d6de458996,
		0x918db9a721f13886,
		0x92e92771f2b6b2b7,
		0x938e798cc0e3d6ac,
		0x96fb2fd9e320599f,
		0x98053037c12fa689,
		0x9951c12163385530,
		0x9b25c148edb2b020,
		0x9ba45778a294b60c,
		0x9d87019c48640d21,
		0x9ea56a46fc87138a,
		0x9f96d4b948521f91,
		0xa0b4085080573e77,
		0xaae54cb2386e60ab,
		0xaec15e35d479f4f3,
		0xaf3c0d4c9b788c3b,
		0xaf72d693dbf4bf54,
		0xb4e04839aff27c71,
		0xb91071e3d7b9ab13,
		0xba19fd491deeb222,
		0xba8b9f7f3a411a03,
		0xbb5eb0bde1481587,
		0xbdd9bea5585df6c5,
		0xc08fb7eab4fb0e05,
		0xc152ab1174b40c0a,
		0xc22ce229c18c0a02,
		0xc38cedd77cbed5b4,
		0xc43d5a1430e113ca,
		0xc765897b7df345ac,
		0xca83e6f36908ed7f,
		0xcaa1479a3b9c719b,
		0xcb7304c768066421,
		0xcb7ee0fa69cd6e70,
		0xcce106c2fbaa9b04,
		0xcdda9d1436d7d206,
		0xce435c92a97c1b97,
		0xcf3e8fcfd0506bd0,
		0xd597c8d788fec5df,
		0xd8f35ba8c9898970,
		0xd91b98680812bda3,
		0xd94fc375e247d63d,
		0xda970537e2a8a9a9,
		0xdbbdcec8587dd355,
		0xdc76071bd22f9a4b,
		0xe03b8c8163d957c6,
		0xe4a4f650ea454237,
		0xeeaeb799e53e0b01,
		0xf0e8359b121f97d2,
		0xf3e98c16ae117300,
		0xf59063f154adea97,
		0xf8092ced6a3fbe30,
		0xf839f92f21f00b08,
		0xf9c6e362d6fcb22a,
		0xfab3d7d326e64716)
}
